// Created by BlueFire1337
// Updated 2022-02-16
// Generated 2022-01-26

namespace off {
	constexpr auto GNames = 0x0;
	constexpr auto GObjects = 0x0;
	constexpr auto Engine = 0x0; // 48 8B 0D ? ? ? ? 48 85 C9 0F 84 ? ? ? ? 48
	constexpr auto DecryptionKey = 0x3ff;

	namespace n_UUIComponent_DualButtonPanel { // : UUIComponent
		constexpr auto m_pPanelRoot = 0x118; // ObjectProperty
		constexpr auto m_pPanelButton = 0x120; // ObjectProperty
		constexpr auto m_pButton = 0x128; // ObjectProperty
		constexpr auto m_pButtonCurrency = 0x130; // ObjectProperty
	}

	namespace n_UMaterialExpressionConstantBiasScale { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Bias = 0xe4; // float
		constexpr auto Scale = 0xe8; // float
	}

	namespace n_UTgAnimBlendByFlying { // : UTgAnimNodeBlendList
		constexpr auto bAdjustRateByVelocity = 0x168; // uint32_t : 1
		constexpr auto m_bAdjustRateByAcceleration = 0x168; // uint32_t : 1
		constexpr auto m_bPreviewJetpackPerBoneBlend = 0x168; // uint32_t : 1
		constexpr auto m_bIsUsingHandsFreeJetpack = 0x168; // uint32_t : 1
		constexpr auto m_fUpLoopStartTime = 0x16c; // float
		constexpr auto LastDirection = 0x170; // EFlyDirTypes
		constexpr auto m_nmHandsFreeJetpackPerBoneBlendNodeName = 0x174; // FName
		constexpr auto m_HandsFreeJetpackPerBoneBlendNode = 0x17c; // ObjectProperty
		constexpr auto m_fHandsFreeJetpackBlendBias = 0x184; // float
		constexpr auto m_nmHandsFreeJetpackBiasBlendNodeName = 0x188; // FName
		constexpr auto m_HandsFreeJetpackBiasBlendNode = 0x190; // ObjectProperty
		constexpr auto m_TgPawn = 0x198; // ObjectProperty
	}

	namespace n_UTgEffectForm_WithMeshes { // : UTgEffectForm
		constexpr auto m_EffectMeshInfos = 0xfc; // TArray<FEffectMeshInfo>
	}

	namespace n_UUIComponent_OptionEntryPaged { // : UUIComponent_OptionEntryBase
		constexpr auto m_Entries = 0x150; // TArray<FPagedEntry>
		constexpr auto m_nSelectedIndex = 0x160; // int32_t
		constexpr auto m_pLeftArrow = 0x164; // ObjectProperty
		constexpr auto m_pRightArrow = 0x16c; // ObjectProperty
		constexpr auto m_mcValueTF = 0x174; // ObjectProperty
	}

	namespace n_UGameplayEventsReader { // : UGameplayEvents
		constexpr auto RegisteredHandlers = 0x1c0; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimNotify_Sound { // : UAnimNotify_Sound
		constexpr auto m_SkinOverrideList = 0x88; // TArray<FPSE_Skin>
	}

	namespace n_UDrawCylinderComponent { // : UPrimitiveComponent
		constexpr auto CylinderColor = 0x24c; // FColor
		constexpr auto CylinderMaterial = 0x250; // ObjectProperty
		constexpr auto CylinderRadius = 0x258; // float
		constexpr auto CylinderTopRadius = 0x25c; // float
		constexpr auto CylinderHeight = 0x260; // float
		constexpr auto CylinderHeightOffset = 0x264; // float
		constexpr auto CylinderSides = 0x268; // int32_t
		constexpr auto bDrawWireCylinder = 0x26c; // uint32_t : 1
		constexpr auto bDrawLitCylinder = 0x26c; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x26c; // uint32_t : 1
	}

	namespace n_UMobileInputZone { // : UObject
		constexpr auto Type = 0x60; // EZoneType
		constexpr auto TouchpadIndex = 0x61; // char
		constexpr auto State = 0x62; // EZoneState
		constexpr auto SlideType = 0x63; // EZoneSlideType
		constexpr auto Caption = 0x64; // FString
		constexpr auto InputKey = 0x74; // FName
		constexpr auto HorizontalInputKey = 0x7c; // FName
		constexpr auto TapInputKey = 0x84; // FName
		constexpr auto DoubleTapInputKey = 0x8c; // FName
		constexpr auto VertMultiplier = 0x94; // float
		constexpr auto HorizMultiplier = 0x98; // float
		constexpr auto Acceleration = 0x9c; // float
		constexpr auto Smoothing = 0xa0; // float
		constexpr auto EscapeVelocityStrength = 0xa4; // float
		constexpr auto bScalePawnMovement = 0xa8; // uint32_t : 1
		constexpr auto bRelativeX = 0xa8; // uint32_t : 1
		constexpr auto bRelativeY = 0xa8; // uint32_t : 1
		constexpr auto bRelativeSizeX = 0xa8; // uint32_t : 1
		constexpr auto bRelativeSizeY = 0xa8; // uint32_t : 1
		constexpr auto bActiveSizeYFromX = 0xa8; // uint32_t : 1
		constexpr auto bSizeYFromSizeX = 0xa8; // uint32_t : 1
		constexpr auto bApplyGlobalScaleToActiveSizes = 0xa8; // uint32_t : 1
		constexpr auto bCenterX = 0xa8; // uint32_t : 1
		constexpr auto bCenterY = 0xa8; // uint32_t : 1
		constexpr auto bIsInvisible = 0xa8; // uint32_t : 1
		constexpr auto bQuickDoubleTap = 0xa8; // uint32_t : 1
		constexpr auto bCenterOnEvent = 0xa8; // uint32_t : 1
		constexpr auto bSliderHasTrack = 0xa8; // uint32_t : 1
		constexpr auto bFloatingTiltZone = 0xa8; // uint32_t : 1
		constexpr auto bUseGentleTransitions = 0xa8; // uint32_t : 1
		constexpr auto bAllowFirstDeltaForTrackballZone = 0xa8; // uint32_t : 1
		constexpr auto bRenderGuides = 0xa8; // uint32_t : 1
		constexpr auto bIsDoubleTapAndHold = 0xa8; // uint32_t : 1
		constexpr auto X = 0xac; // float
		constexpr auto Y = 0xb0; // float
		constexpr auto SizeX = 0xb4; // float
		constexpr auto SizeY = 0xb8; // float
		constexpr auto ActiveSizeX = 0xbc; // float
		constexpr auto ActiveSizeY = 0xc0; // float
		constexpr auto InitialX = 0xc4; // float
		constexpr auto InitialY = 0xc8; // float
		constexpr auto InitialSizeX = 0xcc; // float
		constexpr auto InitialSizeY = 0xd0; // float
		constexpr auto InitialActiveSizeX = 0xd4; // float
		constexpr auto InitialActiveSizeY = 0xd8; // float
		constexpr auto AuthoredGlobalScale = 0xdc; // float
		constexpr auto Border = 0xe0; // float
		constexpr auto ResetCenterAfterInactivityTime = 0xe4; // float
		constexpr auto TapDistanceConstraint = 0xe8; // float
		constexpr auto ActivateTime = 0xec; // float
		constexpr auto DeactivateTime = 0xf0; // float
		constexpr auto RenderColor = 0xf4; // FColor
		constexpr auto InactiveAlpha = 0xf8; // float
		constexpr auto CaptionXAdjustment = 0xfc; // float
		constexpr auto CaptionYAdjustment = 0x100; // float
		constexpr auto OverrideTexture1 = 0x104; // ObjectProperty
		constexpr auto OverrideTexture1Name = 0x10c; // FString
		constexpr auto OverrideUVs1 = 0x11c; // FTextureUVs
		constexpr auto OverrideTexture2 = 0x12c; // ObjectProperty
		constexpr auto OverrideTexture2Name = 0x134; // FString
		constexpr auto OverrideUVs2 = 0x144; // FTextureUVs
		constexpr auto InitialLocation = 0x154; // FVector2D
		constexpr auto CurrentLocation = 0x15c; // FVector2D
		constexpr auto CurrentCenter = 0x164; // FVector2D
		constexpr auto InitialCenter = 0x16c; // FVector2D
		constexpr auto PreviousLocations = 0x174; // FVector2D [0x6]
		constexpr auto PreviousMoveDeltaTimes = 0x1a4; // float [0x6]
		constexpr auto PreviousLocationCount = 0x1bc; // int32_t
		constexpr auto LastTouchTime = 0x1c0; // float
		constexpr auto TimeSinceLastTapRepeat = 0x1c4; // float
		constexpr auto AnimatingFadeOpacity = 0x1c8; // float
		constexpr auto InputOwner = 0x1cc; // ObjectProperty
		constexpr auto TransitionTime = 0x1d4; // float
		constexpr auto EscapeVelocity = 0x1d8; // FVector2D
		constexpr auto MobileSeqEventHandlers = 0x1e0; // TArray<ObjectProperty>
		constexpr auto LastAxisValues = 0x1f0; // FVector2D
		constexpr auto TotalActiveTime = 0x1f8; // float
		constexpr auto LastWentActiveTime = 0x1fc; // float
		constexpr auto __OnProcessInputDelegate__Delegate = 0x200; // DelegateProperty
		constexpr auto __OnTapDelegate__Delegate = 0x210; // DelegateProperty
		constexpr auto __OnDoubleTapDelegate__Delegate = 0x220; // DelegateProperty
		constexpr auto __OnProcessSlide__Delegate = 0x230; // DelegateProperty
		constexpr auto __OnPreDrawZone__Delegate = 0x240; // DelegateProperty
		constexpr auto __OnPostDrawZone__Delegate = 0x250; // DelegateProperty
	}

	namespace n_AGravityVolume { // : APhysicsVolume
		constexpr auto GravityZ = 0x314; // float
	}

	namespace n_UDOFAndBloomEffect { // : UDOFEffect
		constexpr auto BloomScale = 0xb4; // float
		constexpr auto BloomThreshold = 0xb8; // float
		constexpr auto BloomTint = 0xbc; // FColor
		constexpr auto BloomScreenBlendThreshold = 0xc0; // float
		constexpr auto SceneMultiplier = 0xc4; // float
		constexpr auto BlurBloomKernelSize = 0xc8; // float
		constexpr auto bEnableReferenceDOF = 0xcc; // uint32_t : 1
		constexpr auto DepthOfFieldType = 0xd0; // EDOFType
		constexpr auto DepthOfFieldQuality = 0xd1; // EDOFQuality
		constexpr auto BokehTexture = 0xd4; // ObjectProperty
	}

	namespace n_UAnimMetaData_SkelControlKeyFrame { // : UAnimMetaData_SkelControl
		constexpr auto KeyFrames = 0x7c; // TArray<FTimeModifier>
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x8c; // uint32_t : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x8c; // uint32_t : 1
	}

	namespace n_UParticleModuleSubUVDirect { // : UParticleModuleSubUVBase
		constexpr auto SubUVPosition = 0x68; // FRawDistributionVector
		constexpr auto SubUVSize = 0x8c; // FRawDistributionVector
	}

	namespace n_UTitleFileDownloadCache { // : UMCPBase
		constexpr auto TitleFiles = 0x80; // TArray<FTitleFileCacheEntry>
		constexpr auto LoadCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto SaveCompleteDelegates = 0xa0; // TArray<DelegateProperty>
		constexpr auto __OnLoadTitleFileComplete__Delegate = 0xb0; // DelegateProperty
		constexpr auto __OnSaveTitleFileComplete__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Grohk { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_fFirstHitThisTickTimestamp = 0xcc; // float
		constexpr auto m_nHitsThisChain = 0xd0; // int32_t
		constexpr auto m_bBonusActive = 0xd4; // uint32_t : 1
	}

	namespace n_UUIData_Notification { // : UUIData
		constexpr auto eType = 0x64; // NotificationType
		constexpr auto eIconStackType = 0x65; // IconStackType
		constexpr auto sTitle = 0x68; // FString
		constexpr auto sDescription = 0x78; // FString
		constexpr auto dwIconIndex = 0x88; // Fdword
		constexpr auto sIconId = 0x8c; // FString
		constexpr auto dwItemId = 0x9c; // Fdword
		constexpr auto qwTimeStamp = 0xa0; // FQWord
		constexpr auto dwCount = 0xa8; // Fdword
		constexpr auto dwItemType = 0xac; // Fdword
		constexpr auto dwItemSubType = 0xb0; // Fdword
		constexpr auto bNavigable = 0xb4; // uint32_t : 1
		constexpr auto bShowDescription = 0xb4; // uint32_t : 1
		constexpr auto bSeen = 0xb4; // uint32_t : 1
		constexpr auto nLocalNotificationId = 0xb8; // int32_t
	}

	namespace n_UTgInvListener_ExplosiveImpalerArrow { // : UTgInventoryObject_Listen_ActiveWhileOffCooldown
		constexpr auto m_AimData = 0xc8; // FAimData
	}

	namespace n_UTgAIUtilityHandle { // : UObject
		constexpr auto UtilitySets = 0x60; // FUtilitySet [0x2]
		constexpr auto FilteredAnnotationPoints = 0xf0; // FUtilityPair [0x2]
		constexpr auto eBehaviorState = 0x180; // EBotBehaviorState
		constexpr auto AssaultRangeType = 0x181; // ERangeType
	}

	namespace n_UUIComponent_EndOfMatchLobbyBestClass { // : UUIComponent_Display
		constexpr auto m_pMVPs = 0x124; // ObjectProperty
		constexpr auto m_grBestClass = 0x12c; // ObjectProperty
		constexpr auto m_pBattlePassBanner = 0x134; // ObjectProperty
		constexpr auto m_pGotoBPAction = 0x13c; // ObjectProperty
		constexpr auto m_mcCommendationsRemaining = 0x144; // ObjectProperty
		constexpr auto m_mcCommendationsRemainingTF = 0x14c; // ObjectProperty
	}

	namespace n_ATgDevice_Failsafe { // : ATgDevice
		constexpr auto m_RocketBootsDevice = 0xa08; // ObjectProperty
	}

	namespace n_ATgDeploy_DominanceFlag { // : ATgDeploy_EffectField
		constexpr auto r_fRadiusForFX = 0x4a0; // float
	}

	namespace n_UTgSeqAct_GetBot { // : USequenceAction
		constexpr auto m_nBotNumber = 0x108; // int32_t
	}

	namespace n_UInputContextManager { // : UObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_CallbackContainer = 0x68; // ObjectProperty
		constexpr auto m_TopInterceptContext = 0x70; // ObjectProperty
		constexpr auto m_ContextStack = 0x78; // TArray<ObjectProperty>
		constexpr auto m_GlobalContext = 0x88; // ObjectProperty
	}

	namespace n_UUIComponent_MatchLobbyPickNotification { // : UUIComponent_Display
		constexpr auto m_mcPickTitle = 0x124; // ObjectProperty
		constexpr auto m_mcPickNames = 0x12c; // TArray<ObjectProperty>
		constexpr auto m_sCurrentTitle = 0x13c; // FString
		constexpr auto m_sDesiredTitle = 0x14c; // FString
		constexpr auto m_sCurrentNames = 0x15c; // TArray<FString>
		constexpr auto m_sDesiredNames = 0x16c; // TArray<FString>
		constexpr auto m_pTitleInAnimSet = 0x17c; // ObjectProperty
		constexpr auto m_pTitleOutAnimSet = 0x184; // ObjectProperty
		constexpr auto m_pNameInAnimSets = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_pNameOutAnimSets = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_bBlueTeam = 0x1ac; // uint32_t : 1
	}

	namespace n_ASVehicle { // : AVehicle
		constexpr auto SimObj = 0x628; // ComponentProperty
		constexpr auto Wheels = 0x630; // TArray<ComponentProperty>
		constexpr auto COMOffset = 0x640; // FVector
		constexpr auto InertiaTensorMultiplier = 0x64c; // FVector
		constexpr auto bStayUpright = 0x658; // uint32_t : 1
		constexpr auto bUseSuspensionAxis = 0x658; // uint32_t : 1
		constexpr auto bUpdateWheelShapes = 0x658; // uint32_t : 1
		constexpr auto bVehicleOnGround = 0x658; // uint32_t : 1
		constexpr auto bVehicleOnWater = 0x658; // uint32_t : 1
		constexpr auto bIsInverted = 0x658; // uint32_t : 1
		constexpr auto bChassisTouchingGround = 0x658; // uint32_t : 1
		constexpr auto bWasChassisTouchingGroundLastTick = 0x658; // uint32_t : 1
		constexpr auto bCanFlip = 0x658; // uint32_t : 1
		constexpr auto bFlipRight = 0x658; // uint32_t : 1
		constexpr auto bIsUprighting = 0x658; // uint32_t : 1
		constexpr auto bOutputHandbrake = 0x658; // uint32_t : 1
		constexpr auto bHoldingDownHandbrake = 0x658; // uint32_t : 1
		constexpr auto StayUprightRollResistAngle = 0x65c; // float
		constexpr auto StayUprightPitchResistAngle = 0x660; // float
		constexpr auto StayUprightStiffness = 0x664; // float
		constexpr auto StayUprightDamping = 0x668; // float
		constexpr auto StayUprightConstraintSetup = 0x66c; // ObjectProperty
		constexpr auto StayUprightConstraintInstance = 0x674; // ObjectProperty
		constexpr auto HeavySuspensionShiftPercent = 0x67c; // float
		constexpr auto MaxSpeed = 0x680; // float
		constexpr auto MaxAngularVelocity = 0x684; // float
		constexpr auto TimeOffGround = 0x688; // float
		constexpr auto UprightLiftStrength = 0x68c; // float
		constexpr auto UprightTorqueStrength = 0x690; // float
		constexpr auto UprightTime = 0x694; // float
		constexpr auto UprightStartTime = 0x698; // float
		constexpr auto EngineSound = 0x69c; // ComponentProperty
		constexpr auto SquealSound = 0x6a4; // ComponentProperty
		constexpr auto CollisionSound = 0x6ac; // ObjectProperty
		constexpr auto EnterVehicleSound = 0x6b4; // ObjectProperty
		constexpr auto ExitVehicleSound = 0x6bc; // ObjectProperty
		constexpr auto CollisionIntervalSecs = 0x6c4; // float
		constexpr auto SquealThreshold = 0x6c8; // float
		constexpr auto SquealLatThreshold = 0x6cc; // float
		constexpr auto LatAngleVolumeMult = 0x6d0; // float
		constexpr auto EngineStartOffsetSecs = 0x6d4; // float
		constexpr auto EngineStopOffsetSecs = 0x6d8; // float
		constexpr auto LastCollisionSoundTime = 0x6dc; // float
		constexpr auto OutputBrake = 0x6e0; // float
		constexpr auto OutputGas = 0x6e4; // float
		constexpr auto OutputSteering = 0x6e8; // float
		constexpr auto OutputRise = 0x6ec; // float
		constexpr auto ForwardVel = 0x6f0; // float
		constexpr auto NumPoweredWheels = 0x6f4; // int32_t
		constexpr auto BaseOffset = 0x6f8; // FVector
		constexpr auto CamDist = 0x704; // float
		constexpr auto DriverViewPitch = 0x708; // int32_t
		constexpr auto DriverViewYaw = 0x70c; // int32_t
		constexpr auto VState = 0x710; // FVehicleState
		constexpr auto AngErrorAccumulator = 0x760; // float
		constexpr auto RadialImpulseScaling = 0x764; // float
	}

	namespace n_ADynamicPylon { // : APylon
		constexpr auto bMoving = 0x490; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Lex { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_CachedLex = 0x544; // ObjectProperty
		constexpr auto m_LeftSlideSkelControlName = 0x54c; // FName
		constexpr auto m_RightSlideSkelControlName = 0x554; // FName
		constexpr auto m_LeftSlideSkelControl = 0x55c; // ObjectProperty
		constexpr auto m_RightSlideSkelControl = 0x564; // ObjectProperty
	}

	namespace n_ATgDevice_NinjaInhand { // : ATgDevice
		constexpr auto m_fAmmoRefundChance = 0xa08; // float
	}

	namespace n_UTgAIBehaviorCondition_GameType { // : UTgAIBehaviorCondition
		constexpr auto GameType = 0x98; // TG_GAME_TYPE
	}

	namespace n_UTgAIBehaviorCondition_TimeSinceLastTookDamage { // : UTgAIBehaviorCondition
		constexpr auto TimeThreshold = 0x98; // float
		constexpr auto bMustBeCombatTarget = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_DualFire { // : ATgDevice_ToggleWithLockout
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa14; // DelegateProperty
	}

	namespace n_UTgGamePhase_RoundReset { // : UTgGamePhase
		constexpr auto m_bAutoMountAtEnd = 0xb8; // uint32_t : 1
	}

	namespace n_UUIScene_UIHudSaati { // : UUIScene
		constexpr auto m_bViewTargetSaati = 0x1cc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1cc; // uint32_t : 1
		constexpr auto m_Pips = 0x1d0; // ObjectProperty [0x8]
		constexpr auto m_mcWallBangBullets = 0x210; // ObjectProperty [0x3]
		constexpr auto m_CachedSaati = 0x228; // ObjectProperty
		constexpr auto m_nAmmoRemaining = 0x230; // int32_t
		constexpr auto m_mcGroupPips = 0x234; // ObjectProperty
	}

	namespace n_UUIComponent_Button_LoadoutMusicPack { // : UUIComponent_Display
		constexpr auto m_Play = 0x124; // ObjectProperty
		constexpr auto m_mcMusicIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcMusicIconRarity = 0x134; // ObjectProperty
		constexpr auto m_mcMusicIconTexture = 0x13c; // ObjectProperty
		constexpr auto m_mcEquipped = 0x144; // ObjectProperty
		constexpr auto m_mcName = 0x14c; // ObjectProperty
	}

	namespace n_UMobileMenuScene { // : UObject
		constexpr auto MenuName = 0x60; // FString
		constexpr auto MenuObjects = 0x70; // TArray<ObjectProperty>
		constexpr auto SceneCaptionFont = 0x80; // ObjectProperty
		constexpr auto InputOwner = 0x88; // ObjectProperty
		constexpr auto bSceneDoesNotRequireInput = 0x90; // uint32_t : 1
		constexpr auto bRelativeLeft = 0x90; // uint32_t : 1
		constexpr auto bRelativeTop = 0x90; // uint32_t : 1
		constexpr auto bRelativeWidth = 0x90; // uint32_t : 1
		constexpr auto bRelativeHeight = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleLeft = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleTop = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleWidth = 0x90; // uint32_t : 1
		constexpr auto bApplyGlobalScaleHeight = 0x90; // uint32_t : 1
		constexpr auto TouchpadIndex = 0x94; // char
		constexpr auto Left = 0x98; // float
		constexpr auto Top = 0x9c; // float
		constexpr auto Width = 0xa0; // float
		constexpr auto Height = 0xa4; // float
		constexpr auto InitialLeft = 0xa8; // float
		constexpr auto InitialTop = 0xac; // float
		constexpr auto InitialWidth = 0xb0; // float
		constexpr auto InitialHeight = 0xb4; // float
		constexpr auto AuthoredGlobalScale = 0xb8; // float
		constexpr auto Opacity = 0xbc; // float
		constexpr auto UITouchSound = 0xc0; // ObjectProperty
		constexpr auto UIUnTouchSound = 0xc8; // ObjectProperty
	}

	namespace n_UTgEffectModifyProperty_Ability2 { // : UTgEffectModifyProperty
		constexpr auto m_LastRetrievedOverrides = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleEventGenerator { // : UParticleModuleEventBase
		constexpr auto Events = 0x68; // TArray<FParticleEvent_GenerateInfo>
	}

	namespace n_UUIData_ChestExtended { // : UUIData
		constexpr auto nItemId = 0x64; // int32_t
		constexpr auto nBotRefId = 0x68; // int32_t
		constexpr auto nVendorId = 0x6c; // int32_t
		constexpr auto nSortOrder = 0x70; // int32_t
		constexpr auto nRarity = 0x74; // int32_t
		constexpr auto nBundleVendorId = 0x78; // int32_t
		constexpr auto nBundleCount = 0x7c; // int32_t
		constexpr auto bAllowDuplicates = 0x80; // uint32_t : 1
		constexpr auto bIsGiftable = 0x80; // uint32_t : 1
		constexpr auto nAllLootIds = 0x84; // TArray<int32_t>
		constexpr auto nStackableLootIds = 0x94; // TArray<int32_t>
		constexpr auto nExclusiveLootIds = 0xa4; // TArray<int32_t>
		constexpr auto nBundleLootIds = 0xb4; // int32_t [0x4]
		constexpr auto nBundleItemCounts = 0xc4; // int32_t [0x4]
	}

	namespace n_UUIComponent_PlayDevQueues { // : UUIComponent_Display
		constexpr auto m_pDevQueues = 0x124; // ObjectProperty
		constexpr auto m_grInput = 0x12c; // ObjectProperty
	}

	namespace n_UAnimNotify_Script { // : UAnimNotify
		constexpr auto NotifyName = 0x68; // FName
		constexpr auto NotifyTickName = 0x70; // FName
		constexpr auto NotifyEndName = 0x78; // FName
	}

	namespace n_ATgPawn_Furia { // : ATgPawn_Character
		constexpr auto r_RMBTarget = 0x3164; // ObjectProperty
		constexpr auto m_fDelayTargetValid = 0x316c; // float
		constexpr auto r_fHolyWrathBuff = 0x3170; // float
		constexpr auto r_bStopFuriaQProjOnHit = 0x3174; // uint32_t : 1
		constexpr auto r_bFuriaQHitAllies = 0x3174; // uint32_t : 1
		constexpr auto m_bUltimateReadyDisplayGroupOn = 0x3174; // uint32_t : 1
		constexpr auto c_fMinBladeGlow = 0x3178; // float
		constexpr auto c_fMaxBladeGlow = 0x317c; // float
		constexpr auto c_fMinCrystalGlow = 0x3180; // float
		constexpr auto c_fMaxCrystalGlow = 0x3184; // float
		constexpr auto m_fLastWrathAmt = 0x3188; // float
		constexpr auto m_nLastWrathTier = 0x318c; // int32_t
		constexpr auto m_fGravityMultiplier = 0x3190; // float
		constexpr auto m_fMaxFallSpeed = 0x3194; // float
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Azaan { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_CachedAzaanPawn = 0x544; // ObjectProperty
		constexpr auto m_CurrentRetrieveState = 0x54c; // AzaanRetrieveState
	}

	namespace n_UMeshBeaconClient { // : UMeshBeacon
		constexpr auto HostPendingRequest = 0xa4; // FOnlineGameSearchResult
		constexpr auto ClientPendingRequest = 0xb4; // FClientConnectionRequest
		constexpr auto CurrentBandwidthTest = 0xdc; // FClientBandwidthTestData
		constexpr auto ClientBeaconState = 0xf0; // EMeshBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xf1; // EMeshBeaconPacketType
		constexpr auto ConnectionRequestTimeout = 0xf4; // float
		constexpr auto ConnectionRequestElapsedTime = 0xf8; // float
		constexpr auto ResolverClassName = 0xfc; // FString
		constexpr auto ResolverClass = 0x10c; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0x114; // ObjectProperty
		constexpr auto bUsingRegisteredAddr = 0x11c; // uint32_t : 1
		constexpr auto __OnConnectionRequestResult__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestRequest__Delegate = 0x130; // DelegateProperty
		constexpr auto __OnReceivedBandwidthTestResults__Delegate = 0x140; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x150; // DelegateProperty
		constexpr auto __OnCreateNewSessionRequestReceived__Delegate = 0x160; // DelegateProperty
	}

	namespace n_UUIScene_UISocial { // : UUIScene
		constexpr auto m_mcReferral = 0x1cc; // ObjectProperty
		constexpr auto m_mcTimeTitle = 0x1d4; // ObjectProperty
		constexpr auto m_pTimeSubtitle = 0x1dc; // ObjectProperty
		constexpr auto m_pReferralRewards = 0x1e4; // ObjectProperty
		constexpr auto m_pReferralLevels = 0x1ec; // ObjectProperty
		constexpr auto m_pReferralFriends = 0x1f4; // ObjectProperty
		constexpr auto m_pSendReferralButton = 0x1fc; // ObjectProperty
		constexpr auto m_pReferredFriendsButton = 0x204; // ObjectProperty
		constexpr auto m_pAddReferrerButton = 0x20c; // ObjectProperty
		constexpr auto m_pReferralGroup = 0x214; // ObjectProperty
		constexpr auto m_pFriends = 0x21c; // ObjectProperty
		constexpr auto m_mcFriendInput = 0x224; // ObjectProperty
		constexpr auto m_pAddFriend = 0x22c; // ObjectProperty
		constexpr auto m_pFriendDetail = 0x234; // ObjectProperty
		constexpr auto m_pParty = 0x23c; // ObjectProperty
		constexpr auto m_pPartyAddFriend = 0x244; // ObjectProperty
		constexpr auto m_mcPartyInput = 0x24c; // ObjectProperty
		constexpr auto m_pAddParty = 0x254; // ObjectProperty
		constexpr auto m_pPartyDetail = 0x25c; // ObjectProperty
		constexpr auto m_pLeaveParty = 0x264; // ObjectProperty
		constexpr auto m_mcPartyBonusActiveText = 0x26c; // ObjectProperty
		constexpr auto m_mcPartyBonusIcon = 0x274; // ObjectProperty
		constexpr auto m_mcPartyBonusFrame = 0x27c; // ObjectProperty
		constexpr auto m_pViewProfileAction = 0x284; // ObjectProperty
		constexpr auto m_pInviteByName = 0x28c; // ObjectProperty
		constexpr auto m_pLeavePartyAction = 0x294; // ObjectProperty
		constexpr auto m_pSuggestedFriendsAction = 0x29c; // ObjectProperty
	}

	namespace n_UDrawFrustumComponent { // : UPrimitiveComponent
		constexpr auto FrustumColor = 0x24c; // FColor
		constexpr auto FrustumAngle = 0x250; // float
		constexpr auto FrustumAspectRatio = 0x254; // float
		constexpr auto FrustumStartDist = 0x258; // float
		constexpr auto FrustumEndDist = 0x25c; // float
		constexpr auto Texture = 0x260; // ObjectProperty
	}

	namespace n_UWebRequest { // : UObject
		constexpr auto RemoteAddr = 0x60; // FString
		constexpr auto URI = 0x70; // FString
		constexpr auto UserName = 0x80; // FString
		constexpr auto Password = 0x90; // FString
		constexpr auto ContentLength = 0xa0; // int32_t
		constexpr auto ContentType = 0xa4; // FString
		constexpr auto RequestType = 0xb4; // ERequestType
		constexpr auto HeaderMap = 0xb8; // FMap_Mirror
		constexpr auto VariableMap = 0x100; // FMap_Mirror
	}

	namespace n_ATgTrigger_Use { // : ATrigger
		constexpr auto m_sDisplayText = 0x290; // FString
		constexpr auto m_sInactiveText = 0x2a0; // FString
		constexpr auto m_nInteractDistance = 0x2b0; // int32_t
		constexpr auto m_bAimToInteract = 0x2b4; // uint32_t : 1
		constexpr auto m_nDisplayMsgId = 0x2b8; // int32_t
		constexpr auto m_nInactiveMsgId = 0x2bc; // int32_t
	}

	namespace n_ATgPawn_ImaniAvatar { // : ATgPawn_Character
		constexpr auto r_CachedImani = 0x3164; // ObjectProperty
		constexpr auto m_CachedFlight = 0x316c; // ObjectProperty
		constexpr auto m_fMaxMovementDegPerSec = 0x3174; // float
		constexpr auto m_fAimConstraintAngle = 0x3178; // float
		constexpr auto m_fLastFlightBearing = 0x317c; // float
		constexpr auto r_eAvatarState = 0x3180; // EAvatarState
		constexpr auto c_eIntroState = 0x3181; // EAvatarIntroState
		constexpr auto s_OnDeathDelegates = 0x3184; // TArray<DelegateProperty>
		constexpr auto m_fHoverSpeedFactor = 0x3194; // float
		constexpr auto m_fCruiseSpeedFactor = 0x3198; // float
		constexpr auto m_fBoostSpeedFactor = 0x319c; // float
		constexpr auto c_fIntroPreparationTime = 0x31a0; // float
		constexpr auto m_fReadyTimestamp = 0x31a4; // float
		constexpr auto m_fProjectileSpawnNeckLength = 0x31a8; // float
		constexpr auto m_DamageCollisionComponent = 0x31ac; // ComponentProperty
		constexpr auto r_nReplicatedAimPitch = 0x31b4; // int32_t
		constexpr auto r_nReplicatedAimYaw = 0x31b8; // int32_t
		constexpr auto m_fLockedFOV = 0x31bc; // float
		constexpr auto m_fMinCameraRotationPitch = 0x31c0; // float
		constexpr auto m_fMaxCameraRotationPitch = 0x31c4; // float
		constexpr auto r_fCachedInhandRange = 0x31c8; // float
		constexpr auto c_eAscendInterceptSlots = 0x31cc; // TArray<TG_EQUIP_POINT>
		constexpr auto c_eDescendInterceptSlots = 0x31dc; // TArray<TG_EQUIP_POINT>
		constexpr auto c_bControlExperiment = 0x31ec; // uint32_t : 1
		constexpr auto m_nFlyUpIconId = 0x31f0; // int32_t
		constexpr auto m_nFlyDownIconId = 0x31f4; // int32_t
		constexpr auto m_sFlyUpIcon = 0x31f8; // FString
		constexpr auto m_sFlyDownIcon = 0x3208; // FString
		constexpr auto __DestroyedEvent__Delegate = 0x3218; // DelegateProperty
	}

	namespace n_UDirectionalLightComponent { // : ULightComponent
		constexpr auto TraceDistance = 0x1a4; // float
		constexpr auto bWholeSceneOnlyDynamicShadowCasters = 0x1a8; // uint32_t : 1
		constexpr auto WholeSceneDynamicShadowRadius = 0x1ac; // float
		constexpr auto NumWholeSceneDynamicShadowCascades = 0x1b0; // int32_t
		constexpr auto CascadeDistributionExponent = 0x1b4; // float
		constexpr auto LightmassSettings = 0x1b8; // FLightmassDirectionalLightSettings
	}

	namespace n_UUISettings { // : UTgGfxScene
		constexpr auto m_ChampionDropdown = 0x1ec; // ObjectProperty
		constexpr auto m_eType = 0x1f4; // int32_t
		constexpr auto m_nHighlightOption = 0x1f8; // int32_t
		constexpr auto m_nOptionCount = 0x1fc; // int32_t
		constexpr auto m_nScrollIndex = 0x200; // int32_t
		constexpr auto m_bOptionFocus = 0x204; // uint32_t : 1
		constexpr auto m_bKeybindFocus = 0x204; // uint32_t : 1
		constexpr auto m_bSettingsChanged = 0x204; // uint32_t : 1
		constexpr auto m_bIsInResetPrompt = 0x204; // uint32_t : 1
		constexpr auto m_bUseVSync = 0x204; // uint32_t : 1
		constexpr auto m_bUseD3D11 = 0x204; // uint32_t : 1
		constexpr auto m_fDelayTimer = 0x208; // float
		constexpr auto m_Title = 0x20c; // ObjectProperty
		constexpr auto m_Frame = 0x214; // ObjectProperty
		constexpr auto m_Reset = 0x21c; // ObjectProperty
		constexpr auto m_Blocker = 0x224; // ObjectProperty
		constexpr auto m_KeybindPopup = 0x22c; // ObjectProperty
		constexpr auto m_KeybindPopupTF = 0x234; // ObjectProperty
		constexpr auto m_KeybindCancel = 0x23c; // ObjectProperty
		constexpr auto m_Option = 0x244; // FSettingOption [0xc]
		constexpr auto m_Keybind = 0x664; // FKeybindOption [0xc]
		constexpr auto m_AcceptButton = 0x964; // ObjectProperty
		constexpr auto m_mcScrollbar = 0x96c; // ObjectProperty
		constexpr auto m_grOptions = 0x974; // ObjectProperty
		constexpr auto m_grKeybinds = 0x97c; // ObjectProperty
		constexpr auto m_grTeams = 0x984; // ObjectProperty
		constexpr auto m_mcGamepad = 0x98c; // ObjectProperty
		constexpr auto m_mcGamepadButtons = 0x994; // ObjectProperty
		constexpr auto m_mcGamepadImage = 0x99c; // ObjectProperty
		constexpr auto m_Spectator = 0x9a4; // ObjectProperty
		constexpr auto m_mcSpectatorTeamNameBlue = 0x9ac; // ObjectProperty
		constexpr auto m_mcSpectatorTeamNameRed = 0x9b4; // ObjectProperty
		constexpr auto m_mcSafeFrame = 0x9bc; // ObjectProperty
		constexpr auto m_ResetToDefaultAction = 0x9c4; // ObjectProperty
		constexpr auto m_DelayedUpdates = 0x9cc; // TArray<int32_t>
		constexpr auto m_VideoTypes = 0x9dc; // TArray<int32_t>
		constexpr auto m_HudTypes = 0x9ec; // TArray<int32_t>
		constexpr auto m_AudioTypes = 0x9fc; // TArray<int32_t>
		constexpr auto m_ControlTypes = 0xa0c; // TArray<int32_t>
		constexpr auto m_SpectatorTypes = 0xa1c; // TArray<int32_t>
	}

	namespace n_USkelControlTrail { // : USkelControlBase
		constexpr auto ChainLength = 0xd0; // int32_t
		constexpr auto ChainBoneAxis = 0xd4; // EAxis
		constexpr auto bInvertChainBoneAxis = 0xd8; // uint32_t : 1
		constexpr auto bLimitStretch = 0xd8; // uint32_t : 1
		constexpr auto bActorSpaceFakeVel = 0xd8; // uint32_t : 1
		constexpr auto bHadValidStrength = 0xd8; // uint32_t : 1
		constexpr auto TrailRelaxation = 0xdc; // float
		constexpr auto StretchLimit = 0xe0; // float
		constexpr auto FakeVelocity = 0xe4; // FVector
		constexpr auto ThisTimstep = 0xf0; // float
		constexpr auto TrailBoneLocations = 0xf4; // TArray<FVector>
		constexpr auto OldLocalToWorld = 0x110; // FMatrix
	}

	namespace n_UUIScene_UIHudSeven { // : UUIScene
		constexpr auto m_pCachedSeven = 0x1cc; // ObjectProperty
		constexpr auto m_nUIHudCallbackHandle = 0x1d4; // int32_t
		constexpr auto m_previousFireMode = 0x1d8; // int32_t
		constexpr auto m_bViewTargetSeven = 0x1dc; // uint32_t : 1
		constexpr auto m_bShowSevenUlt = 0x1dc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1dc; // uint32_t : 1
		constexpr auto m_mcBackgroundShadow = 0x1e0; // ObjectProperty
		constexpr auto m_mcBackgroundEye = 0x1e8; // ObjectProperty
		constexpr auto m_mcCircleTarget = 0x1f0; // ObjectProperty
		constexpr auto m_mcFireModeTF = 0x1f8; // ObjectProperty
		constexpr auto m_mcFireModes = 0x200; // ObjectProperty [0x3]
		constexpr auto MAX_TARGET_FRAME = 0x218; // int32_t
	}

	namespace n_USeqAct_ModifyHealth { // : USequenceAction
		constexpr auto DamageType = 0x108; // UDamageType*
		constexpr auto Momentum = 0x110; // float
		constexpr auto Amount = 0x114; // float
		constexpr auto Radius = 0x118; // float
		constexpr auto bHeal = 0x11c; // uint32_t : 1
		constexpr auto bRadial = 0x11c; // uint32_t : 1
		constexpr auto bFalloff = 0x11c; // uint32_t : 1
		constexpr auto Instigator = 0x120; // ObjectProperty
	}

	namespace n_UPathGoalEvaluator { // : UObject
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto GeneratedGoal = 0x68; // ObjectProperty
		constexpr auto MaxPathVisits = 0x70; // int32_t
		constexpr auto CacheIdx = 0x74; // int32_t
	}

	namespace n_UUIComponent_ChestTooltip { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
	}

	namespace n_UTgAnimNodeSequence { // : UAnimNodeSequence
		constexpr auto bAutoPlay = 0x1ac; // uint32_t : 1
		constexpr auto bResetOnActivate = 0x1ac; // uint32_t : 1
		constexpr auto HasDynamicLength = 0x1ac; // uint32_t : 1
		constexpr auto EnableFootControlsOnCease = 0x1ac; // uint32_t : 1
		constexpr auto SynchronizeGroupOnReplay = 0x1ac; // uint32_t : 1
		constexpr auto bRandomStartPosition = 0x1ac; // uint32_t : 1
		constexpr auto ChainedSequenceDuration = 0x1b0; // float
		constexpr auto m_nmDisplayGroup = 0x1b4; // FName
	}

	namespace n_ATgDevice_HitPulse { // : ATgDevice
		constexpr auto s_ShouldPayCostPerPulse = 0xa08; // uint32_t : 1
		constexpr auto s_bCostPaid = 0xa08; // uint32_t : 1
		constexpr auto m_bConsumeAmmoOnEachPulse = 0xa08; // uint32_t : 1
		constexpr auto m_CurrentPulseIndex = 0xa0c; // int32_t
	}

	namespace n_ATgDevice_CorvusUltMod { // : ATgDevice
		constexpr auto m_ImmuneTargets = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_ImmuneTimes = 0xa18; // TArray<float>
	}

	namespace n_UUIScene_UIHeader { // : UUIScene
		constexpr auto m_pBack = 0x1cc; // ObjectProperty
		constexpr auto m_pTabs = 0x1d4; // ObjectProperty
	}

	namespace n_ADynamicBlockingVolume { // : ABlockingVolume
		constexpr auto bEnabled = 0x2c0; // uint32_t : 1
		constexpr auto bHandleNavMeshRegistrationInGame = 0x2c0; // uint32_t : 1
		constexpr auto bHasRegisteredObstacle = 0x2c0; // uint32_t : 1
	}

	namespace n_ATgDevice_Counter { // : ATgDevice
		constexpr auto r_bInterruptAfterCounterAttack = 0xa08; // uint32_t : 1
	}

	namespace n_ATgDeploy_Barrage { // : ATgDeployable
		constexpr auto m_CameraShake = 0x46c; // ObjectProperty
		constexpr auto m_fAllowableGroundTraceDist = 0x474; // float
		constexpr auto m_bShouldAirBurst = 0x478; // uint32_t : 1
	}

	namespace n_UTgPawnMod_RewindTween { // : UTgPawnMod
		constexpr auto m_nPlaybackEndCheckCallbackHandle = 0x70; // int32_t
		constexpr auto m_nPendingRewindCallbackHandle = 0x74; // int32_t
		constexpr auto m_nRecordingCallbackHandle = 0x78; // int32_t
		constexpr auto m_nPhysTweenCallbackHandle = 0x7c; // int32_t
		constexpr auto m_nRewindHealthCallbackHandle = 0x80; // int32_t
		constexpr auto m_RewindVals = 0x84; // TArray<FSavedRewindVals>
		constexpr auto m_fPlaybackRate = 0x94; // float
		constexpr auto m_fTimeBetweenSaves = 0x98; // float
		constexpr auto m_fTotalSaveTime = 0x9c; // float
		constexpr auto m_bFinalLocationFailsafe = 0xa0; // uint32_t : 1
		constexpr auto c_bNoRewindLagCompensation = 0xa0; // uint32_t : 1
		constexpr auto m_bRewindIsBuff = 0xa0; // uint32_t : 1
		constexpr auto m_fFailsafeDuration = 0xa4; // float
		constexpr auto m_vStartLocation = 0xa8; // FVector
		constexpr auto m_fDoNotRecordTimestamp = 0xb4; // float
		constexpr auto m_fDoNotRecordSafetyPeriod = 0xb8; // float
		constexpr auto m_fPlaybackStartTime = 0xbc; // float
		constexpr auto m_fPlaybackEndTime = 0xc0; // float
		constexpr auto m_nPostureID = 0xc4; // int32_t
		constexpr auto m_nCurrentIndex = 0xc8; // int32_t
		constexpr auto m_nLastValidIndex = 0xcc; // int32_t
		constexpr auto m_nCurrentPlaybackLocIndex = 0xd0; // int32_t
		constexpr auto m_RewindCurveLoc = 0xd4; // FInterpCurveVector
		constexpr auto m_RewindCurveYaw = 0xe8; // FInterpCurveFloat
		constexpr auto m_RewindCurvePitch = 0xfc; // FInterpCurveFloat
		constexpr auto m_RewindCurveHealth = 0x110; // FInterpCurveFloat
		constexpr auto m_bRewindCollideWorld = 0x124; // TArray<char>
		constexpr auto m_nRewindEveryNYawPitchPoints = 0x134; // int32_t
		constexpr auto m_fMinPositionDistance = 0x138; // float
		constexpr auto m_fMaxPositionTimeDelta = 0x13c; // float
	}

	namespace n_UUIComponent_HealthBarDamageOverlay { // : UUIComponent_Display
		constexpr auto m_HealthbarOwner = 0x124; // ObjectProperty
		constexpr auto m_bWidthDirty = 0x12c; // uint32_t : 1
		constexpr auto m_bPulseLowHealth = 0x12c; // uint32_t : 1
		constexpr auto m_bDisabled = 0x12c; // uint32_t : 1
		constexpr auto m_nDamageBarExtraWidth = 0x130; // int32_t
		constexpr auto m_nLowHealthBarExtraWidth = 0x134; // int32_t
		constexpr auto m_mcDamageOverlay = 0x138; // ObjectProperty
		constexpr auto m_mcLowHealthOverlay = 0x140; // ObjectProperty
		constexpr auto m_fOnDamageColorMaxThreshold = 0x148; // float
		constexpr auto m_fOnDamageColorMinThreshold = 0x14c; // float
		constexpr auto m_fLowHealthPulseMaxThreshold = 0x150; // float
		constexpr auto m_fLowHealthPulseMinThreshold = 0x154; // float
		constexpr auto m_fLowHealthPulseInterp = 0x158; // float
		constexpr auto m_fLowHealthPulseMinInterpSpeed = 0x15c; // float
		constexpr auto m_fLowHealthPulseMaxInterpSpeed = 0x160; // float
		constexpr auto m_fLowHealthInterpExp = 0x164; // float
		constexpr auto m_fOnDamageMaxAlpha = 0x168; // float
		constexpr auto m_fLowHealthMinAlpha = 0x16c; // float
		constexpr auto m_fLowHealthMaxAlpha = 0x170; // float
	}

	namespace n_UUIComponent_BattlePassRewardJoinedLevels { // : UUIComponent_Display
		constexpr auto m_pLevels = 0x124; // TArray<ObjectProperty>
		constexpr auto m_mcHeader = 0x134; // ObjectProperty
		constexpr auto m_mcTierLock = 0x13c; // ObjectProperty
	}

	namespace n_UTgAnimNodeChannelFire_AzaanUlt { // : UTgAnimNodeChannelFire
		constexpr auto m_eAnimState = 0x180; // AzaanUltAnimState
	}

	namespace n_UTgSkelCon_Spinner { // : USkelControlSingleBone
		constexpr auto m_fDegreesPerSecond = 0x100; // float
		constexpr auto m_vAxis = 0x104; // FVector
		constexpr auto m_PreviewStartStop = 0x110; // uint32_t : 1
		constexpr auto m_bIsSpinning = 0x110; // uint32_t : 1
		constexpr auto m_bSpinningUp = 0x110; // uint32_t : 1
		constexpr auto m_bSpinningDown = 0x110; // uint32_t : 1
		constexpr auto m_bSpinDownToZero = 0x110; // uint32_t : 1
		constexpr auto m_bRotateToTargetRotation = 0x110; // uint32_t : 1
		constexpr auto m_fSpinUpTime = 0x114; // float
		constexpr auto m_fSpinDownTime = 0x118; // float
		constexpr auto m_fCurrentDegreesPerSecond = 0x11c; // float
		constexpr auto m_TargetRotation = 0x120; // FRotator
		constexpr auto m_TimeToInterpToTargetRotation = 0x12c; // float
		constexpr auto m_nRotationSpeedState = 0x130; // int32_t
		constexpr auto m_fRotationSpeedStateMultipliers = 0x134; // TArray<float>
	}

	namespace n_UTgLevelStreamingSpectator { // : ULevelStreaming
		constexpr auto m_LoadingMethod = 0x100; // SpectatorStreamingMethod
	}

	namespace n_UTgSkelCon_RaumSpinner { // : UTgSkelCon_Spinner
		constexpr auto m_CachedRaum = 0x144; // ObjectProperty
	}

	namespace n_ATgDevice_SevenLatch { // : ATgDevice_Latch
		constexpr auto m_CachedSeven = 0xa50; // ObjectProperty
		constexpr auto m_bIsReadyForLatch = 0xa58; // uint32_t : 1
		constexpr auto m_bIsReadyForUnLatchLaunch = 0xa58; // uint32_t : 1
		constexpr auto m_bHasLatched = 0xa58; // uint32_t : 1
		constexpr auto m_nWallUnlatchImpulseSpeed = 0xa5c; // int32_t
		constexpr auto m_nTotalLatchTime = 0xa60; // int32_t
		constexpr auto m_nFrontLineNum = 0xa64; // int32_t
	}

	namespace n_ACoverGroup { // : AInfo
		constexpr auto CoverLinkRefs = 0x280; // TArray<FActorReference>
		constexpr auto AutoSelectRadius = 0x290; // float
		constexpr auto AutoSelectHeight = 0x294; // float
	}

	namespace n_APlayerCollectorGame { // : AGameInfo
		constexpr auto NumberOfClientsToWaitFor = 0x4cc; // int32_t
		constexpr auto URLToLoad = 0x4d0; // FString
	}

	namespace n_UUIComponent_HnHEventHome { // : UUIComponent_Display
		constexpr auto m_pDrogozBundle = 0x124; // ObjectProperty
		constexpr auto m_pMaeveBundle = 0x12c; // ObjectProperty
		constexpr auto m_pTyraBundle = 0x134; // ObjectProperty
		constexpr auto m_pAndroBundle = 0x13c; // ObjectProperty
		constexpr auto m_pUnownedBundles = 0x144; // TArray<ObjectProperty>
		constexpr auto m_pBundles = 0x154; // ObjectProperty
		constexpr auto m_mcProgress = 0x15c; // ObjectProperty
		constexpr auto m_mcProgressIcon = 0x164; // ObjectProperty
		constexpr auto m_mcProgressOrbs = 0x16c; // ObjectProperty [0x3]
		constexpr auto m_mcBundlePanel = 0x184; // ObjectProperty
		constexpr auto m_mcBundlePanelTitle = 0x18c; // ObjectProperty
		constexpr auto m_mcPurchaseTF = 0x194; // ObjectProperty
		constexpr auto m_pBundleItems = 0x19c; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x1a4; // ObjectProperty
		constexpr auto m_pPurchaseButtonCurr = 0x1ac; // ObjectProperty
		constexpr auto m_mcBonusPanel = 0x1b4; // ObjectProperty
		constexpr auto m_mcBonusPanelTitle = 0x1bc; // ObjectProperty
		constexpr auto m_mcPurchaseAllTF = 0x1c4; // ObjectProperty
		constexpr auto m_pBonusItems = 0x1cc; // ObjectProperty
		constexpr auto m_pLoadingFrame = 0x1d4; // ObjectProperty
		constexpr auto m_pPurchaseAllButton = 0x1dc; // ObjectProperty
		constexpr auto m_pPurchaseAllButtonCurr = 0x1e4; // ObjectProperty
		constexpr auto m_pPurchaseAction = 0x1ec; // ObjectProperty
		constexpr auto m_pPurchaseAllAction = 0x1f4; // ObjectProperty
	}

	namespace n_USeqEvent_HudRenderImage { // : USeqEvent_HudRender
		constexpr auto DisplayColor = 0x140; // FLinearColor
		constexpr auto DisplayLocation = 0x150; // FVector
		constexpr auto DisplayTexture = 0x15c; // ObjectProperty
		constexpr auto XL = 0x164; // float
		constexpr auto YL = 0x168; // float
		constexpr auto U = 0x16c; // float
		constexpr auto V = 0x170; // float
		constexpr auto UL = 0x174; // float
		constexpr auto VL = 0x178; // float
	}

	namespace n_UParticleModuleMaterialByParameter { // : UParticleModuleMaterialBase
		constexpr auto MaterialParameters = 0x68; // TArray<FName>
		constexpr auto DefaultMaterials = 0x78; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionPanner { // : UMaterialExpression
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto SpeedX = 0x118; // float
		constexpr auto SpeedY = 0x11c; // float
	}

	namespace n_UUIData_BattlePassTier { // : UUIData
		constexpr auto m_nTier = 0x64; // int32_t
		constexpr auto m_dwPlayerBPXP = 0x68; // Fdword
		constexpr auto m_pLevelRewards = 0x6c; // TArray<ObjectProperty>
		constexpr auto m_bHasBonusRewards = 0x7c; // uint32_t : 1
	}

	namespace n_UUIWeaponSummary { // : UUIResourceDataProvider
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto FriendlyName = 0xa4; // FString
		constexpr auto WeaponDescription = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
	}

	namespace n_UTgAchievement_StunEnemies { // : UTgAchievement
		constexpr auto m_bReachedTargetCount = 0x94; // uint32_t : 1
		constexpr auto m_HitTargets = 0x98; // TArray<ObjectProperty>
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveTrivialKeys { // : UAnimationCompressionAlgorithm
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
	}

	namespace n_USkelControlSingleBone { // : USkelControlBase
		constexpr auto bApplyTranslation = 0xd0; // uint32_t : 1
		constexpr auto bApplyRotation = 0xd0; // uint32_t : 1
		constexpr auto bAddTranslation = 0xd0; // uint32_t : 1
		constexpr auto bAddRotation = 0xd0; // uint32_t : 1
		constexpr auto bRemoveMeshRotation = 0xd0; // uint32_t : 1
		constexpr auto BoneTranslation = 0xd4; // FVector
		constexpr auto BoneTranslationSpace = 0xe0; // EBoneControlSpace
		constexpr auto BoneRotationSpace = 0xe1; // EBoneControlSpace
		constexpr auto TranslationSpaceBoneName = 0xe4; // FName
		constexpr auto BoneRotation = 0xec; // FRotator
		constexpr auto RotationSpaceBoneName = 0xf8; // FName
	}

	namespace n_UAnimNotify_Trails { // : UAnimNotify
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x70; // uint32_t : 1
		constexpr auto bPreview = 0x70; // uint32_t : 1
		constexpr auto bPreviewForceExplicit = 0x70; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x70; // uint32_t : 1
		constexpr auto bResampleRequired = 0x70; // uint32_t : 1
		constexpr auto FirstEdgeSocketName = 0x74; // FName
		constexpr auto ControlPointSocketName = 0x7c; // FName
		constexpr auto SecondEdgeSocketName = 0x84; // FName
		constexpr auto LastStartTime = 0x8c; // float
		constexpr auto EndTime = 0x90; // float
		constexpr auto SampleTimeStep = 0x94; // float
		constexpr auto TrailSampleData = 0x98; // TArray<FTrailSamplePoint>
		constexpr auto SamplesPerSecond = 0xa8; // float
		constexpr auto TrailSampledData = 0xac; // TArray<FTrailSample>
		constexpr auto CurrentTime = 0xbc; // float
		constexpr auto TimeStep = 0xc0; // float
		constexpr auto AnimNodeSeq = 0xc4; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassPurchasePanel { // : UUIComponent_Display
		constexpr auto m_mcLevel = 0x124; // ObjectProperty
		constexpr auto m_mcDiamond = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
		constexpr auto m_mcRarity = 0x13c; // ObjectProperty
		constexpr auto m_mcDesc = 0x144; // ObjectProperty
		constexpr auto m_mcOwned = 0x14c; // ObjectProperty
		constexpr auto m_mcOwnedTF = 0x154; // ObjectProperty
		constexpr auto m_mcUnlockCheck = 0x15c; // ObjectProperty
		constexpr auto m_mcTeaser = 0x164; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x16c; // ObjectProperty
		constexpr auto m_dwRequiredLevel = 0x174; // Fdword
		constexpr auto m_bPremium = 0x178; // uint32_t : 1
		constexpr auto m_InputPurchase = 0x17c; // ObjectProperty
	}

	namespace n_UParticleModuleRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionFloat
	}

	namespace n_UUIScene_UIHudShadow { // : UUIScene
		constexpr auto m_pUltBar = 0x1cc; // ObjectProperty
		constexpr auto m_pShadow = 0x1d4; // ObjectProperty
		constexpr auto m_pShadowUlt = 0x1dc; // ObjectProperty
		constexpr auto m_bVisible = 0x1e4; // uint32_t : 1
	}

	namespace n_UMaterialExpressionAppendVector { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UParticleModuleColorOverLife { // : UParticleModuleColorBase
		constexpr auto ColorOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // uint32_t : 1
	}

	namespace n_UTgImpactFx { // : UObject
		constexpr auto c_fMaxFxDistance = 0x60; // float
		constexpr auto c_bAlignToSurfaceNormal = 0x64; // uint32_t : 1
		constexpr auto c_EmptyImpact = 0x68; // FIMPACT_FX
		constexpr auto c_Impacts = 0x9c; // TArray<FIMPACT_FX>
	}

	namespace n_UTgDeviceFire_Recharge { // : UTgDeviceFire
		constexpr auto s_fLastNoShieldFXPlayTimestamp = 0x268; // float
		constexpr auto s_fTimeBetweenNoShieldFX = 0x26c; // float
	}

	namespace n_ATgDevice_SnakeToss { // : ATgDevice
		constexpr auto r_nAmmoCharge = 0xa08; // int32_t
		constexpr auto m_CachedInhand = 0xa0c; // ObjectProperty
	}

	namespace n_UUIData_MVP { // : UUIData
		constexpr auto m_nBotId = 0x64; // int32_t
		constexpr auto m_nFrame = 0x68; // int32_t
		constexpr auto m_nLevel = 0x6c; // int32_t
		constexpr auto m_nPedestal = 0x70; // int32_t
		constexpr auto m_nMVPType = 0x74; // int32_t
		constexpr auto m_nQueueId = 0x78; // int32_t
		constexpr auto m_nValue = 0x7c; // int32_t
		constexpr auto m_pPlayer = 0x80; // ObjectProperty
	}

	namespace n_ATgPawn_Imani { // : ATgPawn_Character
		constexpr auto m_fAccumulatedGlideDeviation = 0x3164; // float
		constexpr auto r_fGlideDeviationMeanLifetime = 0x3168; // float
		constexpr auto r_bUseSecondaryStance = 0x316c; // uint32_t : 1
		constexpr auto r_bPreventClearcast = 0x316c; // uint32_t : 1
		constexpr auto r_bInClearcast = 0x316c; // uint32_t : 1
		constexpr auto m_bPendingClearcastState = 0x316c; // uint32_t : 1
		constexpr auto s_bAvatarNeedsCleanup = 0x316c; // uint32_t : 1
		constexpr auto c_bLastBombManuallyDetonated = 0x316c; // uint32_t : 1
		constexpr auto m_bHasDragonsFire = 0x316c; // uint32_t : 1
		constexpr auto c_bSimulateAccumulatedGlideDeviation = 0x316c; // uint32_t : 1
		constexpr auto c_bAkClearcastActive = 0x316c; // uint32_t : 1
		constexpr auto c_bAkUsingFireStance = 0x316c; // uint32_t : 1
		constexpr auto m_bBlockPossession = 0x316c; // uint32_t : 1
		constexpr auto c_bFXCleanupNeeded = 0x316c; // uint32_t : 1
		constexpr auto m_HideAvatarUIOverlay = 0x316c; // uint32_t : 1
		constexpr auto c_bHasDigitizedSkin = 0x316c; // uint32_t : 1
		constexpr auto r_eSummoningState = 0x3170; // ESummonState
		constexpr auto m_eAcknowledgedSummoningState = 0x3171; // ESummonState
		constexpr auto m_eLastAvatarState = 0x3172; // EAvatarState
		constexpr auto c_eCurrentDigitizedImaniFace = 0x3173; // DigitizedImaniFace
		constexpr auto m_fIceManaConversionLockout = 0x3174; // float
		constexpr auto m_fCachedMana = 0x3178; // float
		constexpr auto r_fLastVerticalMovementSpeedMultiplier = 0x317c; // float
		constexpr auto m_nAltInhandSlot = 0x3180; // int32_t
		constexpr auto m_nAltAltfireSlot = 0x3184; // int32_t
		constexpr auto m_fSwapLockoutTime = 0x3188; // float
		constexpr auto r_fMaxMovementDegPerSec = 0x318c; // float
		constexpr auto m_fManaGainedPerPointDamage = 0x3190; // float
		constexpr auto r_InhandHitLoc = 0x3194; // FVector
		constexpr auto m_fLastFlightBearing = 0x31a0; // float
		constexpr auto m_CachedImaniF = 0x31a4; // ObjectProperty
		constexpr auto m_CachedImaniUlt = 0x31ac; // ObjectProperty
		constexpr auto m_CachedImaniFrost = 0x31b4; // ObjectProperty
		constexpr auto m_CachedImaniFire = 0x31bc; // ObjectProperty
		constexpr auto m_CachedImaniFlameCannon = 0x31c4; // ObjectProperty
		constexpr auto r_ActiveAvatar = 0x31cc; // ObjectProperty
		constexpr auto m_fClearcastDuration = 0x31d4; // float
		constexpr auto m_fTotalDragonTransition = 0x31d8; // float
		constexpr auto m_fDragonTransitionTimeLeft = 0x31dc; // float
		constexpr auto m_nDevicesDamageToMana = 0x31e0; // TArray<int32_t>
		constexpr auto r_nDragonsFireParity = 0x31f0; // int32_t
		constexpr auto m_lastHitProjectile = 0x31f4; // ObjectProperty
		constexpr auto m_pLastPlayerController = 0x31fc; // ObjectProperty
		constexpr auto m_sSkillIconOverride = 0x3204; // FString
		constexpr auto r_fDragonTimePercentRemaining = 0x3214; // float
		constexpr auto c_fDigitizedSkinFaceSwapDelayTimer = 0x3218; // float
		constexpr auto c_fDigitizedSkinFaceSwapDelayMinTime = 0x321c; // float
		constexpr auto c_fDigitizedSkinFaceSwapDelayMaxTime = 0x3220; // float
		constexpr auto c_DigitizedImaniConfig = 0x3224; // FDigitizedImaniConfig [0x8]
		constexpr auto c_nmDigitizedImaniFaceXParamName = 0x3264; // FName
		constexpr auto c_nmDigitizedImaniFaceYParamName = 0x326c; // FName
	}

	namespace n_ATgDevice_AtlasBarrage { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_FireDevice = 0xa10; // ObjectProperty
	}

	namespace n_ATgDeploy_Geometry { // : ATgDeployable
		constexpr auto m_OverlappingActors = 0x46c; // TArray<ObjectProperty>
		constexpr auto m_DesiredPushDirection = 0x47c; // TArray<FVector>
		constexpr auto m_bPushOverlappingActors = 0x48c; // uint32_t : 1
		constexpr auto m_bAllyPassthrough = 0x48c; // uint32_t : 1
		constexpr auto m_bEnemyPassthrough = 0x48c; // uint32_t : 1
		constexpr auto m_fPushFactor = 0x490; // float
	}

	namespace n_UTgDeviceForm_GraceSupport { // : UTgDeviceForm
		constexpr auto m_CachedWMA = 0x28c; // ObjectProperty
	}

	namespace n_UTgSeqAct_AIStartFireAt { // : USequenceAction
		constexpr auto ForcedFireMode = 0x108; // char
	}

	namespace n_UTgControlModule_ThirdPerson { // : UTgControlModule
		constexpr auto CameraYawOffset = 0x6c; // int32_t
		constexpr auto fRotInterpSpeed = 0x70; // float
		constexpr auto fAimPitch = 0x74; // float
		constexpr auto PitchCurve = 0x78; // FInterpCurveFloat
		constexpr auto AimCurve = 0x8c; // FInterpCurveFloat
		constexpr auto m_StrafeCameraAnim = 0xa0; // ObjectProperty
		constexpr auto m_CameraAnimStrafeRight = 0xa8; // ObjectProperty
		constexpr auto m_CameraAnimStrafeLeft = 0xb0; // ObjectProperty
		constexpr auto fOrientationResetStartPitch = 0xb8; // float
		constexpr auto fOrientationResetRemaining = 0xbc; // float
		constexpr auto fOrientationResetDuration = 0xc0; // float
		constexpr auto fOrientationResetCooldown = 0xc4; // float
		constexpr auto fOrientationResetLastUsed = 0xc8; // float
	}

	namespace n_UAkComponent { // : UActorComponent
		constexpr auto BoneName = 0x88; // FName
		constexpr auto AutoPlayEvent = 0x90; // ObjectProperty
		constexpr auto bStopWhenOwnerDestroyed = 0x98; // uint32_t : 1
		constexpr auto bRegisteredWithWwise = 0x98; // uint32_t : 1
	}

	namespace n_APortalVolume { // : AVolume
		constexpr auto Portals = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_AFracturedStaticMeshActor { // : AActor
		constexpr auto MaxPartsToSpawnAtOnce = 0x280; // int32_t
		constexpr auto FracturedStaticMeshComponent = 0x284; // ComponentProperty
		constexpr auto SkinnedComponent = 0x28c; // ComponentProperty
		constexpr auto ChunkHealth = 0x294; // TArray<int32_t>
		constexpr auto bHasShownMissingSoundWarning = 0x2a4; // uint32_t : 1
		constexpr auto bBreakChunksOnActorTouch = 0x2a4; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x2a4; // uint32_t : 1
		constexpr auto FracturedByDamageType = 0x2a8; // TArray<UDamageType*>
		constexpr auto ChunkHealthScale = 0x2b8; // float
		constexpr auto OverrideFragmentDestroyEffects = 0x2bc; // TArray<ObjectProperty>
		constexpr auto FractureCullMinDistance = 0x2cc; // float
		constexpr auto FractureCullMaxDistance = 0x2d0; // float
		constexpr auto DeferredPartsToSpawn = 0x2d4; // TArray<FDeferredPartToSpawn>
		constexpr auto PartImpactEffect = 0x2e4; // FPhysEffectInfo
		constexpr auto ExplosionFractureSound = 0x2fc; // ObjectProperty
		constexpr auto SingleChunkFractureSound = 0x304; // ObjectProperty
		constexpr auto MI_LoseChunkPreviousMaterial = 0x30c; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByAndroxusDrift { // : UTgAnimNodeBlendList
		constexpr auto m_DriftRecords = 0x168; // TArray<FDriftInfo>
		constexpr auto m_CachedAndroxusOwner = 0x178; // ObjectProperty
		constexpr auto m_bInDrift = 0x180; // uint32_t : 1
		constexpr auto m_bTransitionsCanBeInterrupted = 0x180; // uint32_t : 1
		constexpr auto m_fDriftStartTime = 0x184; // float
		constexpr auto m_fDriftRelevancyWindow = 0x188; // float
		constexpr auto m_fDriftTriggerPercent = 0x18c; // float
		constexpr auto m_fMaxFallSpeed = 0x190; // float
	}

	namespace n_UParticleModuleColorScaleOverLife { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverLife = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverLife = 0x8c; // FRawDistributionFloat
		constexpr auto bEmitterTime = 0xb0; // uint32_t : 1
	}

	namespace n_USeqAct_PlayAgentAnimation { // : USeqAct_Latent
		constexpr auto AnimationList = 0x120; // TArray<FName>
		constexpr auto BlendInTime = 0x130; // float
		constexpr auto BlendOutTime = 0x134; // float
		constexpr auto bUseRootMotion = 0x138; // uint32_t : 1
		constexpr auto bFaceActionTargetFirst = 0x138; // uint32_t : 1
		constexpr auto bLooping = 0x138; // uint32_t : 1
		constexpr auto bBlendBetweenAnims = 0x138; // uint32_t : 1
		constexpr auto LoopIndex = 0x13c; // int32_t
		constexpr auto LoopTime = 0x140; // float
		constexpr auto ActionTarget = 0x144; // ObjectProperty
	}

	namespace n_UUIGameMoviePlayer { // : UUIMoviePlayer
		constexpr auto VfTable_ITgCallbackInterface = 0x2a0; // FPointer
		constexpr auto m_nReplayId = 0x2a8; // int32_t
		constexpr auto m_nResizeTicks = 0x2ac; // int32_t
		constexpr auto m_nChosenQueue = 0x2b0; // int32_t
		constexpr auto m_nClearTransitionTicks = 0x2b4; // int32_t
		constexpr auto m_bGamepad = 0x2b8; // uint32_t : 1
		constexpr auto m_bHandheld = 0x2b8; // uint32_t : 1
		constexpr auto m_bDirectionalNav = 0x2b8; // uint32_t : 1
		constexpr auto m_bGameWon = 0x2b8; // uint32_t : 1
		constexpr auto m_bVisible = 0x2b8; // uint32_t : 1
		constexpr auto m_bTimedQueue = 0x2b8; // uint32_t : 1
		constexpr auto m_bHasNoPlayer = 0x2b8; // uint32_t : 1
		constexpr auto m_bNeedsTutorial = 0x2b8; // uint32_t : 1
		constexpr auto m_bInLoginQueue = 0x2b8; // uint32_t : 1
		constexpr auto m_bLobbyPlayback = 0x2b8; // uint32_t : 1
		constexpr auto m_bShowCardTutorialNextTick = 0x2b8; // uint32_t : 1
		constexpr auto m_bPlayAnnouncerSample = 0x2b8; // uint32_t : 1
		constexpr auto m_bHasAttemptedAutoReplayDemoRecording = 0x2b8; // uint32_t : 1
		constexpr auto m_bIsStreaming = 0x2b8; // uint32_t : 1
		constexpr auto m_fQueueTimer = 0x2bc; // float
		constexpr auto m_fFadeKillTimer = 0x2c0; // float
		constexpr auto m_fLoginQueueTimer = 0x2c4; // float
		constexpr auto m_fTransitionTimer = 0x2c8; // float
		constexpr auto m_fLobbyPlaybackTime = 0x2cc; // float
		constexpr auto m_fLobbyNextFireTime = 0x2d0; // float
		constexpr auto m_fVideoCompletedTimer = 0x2d4; // float
		constexpr auto m_sPass = 0x2d8; // FString
		constexpr auto m_sUserName = 0x2e8; // FString
		constexpr auto m_SpecTeamNameEnemy = 0x2f8; // FString
		constexpr auto m_SpecTeamNameFriendly = 0x308; // FString
		constexpr auto m_mcMapFrame = 0x318; // ObjectProperty
		constexpr auto m_mcMapFrameLarge = 0x320; // ObjectProperty
		constexpr auto m_mcKeyboardFocus = 0x328; // ObjectProperty
		constexpr auto m_KeyboardComponent = 0x330; // ObjectProperty
		constexpr auto m_Chat = 0x338; // ObjectProperty
		constexpr auto m_UIDataManager = 0x340; // ObjectProperty
		constexpr auto m_ConfigManager = 0x348; // FPointer
		constexpr auto m_LandingPanelManager = 0x350; // ObjectProperty
		constexpr auto m_NotificationCenterJsonManager = 0x358; // ObjectProperty
		constexpr auto m_PatchNotesJsonManager = 0x360; // ObjectProperty
		constexpr auto m_StreamManager = 0x368; // ObjectProperty
		constexpr auto m_RewardCenterManager = 0x370; // ObjectProperty
		constexpr auto m_WebBrowser = 0x378; // ObjectProperty
		constexpr auto m_mcSpectatorHUD = 0x380; // ObjectProperty
		constexpr auto m_AlienFX = 0x388; // ObjectProperty
		constexpr auto m_Scenes = 0x390; // TMap<None, None>
		constexpr auto m_OnlineProfiles = 0x3d8; // TMap<None, None>
		constexpr auto m_sPendingOnlineScene = 0x420; // FString
		constexpr auto m_sDelayErrorTitle = 0x430; // FString
		constexpr auto m_sDelayErrorDesc = 0x440; // FString
		constexpr auto m_RenderTarget = 0x450; // ObjectProperty
		constexpr auto m_BrowserTexture = 0x458; // ObjectProperty [0x4]
		constexpr auto m_Team1Name = 0x478; // FString
		constexpr auto m_Team2Name = 0x488; // FString
		constexpr auto m_akJoinQueue = 0x498; // ObjectProperty
		constexpr auto m_AnnouncerManifestGroup = 0x4a0; // ObjectProperty
		constexpr auto m_nAnnouncerItemId = 0x4a8; // int32_t
		constexpr auto m_akEquippedAnnouncerSound = 0x4ac; // ObjectProperty
		constexpr auto m_VoicePackManifestGroup = 0x4b4; // ObjectProperty
		constexpr auto m_nVoicePackBotId = 0x4bc; // int32_t
		constexpr auto m_nVoicePackSkinId = 0x4c0; // int32_t
		constexpr auto m_eVPSound = 0x4c4; // EVoicePackSound
		constexpr auto m_fDurationRetrySafeVoicePackLoad = 0x4c8; // float
		constexpr auto m_sRetryVoicePackString = 0x4cc; // FString
		constexpr auto m_StreamSettings = 0x4dc; // FPComOpenBroadcasterSettings
		constexpr auto m_pQuitPromptData = 0x4e0; // ObjectProperty
		constexpr auto m_CallbackContainer = 0x4e8; // ObjectProperty
		constexpr auto m_fUIAnimTime = 0x4f0; // float
	}

	namespace n_UTgInventoryObject_Listen_Weaken { // : UTgInventoryObject_Listen_HitWithDevice
		constexpr auto m_nAppliedCategoryCodeToCheck = 0xd8; // int32_t
	}

	namespace n_ATgTeleportPlayerVolume { // : AVolume
		constexpr auto TeleportLocation = 0x2bc; // TgTeleportVolumeType
		constexpr auto nMessageId = 0x2c0; // int32_t
		constexpr auto bTeleportBots = 0x2c4; // uint32_t : 1
		constexpr auto bTeleportPlayers = 0x2c4; // uint32_t : 1
	}

	namespace n_UUIHudBurnsConquest { // : UTgGfxScene
		constexpr auto m_nCredits = 0x1ec; // int32_t
		constexpr auto m_nActiveItem = 0x1f0; // int32_t
		constexpr auto m_bOpenPostTimelapse = 0x1f4; // uint32_t : 1
		constexpr auto m_Items = 0x1f8; // TArray<FUIITEMRANK>
		constexpr auto m_mcBack = 0x208; // ObjectProperty
		constexpr auto m_mcTitle = 0x210; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x218; // ObjectProperty
		constexpr auto m_mcCredits = 0x220; // ObjectProperty
		constexpr auto m_mcInfo = 0x228; // ObjectProperty
		constexpr auto m_mcInfoFrame = 0x230; // ObjectProperty
		constexpr auto m_mcInfoTitle = 0x238; // ObjectProperty
		constexpr auto m_mcInfoSubtitle = 0x240; // ObjectProperty
		constexpr auto m_mcAutoBuyDialogue = 0x248; // ObjectProperty
		constexpr auto m_mcAutoBuyTitle = 0x250; // ObjectProperty
		constexpr auto m_mcAutoBuyDesc = 0x258; // ObjectProperty
		constexpr auto m_mcAutoBuyPrompt = 0x260; // ObjectProperty
		constexpr auto m_mcInfoUpgrade = 0x268; // FUIITEMDATA [0x3]
		constexpr auto m_mcInfoUpgradeArrow = 0x328; // ObjectProperty [0x2]
		constexpr auto m_AutoBuyOffButton = 0x338; // ObjectProperty
		constexpr auto m_Group = 0x340; // FUIITEMGROUP [0x4]
		constexpr auto m_scPurchase = 0x8c0; // ObjectProperty
		constexpr auto m_grItem = 0x8c8; // ObjectProperty
	}

	namespace n_ATgGame_Domination { // : ATgGame_PointCapture
		constexpr auto m_fRespawnTime = 0x79c; // float
	}

	namespace n_UTgInventoryObject_Listen_Combo_Ruckus { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_CachedRuckusOwner = 0xcc; // ObjectProperty
		constexpr auto m_nDamageReductionStacks = 0xd4; // int32_t
		constexpr auto m_nBonusDamageStacks = 0xd8; // int32_t
		constexpr auto m_fDamageReductionStackTime = 0xdc; // float
		constexpr auto m_fBonusDamageStackTime = 0xe0; // float
		constexpr auto m_bEmitterActive = 0xe4; // uint32_t : 1
		constexpr auto m_bComboEffectsOn = 0xe4; // uint32_t : 1
		constexpr auto m_fComboBonusTime = 0xe8; // float
	}

	namespace n_ATgProj_FuriaQ { // : ATgProj_Simulated
		constexpr auto m_StunnedTargets = 0x52c; // TArray<ObjectProperty>
		constexpr auto m_bShouldCheckStop = 0x53c; // uint32_t : 1
		constexpr auto m_bStopped = 0x53c; // uint32_t : 1
		constexpr auto vTargetStopLocation = 0x540; // FVector
	}

	namespace n_UTgDeviceForm_SevenLatch { // : UTgDeviceForm_Latch
		constexpr auto m_SevenLatchNodes3p = 0x2c4; // TArray<ObjectProperty>
		constexpr auto m_SevenLatchNodes1p = 0x2d4; // TArray<ObjectProperty>
		constexpr auto m_SkelRotateNode = 0x2e4; // ObjectProperty
	}

	namespace n_UPrefab { // : UObject
		constexpr auto PrefabVersion = 0x60; // int32_t
		constexpr auto PrefabArchetypes = 0x64; // TArray<ObjectProperty>
		constexpr auto RemovedArchetypes = 0x74; // TArray<ObjectProperty>
		constexpr auto PrefabSequence = 0x84; // ObjectProperty
	}

	namespace n_USeqAct_SetSoundMode { // : USequenceAction
		constexpr auto SoundMode = 0x108; // ObjectProperty
		constexpr auto bTopPriority = 0x110; // uint32_t : 1
	}

	namespace n_UTgAnimNodeLockableChannelFire { // : UTgAnimNodeChannelFire
		constexpr auto m_bPlayStartOnLock = 0x180; // uint32_t : 1
		constexpr auto m_bPlayStartOnUnlock = 0x180; // uint32_t : 1
		constexpr auto m_bPlayStartAfterLockLost = 0x180; // uint32_t : 1
		constexpr auto m_bLocked = 0x180; // uint32_t : 1
	}

	namespace n_UTgControlModule_StunTaunted { // : UTgControlModule_ThirdPerson
		constexpr auto m_fInitialYaw = 0xcc; // float
		constexpr auto m_fInterpTime = 0xd0; // float
		constexpr auto m_fRemainingInterpTime = 0xd4; // float
	}

	namespace n_UUIScene_UIDiscardQuestPopup { // : UUIScene
		constexpr auto m_pRerollButton = 0x1cc; // ObjectProperty
		constexpr auto m_pCloseButton = 0x1d4; // ObjectProperty
		constexpr auto m_mcTitle = 0x1dc; // ObjectProperty
		constexpr auto m_mcQuestTitle = 0x1e4; // ObjectProperty
		constexpr auto m_mcQuestIcon = 0x1ec; // ObjectProperty
		constexpr auto m_mcRerollText = 0x1f4; // ObjectProperty
	}

	namespace n_UUIScene_UIAccessories { // : UUIScene
		constexpr auto m_eState = 0x1cc; // UIACCESSORIES_STATE
		constexpr auto m_eButtonAction = 0x1cd; // UIChampionSkinsButtonAction
		constexpr auto m_pActiveItem = 0x1d0; // ObjectProperty
		constexpr auto m_pItemPreview = 0x1d8; // ObjectProperty
		constexpr auto m_pItemNotOwnedToggle = 0x1e0; // ObjectProperty
		constexpr auto m_pGoToBattlePassButton = 0x1e8; // ObjectProperty
		constexpr auto m_pGoToChestButton = 0x1f0; // ObjectProperty
		constexpr auto m_pGoToEventButton = 0x1f8; // ObjectProperty
		constexpr auto m_pExclusiveBanner = 0x200; // ObjectProperty
		constexpr auto m_pEquipButton = 0x208; // ObjectProperty
		constexpr auto m_pPurchase = 0x210; // ObjectProperty
		constexpr auto m_pItemList = 0x218; // ObjectProperty
		constexpr auto m_pTiledItemList = 0x220; // ObjectProperty
		constexpr auto m_pRotator = 0x228; // ObjectProperty
	}

	namespace n_APlayerController { // : AController
		constexpr auto Player = 0x470; // ObjectProperty
		constexpr auto PlayerCamera = 0x478; // ObjectProperty
		constexpr auto CameraClass = 0x480; // ACamera*
		constexpr auto bFrozen = 0x488; // uint32_t : 1
		constexpr auto bPressedJump = 0x488; // uint32_t : 1
		constexpr auto bDoubleJump = 0x488; // uint32_t : 1
		constexpr auto bUpdatePosition = 0x488; // uint32_t : 1
		constexpr auto bUpdating = 0x488; // uint32_t : 1
		constexpr auto bNeverSwitchOnPickup = 0x488; // uint32_t : 1
		constexpr auto bCheatFlying = 0x488; // uint32_t : 1
		constexpr auto bCameraPositionLocked = 0x488; // uint32_t : 1
		constexpr auto bShortConnectTimeOut = 0x488; // uint32_t : 1
		constexpr auto bPendingDestroy = 0x488; // uint32_t : 1
		constexpr auto bWasSpeedHack = 0x488; // uint32_t : 1
		constexpr auto bWasSaturated = 0x488; // uint32_t : 1
		constexpr auto bAimingHelp = 0x488; // uint32_t : 1
		constexpr auto bCameraCut = 0x488; // uint32_t : 1
		constexpr auto bClientSimulatingViewTarget = 0x488; // uint32_t : 1
		constexpr auto bHasVoiceHandshakeCompleted = 0x488; // uint32_t : 1
		constexpr auto bCanPlayOnline = 0x488; // uint32_t : 1
		constexpr auto bCanShareUserCreatedContent = 0x488; // uint32_t : 1
		constexpr auto bCanCommunicateVoice = 0x488; // uint32_t : 1
		constexpr auto bPrivilegesInitialized = 0x488; // uint32_t : 1
		constexpr auto bIsCrossPlayEnabled = 0x488; // uint32_t : 1
		constexpr auto bCinematicMode = 0x488; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x488; // uint32_t : 1
		constexpr auto bCinemaDisableInputMove = 0x488; // uint32_t : 1
		constexpr auto bCinemaDisableInputLook = 0x488; // uint32_t : 1
		constexpr auto bRenderHUDFullScreen = 0x488; // uint32_t : 1
		constexpr auto bIgnoreNetworkMessages = 0x488; // uint32_t : 1
		constexpr auto bShowKismetDrawText = 0x488; // uint32_t : 1
		constexpr auto bAcceptSendCorrections = 0x488; // uint32_t : 1
		constexpr auto bReplicateAllPawns = 0x488; // uint32_t : 1
		constexpr auto bIsUsingStreamingVolumes = 0x488; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x488; // uint32_t : 1
		constexpr auto bIsControllerConnected = 0x48c; // uint32_t : 1
		constexpr auto bCheckSoundOcclusion = 0x48c; // uint32_t : 1
		constexpr auto bDebugCameraAnims = 0x48c; // uint32_t : 1
		constexpr auto bBlockCameraAnimsFromOverridingPostProcess = 0x48c; // uint32_t : 1
		constexpr auto bLogHearSoundOverflow = 0x48c; // uint32_t : 1
		constexpr auto bShowMoveErrors = 0x48c; // uint32_t : 1
		constexpr auto bCheckRelevancyThroughPortals = 0x48c; // uint32_t : 1
		constexpr auto bDebugClientAdjustPosition = 0x48c; // uint32_t : 1
		constexpr auto bIsInTimelapse = 0x48c; // uint32_t : 1
		constexpr auto bIsTimelapsePlayOfTheGame = 0x48c; // uint32_t : 1
		constexpr auto MaxResponseTime = 0x490; // float
		constexpr auto WaitDelay = 0x494; // float
		constexpr auto AcknowledgedPawn = 0x498; // ObjectProperty
		constexpr auto DoubleClickDir = 0x4a0; // EDoubleClickDir
		constexpr auto bIgnoreMoveInput = 0x4a1; // char
		constexpr auto bIgnoreLookInput = 0x4a2; // char
		constexpr auto bRun = 0x4a3; // char
		constexpr auto bDuck = 0x4a4; // char
		constexpr auto NetPlayerIndex = 0x4a5; // char
		constexpr auto ViewTarget = 0x4a8; // ObjectProperty
		constexpr auto RealViewTarget = 0x4b0; // ObjectProperty
		constexpr auto ControllingDirTrackInst = 0x4b8; // ObjectProperty
		constexpr auto FOVAngle = 0x4c0; // float
		constexpr auto DesiredFOV = 0x4c4; // float
		constexpr auto DefaultFOV = 0x4c8; // float
		constexpr auto LODDistanceFactor = 0x4cc; // float
		constexpr auto TargetViewRotation = 0x4d0; // FRotator
		constexpr auto TargetEyeHeight = 0x4dc; // float
		constexpr auto BlendedTargetViewRotation = 0x4e0; // FRotator
		constexpr auto myHUD = 0x4ec; // ObjectProperty
		constexpr auto mySecondaryHUD = 0x4f4; // ObjectProperty
		constexpr auto SavedMoveClass = 0x4fc; // USavedMove*
		constexpr auto SavedMoves = 0x504; // ObjectProperty
		constexpr auto FreeMoves = 0x50c; // ObjectProperty
		constexpr auto PendingMove = 0x514; // ObjectProperty
		constexpr auto LastAckedAccel = 0x51c; // FVector
		constexpr auto CurrentTimeStamp = 0x528; // float
		constexpr auto LastUpdateTime = 0x52c; // float
		constexpr auto ServerTimeStamp = 0x530; // float
		constexpr auto TimeMargin = 0x534; // float
		constexpr auto ClientUpdateTime = 0x538; // float
		constexpr auto MaxTimeMargin = 0x53c; // float
		constexpr auto LastActiveTime = 0x540; // float
		constexpr auto ClientCap = 0x544; // int32_t
		constexpr auto DynamicPingThreshold = 0x548; // float
		constexpr auto LastPingUpdate = 0x54c; // float
		constexpr auto LastSpeedHackLog = 0x550; // float
		constexpr auto PendingAdjustment = 0x554; // FClientAdjustment
		constexpr auto GroundPitch = 0x58c; // int32_t
		constexpr auto CheatManager = 0x590; // ObjectProperty
		constexpr auto CheatClass = 0x598; // UCheatManager*
		constexpr auto PlayerInput = 0x5a0; // ObjectProperty
		constexpr auto InputClass = 0x5a8; // UPlayerInput*
		constexpr auto FailedPathStart = 0x5b0; // FVector
		constexpr auto CylinderComponent = 0x5bc; // ComponentProperty
		constexpr auto ForceFeedbackManagerClassName = 0x5c4; // FString
		constexpr auto ForceFeedbackManager = 0x5d4; // ObjectProperty
		constexpr auto Interactions = 0x5dc; // TArray<ObjectProperty>
		constexpr auto VoiceMuteList = 0x5ec; // TArray<FUniqueNetId>
		constexpr auto GameplayVoiceMuteList = 0x5fc; // TArray<FUniqueNetId>
		constexpr auto VoicePacketFilter = 0x60c; // TArray<FUniqueNetId>
		constexpr auto ConnectedPeers = 0x61c; // TArray<FConnectedPeerInfo>
		constexpr auto BestNextHostPeers = 0x62c; // TArray<FUniqueNetId>
		constexpr auto MigratedSearchToJoin = 0x63c; // ObjectProperty
		constexpr auto OnlineSub = 0x644; // ObjectProperty
		constexpr auto VoiceInterface = 0x64c; // TScriptInterface<Class>
		constexpr auto OnlinePlayerData = 0x65c; // ObjectProperty
		constexpr auto InteractDistance = 0x664; // float
		constexpr auto DelayedJoinSessionName = 0x668; // FName
		constexpr auto InputRequests = 0x670; // TArray<FInputMatchRequest>
		constexpr auto LastBroadcastTime = 0x680; // float
		constexpr auto LastBroadcastString = 0x684; // FString [0x4]
		constexpr auto PendingMapChangeLevelNames = 0x6c4; // TArray<FName>
		constexpr auto MyCoverReplicator = 0x6d4; // ObjectProperty
		constexpr auto DebugTextList = 0x6dc; // TArray<FDebugTextInfo>
		constexpr auto SpectatorCameraSpeed = 0x6ec; // float
		constexpr auto PendingSwapConnection = 0x6f0; // ObjectProperty
		constexpr auto MinRespawnDelay = 0x6f8; // float
		constexpr auto MaxConcurrentHearSounds = 0x6fc; // int32_t
		constexpr auto HearSoundActiveComponents = 0x700; // TArray<ComponentProperty>
		constexpr auto HearSoundPoolComponents = 0x710; // TArray<ComponentProperty>
		constexpr auto HiddenActors = 0x720; // TArray<ObjectProperty>
		constexpr auto m_RigidBodyMaxPositionErrorThreshold = 0x730; // float
		constexpr auto LastSpectatorStateSynchTime = 0x734; // float
		constexpr auto CurrentUpdateDebugColor = 0x738; // FColor
		constexpr auto __OnMissingPeersUnregistered__Delegate = 0x73c; // DelegateProperty
		constexpr auto __CanUnpause__Delegate = 0x74c; // DelegateProperty
		constexpr auto __InputMatchDelegate__Delegate = 0x75c; // DelegateProperty
	}

	namespace n_UUIComponent_OptionEntryText { // : UUIComponent_OptionEntryBase
		constexpr auto m_pTextInput = 0x150; // ObjectProperty
	}

	namespace n_UPostProcessChain { // : UObject
		constexpr auto Effects = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleVelocityOverLifetime { // : UParticleModuleVelocityBase
		constexpr auto VelOverLife = 0x6c; // FRawDistributionVector
		constexpr auto Absolute = 0x90; // uint32_t : 1
	}

	namespace n_UUIComponent_GenericTitleButtons { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty [0x2]
		constexpr auto m_Buttons = 0x134; // ObjectProperty [0x8]
		constexpr auto m_ButtonClickHandles = 0x174; // int32_t [0x8]
		constexpr auto m_grButtons = 0x194; // ObjectProperty
	}

	namespace n_UUIScene_UIPopupPlaySettings { // : UUIScene
		constexpr auto m_pPlaySettings = 0x1cc; // ObjectProperty
	}

	namespace n_USeqAct_ForceFeedback { // : USequenceAction
		constexpr auto FFWaveform = 0x108; // ObjectProperty
		constexpr auto PredefinedWaveForm = 0x110; // UWaveFormBase*
	}

	namespace n_ATgGame_Paladins_TeamDeathMatch { // : ATgGame_Paladins
		constexpr auto m_GITDM = 0x868; // ObjectProperty
		constexpr auto m_bSpawnInputLock = 0x870; // uint32_t : 1
		constexpr auto m_fSetupDuration = 0x874; // float
		constexpr auto m_eProgressState = 0x878; // TDMProgressState
	}

	namespace n_ATgDeploy_Midnight { // : ATgDeployable
		constexpr auto r_fPersistTime = 0x46c; // float
		constexpr auto r_TargetPawn = 0x470; // ObjectProperty
		constexpr auto m_pMIC = 0x478; // ObjectProperty
		constexpr auto m_FogInfoClass = 0x480; // ATgMidnightFogVolumeDensityInfo*
		constexpr auto m_FogInfo = 0x488; // ObjectProperty
		constexpr auto m_bCleanedUp = 0x490; // uint32_t : 1
		constexpr auto m_b3PFxActive = 0x490; // uint32_t : 1
		constexpr auto m_b1PSoundActive = 0x490; // uint32_t : 1
	}

	namespace n_ATgDevice_Wormhole { // : ATgDevice
		constexpr auto m_vPreviousLocation = 0xa08; // FVector
		constexpr auto m_CachedBlink = 0xa14; // ObjectProperty
		constexpr auto m_WormholeAimForwarderMod = 0xa1c; // ObjectProperty
		constexpr auto m_bWormholeEnabled = 0xa24; // uint32_t : 1
		constexpr auto m_bWormholeEndedDuringBlink = 0xa24; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_NearObjective { // : UTgInvListener
		constexpr auto m_bIsActive = 0xc4; // uint32_t : 1
		constexpr auto m_CachedCharacterPawn = 0xc8; // ObjectProperty
	}

	namespace n_USeqAct_AttachToEvent { // : USequenceAction
		constexpr auto bPreferController = 0x108; // uint32_t : 1
	}

	namespace n_UUIComponent_MasteryRewardsEntry { // : UUIComponent_Display
		constexpr auto m_mcLockIcon = 0x124; // ObjectProperty
		constexpr auto m_mcLevelText = 0x12c; // ObjectProperty
		constexpr auto m_mcRewardType = 0x134; // ObjectProperty
		constexpr auto m_mcRewardName = 0x13c; // ObjectProperty
		constexpr auto m_mcRewardTitle = 0x144; // ObjectProperty
		constexpr auto m_mcRewardChest = 0x14c; // ObjectProperty
		constexpr auto m_mcRewardCurrency = 0x154; // ObjectProperty
		constexpr auto m_mcRewardCurrencyTF = 0x15c; // ObjectProperty
		constexpr auto m_mcCardIcon = 0x164; // ObjectProperty
		constexpr auto m_mcItemIcon = 0x16c; // ObjectProperty
		constexpr auto m_mcTextureIcon = 0x174; // ObjectProperty
		constexpr auto m_mcRarity = 0x17c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x184; // ObjectProperty
		constexpr auto m_pPriceButton = 0x18c; // ObjectProperty
	}

	namespace n_UTgSeqAct_TrainingAwards { // : USequenceAction
		constexpr auto m_fGoldTime = 0x108; // float
		constexpr auto m_fSilverTime = 0x10c; // float
		constexpr auto m_fBronzeTime = 0x110; // float
		constexpr auto m_fPassTime = 0x114; // float
	}

	namespace n_UTgDeviceForm_ImaniInhandFire { // : UTgDeviceForm
		constexpr auto m_bChanneling = 0x28c; // uint32_t : 1
		constexpr auto m_bFullyCharged = 0x28c; // uint32_t : 1
		constexpr auto m_bUseLeftHand = 0x28c; // uint32_t : 1
		constexpr auto m_fSpellChannelingPercentage = 0x290; // float
		constexpr auto m_fSpellChannelingStartPercentage = 0x294; // float
		constexpr auto m_fSpellChannelingTime = 0x298; // float
		constexpr auto m_fSpellChannelingTotalDuration = 0x29c; // float
		constexpr auto m_BlendByPct1P = 0x2a0; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct3P = 0x2b0; // TArray<ObjectProperty>
		constexpr auto m_DualFireStanceNodes1P = 0x2c0; // TArray<ObjectProperty>
		constexpr auto m_DualFireStanceNodes3P = 0x2d0; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIHudSkills3P { // : UUIScene
		constexpr auto m_pSkillIcon = 0x1cc; // ObjectProperty [0x5]
		constexpr auto m_pAltSkillIcon = 0x1f4; // ObjectProperty [0x5]
		constexpr auto m_pAltAltSkillIcon = 0x21c; // ObjectProperty [0x5]
		constexpr auto m_LexVengeance = 0x244; // ObjectProperty
		constexpr auto m_CorvusMark = 0x24c; // ObjectProperty
		constexpr auto m_CorvusMarkTeam = 0x254; // ObjectProperty
		constexpr auto m_OracleSoulCharges = 0x25c; // ObjectProperty
		constexpr auto m_CorrupterCorruptionUI = 0x264; // ObjectProperty
		constexpr auto m_RaumShards = 0x26c; // ObjectProperty
		constexpr auto m_mcCredits = 0x274; // ObjectProperty
		constexpr auto m_mcGroup = 0x27c; // ObjectProperty
		constexpr auto m_bUseAlternates = 0x284; // uint32_t : 1
		constexpr auto m_bUltimateReady = 0x284; // uint32_t : 1
		constexpr auto m_bThirdPersonMode = 0x284; // uint32_t : 1
		constexpr auto m_nCredits = 0x288; // int32_t
	}

	namespace n_UTgAIBehaviorAction_ReloadDevice { // : UTgAIBehaviorAction
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_UUIPatchNotesJsonManager { // : UPComUIManagerBase
		constexpr auto m_pMovie = 0x84; // ObjectProperty
		constexpr auto m_PatchData = 0x8c; // TArray<FPatchNotesData>
	}

	namespace n_UDistributionVectorConstant { // : UDistributionVector
		constexpr auto Constant = 0x7c; // FVector
		constexpr auto bLockAxes = 0x88; // uint32_t : 1
		constexpr auto LockedAxes = 0x8c; // EDistributionVectorLockFlags
	}

	namespace n_ATgChaosCapturePoint { // : ATgObjective
		constexpr auto m_nDisplayNameId = 0x2ac; // int32_t
		constexpr auto r_nUniqueCapturePointId = 0x2b0; // int32_t
		constexpr auto m_nLaneNumber = 0x2b4; // int32_t
		constexpr auto m_nTaskForce = 0x2b8; // int32_t
		constexpr auto m_Taskforce1Factories = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_Taskforce2Factories = 0x2cc; // TArray<ObjectProperty>
		constexpr auto m_GuardianFactory = 0x2dc; // ObjectProperty
		constexpr auto m_Taskforce1PathStart = 0x2e4; // ObjectProperty
		constexpr auto m_Taskforce2PathStart = 0x2ec; // ObjectProperty
		constexpr auto m_PlayerBaseSpawnPoints = 0x2f4; // TArray<ObjectProperty>
		constexpr auto m_PlayerRespawnPoints = 0x304; // TArray<ObjectProperty>
		constexpr auto m_CustomAnimNode = 0x314; // ObjectProperty
		constexpr auto c_MICStatus = 0x31c; // int32_t
		constexpr auto c_bConfusedRendering = 0x320; // uint32_t : 1
		constexpr auto m_bPrimaryCapturePoint = 0x320; // uint32_t : 1
		constexpr auto r_bFogActive = 0x320; // uint32_t : 1
		constexpr auto m_bForceSurvival = 0x320; // uint32_t : 1
		constexpr auto m_bAnnouncedDeathFog = 0x320; // uint32_t : 1
		constexpr auto m_fLastEnemyCapturingPointMessageTime = 0x324; // float
		constexpr auto m_fMinEnemyCapturingPointMessageTime = 0x328; // float
		constexpr auto m_HelpTip = 0x32c; // ObjectProperty
		constexpr auto r_fCapturedPct = 0x334; // float
		constexpr auto c_DominationOuterMIC = 0x338; // int32_t
		constexpr auto c_DominationInnerMIC = 0x33c; // int32_t
		constexpr auto CapturePointMeshActors = 0x340; // TArray<ObjectProperty>
		constexpr auto m_Volumes = 0x350; // TArray<ObjectProperty>
		constexpr auto m_nCapturePriority = 0x360; // int32_t
		constexpr auto m_vIndicatorOffset = 0x364; // FVector
		constexpr auto m_TgSurvivalFogVolumeDensityInfoClass = 0x370; // ATgSurvivalFogVolumeDensityInfo*
		constexpr auto m_ConvergeFog = 0x378; // ObjectProperty
		constexpr auto r_nFogAboutToBeActive = 0x380; // int32_t
		constexpr auto m_fFogFadeInTotalTime = 0x384; // float
		constexpr auto m_fTF1TouchedPointTimer = 0x388; // float
		constexpr auto m_fTF2TouchedPointTimer = 0x38c; // float
		constexpr auto m_TouchingChampions = 0x390; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_VanguardUlt { // : ATgDevice
		constexpr auto m_CachedVanguard = 0xa08; // ObjectProperty
		constexpr auto s_Target = 0xa10; // ObjectProperty
		constexpr auto m_vThrowVector = 0xa18; // FVector
		constexpr auto s_vServerGrabOffset = 0xa24; // FVector
		constexpr auto c_bWaitingForHit = 0xa30; // uint32_t : 1
		constexpr auto m_bGrabFailed = 0xa30; // uint32_t : 1
	}

	namespace n_UHeightFogComponent { // : UActorComponent
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto Height = 0x8c; // float
		constexpr auto Density = 0x90; // float
		constexpr auto LightBrightness = 0x94; // float
		constexpr auto LightColor = 0x98; // FColor
		constexpr auto ExtinctionDistance = 0x9c; // float
		constexpr auto StartDistance = 0xa0; // float
	}

	namespace n_UTgAIBehaviorCondition_LanepusherHealthPercent { // : UTgAIBehaviorCondition
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UTgDeviceMod_CooldownOverride { // : UObject
		constexpr auto m_bAlwaysIgnoreCD = 0x60; // uint32_t : 1
		constexpr auto m_fChanceToIgnoreCD = 0x64; // float
	}

	namespace n_UGFxClikWidget { // : UGFxObject
		constexpr auto __EventListener__Delegate = 0x104; // DelegateProperty
	}

	namespace n_USoundNodeWave { // : USoundNode
		constexpr auto CompressionQuality = 0x74; // int32_t
		constexpr auto bForceRealTimeDecompression = 0x78; // uint32_t : 1
		constexpr auto bLoopingSound = 0x78; // uint32_t : 1
		constexpr auto bDynamicResource = 0x78; // uint32_t : 1
		constexpr auto bUseTTS = 0x78; // uint32_t : 1
		constexpr auto bProcedural = 0x78; // uint32_t : 1
		constexpr auto bMature = 0x78; // uint32_t : 1
		constexpr auto bManualWordWrap = 0x78; // uint32_t : 1
		constexpr auto bSingleLine = 0x78; // uint32_t : 1
		constexpr auto TTSSpeaker = 0x7c; // ETTSSpeaker
		constexpr auto DecompressionType = 0x7d; // EDecompressionType
		constexpr auto MobileDetailMode = 0x7e; // EDetailMode
		constexpr auto SpokenText = 0x80; // FString
		constexpr auto Volume = 0x90; // float
		constexpr auto Pitch = 0x94; // float
		constexpr auto Duration = 0x98; // float
		constexpr auto NumChannels = 0x9c; // int32_t
		constexpr auto SampleRate = 0xa0; // int32_t
		constexpr auto RawData = 0xa4; // FUntypedBulkData_Mirror
		constexpr auto VorbisDecompressor = 0xe4; // FPointer
		constexpr auto RawPCMData = 0xec; // FPointer
		constexpr auto RawPCMDataSize = 0xf4; // int32_t
		constexpr auto CompressedPCData = 0xf8; // FUntypedBulkData_Mirror
		constexpr auto CompressedXbox360Data = 0x138; // FUntypedBulkData_Mirror
		constexpr auto CompressedDingoData = 0x178; // FUntypedBulkData_Mirror
		constexpr auto CompressedPS3Data = 0x1b8; // FUntypedBulkData_Mirror
		constexpr auto CompressedWiiUData = 0x1f8; // FUntypedBulkData_Mirror
		constexpr auto CompressedIPhoneData = 0x238; // FUntypedBulkData_Mirror
		constexpr auto CompressedFlashData = 0x278; // FUntypedBulkData_Mirror
		constexpr auto CompressedOrbisData = 0x2b8; // FUntypedBulkData_Mirror
		constexpr auto ResourceID = 0x2f8; // int32_t
		constexpr auto ResourceSize = 0x2fc; // int32_t
		constexpr auto ResourceData = 0x300; // FPointer
		constexpr auto Subtitles = 0x308; // TArray<FSubtitleCue>
		constexpr auto LocalizedSubtitles = 0x318; // TArray<FLocalizedSubtitle>
	}

	namespace n_UTgAnimMetaData_SkelControl_BoneScale_KeyFrame { // : UAnimMetaData
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto KeyFrames = 0x70; // TArray<FTimeModifier>
		constexpr auto bAllowScaleUp = 0x80; // uint32_t : 1
		constexpr auto bAllowScaleDown = 0x80; // uint32_t : 1
		constexpr auto bAdjustControllerStrength = 0x80; // uint32_t : 1
		constexpr auto bFullControlOverController = 0x80; // uint32_t : 1
		constexpr auto bSetKeysNoInterp = 0x80; // uint32_t : 1
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x80; // uint32_t : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x80; // uint32_t : 1
		constexpr auto SkelControlName = 0x84; // FName
		constexpr auto OnBecomeRelevantBehavior = 0x8c; // EOnRelevanceChange
		constexpr auto OnCeaseRelevantBehavior = 0x8d; // EOnRelevanceChange
		constexpr auto OnBecomeRelevantStrength = 0x90; // float
		constexpr auto OnCeaseRelevantStrength = 0x94; // float
	}

	namespace n_USoundNodeAttenuation { // : USoundNode
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto DistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto DistanceType = 0x81; // ESoundDistanceCalc
		constexpr auto RadiusMin = 0x84; // float
		constexpr auto RadiusMax = 0x88; // float
		constexpr auto LPFRadiusMin = 0x8c; // float
		constexpr auto LPFRadiusMax = 0x90; // float
	}

	namespace n_UTgAnimNodeChannelFire { // : UTgAnimNodeBlendList
		constexpr auto m_EquipPoint = 0x168; // TG_EQUIP_POINT
		constexpr auto m_bResetOnRelevant = 0x16c; // uint32_t : 1
		constexpr auto m_bCheckAnimSeqForAnim = 0x16c; // uint32_t : 1
		constexpr auto m_bUseCooldownForEndChannel = 0x16c; // uint32_t : 1
		constexpr auto m_bOnlyCallAnimEndWhenRelevant = 0x16c; // uint32_t : 1
		constexpr auto m_bDoneChanneling = 0x16c; // uint32_t : 1
		constexpr auto m_fMaxLoopTime = 0x170; // float
		constexpr auto m_fPreCooldownEndTimeTrigger = 0x174; // float
		constexpr auto m_fCooldownEndTime = 0x178; // float
		constexpr auto m_fEndLoopTime = 0x17c; // float
	}

	namespace n_UTgSeqAct_PingMinimap { // : USequenceAction
		constexpr auto m_PingTarget = 0x108; // ObjectProperty
	}

	namespace n_ATgRepInfo_Game_TeamDeathMatch { // : ATgRepInfo_Game
		constexpr auto c_nLeadingTeam = 0x5c8; // int32_t
		constexpr auto c_nLeadingTeamScoreAmount = 0x5cc; // int32_t
	}

	namespace n_UTgGamePhase_Bombardment { // : UTgGamePhase
		constexpr auto m_fBombardmentZ = 0xb8; // float
		constexpr auto m_vBombardmentCenter = 0xbc; // FVector
		constexpr auto m_fBombardmentRadius = 0xc8; // float
		constexpr auto m_fBombardmentInnerRadius = 0xcc; // float
		constexpr auto m_nFireModeID = 0xd0; // int32_t
		constexpr auto m_fBombardmentDelay = 0xd4; // float
		constexpr auto m_fBombardmentRate = 0xd8; // float
		constexpr auto m_FireMode = 0xdc; // ObjectProperty
	}

	namespace n_UAnimNodeFrame { // : UAnimObject
		constexpr auto SizeX = 0x68; // int32_t
		constexpr auto SizeY = 0x6c; // int32_t
		constexpr auto BorderWidth = 0x70; // int32_t
		constexpr auto bDrawBox = 0x74; // uint32_t : 1
		constexpr auto bFilled = 0x74; // uint32_t : 1
		constexpr auto bTileFill = 0x74; // uint32_t : 1
		constexpr auto BorderColor = 0x78; // FColor
		constexpr auto FillColor = 0x7c; // FColor
	}

	namespace n_UTgAnimNodeAimOffset { // : UTgAnimNodeAimOffset_Base
		constexpr auto Owner = 0x170; // ObjectProperty
		constexpr auto m_CachedNodeList = 0x178; // TArray<ObjectProperty>
		constexpr auto m_bInitializedCachedNodeList = 0x188; // uint32_t : 1
		constexpr auto m_bDisableVerticalAiming = 0x188; // uint32_t : 1
		constexpr auto bInterpolating = 0x188; // uint32_t : 1
		constexpr auto m_bRandomAimPointsEnabled = 0x188; // uint32_t : 1
		constexpr auto m_bOverrideAim = 0x188; // uint32_t : 1
		constexpr auto m_bAimAtTarget = 0x188; // uint32_t : 1
		constexpr auto m_bDisableWeaponLeading = 0x188; // uint32_t : 1
		constexpr auto m_PitchControlType = 0x18c; // EPitchControlType
		constexpr auto m_PitchControlUserCurve = 0x190; // FInterpCurveFloat
		constexpr auto TurnInPlaceOffset = 0x1a4; // float
		constexpr auto LastAimX = 0x1a8; // float
		constexpr auto InterpSpeed = 0x1ac; // float
		constexpr auto m_AimOffsetPct = 0x1b0; // FVector2D
		constexpr auto m_RandomAimPointsRangeX = 0x1b8; // FVector2D
		constexpr auto m_RandomAimPointsRangeY = 0x1c0; // FVector2D
		constexpr auto m_fRandomAimPointsInterpRate = 0x1c8; // float
		constexpr auto m_fRandomAimPointsIntervalMin = 0x1cc; // float
		constexpr auto m_fRandomAimPointsIntervalMax = 0x1d0; // float
		constexpr auto m_fCurrentRandomAimPointsInterval = 0x1d4; // float
		constexpr auto m_TargetRandomAimLocation = 0x1d8; // FVector2D
		constexpr auto m_fDeltaTime = 0x1e0; // float
		constexpr auto m_OverriddenAim = 0x1e4; // FVector2D
		constexpr auto m_WeaponMeshActor = 0x1ec; // ObjectProperty
	}

	namespace n_USeqAct_SetMaterial { // : USequenceAction
		constexpr auto NewMaterial = 0x108; // ObjectProperty
		constexpr auto MaterialIndex = 0x110; // int32_t
	}

	namespace n_USeqAct_SetMatInstTexParam { // : USequenceAction
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto NewTexture = 0x110; // ObjectProperty
		constexpr auto ParamName = 0x118; // FName
	}

	namespace n_UMaterialExpressionComponentMask { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto R = 0xe4; // uint32_t : 1
		constexpr auto G = 0xe4; // uint32_t : 1
		constexpr auto B = 0xe4; // uint32_t : 1
		constexpr auto A = 0xe4; // uint32_t : 1
	}

	namespace n_UMcpUserManagerBase { // : UMcpServiceBase
		constexpr auto McpUserManagerClassName = 0x78; // FString
		constexpr auto __OnRegisterUserComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryUsersComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteUserComplete__Delegate = 0xa8; // DelegateProperty
	}

	namespace n_ATgDeployableFactory { // : ATgActorFactory
		constexpr auto nCurrentCount = 0x2c0; // int32_t
		constexpr auto s_fLastSpawnTime = 0x2c4; // float
		constexpr auto s_bSpawnOnce = 0x2c8; // uint32_t : 1
		constexpr auto s_nDeployableId = 0x2cc; // int32_t
		constexpr auto s_SpawnGroupNum = 0x2d0; // int32_t
		constexpr auto s_fDeployableLifeSpan = 0x2d4; // float
	}

	namespace n_UOnlineSubsystemCommonImpl { // : UOnlineSubsystem
		constexpr auto VoiceEngine = 0x264; // FPointer
		constexpr auto MaxLocalTalkers = 0x26c; // int32_t
		constexpr auto MaxRemoteTalkers = 0x270; // int32_t
		constexpr auto bIsUsingSpeechRecognition = 0x274; // uint32_t : 1
		constexpr auto GameInterfaceImpl = 0x278; // ObjectProperty
		constexpr auto AuthInterfaceImpl = 0x280; // ObjectProperty
	}

	namespace n_AZoneInfo { // : AInfo
		constexpr auto KillZ = 0x280; // float
		constexpr auto SoftKill = 0x284; // float
		constexpr auto KillZDamageType = 0x288; // UKillZDamageType*
		constexpr auto bSoftKillZ = 0x290; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_Combo_Evie { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_MarkedTargets = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_fBlinkTimestamp = 0xdc; // float
		constexpr auto m_fIceBlockTimestamp = 0xe0; // float
	}

	namespace n_UMaterialExpressionSquareRoot { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UDecalComponent { // : UPrimitiveComponent
		constexpr auto DecalMaterial = 0x24c; // ObjectProperty
		constexpr auto Width = 0x254; // float
		constexpr auto Height = 0x258; // float
		constexpr auto TileX = 0x25c; // float
		constexpr auto TileY = 0x260; // float
		constexpr auto OffsetX = 0x264; // float
		constexpr auto OffsetY = 0x268; // float
		constexpr auto DecalRotation = 0x26c; // float
		constexpr auto FieldOfView = 0x270; // float
		constexpr auto NearPlane = 0x274; // float
		constexpr auto FarPlane = 0x278; // float
		constexpr auto Location = 0x27c; // FVector
		constexpr auto Orientation = 0x288; // FRotator
		constexpr auto HitLocation = 0x294; // FVector
		constexpr auto HitNormal = 0x2a0; // FVector
		constexpr auto HitTangent = 0x2ac; // FVector
		constexpr auto HitBinormal = 0x2b8; // FVector
		constexpr auto bNoClip = 0x2c4; // uint32_t : 1
		constexpr auto bFadeOutAtFarPlane = 0x2c4; // uint32_t : 1
		constexpr auto bStaticDecal = 0x2c4; // uint32_t : 1
		constexpr auto m_bIsGameplayDecal = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnBackfaces = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnHidden = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnBSP = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnStaticMeshes = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnSkeletalMeshes = 0x2c4; // uint32_t : 1
		constexpr auto bProjectOnTerrain = 0x2c4; // uint32_t : 1
		constexpr auto bFlipBackfaceDirection = 0x2c4; // uint32_t : 1
		constexpr auto bMovableDecal = 0x2c4; // uint32_t : 1
		constexpr auto bHasBeenAttached = 0x2c4; // uint32_t : 1
		constexpr auto bDecalMaterialSetAtRunTime = 0x2c4; // uint32_t : 1
		constexpr auto HitComponent = 0x2c8; // ComponentProperty
		constexpr auto HitBone = 0x2d0; // FName
		constexpr auto HitNodeIndex = 0x2d8; // int32_t
		constexpr auto HitLevelIndex = 0x2dc; // int32_t
		constexpr auto FracturedStaticMeshComponentIndex = 0x2e0; // int32_t
		constexpr auto HitNodeIndices = 0x2e4; // TArray<int32_t>
		constexpr auto DecalReceivers = 0x2f4; // TArray<FDecalReceiver>
		constexpr auto StaticReceivers = 0x304; // TArray<FPointer>
		constexpr auto ReleaseResourcesFence = 0x314; // FPointer
		constexpr auto Planes = 0x31c; // TArray<FPlane>
		constexpr auto DepthBias = 0x32c; // float
		constexpr auto SlopeScaleDepthBias = 0x330; // float
		constexpr auto OrbisDepthBias = 0x334; // float
		constexpr auto OrbisSlopeScaleDepthBias = 0x338; // float
		constexpr auto SortOrder = 0x33c; // int32_t
		constexpr auto BackfaceAngle = 0x340; // float
		constexpr auto BlendRange = 0x344; // FVector2D
		constexpr auto StreamingDistanceMultiplier = 0x34c; // float
		constexpr auto DecalTransform = 0x350; // EDecalTransform
		constexpr auto FilterMode = 0x351; // EFilterMode
		constexpr auto Filter = 0x354; // TArray<ObjectProperty>
		constexpr auto ReceiverImages = 0x364; // TArray<ComponentProperty>
		constexpr auto ParentRelativeLocation = 0x374; // FVector
		constexpr auto ParentRelativeOrientation = 0x380; // FRotator
		constexpr auto ParentRelLocRotMatrix = 0x390; // FMatrix
	}

	namespace n_UParticleModuleCollisionActor { // : UParticleModuleCollision
		constexpr auto ActorsToCollideWith = 0x140; // TArray<FName>
		constexpr auto bCheckPawnCollisions = 0x150; // uint32_t : 1
	}

	namespace n_UParticleModuleVelocityInheritParent { // : UParticleModuleVelocityBase
		constexpr auto Scale = 0x6c; // FRawDistributionVector
	}

	namespace n_USeqAct_AIMoveToActor { // : USeqAct_Latent
		constexpr auto bInterruptable = 0x120; // uint32_t : 1
		constexpr auto bPickClosest = 0x120; // uint32_t : 1
		constexpr auto Destination = 0x124; // TArray<ObjectProperty>
		constexpr auto MovementSpeedModifier = 0x134; // float
		constexpr auto LookAt = 0x138; // ObjectProperty
		constexpr auto LastDestinationChoice = 0x140; // int32_t
	}

	namespace n_UUIComponent_HealthBar_Overlay_Deployable { // : UUIComponent_HealthBar_Overlay
		constexpr auto m_bOwned = 0x248; // uint32_t : 1
	}

	namespace n_UUIScene_UIHudAtlas { // : UUIScene
		constexpr auto m_bHudVisible = 0x1cc; // uint32_t : 1
		constexpr auto m_bShowAtlasUlt = 0x1cc; // uint32_t : 1
		constexpr auto m_fUltTimeRemaining = 0x1d0; // float
		constexpr auto m_fUltTimeTotal = 0x1d4; // float
		constexpr auto m_nAmmoRemaining = 0x1d8; // int32_t
		constexpr auto m_pRadialTimer = 0x1dc; // ObjectProperty
		constexpr auto m_mcRange = 0x1e4; // ObjectProperty
		constexpr auto m_mcBarrageFrame = 0x1ec; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageMeter = 0x204; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageTime = 0x21c; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageTimeTF = 0x234; // ObjectProperty [0x3]
		constexpr auto m_mcReticule = 0x24c; // ObjectProperty
		constexpr auto m_mcRefire = 0x254; // ObjectProperty
		constexpr auto m_mcRefireMask = 0x25c; // ObjectProperty
		constexpr auto m_mcDurationMeter = 0x264; // ObjectProperty
		constexpr auto m_mcDurationMeterCap = 0x26c; // ObjectProperty
		constexpr auto m_nTickCallbackHandle = 0x274; // int32_t
		constexpr auto m_nUIHudCallbackHandle = 0x278; // int32_t
		constexpr auto m_nUIUltCallbackHandle = 0x27c; // int32_t
		constexpr auto m_nUIUpdateCallbackHandle = 0x280; // int32_t
	}

	namespace n_AMobileDebugCameraHUD { // : AMobileHUD
		constexpr auto bDrawDebugText = 0x6bc; // uint32_t : 1
	}

	namespace n_ASpeedTreeActor { // : AActor
		constexpr auto SpeedTreeComponent = 0x280; // ComponentProperty
	}

	namespace n_UTgAIObstacleAvoidanceRenderingComponent { // : UPrimitiveComponent
		constexpr auto ObstacleAvoidance = 0x24c; // ObjectProperty
	}

	namespace n_UUIComponent_CorrupterCorruptionUI { // : UUIComponent_Display
		constexpr auto m_CurrentViewPawn = 0x124; // ObjectProperty
		constexpr auto m_CurrentTargetPawn = 0x12c; // ObjectProperty
		constexpr auto m_mcText = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcAnim = 0x144; // ObjectProperty
		constexpr auto m_mcMaxStacks = 0x14c; // ObjectProperty
		constexpr auto m_bIsHiding = 0x154; // uint32_t : 1
		constexpr auto m_bEnabled = 0x154; // uint32_t : 1
		constexpr auto m_bIsCorruptionCollectorDisplay = 0x154; // uint32_t : 1
		constexpr auto m_nCurrentCorruptionCharges = 0x158; // int32_t
	}

	namespace n_AApexDestructibleActor { // : AActor
		constexpr auto LightEnvironment = 0x280; // ComponentProperty
		constexpr auto bFractureMaterialOverride = 0x288; // uint32_t : 1
		constexpr auto bPlaySingleFractureMaterialEffect = 0x288; // uint32_t : 1
		constexpr auto FractureMaterials = 0x28c; // TArray<ObjectProperty>
		constexpr auto StaticDestructibleComponent = 0x29c; // ComponentProperty
		constexpr auto LOD = 0x2a4; // int32_t
		constexpr auto VisibilityFactors = 0x2a8; // TArray<char>
		constexpr auto FractureSounds = 0x2b8; // TArray<ObjectProperty>
		constexpr auto FractureParticleEffects = 0x2c8; // TArray<ObjectProperty>
	}

	namespace n_ATgPawn_Longbow { // : ATgPawn_Character
		constexpr auto m_CachedInhand = 0x3164; // ObjectProperty
		constexpr auto r_bImpalerArrowIsActive = 0x316c; // uint32_t : 1
		constexpr auto r_bExplosiveImpalerArrow = 0x316c; // uint32_t : 1
		constexpr auto r_bDesertSilenceArrow = 0x316c; // uint32_t : 1
	}

	namespace n_ATgProj_MoonShard { // : ATgProj_Simulated
		constexpr auto VfTable_ITgCallbackInterface = 0x52c; // FPointer
		constexpr auto m_CallbackContainer = 0x534; // ObjectProperty
		constexpr auto m_fMaxPullAcceleration = 0x53c; // float
		constexpr auto m_fMaxSpeed = 0x540; // float
		constexpr auto m_fPeakLateralDampening = 0x544; // float
		constexpr auto m_fInnerRadius = 0x548; // float
		constexpr auto m_fKnockupRadius = 0x54c; // float
		constexpr auto m_fOuterRadius = 0x550; // float
		constexpr auto m_fRadiusExitTolerance = 0x554; // float
		constexpr auto m_fPhysWalkingAccelerationFactor = 0x558; // float
		constexpr auto c_bDebugRadii = 0x55c; // uint32_t : 1
		constexpr auto m_RegisteredPawns = 0x560; // TArray<ObjectProperty>
		constexpr auto m_AffectedPawns = 0x570; // TArray<FMoonShardPawnRecord>
	}

	namespace n_ATgDevice_CorvusDagger { // : ATgDevice
		constexpr auto m_bCancelled = 0xa08; // uint32_t : 1
		constexpr auto m_bAllowTeleport = 0xa08; // uint32_t : 1
		constexpr auto m_vTeleportToLocation = 0xa0c; // FVector
		constexpr auto m_vProjSpawnLocation = 0xa18; // FVector
		constexpr auto m_CachedCorvus = 0xa24; // ObjectProperty
		constexpr auto m_eLocalDaggerState = 0xa2c; // CorvusDaggerState
	}

	namespace n_UTgAIBehaviorAction_MoveToLaneVolume { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto bMustBeSameLane = 0x9c; // uint32_t : 1
	}

	namespace n_USeqEvent_Console { // : USequenceEvent
		constexpr auto ConsoleEventName = 0x128; // FName
		constexpr auto EventDesc = 0x130; // FString
	}

	namespace n_UTgGamePhase_Capture { // : UTgGamePhase
		constexpr auto m_currentActiveCapturePoint = 0xb8; // ObjectProperty
		constexpr auto m_fCaptureGoal = 0xc0; // float
		constexpr auto m_fCapturePointsPerSecond = 0xc4; // float
		constexpr auto m_nCreditsForCapturingPoint = 0xc8; // int32_t
		constexpr auto m_fSecondTracker = 0xcc; // float
	}

	namespace n_UActorFactoryAkAmbientSound { // : UActorFactory
		constexpr auto AmbientEvent = 0x9c; // ObjectProperty
	}

	namespace n_UTgSeqEvent_UpdateLanePusherCount { // : USequenceEvent
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_UTgAnimNodeChannelFire_CorvusUlt { // : UTgAnimNodeChannelFire
		constexpr auto m_eAnimState = 0x180; // CorvusUltAnimState
	}

	namespace n_UParticleModuleUberLTISIVCL { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorAction_MoveToAvoidableProjectile { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // uint32_t : 1
		constexpr auto bMoveAway = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_GeometryBarrierTank { // : ATgDevice
		constexpr auto r_bHasTremorsEquipped = 0xa08; // uint32_t : 1
		constexpr auto r_fTremorsCooldownReduction = 0xa0c; // float
		constexpr auto m_fCachedWallHealthPercent = 0xa10; // float
	}

	namespace n_UTgManifestGroup { // : UObject
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto m_ManifestList = 0x68; // TArray<FPointer>
		constexpr auto m_pObjectReferencers = 0x78; // TArray<ObjectProperty>
		constexpr auto m_OwningObject = 0x88; // ObjectProperty
		constexpr auto m_bIsInCallback = 0x90; // uint32_t : 1
		constexpr auto m_bInitialized = 0x90; // uint32_t : 1
		constexpr auto m_bResetOnMapLoad = 0x90; // uint32_t : 1
		constexpr auto m_AsyncLoadPriority = 0x94; // EAsyncLoadPriority
		constexpr auto __OnAllManifestsLoaded__Delegate = 0x98; // DelegateProperty
	}

	namespace n_ATgDevice_CorvusBeacon { // : ATgDevice_Mark
		constexpr auto m_bBeaconCanBounce = 0xa08; // uint32_t : 1
	}

	namespace n_UTranslatorTag { // : UObject
		constexpr auto Tag = 0x60; // FName
	}

	namespace n_UPBRuleNodeComment { // : UPBRuleNodeBase
		constexpr auto SizeX = 0x70; // int32_t
		constexpr auto SizeY = 0x74; // int32_t
		constexpr auto BorderWidth = 0x78; // int32_t
		constexpr auto BorderColor = 0x7c; // FColor
		constexpr auto bFilled = 0x80; // uint32_t : 1
		constexpr auto FillColor = 0x84; // FColor
	}

	namespace n_ANxGenericForceFieldBox { // : ANxGenericForceField
		constexpr auto RenderComponent = 0x374; // ComponentProperty
		constexpr auto BoxExtent = 0x37c; // FVector
	}

	namespace n_UTgDeviceForm_Stasis { // : UTgDeviceForm
		constexpr auto m_bNeedsLoopActivation = 0x28c; // uint32_t : 1
		constexpr auto m_fFireStartTime = 0x290; // float
		constexpr auto m_fLoopDelay = 0x294; // float
	}

	namespace n_UUIComponent_Button_LoadoutSpray { // : UUIComponent_Display
		constexpr auto m_mcCardIcon = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
	}

	namespace n_ANxTornadoForceFieldCapsule { // : ANxTornadoForceField
		constexpr auto RenderComponent = 0x304; // ComponentProperty
	}

	namespace n_UTextureRenderTargetCube { // : UTextureRenderTarget
		constexpr auto SizeX = 0x108; // int32_t
		constexpr auto Format = 0x10c; // EPixelFormat
	}

	namespace n_UUIScene_UIHnHEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pRotator = 0x1dc; // ObjectProperty
		constexpr auto m_pHome = 0x1e4; // ObjectProperty
		constexpr auto m_pStore = 0x1ec; // ObjectProperty
		constexpr auto m_pQuests = 0x1f4; // ObjectProperty
		constexpr auto m_pOverview = 0x1fc; // ObjectProperty
	}

	namespace n_UAnimMetaData_SkelControl { // : UAnimMetaData
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto bFullControlOverController = 0x70; // uint32_t : 1
		constexpr auto SkelControlName = 0x74; // FName
	}

	namespace n_APylon { // : ANavigationPoint
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x378; // FPointer
		constexpr auto VfTable_IInterface_NavigationHandle = 0x380; // FPointer
		constexpr auto NavMeshPtr = 0x388; // FPointer
		constexpr auto ObstacleMesh = 0x390; // FPointer
		constexpr auto DynamicObstacleMesh = 0x398; // FPointer
		constexpr auto WorkingSetPtr = 0x3a0; // FPointer
		constexpr auto PathObjectsThatAffectThisPylon = 0x3a8; // FPointer
		constexpr auto NextPassSeedList = 0x3b0; // TArray<FVector>
		constexpr auto OctreeId = 0x3c0; // FOctreeElementId
		constexpr auto OctreeIWasAddedTo = 0x3cc; // FPointer
		constexpr auto NextPylon = 0x3d4; // ObjectProperty
		constexpr auto ExpansionVolumes = 0x3dc; // TArray<ObjectProperty>
		constexpr auto ExpansionRadius = 0x3ec; // float
		constexpr auto MaxExpansionRadius = 0x3f0; // float
		constexpr auto PylonRadiusPreview = 0x3f4; // ComponentProperty
		constexpr auto bImportedMesh = 0x3fc; // uint32_t : 1
		constexpr auto bUseExpansionSphereOverride = 0x3fc; // uint32_t : 1
		constexpr auto bNeedsCostCheck = 0x3fc; // uint32_t : 1
		constexpr auto bPylonInHighLevelPath = 0x3fc; // uint32_t : 1
		constexpr auto bUseRecast = 0x3fc; // uint32_t : 1
		constexpr auto bAllowRecastGenerator = 0x3fc; // uint32_t : 1
		constexpr auto bDrawEdgePolys = 0x3fc; // uint32_t : 1
		constexpr auto bDrawPolyBounds = 0x3fc; // uint32_t : 1
		constexpr auto bRenderInShowPaths = 0x3fc; // uint32_t : 1
		constexpr auto bDrawWalkableSurface = 0x3fc; // uint32_t : 1
		constexpr auto bDrawObstacleSurface = 0x3fc; // uint32_t : 1
		constexpr auto bSolidObstaclesInGame = 0x3fc; // uint32_t : 1
		constexpr auto bBuildThisPylon = 0x3fc; // uint32_t : 1
		constexpr auto bDisabled = 0x3fc; // uint32_t : 1
		constexpr auto bForceObstacleMeshCollision = 0x3fc; // uint32_t : 1
		constexpr auto ExpansionSphereCenter = 0x400; // FVector
		constexpr auto RenderingComp = 0x40c; // ComponentProperty
		constexpr auto BrokenSprite = 0x414; // ComponentProperty
		constexpr auto ImposterPylons = 0x41c; // TArray<ObjectProperty>
		constexpr auto OnBuild_DisableCollisionForThese = 0x42c; // TArray<ObjectProperty>
		constexpr auto OnBuild_EnableCollisionForThese = 0x43c; // TArray<ObjectProperty>
		constexpr auto MaxPolyHeight_Optional = 0x44c; // float
		constexpr auto NavMeshGenerator = 0x450; // char
		constexpr auto VoxelFilterBounds = 0x454; // TArray<FKAggregateGeom>
		constexpr auto VoxelFilterTM = 0x464; // TArray<FMatrix>
		constexpr auto DebugEdgeCount = 0x474; // int32_t
		constexpr auto DebugPathExtent = 0x478; // FVector
		constexpr auto DebugPathStartLocation = 0x484; // FVector
	}

	namespace n_UUIComponent_VanguardShieldBar { // : UUIComponent_ShieldBar
		constexpr auto m_mcShieldMeter = 0x158; // ObjectProperty
		constexpr auto m_bHiddenFullShield = 0x160; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDepthBiasedBlend { // : UMaterialExpression
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto RGB = 0xb8; // FExpressionInput
		constexpr auto Alpha = 0xec; // FExpressionInput
		constexpr auto Bias = 0x120; // FExpressionInput
	}

	namespace n_ATgDevice_KineticBurst { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
		constexpr auto m_bInterruptedByInhand = 0xa10; // uint32_t : 1
	}

	namespace n_UTgGameplayCurvesSet_RecoilSimple { // : UTgGameplayCurvesSet
		constexpr auto HorizRecoil1 = 0x64; // FRawDistributionFloat
		constexpr auto HorizRecoil2 = 0x88; // FRawDistributionFloat
		constexpr auto VertRecoil1 = 0xac; // FRawDistributionFloat
		constexpr auto VertRecoil2 = 0xd0; // FRawDistributionFloat
		constexpr auto RecoilType = 0xf4; // EPaladinsRecoilType
	}

	namespace n_UParticleModuleAttractorSkelVertSurface { // : UParticleModuleAttractorBase
		constexpr auto FalloffType = 0x68; // EVertSurfaceAttractorFalloffType
		constexpr auto DestinationType = 0x69; // EAttractorSkelVertSurfaceDestination
		constexpr auto bParticleLifeRelative = 0x6c; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x6c; // uint32_t : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SkelMeshActorParamName = 0x154; // FName
		constexpr auto ValidAssociatedBones = 0x15c; // TArray<FName>
		constexpr auto NormalToCompare = 0x16c; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x178; // float
		constexpr auto NormalCheckTolerance = 0x17c; // float
		constexpr auto ValidMaterialIndices = 0x180; // TArray<int32_t>
	}

	namespace n_ATgInterpolatingCameraActor { // : ACameraActor
		constexpr auto m_CameraArray = 0x420; // TArray<FInterpolatingCameraInfo>
		constexpr auto m_nCurrentCameraIndex = 0x430; // int32_t
		constexpr auto m_fCurrentInterpValue = 0x434; // float
		constexpr auto m_fTargetInterpValue = 0x438; // float
	}

	namespace n_UInterpTrackInstEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UTgGameDC_PlayerVitals { // : UTgGameDC_MapEntity
		constexpr auto m_fHealth = 0x15c; // float
		constexpr auto m_fHealthMax = 0x160; // float
		constexpr auto m_fEnergy = 0x164; // float
		constexpr auto m_fEnergyMax = 0x168; // float
		constexpr auto m_fBoost = 0x16c; // float
		constexpr auto m_fBoostMax = 0x170; // float
		constexpr auto m_fMana = 0x174; // float
		constexpr auto m_fManaMax = 0x178; // float
		constexpr auto m_fHealthPct = 0x17c; // float
		constexpr auto m_fEnergyPct = 0x180; // float
		constexpr auto m_fBoostPct = 0x184; // float
		constexpr auto m_fManaPct = 0x188; // float
		constexpr auto m_fXPPct = 0x18c; // float
		constexpr auto m_nLevel = 0x190; // int32_t
		constexpr auto m_ReviveTimer = 0x194; // ObjectProperty
		constexpr auto m_RefireTimer = 0x19c; // ObjectProperty
		constexpr auto m_RecallTimer = 0x1a4; // ObjectProperty
	}

	namespace n_UUIComponent_ProgressBarCommendation { // : UUIComponent_Display
		constexpr auto m_mcMaskTeamwork = 0x124; // ObjectProperty
		constexpr auto m_mcMaskLeadership = 0x12c; // ObjectProperty
		constexpr auto m_mcMaskSkill = 0x134; // ObjectProperty
	}

	namespace n_USeqAct_SetBool { // : USeqAct_SetSequenceVariable
		constexpr auto DefaultValue = 0x108; // uint32_t : 1
	}

	namespace n_UCodecMovie { // : UObject
		constexpr auto PlaybackDuration = 0x60; // float
	}

	namespace n_ATgDevice_CorvusDaggerTalent { // : ATgDevice
		constexpr auto m_BeamCollisionProxy = 0xa08; // ObjectProperty
		constexpr auto m_ActorsInRange = 0xa10; // TArray<ObjectProperty>
		constexpr auto m_vDaggerLocation = 0xa20; // FVector
	}

	namespace n_ATgDevice_RaumRevUp { // : ATgDevice
		constexpr auto m_CachedRaum = 0xa08; // ObjectProperty
	}

	namespace n_UVivoxOSSConnectors { // : UObject
		constexpr auto m_OnlineSub = 0x60; // ObjectProperty
		constexpr auto Closures = 0x68; // TArray<ObjectProperty>
		constexpr auto m_VivoxInterface = 0x78; // FPointer
	}

	namespace n_UUIComponent_CorvusMark { // : UUIComponent_Display
		constexpr auto m_mcFrame = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcSecondIcon = 0x134; // ObjectProperty
		constexpr auto m_Corvus = 0x13c; // ObjectProperty
		constexpr auto m_pUIData = 0x144; // ObjectProperty
		constexpr auto m_CachedMarkedChampions = 0x14c; // ObjectProperty [0x2]
		constexpr auto m_bEnabled = 0x15c; // uint32_t : 1
		constexpr auto m_bCleared = 0x15c; // uint32_t : 1
	}

	namespace n_UParticleModuleLocation { // : UParticleModuleLocationBase
		constexpr auto StartLocation = 0x68; // FRawDistributionVector
		constexpr auto DistributeOverNPoints = 0x8c; // float
		constexpr auto DistributeThreshold = 0x90; // float
	}

	namespace n_ATgInventoryManager { // : AInventoryManager
		constexpr auto r_ItemCount = 0x2ac; // int32_t
		constexpr auto m_nPreviousDeviceInstanceId = 0x2b0; // int32_t
		constexpr auto m_bNeedsInvUpdate = 0x2b4; // uint32_t : 1
		constexpr auto m_PreviousWeapon = 0x2b8; // ObjectProperty
		constexpr auto m_InventoryMap = 0x2c0; // TMap<None, None>
		constexpr auto s_ReplicateMap = 0x308; // TMap<None, None>
		constexpr auto s_DeletionMap = 0x350; // TMap<None, None>
	}

	namespace n_AHeightFog { // : AInfo
		constexpr auto Component = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // uint32_t : 1
	}

	namespace n_ATgKAsset_ClientSideSim { // : AKAsset
		constexpr auto m_fDamageImpulse = 0x29c; // float
		constexpr auto m_Arrow = 0x2a0; // ComponentProperty
		constexpr auto m_ForceSprite = 0x2a8; // ComponentProperty
		constexpr auto m_bEnableWind = 0x2b0; // uint32_t : 1
		constexpr auto m_bEnableGusts = 0x2b0; // uint32_t : 1
		constexpr auto bAnimates = 0x2b0; // uint32_t : 1
		constexpr auto m_fWindForceMin = 0x2b4; // float
		constexpr auto m_fWindForceMax = 0x2b8; // float
		constexpr auto m_fWindForceStrength = 0x2bc; // float
		constexpr auto m_fWindForceTargetStrength = 0x2c0; // float
		constexpr auto m_fWindFrequency = 0x2c4; // float
		constexpr auto m_fWindForceRemainingTime = 0x2c8; // float
		constexpr auto m_vWindDirection = 0x2cc; // FVector
		constexpr auto m_fForceDistance = 0x2d8; // float
		constexpr auto m_fForceZOffsetMultiplier = 0x2dc; // float
		constexpr auto m_fGustActiveTime = 0x2e0; // float
		constexpr auto m_vTimeBetweenGusts = 0x2e4; // FVector2D
		constexpr auto m_fGustActiveRemainingTime = 0x2ec; // float
		constexpr auto m_fTimeTillNextGust = 0x2f0; // float
		constexpr auto m_WindFrequencyMultiplier = 0x2f4; // FVector2D
		constexpr auto m_WindForceMultiplier = 0x2fc; // FVector2D
	}

	namespace n_ATgBotFactory_PointCapture { // : ATgBotFactory_Leashed
		constexpr auto m_CapturePoint = 0x388; // ObjectProperty
	}

	namespace n_ATgPawn_Yagorath { // : ATgPawn_Character
		constexpr auto CritPointBoneNames = 0x3164; // TArray<FName>
		constexpr auto m_fCritDamageMult = 0x3174; // float
		constexpr auto m_fDamageReductionMult = 0x3178; // float
		constexpr auto m_CachedYagoSpray = 0x317c; // ObjectProperty
		constexpr auto m_fTurnModifierDuringSpray = 0x3184; // float
		constexpr auto m_fLookUpModifierDuringSpray = 0x3188; // float
		constexpr auto m_CachedYagoTravel = 0x318c; // ObjectProperty
		constexpr auto r_bTravelFormActive = 0x3194; // uint32_t : 1
		constexpr auto m_bIsMovingForward = 0x3194; // uint32_t : 1
		constexpr auto m_bForcedAcceleration = 0x3194; // uint32_t : 1
		constexpr auto m_bForcedDeceleration = 0x3194; // uint32_t : 1
		constexpr auto m_bShowUltUI = 0x3194; // uint32_t : 1
		constexpr auto r_TravelFormCurrSpeedMult = 0x3198; // float
		constexpr auto m_fTravelFormTurnRateMult = 0x319c; // float
		constexpr auto m_TravelFormMaxSpeedMult = 0x31a0; // float
		constexpr auto m_fYagorathPlantedHeightOffset = 0x31a4; // float
		constexpr auto m_PlantedFormCollisionComponent = 0x31a8; // ComponentProperty
		constexpr auto m_CachedYagoQ = 0x31b0; // ObjectProperty
		constexpr auto m_fAccumulatedMovementDeviation = 0x31b8; // float
		constexpr auto m_fMovementDeviationMeanLifetime = 0x31bc; // float
		constexpr auto m_fAccelerationStartTime = 0x31c0; // float
		constexpr auto m_fDecelerationStartTime = 0x31c4; // float
		constexpr auto m_fPassiveDecelerationStartTime = 0x31c8; // float
		constexpr auto r_fMaxMovementDegPerSec = 0x31cc; // float
		constexpr auto m_fLastMovementBearing = 0x31d0; // float
		constexpr auto m_nAltInhandSlot = 0x31d4; // int32_t
		constexpr auto m_nAltAltfireSlot = 0x31d8; // int32_t
		constexpr auto m_nAltQAbilitySlot = 0x31dc; // int32_t
		constexpr auto m_sSkillIconOverride = 0x31e0; // FString
		constexpr auto m_CachedYagoUlt = 0x31f0; // ObjectProperty
		constexpr auto m_UltTarget = 0x31f8; // ObjectProperty
	}

	namespace n_UActorFactory { // : UObject
		constexpr auto GameplayActorClass = 0x60; // AActor*
		constexpr auto MenuName = 0x68; // FString
		constexpr auto MenuPriority = 0x78; // int32_t
		constexpr auto AlternateMenuPriority = 0x7c; // int32_t
		constexpr auto NewActorClassName = 0x80; // FString
		constexpr auto NewActorClass = 0x90; // AActor*
		constexpr auto bPlaceable = 0x98; // uint32_t : 1
		constexpr auto bShowInEditorQuickMenu = 0x98; // uint32_t : 1
	}

	namespace n_AImageReflectionSceneCapture { // : AImageReflection
		constexpr auto DepthRange = 0x294; // float
		constexpr auto ColorRange = 0x298; // float
	}

	namespace n_ALandscapeGizmoActiveActor { // : ALandscapeGizmoActor
		constexpr auto SelectedData = 0x280; // TMap<None, None>
	}

	namespace n_UUIDataItem { // : UUIData
		constexpr auto m_qwInventorySessionId = 0x64; // FQWord
		constexpr auto m_nId = 0x6c; // int32_t
		constexpr auto m_nIcon = 0x70; // int32_t
		constexpr auto m_nCooldown = 0x74; // int32_t
		constexpr auto m_nCooldownScale = 0x78; // int32_t
		constexpr auto m_sName = 0x7c; // FString
		constexpr auto m_sDesc = 0x8c; // FString
		constexpr auto m_sIcon = 0x9c; // FString
		constexpr auto m_sIconLocked = 0xac; // FString
		constexpr auto m_nmIcon = 0xbc; // FName
		constexpr auto m_nmIconLocked = 0xc4; // FName
		constexpr auto m_nCardIcon = 0xcc; // int32_t
		constexpr auto m_nmCardIcon = 0xd0; // FName
		constexpr auto m_nmCardMaterial = 0xd8; // FName
		constexpr auto nIndex = 0xe0; // int32_t
		constexpr auto m_SubItems = 0xe4; // TArray<ObjectProperty>
		constexpr auto m_StoreLTIs = 0xf4; // TArray<ObjectProperty>
		constexpr auto m_nTargetIndex = 0x104; // int32_t
	}

	namespace n_UTgGamePhase_EquipDevice { // : UTgGamePhase
		constexpr auto m_nDeviceId = 0xb8; // int32_t
		constexpr auto m_eEquipSlotID = 0xbc; // TG_EQUIP_POINT
	}

	namespace n_ATgLobbyHUD { // : ATgClientHUD
		constexpr auto m_bCurrentlyQueuedForInitialTutorial = 0x684; // uint32_t : 1
		constexpr auto m_bInMultiQueueNoobRedirect = 0x684; // uint32_t : 1
		constexpr auto m_bJoiningTraining = 0x684; // uint32_t : 1
		constexpr auto m_bFullScreenSplashDataParsed = 0x684; // uint32_t : 1
		constexpr auto m_bAlwaysShowFullscreenSplash = 0x684; // uint32_t : 1
		constexpr auto m_bShouldResetCamera = 0x684; // uint32_t : 1
		constexpr auto m_nQueue = 0x688; // int32_t
		constexpr auto m_nQueueState = 0x68c; // int32_t
		constexpr auto m_nLobbyState = 0x690; // int32_t
		constexpr auto m_nPlayerState = 0x694; // int32_t
		constexpr auto c_CurrentCamera = 0x698; // ObjectProperty
		constexpr auto m_sAdditionalNeededScenes = 0x6a0; // TArray<FString>
		constexpr auto m_dwSavedFullScreenSplashJsonVersion = 0x6b0; // Fdword
		constexpr auto m_FrontLinePedestalMeshActor = 0x6b4; // ObjectProperty
		constexpr auto m_FlankPedestalMeshActor = 0x6bc; // ObjectProperty
		constexpr auto m_SupportPedestalMeshActor = 0x6c4; // ObjectProperty
		constexpr auto m_DamagerPedestalMeshActor = 0x6cc; // ObjectProperty
		constexpr auto m_TeamPedestalMeshActors = 0x6d4; // ObjectProperty [0x5]
		constexpr auto m_nTestDailyDealItemIds = 0x6fc; // int32_t [0x3]
		constexpr auto m_CTAItemIds = 0x708; // TArray<int32_t>
		constexpr auto m_TransientItemsAcquired = 0x718; // TArray<int32_t>
		constexpr auto m_PlayerCTAName = 0x728; // FString
		constexpr auto m_MapDetails = 0x738; // TArray<FMapDetails>
		constexpr auto m_SprayPreviewOffsets = 0x748; // TArray<FCameraSprayPreviewOffset>
		constexpr auto c_ePrevCameraTag = 0x758; // ELobbyCameraTag
	}

	namespace n_UUIComponent_StoreMixerItems { // : UUIComponent_Display
		constexpr auto m_mcItemName = 0x124; // ObjectProperty
		constexpr auto m_mcItemType = 0x12c; // ObjectProperty
		constexpr auto m_mcItemLock = 0x134; // ObjectProperty
		constexpr auto m_mcItemOwned = 0x13c; // ObjectProperty
		constexpr auto m_mcExclusiveLabel = 0x144; // ObjectProperty
		constexpr auto m_mcExclusiveDesc = 0x14c; // ObjectProperty
		constexpr auto m_pItemList = 0x154; // ObjectProperty
		constexpr auto m_pItemStats = 0x15c; // ObjectProperty
		constexpr auto m_pProgressBar = 0x164; // ObjectProperty
		constexpr auto m_pOwnedCurrency = 0x16c; // ObjectProperty
		constexpr auto m_pPurchase = 0x174; // ObjectProperty
		constexpr auto m_grItems = 0x17c; // ObjectProperty
	}

	namespace n_UUIComponent_PlayQuickPlay { // : UUIComponent_Display
		constexpr auto m_mcCursor = 0x124; // ObjectProperty
		constexpr auto m_mcUpDownIndicator = 0x12c; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusNotification = 0x134; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusNotificationTF = 0x13c; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusIcon = 0x144; // ObjectProperty
		constexpr auto m_mcJoinQueueBackground = 0x14c; // ObjectProperty
		constexpr auto m_pPanels = 0x154; // ObjectProperty
		constexpr auto m_pJoinQueueButton = 0x15c; // ObjectProperty
		constexpr auto m_grInput = 0x164; // ObjectProperty
	}

	namespace n_UUIComponent_Button_LoadoutLoadingFrame { // : UUIComponent_Display
		constexpr auto m_mcLoadingFrame = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
	}

	namespace n_UApexClothingAsset { // : UApexAsset
		constexpr auto LodMaterialInfo = 0x80; // TArray<FClothingLodInfo>
		constexpr auto MApexAsset = 0x90; // FPointer
		constexpr auto Materials = 0x98; // TArray<ObjectProperty>
		constexpr auto ApexClothingLibrary = 0xa8; // ObjectProperty
		constexpr auto bUseHardwareCloth = 0xb0; // uint32_t : 1
		constexpr auto bFallbackSkinning = 0xb0; // uint32_t : 1
		constexpr auto bSlowStart = 0xb0; // uint32_t : 1
		constexpr auto bRecomputeNormals = 0xb0; // uint32_t : 1
		constexpr auto bAllowAdaptiveTargetFrequency = 0xb0; // uint32_t : 1
		constexpr auto bResetAfterTeleport = 0xb0; // uint32_t : 1
		constexpr auto bUseLocalSpaceSimulation = 0xb0; // uint32_t : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xb0; // uint32_t : 1
		constexpr auto IgnoreInitialTrigger = 0xb0; // uint32_t : 1
		constexpr auto UVChannelForTangentUpdate = 0xb4; // int32_t
		constexpr auto MaxDistanceBlendTime = 0xb8; // float
		constexpr auto ContinuousRotationThreshold = 0xbc; // float
		constexpr auto ContinuousDistanceThreshold = 0xc0; // float
		constexpr auto LodWeightsMaxDistance = 0xc4; // float
		constexpr auto LodWeightsDistanceWeight = 0xc8; // float
		constexpr auto LodWeightsBias = 0xcc; // float
		constexpr auto LodWeightsBenefitsBias = 0xd0; // float
		constexpr auto LODDecayTime = 0xd4; // float
		constexpr auto SoundOnMove = 0xd8; // ObjectProperty
		constexpr auto SoundOnRest = 0xe0; // ObjectProperty
		constexpr auto SoundWhileMoving = 0xe8; // ObjectProperty
		constexpr auto SpeedThresholdOnMove = 0xf0; // float
		constexpr auto SpeedThresholdOnRest = 0xf4; // float
	}

	namespace n_UNxForceFieldRadialComponent { // : UNxForceFieldComponent
		constexpr auto ForceStrength = 0x2bc; // float
		constexpr auto ForceRadius = 0x2c0; // float
		constexpr auto SelfRotationStrength = 0x2c4; // float
		constexpr auto ForceFalloff = 0x2c8; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2cc; // FPointer
	}

	namespace n_UPlayerInput { // : UInput
		constexpr auto bUsingGamepad = 0x178; // uint32_t : 1
		constexpr auto bInvertMouse = 0x178; // uint32_t : 1
		constexpr auto bInvertController = 0x178; // uint32_t : 1
		constexpr auto bInvertTurn = 0x178; // uint32_t : 1
		constexpr auto bWasForward = 0x178; // uint32_t : 1
		constexpr auto bWasBack = 0x178; // uint32_t : 1
		constexpr auto bWasLeft = 0x178; // uint32_t : 1
		constexpr auto bWasRight = 0x178; // uint32_t : 1
		constexpr auto bEdgeForward = 0x178; // uint32_t : 1
		constexpr auto bEdgeBack = 0x178; // uint32_t : 1
		constexpr auto bEdgeLeft = 0x178; // uint32_t : 1
		constexpr auto bEdgeRight = 0x178; // uint32_t : 1
		constexpr auto bEnableMouseSmoothing = 0x178; // uint32_t : 1
		constexpr auto bEnableFOVScaling = 0x178; // uint32_t : 1
		constexpr auto bLockTurnUntilRelease = 0x178; // uint32_t : 1
		constexpr auto LastAxisKeyName = 0x17c; // FName
		constexpr auto DoubleClickTimer = 0x184; // float
		constexpr auto DoubleClickTime = 0x188; // float
		constexpr auto MouseSensitivity = 0x18c; // float
		constexpr auto m_fLookSensitivity = 0x190; // float
		constexpr auto m_fLookSensitivityY = 0x194; // float
		constexpr auto m_fLookAccelSpeed = 0x198; // float
		constexpr auto m_fDeadZoneLeft = 0x19c; // float
		constexpr auto m_fDeadZoneRight = 0x1a0; // float
		constexpr auto aBaseX = 0x1a4; // float
		constexpr auto aBaseY = 0x1a8; // float
		constexpr auto aBaseZ = 0x1ac; // float
		constexpr auto aMouseX = 0x1b0; // float
		constexpr auto aMouseY = 0x1b4; // float
		constexpr auto aForward = 0x1b8; // float
		constexpr auto aTurn = 0x1bc; // float
		constexpr auto aStrafe = 0x1c0; // float
		constexpr auto aUp = 0x1c4; // float
		constexpr auto aLookUp = 0x1c8; // float
		constexpr auto aRightAnalogTrigger = 0x1cc; // float
		constexpr auto aLeftAnalogTrigger = 0x1d0; // float
		constexpr auto aPS3AccelX = 0x1d4; // float
		constexpr auto aPS3AccelY = 0x1d8; // float
		constexpr auto aPS3AccelZ = 0x1dc; // float
		constexpr auto aPS3Gyro = 0x1e0; // float
		constexpr auto aWiiUPointerX = 0x1e4; // float
		constexpr auto aWiiUPointerY = 0x1e8; // float
		constexpr auto aTilt = 0x1ec; // FVector
		constexpr auto aRotationRate = 0x1f8; // FVector
		constexpr auto aGravity = 0x204; // FVector
		constexpr auto aAcceleration = 0x210; // FVector
		constexpr auto aTouch = 0x21c; // FVector [0x5]
		constexpr auto aBackTouch = 0x258; // FVector [0x5]
		constexpr auto RawJoyUp = 0x294; // float
		constexpr auto RawJoyRight = 0x298; // float
		constexpr auto RawJoyLookRight = 0x29c; // float
		constexpr auto RawJoyLookUp = 0x2a0; // float
		constexpr auto MoveForwardSpeed = 0x2a4; // float
		constexpr auto MoveStrafeSpeed = 0x2a8; // float
		constexpr auto LookRightScale = 0x2ac; // float
		constexpr auto LookUpScale = 0x2b0; // float
		constexpr auto bStrafe = 0x2b4; // char
		constexpr auto bXAxis = 0x2b5; // char
		constexpr auto bYAxis = 0x2b6; // char
		constexpr auto ZeroTime = 0x2b8; // float [0x2]
		constexpr auto SmoothedMouse = 0x2c0; // float [0x2]
		constexpr auto MouseSamples = 0x2c8; // int32_t
		constexpr auto MouseSamplingTotal = 0x2cc; // float
		constexpr auto AutoUnlockTurnTime = 0x2d0; // float
	}

	namespace n_UFracturedSkinnedMeshComponent { // : UFracturedBaseComponent
		constexpr auto ComponentSkinResources = 0x338; // FPointer
		constexpr auto FragmentTransforms = 0x340; // TArray<FMatrix>
		constexpr auto DependentComponents = 0x350; // TArray<ComponentProperty>
		constexpr auto bBecameVisible = 0x360; // uint32_t : 1
		constexpr auto bFragmentTransformsChanged = 0x360; // uint32_t : 1
	}

	namespace n_USeqAct_LevelVisibility { // : USeqAct_Latent
		constexpr auto Level = 0x120; // ObjectProperty
		constexpr auto LevelName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // uint32_t : 1
	}

	namespace n_UTgExplosionLight { // : UPointLightComponent
		constexpr auto bCheckFrameRate = 0x240; // uint32_t : 1
		constexpr auto bInitialized = 0x240; // uint32_t : 1
		constexpr auto bIsEnemy = 0x240; // uint32_t : 1
		constexpr auto bIsLocal = 0x240; // uint32_t : 1
		constexpr auto bIsLooping = 0x240; // uint32_t : 1
		constexpr auto HighDetailFrameTime = 0x244; // float
		constexpr auto Lifetime = 0x248; // float
		constexpr auto TimeShiftIndex = 0x24c; // int32_t
		constexpr auto TimeShift = 0x250; // TArray<FLightValues>
		constexpr auto LoopIndex = 0x260; // int32_t
		constexpr auto __OnLightFinished__Delegate = 0x264; // DelegateProperty
	}

	namespace n_UTgEffectModifyProperty_AltFire { // : UTgEffectModifyProperty
		constexpr auto m_LastRetrievedOverrides = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UTgSubtitledMessages { // : UObject
		constexpr auto CurrentSubtitle = 0x60; // FQueuedSubtitle
		constexpr auto QueuedSubtitles = 0x84; // TArray<FQueuedSubtitle>
		constexpr auto OwnerPC = 0x94; // ObjectProperty
		constexpr auto PlayingSubtitleAC = 0x9c; // ComponentProperty
		constexpr auto bFinishedSubtitle = 0xa4; // uint32_t : 1
		constexpr auto SubtitleFailsafeTime = 0xa8; // float
	}

	namespace n_ATgGame_CTF { // : ATgGame_Mission
		constexpr auto m_FlagBases = 0x744; // ObjectProperty [0x2]
		constexpr auto m_fRoundTime = 0x754; // float
		constexpr auto m_fRoundSetupTime = 0x758; // float
		constexpr auto m_fEndOfRoundTime = 0x75c; // float
		constexpr auto m_nCurrentRound = 0x760; // int32_t
		constexpr auto m_nNumRounds = 0x764; // int32_t
		constexpr auto m_nSpawnWaveTime = 0x768; // int32_t
	}

	namespace n_UNavMeshPath_WithinDistanceEnvelope { // : UNavMeshPathConstraint
		constexpr auto MaxDistance = 0x78; // float
		constexpr auto MinDistance = 0x7c; // float
		constexpr auto bSoft = 0x80; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x80; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_UDemoRecDriver { // : UNetDriver
		constexpr auto DemoSpectatorClass = 0x234; // FString
		constexpr auto MaxRewindPoints = 0x2ec; // int32_t
		constexpr auto RewindPointInterval = 0x2f4; // float
		constexpr auto NumRecentRewindPoints = 0x2f8; // int32_t
		constexpr auto ProtectedRewindPointInterval = 0x304; // int32_t
		constexpr auto MaxEventPoints = 0x318; // int32_t
		constexpr auto EventPointInterval = 0x320; // float
		constexpr auto MinEventBuffer = 0x324; // float
	}

	namespace n_UPhysicsAssetInstance { // : UObject
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto RootBodyIndex = 0x68; // int32_t
		constexpr auto Bodies = 0x6c; // TArray<ObjectProperty>
		constexpr auto Constraints = 0x7c; // TArray<ObjectProperty>
		constexpr auto CollisionDisableTable = 0x8c; // FMap_Mirror
		constexpr auto LinearSpringScale = 0xd4; // float
		constexpr auto LinearDampingScale = 0xd8; // float
		constexpr auto LinearForceLimitScale = 0xdc; // float
		constexpr auto AngularSpringScale = 0xe0; // float
		constexpr auto AngularDampingScale = 0xe4; // float
		constexpr auto AngularForceLimitScale = 0xe8; // float
		constexpr auto bInitBodies = 0xec; // uint32_t : 1
		constexpr auto m_bPreviewBreakingConstraintsOnDeath = 0xec; // uint32_t : 1
	}

	namespace n_ATgDevice_Zodiac { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_EffectRemainingTime = 0xa10; // TArray<float>
	}

	namespace n_UTgSetting { // : UTgObject
		constexpr auto m_fDefault = 0x60; // float
		constexpr auto m_fConfigDefault = 0x64; // float
		constexpr auto m_fOriginal = 0x68; // float
		constexpr auto m_fMax = 0x6c; // float
		constexpr auto m_fMin = 0x70; // float
		constexpr auto m_fTemp = 0x74; // float
		constexpr auto m_fValue = 0x78; // float
		constexpr auto m_fPrecision = 0x7c; // float
		constexpr auto m_eType = 0x80; // SETTING_TYPE
		constexpr auto m_Options = 0x84; // TArray<FOptionData>
	}

	namespace n_UUIData_Vendor { // : UUIData
		constexpr auto m_dwVendorId = 0x64; // Fdword
		constexpr auto m_LootTableItems = 0x68; // TMap<None, None>
		constexpr auto m_AsArray = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_StoreHiddenDLC { // : UUIComponent_Display
		constexpr auto m_pJsonPanelHiddenDLC = 0x124; // ObjectProperty
		constexpr auto m_pDailyDealCarousel = 0x12c; // ObjectProperty
		constexpr auto m_pBattlePassBanner = 0x134; // ObjectProperty
		constexpr auto m_pFeatureDataHiddenDLC = 0x13c; // TArray<FJsonFeatureData>
		constexpr auto m_pFeatureDataHiddenDLCCarousel = 0x14c; // TArray<FJsonFeatureData>
		constexpr auto m_pFeatureMapHiddenDLCCarousel = 0x15c; // TMap<None, None>
		constexpr auto m_nHiddenDLCIndex = 0x1a4; // int32_t
		constexpr auto m_grHiddenDLC = 0x1a8; // ObjectProperty
		constexpr auto m_nTickCallbackHandle = 0x1b0; // int32_t
		constexpr auto m_nRewardClaimedCallbackHandle = 0x1b4; // int32_t
	}

	namespace n_UParticleModuleSpawnBase { // : UParticleModule
		constexpr auto bProcessSpawnRate = 0x68; // uint32_t : 1
		constexpr auto bProcessBurstList = 0x68; // uint32_t : 1
	}

	namespace n_UUIComponent_HalloweenEventOverview { // : UUIComponent_Display
		constexpr auto m_grOverview = 0x124; // ObjectProperty
	}

	namespace n_UActorFactoryActor { // : UActorFactory
		constexpr auto ActorClass = 0x9c; // AActor*
	}

	namespace n_USeqAct_ModifyCover { // : USequenceAction
		constexpr auto Slots = 0x108; // TArray<int32_t>
		constexpr auto ManualCoverType = 0x118; // ECoverType
		constexpr auto bManualAdjustPlayersOnly = 0x11c; // uint32_t : 1
	}

	namespace n_UNxForceFieldCylindricalComponent { // : UNxForceFieldComponent
		constexpr auto RadialStrength = 0x2bc; // float
		constexpr auto RotationalStrength = 0x2c0; // float
		constexpr auto LiftStrength = 0x2c4; // float
		constexpr auto ForceRadius = 0x2c8; // float
		constexpr auto ForceTopRadius = 0x2cc; // float
		constexpr auto LiftFalloffHeight = 0x2d0; // float
		constexpr auto EscapeVelocity = 0x2d4; // float
		constexpr auto ForceHeight = 0x2d8; // float
		constexpr auto HeightOffset = 0x2dc; // float
		constexpr auto UseSpecialRadialForce = 0x2e0; // uint32_t : 1
		constexpr auto Kernel = 0x2e4; // FPointer
	}

	namespace n_UUIComponent_ChestDisplay { // : UUIComponent_Display
		constexpr auto m_mcGlowA = 0x124; // ObjectProperty
		constexpr auto m_mcGlowB = 0x12c; // ObjectProperty
	}

	namespace n_UNxForceFieldComponent { // : UPrimitiveComponent
		constexpr auto Shape = 0x24c; // ObjectProperty
		constexpr auto DrawComponent = 0x254; // ComponentProperty
		constexpr auto ExcludeChannel = 0x25c; // int32_t
		constexpr auto bForceActive = 0x260; // uint32_t : 1
		constexpr auto bDestroyWhenInactive = 0x260; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x264; // FRBCollisionChannelContainer
		constexpr auto Duration = 0x268; // float
		constexpr auto ForceField = 0x26c; // FPointer
		constexpr auto ConvexMeshes = 0x274; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x284; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x294; // TArray<FPointer>
		constexpr auto SceneIndex = 0x2a4; // int32_t
		constexpr auto ElapsedTime = 0x2a8; // float
		constexpr auto RenderComponent = 0x2ac; // ComponentProperty
		constexpr auto RBPhysScene = 0x2b4; // FPointer
	}

	namespace n_USeqAct_CameraShake { // : USequenceAction
		constexpr auto Shake = 0x108; // ObjectProperty
		constexpr auto ShakeScale = 0x110; // float
		constexpr auto bDoControllerVibration = 0x114; // uint32_t : 1
		constexpr auto bRadialShake = 0x114; // uint32_t : 1
		constexpr auto bOrientTowardRadialEpicenter = 0x114; // uint32_t : 1
		constexpr auto RadialShake_InnerRadius = 0x118; // float
		constexpr auto RadialShake_OuterRadius = 0x11c; // float
		constexpr auto RadialShake_Falloff = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto LocationActor = 0x128; // ObjectProperty
	}

	namespace n_UGameStatsAggregator { // : UGameplayEventsHandler
		constexpr auto GameState = 0x88; // ObjectProperty
		constexpr auto AggregatesList = 0x90; // TArray<FAggregateEventMapping>
		constexpr auto AggregateEventsMapping = 0xa0; // FMap_Mirror
		constexpr auto AggregateEvents = 0xe8; // TArray<FGameplayEventMetaData>
		constexpr auto AggregatesFound = 0xf8; // TArray<int32_t>
		constexpr auto AllGameEvents = 0x108; // FGameEvents
		constexpr auto AllTeamEvents = 0x150; // TArray<FTeamEvents>
		constexpr auto AllPlayerEvents = 0x160; // TArray<FPlayerEvents>
		constexpr auto AllWeaponEvents = 0x170; // FWeaponEvents
		constexpr auto AllProjectileEvents = 0x1c8; // FProjectileEvents
		constexpr auto AllPawnEvents = 0x220; // FPawnEvents
		constexpr auto AllDamageEvents = 0x278; // FDamageEvents
	}

	namespace n_USoundNodeWaveStreaming { // : USoundNodeWave
		constexpr auto QueuedAudio = 0x328; // TArray<char>
		constexpr auto InactiveDuration = 0x338; // float
	}

	namespace n_ADynamicTriggerVolume { // : ATriggerVolume
		constexpr auto bEnabled = 0x2bc; // uint32_t : 1
	}

	namespace n_UWaveFormBase { // : UObject
		constexpr auto TheWaveForm = 0x60; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassRewardsInfoPanel { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcTimeLeft = 0x134; // ObjectProperty
		constexpr auto m_mcPassTypeTF = 0x13c; // ObjectProperty
		constexpr auto m_pProgress = 0x144; // ObjectProperty
		constexpr auto m_mcProgressLevel = 0x14c; // ObjectProperty
		constexpr auto m_mcProgressLevelLabel = 0x154; // ObjectProperty
		constexpr auto m_mcProgressXP = 0x15c; // ObjectProperty
		constexpr auto m_mcProgressLevelNext = 0x164; // ObjectProperty
	}

	namespace n_UMCPBase { // : UMcpServiceBase
		constexpr auto VfTable_FTickableObject = 0x78; // FPointer
	}

	namespace n_UTgAnimNotify_CameraCut { // : UAnimNotify
		constexpr auto m_fTweenSpeed = 0x68; // float
		constexpr auto m_vTweenDir = 0x6c; // FVector
		constexpr auto m_vLocationOffset = 0x78; // FVector
		constexpr auto m_rRotationOffset = 0x84; // FRotator
		constexpr auto m_rRotationTarget = 0x90; // FRotator
		constexpr auto m_fRotationDuration = 0x9c; // float
		constexpr auto m_fRotationDelay = 0xa0; // float
	}

	namespace n_USeqEvent_MobileInput { // : USeqEvent_MobileZoneBase
		constexpr auto XAxisValue = 0x138; // float
		constexpr auto YAxisValue = 0x13c; // float
		constexpr auto CenterX = 0x140; // float
		constexpr auto CenterY = 0x144; // float
		constexpr auto CurrentX = 0x148; // float
		constexpr auto CurrentY = 0x14c; // float
	}

	namespace n_ATgRespawnBeaconExit { // : ATgRespawnBeaconBase
		constexpr auto m_bChangesYaw = 0x32c; // uint32_t : 1
		constexpr auto c_bHiddenToLocalPlayer = 0x32c; // uint32_t : 1
		constexpr auto m_fPercHealthPerSec = 0x330; // float
		constexpr auto m_fHealthRegenLockoutTime = 0x334; // float
		constexpr auto r_nRespawnTime = 0x338; // int32_t
		constexpr auto m_fTimeUntilHealTick = 0x33c; // float
		constexpr auto m_rInitialRot = 0x340; // FRotator
		constexpr auto m_vInitialPos = 0x34c; // FVector
		constexpr auto r_CarrierRepInfo = 0x358; // ObjectProperty
		constexpr auto m_SpawnPointOverride = 0x360; // ObjectProperty
		constexpr auto r_CurrentVisibilityVolumes = 0x368; // ObjectProperty [0x2]
		constexpr auto c_LocalActiveState = 0x378; // ERespawnBeaconActiveState
		constexpr auto r_ActiveState = 0x379; // ERespawnBeaconActiveState
		constexpr auto r_nPlayTakeHit = 0x37a; // char
		constexpr auto m_Entrances = 0x37c; // TArray<ObjectProperty>
		constexpr auto m_CarriedDel = 0x38c; // TArray<DelegateProperty>
		constexpr auto m_DestroyedDel = 0x39c; // TArray<DelegateProperty>
		constexpr auto m_DeployingDel = 0x3ac; // TArray<DelegateProperty>
		constexpr auto m_ActiveDel = 0x3bc; // TArray<DelegateProperty>
		constexpr auto r_nDeathLocation = 0x3cc; // FVector
		constexpr auto m_LastDamager = 0x3d8; // ObjectProperty
		constexpr auto __BeaconStateChanged__Delegate = 0x3e0; // DelegateProperty
	}

	namespace n_UTgAnimNodeBlendByAFK { // : UTgAnimNodeBlendList
		constexpr auto PawnOwner = 0x168; // ObjectProperty
	}

	namespace n_UUIScene_UILobbyChat { // : UUIScene
		constexpr auto m_pOpenGlobalAction = 0x1cc; // ObjectProperty
		constexpr auto m_pCloseTabAction = 0x1d4; // ObjectProperty
	}

	namespace n_USoundNodeDistanceCrossFade { // : USoundNode
		constexpr auto CrossFadeInput = 0x74; // TArray<FDistanceDatum>
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveEverySecondKey { // : UAnimationCompressionAlgorithm
		constexpr auto MinKeys = 0x78; // int32_t
		constexpr auto bStartAtSecondKey = 0x7c; // uint32_t : 1
	}

	namespace n_UUIComponent_HudSkillCardCooldown { // : UUIComponent_Display
		constexpr auto m_mcTexture = 0x124; // ObjectProperty
		constexpr auto m_mcTimer = 0x12c; // ObjectProperty
		constexpr auto m_mcMask = 0x134; // ObjectProperty
		constexpr auto m_fCooldown = 0x13c; // float
	}

	namespace n_UUIComponent_CalendarEventEvents { // : UUIComponent_Display
		constexpr auto m_mcResetsAt = 0x124; // ObjectProperty
		constexpr auto m_pDays = 0x12c; // ObjectProperty
		constexpr auto m_pCurrentDay = 0x134; // ObjectProperty
		constexpr auto m_pNextDay = 0x13c; // ObjectProperty
		constexpr auto m_pTooltip = 0x144; // ObjectProperty
		constexpr auto m_grEvents = 0x14c; // ObjectProperty
	}

	namespace n_UUIComponent_MatchLobbyTeamChampion { // : UUIComponent_Display
		constexpr auto m_mcFrame = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_nCharSelectedCBHandle = 0x134; // int32_t
		constexpr auto m_nCharLockedCBHandle = 0x138; // int32_t
	}

	namespace n_UUISafeFrame { // : UTgGfxScene
		constexpr auto m_mcAdjust = 0x1ec; // ObjectProperty
		constexpr auto m_mcAccept = 0x1f4; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_MendingSpiritsActive { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_PawnTargets = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_bEffectsAreActive = 0xdc; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_InCombat { // : UTgInvListener
		constexpr auto m_bEffectIsApplied = 0xc4; // uint32_t : 1
	}

	namespace n_ATgWeaponMeshActor_LexInhand { // : ATgWeaponMeshActor
		constexpr auto m_CachedLex = 0x450; // ObjectProperty
		constexpr auto c_Beams = 0x458; // ObjectProperty [0x5]
		constexpr auto c_ExecutableBeams = 0x480; // ObjectProperty [0x5]
		constexpr auto m_LexCharacterNodes1P = 0x4a8; // TArray<ObjectProperty>
		constexpr auto m_LexCharacterNodes3P = 0x4b8; // TArray<ObjectProperty>
		constexpr auto c_LeftInHandSocket = 0x4c8; // FName
		constexpr auto c_RightInHandSocket = 0x4d0; // FName
		constexpr auto c_bJustRenderedBeamsForUlt = 0x4d8; // uint32_t : 1
		constexpr auto c_eBeamState = 0x4dc; // EBeamState
	}

	namespace n_UTgDeviceForm_TiberiusRMB { // : UTgDeviceForm
		constexpr auto m_CachedTiberius = 0x28c; // ObjectProperty
		constexpr auto m_bBladeRetrieve = 0x294; // uint32_t : 1
		constexpr auto m_bBladeInspect = 0x294; // uint32_t : 1
		constexpr auto m_bBladeInRecall = 0x294; // uint32_t : 1
		constexpr auto m_bBladeAway = 0x294; // uint32_t : 1
		constexpr auto m_fPostRetrievalTime = 0x298; // float
		constexpr auto m_SimpleStanceBladeAway1P = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceBladeAway3P = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceBlendList1P = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceBlendList3P = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UUIPurchaseGems { // : UTgGfxScene
		constexpr auto m_GemPack = 0x1ec; // ObjectProperty [0x7]
		constexpr auto m_SaleGemPack = 0x224; // ObjectProperty [0x7]
		constexpr auto m_DLCPackAd = 0x25c; // ObjectProperty
		constexpr auto m_CurrentBalance = 0x264; // ObjectProperty
		constexpr auto m_CancelButton = 0x26c; // ObjectProperty
		constexpr auto m_mcOverlay = 0x274; // ObjectProperty
		constexpr auto m_mcTaxTF = 0x27c; // ObjectProperty
		constexpr auto m_mcBlocker = 0x284; // ObjectProperty
		constexpr auto m_DLCPackPrompt = 0x28c; // ObjectProperty
		constexpr auto m_ConsumablePack = 0x294; // FUIConsumablePack [0x7]
		constexpr auto m_fCurrBalanceOrigX = 0x41c; // float
		constexpr auto m_pGroup = 0x420; // ObjectProperty
	}

	namespace n_UUIComponent_AsiaticEventQuests { // : UUIComponent_Display
		constexpr auto m_pStrixEmote = 0x124; // ObjectProperty
		constexpr auto m_pMaeveEmote = 0x12c; // ObjectProperty
		constexpr auto m_pAndroxusEmote = 0x134; // ObjectProperty
		constexpr auto m_pPurchaseEmote = 0x13c; // ObjectProperty
		constexpr auto m_mcKeyCount = 0x144; // ObjectProperty
		constexpr auto m_pQuests = 0x14c; // ObjectProperty
		constexpr auto m_pEmotes = 0x154; // ObjectProperty
		constexpr auto m_pPurchaseConfirmation = 0x15c; // ObjectProperty
	}

	namespace n_UNavMeshGoal_At { // : UNavMeshPathGoalEvaluator
		constexpr auto Goal = 0x7c; // FVector
		constexpr auto GoalDist = 0x88; // float
		constexpr auto bKeepPartial = 0x8c; // uint32_t : 1
		constexpr auto bWeightPartialByDist = 0x8c; // uint32_t : 1
		constexpr auto bGoalInSamePolyAsAnchor = 0x8c; // uint32_t : 1
		constexpr auto PartialDistSq = 0x90; // float
		constexpr auto GoalPoly = 0x94; // FPointer
		constexpr auto PartialGoal = 0x9c; // FPointer
	}

	namespace n_USeqAct_PlayMusicTrack { // : USequenceAction
		constexpr auto MusicTrack = 0x108; // FMusicTrackStruct
	}

	namespace n_ATgDevice_ShoulderBash { // : ATgDevice_Charge
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa7c; // FPointer
		constexpr auto m_bHasHitTarget = 0xa84; // uint32_t : 1
		constexpr auto m_vLastChargeStartLocation = 0xa88; // FVector
	}

	namespace n_ATgDevice_DredgeUlt { // : ATgDevice
		constexpr auto m_fWaitForClientDeployAimTime = 0xa08; // float
		constexpr auto s_bHasCurrentUltAim = 0xa0c; // uint32_t : 1
		constexpr auto s_bForcingDeploy = 0xa0c; // uint32_t : 1
	}

	namespace n_UForceFeedbackManager { // : UObject
		constexpr auto bAllowsForceFeedback = 0x60; // uint32_t : 1
		constexpr auto bIsPaused = 0x60; // uint32_t : 1
		constexpr auto ScaleAllWaveformsBy = 0x64; // float
		constexpr auto PlayingWaveforms = 0x68; // TArray<FForceFeedbackPlayingInfo>
	}

	namespace n_UTgDeviceForm_ShoulderBash { // : UTgDeviceForm
		constexpr auto moveAmount = 0x28c; // int32_t
	}

	namespace n_ATgDevice_AbsorptionField { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa10; // DelegateProperty
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromShield { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_Somersault { // : ATgDevice
		constexpr auto m_DodgeRollDevice = 0xa08; // ObjectProperty
	}

	namespace n_UMcpIdMappingBase { // : UMcpServiceBase
		constexpr auto McpIdMappingClassName = 0x78; // FString
		constexpr auto __OnAddMappingComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnQueryMappingsComplete__Delegate = 0x98; // DelegateProperty
	}

	namespace n_UUIHudMinimap { // : UTgGfxScene
		constexpr auto m_nDepth = 0x1ec; // int32_t
		constexpr auto m_bInit = 0x1f0; // uint32_t : 1
		constexpr auto m_bMinimapShouldShow = 0x1f0; // uint32_t : 1
		constexpr auto m_fSize = 0x1f4; // float
		constexpr auto m_fRadius = 0x1f8; // float
		constexpr auto m_sNamedAreaName = 0x1fc; // FString
		constexpr auto m_vBoundsCenter = 0x20c; // FVector
		constexpr auto m_vBoundsExtents = 0x218; // FVector
		constexpr auto m_NamedAreas = 0x224; // TArray<FUIPING_DATA>
		constexpr auto m_mcMap = 0x234; // ObjectProperty
		constexpr auto m_mcMapFrame = 0x23c; // ObjectProperty
		constexpr auto m_mcMapNamedAreas = 0x244; // ObjectProperty
		constexpr auto m_mcMapImage = 0x24c; // ObjectProperty [0x2]
		constexpr auto m_mcLocalPlayer = 0x25c; // ObjectProperty
		constexpr auto m_mcTeam = 0x264; // ObjectProperty [0x4]
		constexpr auto m_mcWaypoint = 0x284; // ObjectProperty [0x4]
	}

	namespace n_UTgSoundGroup { // : UObject
		constexpr auto c_SoundCues = 0x60; // TArray<ObjectProperty>
		constexpr auto c_FootstepSounds = 0x70; // TArray<FFootstepSoundInfo>
	}

	namespace n_ATgDevice_Blink { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_ATgDevice_PrincessFSupport { // : ATgDevice
		constexpr auto m_CachedLian = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_WhatIsCombatTargetTargeting { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UTgGamePhase_PlaySound { // : UTgGamePhase
		constexpr auto m_eSoundID = 0xb8; // ENotifySound
	}

	namespace n_UActorFactoryRigidBody { // : UActorFactoryDynamicSM
		constexpr auto bStartAwake = 0xb8; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xb8; // uint32_t : 1
		constexpr auto bLocalSpaceInitialVelocity = 0xb8; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0xb8; // uint32_t : 1
		constexpr auto InitialVelocity = 0xbc; // FVector
		constexpr auto AdditionalVelocity = 0xc8; // ComponentProperty
		constexpr auto InitialAngularVelocity = 0xd0; // ComponentProperty
		constexpr auto RBChannel = 0xd8; // ERBCollisionChannel
		constexpr auto StayUprightTorqueFactor = 0xdc; // float
		constexpr auto StayUprightMaxTorque = 0xe0; // float
	}

	namespace n_UTgAnimNodeEmoteCustomAnim { // : UAnimNodePlayCustomAnim
		constexpr auto c_bIsInHandDeviceMeshInvisible = 0x12c; // uint32_t : 1
		constexpr auto c_bHasReachedFullWeight = 0x12c; // uint32_t : 1
	}

	namespace n_UUIComponent_Dropdown { // : UUIComponent_Display
		constexpr auto m_pGamepadKey = 0x124; // ObjectProperty
		constexpr auto m_pList = 0x12c; // ObjectProperty
		constexpr auto m_pBlocker = 0x134; // ObjectProperty
		constexpr auto m_Button = 0x13c; // FUICListEntry
		constexpr auto m_pToggleListVisible = 0x184; // ObjectProperty
		constexpr auto m_pBack = 0x18c; // ObjectProperty
		constexpr auto m_pAny = 0x194; // ObjectProperty
		constexpr auto m_nPostClickCBHandle = 0x19c; // int32_t
		constexpr auto m_bDropdownVisible = 0x1a0; // uint32_t : 1
	}

	namespace n_UDrawCapsuleComponent { // : UPrimitiveComponent
		constexpr auto CapsuleColor = 0x24c; // FColor
		constexpr auto CapsuleMaterial = 0x250; // ObjectProperty
		constexpr auto CapsuleHeight = 0x258; // float
		constexpr auto CapsuleRadius = 0x25c; // float
		constexpr auto bDrawWireCapsule = 0x260; // uint32_t : 1
		constexpr auto bDrawLitCapsule = 0x260; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x260; // uint32_t : 1
	}

	namespace n_AGameCrowdReplicationActor { // : AActor
		constexpr auto Spawner = 0x280; // ObjectProperty
		constexpr auto bSpawningActive = 0x288; // uint32_t : 1
		constexpr auto DestroyAllCount = 0x28c; // int32_t
	}

	namespace n_USeqEvent_MobileObjectPicker { // : USeqEvent_MobileRawInput
		constexpr auto TraceDistance = 0x13c; // float
		constexpr auto bCheckonTouch = 0x140; // uint32_t : 1
		constexpr auto FinalTouchLocation = 0x144; // FVector
		constexpr auto FinalTouchNormal = 0x150; // FVector
		constexpr auto FinalTouchObject = 0x15c; // ObjectProperty
		constexpr auto Targets = 0x164; // TArray<ObjectProperty>
	}

	namespace n_UComponent { // : UObject
		constexpr auto TemplateOwnerClass = 0x60; // UObject*
		constexpr auto TemplateName = 0x68; // FName
	}

	namespace n_ATgSpectatorHUD { // : ATgGameHUD
		constexpr auto m_eClientVisibilityMode = 0x6e8; // char
		constexpr auto m_LastUIViewTarget = 0x6ec; // ObjectProperty
		constexpr auto m_StatsSeeded = 0x6f4; // uint32_t : 1
		constexpr auto m_bIsBottomPanelHidden = 0x6f4; // uint32_t : 1
	}

	namespace n_UUIComponent_ChampionSkins { // : UUIComponent_Display
		constexpr auto m_eState = 0x124; // UIChampionEquipTab
		constexpr auto m_eButtonAction = 0x125; // UIChampionSkinsButtonAction
		constexpr auto m_pActiveItem = 0x128; // ObjectProperty
		constexpr auto m_pSelectedSkin = 0x130; // ObjectProperty
		constexpr auto m_pSelectedWeapon = 0x138; // ObjectProperty
		constexpr auto m_pSelectedEmote = 0x140; // ObjectProperty
		constexpr auto m_pSelectedMVPPose = 0x148; // ObjectProperty
		constexpr auto m_pEquippedSkin = 0x150; // ObjectProperty
		constexpr auto m_pEquippedWeapon = 0x158; // ObjectProperty
		constexpr auto m_pEquippedEmote = 0x160; // ObjectProperty
		constexpr auto m_pEquippedMVPPose = 0x168; // ObjectProperty
		constexpr auto m_mcUnlockPanel = 0x170; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchase = 0x178; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0 = 0x180; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0Currency = 0x188; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1 = 0x190; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1Currency = 0x198; // ObjectProperty
		constexpr auto m_mcUnlockPanelRent = 0x1a0; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0 = 0x1a8; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0Currency = 0x1b0; // ObjectProperty
		constexpr auto m_mcUnlockPanelFreeRotation = 0x1b8; // ObjectProperty
		constexpr auto m_mcUnlockPanelInputPrompt = 0x1c0; // ObjectProperty
		constexpr auto m_Items = 0x1c8; // ObjectProperty
		constexpr auto m_pItemStats = 0x1d0; // ObjectProperty
		constexpr auto m_pVoicePackPreviewButton = 0x1d8; // ObjectProperty
		constexpr auto m_pGoToBattlePassButton = 0x1e0; // ObjectProperty
		constexpr auto m_pGoToChestButton = 0x1e8; // ObjectProperty
		constexpr auto m_pGoToEventButton = 0x1f0; // ObjectProperty
		constexpr auto m_pExclusiveBanner = 0x1f8; // ObjectProperty
		constexpr auto m_pEquipButton = 0x200; // ObjectProperty
		constexpr auto m_pPurchase = 0x208; // ObjectProperty
		constexpr auto m_pUnlockChampionButton = 0x210; // ObjectProperty
		constexpr auto m_pColorPicker = 0x218; // ObjectProperty
		constexpr auto m_grSkins = 0x220; // ObjectProperty
		constexpr auto m_pPreviewSkinVoice = 0x228; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x230; // ObjectProperty
	}

	namespace n_USeqAct_RandomSwitch { // : USeqAct_Switch
		constexpr auto AutoDisabledIndices = 0x124; // TArray<int32_t>
	}

	namespace n_UUIComponent_Targeter_SevenUlt { // : UUIComponent_Targeter_BracketTargeter
		constexpr auto m_bHasNullTarget = 0x19c; // uint32_t : 1
	}

	namespace n_UUIDataStore_OnlinePlayerData { // : UUIDataStore_Remote
		constexpr auto FriendsProvider = 0x98; // ObjectProperty
		constexpr auto PlayerControllerId = 0xa0; // int32_t
		constexpr auto PlayerNick = 0xa4; // FString
		constexpr auto ProfileSettingsClassName = 0xb4; // FString
		constexpr auto ProfileSettingsClass = 0xc4; // UOnlineProfileSettings*
		constexpr auto ProfileProvider = 0xcc; // ObjectProperty
		constexpr auto ProfileProviderClassName = 0xd4; // FString
		constexpr auto ProfileProviderClass = 0xe4; // UUIDataProvider_OnlineProfileSettings*
		constexpr auto PlayerStorageClassName = 0xec; // FString
		constexpr auto PlayerStorageClass = 0xfc; // UOnlinePlayerStorage*
		constexpr auto StorageProvider = 0x104; // ObjectProperty
		constexpr auto StorageProviderClassName = 0x10c; // FString
		constexpr auto StorageProviderClass = 0x11c; // UUIDataProvider_OnlinePlayerStorage*
		constexpr auto FriendMessagesProvider = 0x124; // ObjectProperty
		constexpr auto AchievementsProvider = 0x12c; // ObjectProperty
		constexpr auto FriendsProviderClassName = 0x134; // FString
		constexpr auto FriendsProviderClass = 0x144; // UUIDataProvider_OnlineFriends*
		constexpr auto FriendMessagesProviderClassName = 0x14c; // FString
		constexpr auto FriendMessagesProviderClass = 0x15c; // UUIDataProvider_OnlineFriendMessages*
		constexpr auto AchievementsProviderClassName = 0x164; // FString
		constexpr auto AchievementsProviderClass = 0x174; // UUIDataProvider_PlayerAchievements*
		constexpr auto PartyChatProviderClassName = 0x17c; // FString
		constexpr auto PartyChatProviderClass = 0x18c; // UUIDataProvider_OnlinePartyChatList*
		constexpr auto PartyChatProvider = 0x194; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Fernando { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_nNumContacts = 0xcc; // int32_t
	}

	namespace n_ATgActionPoint { // : ATgNavigationPoint
		constexpr auto ActionType = 0x37c; // eActionPointType
		constexpr auto nObjectiveNum = 0x37d; // char
		constexpr auto nTaskForce = 0x37e; // char
		constexpr auto bUseRotation = 0x380; // uint32_t : 1
	}

	namespace n_ATgDevice_SpaceTime { // : ATgDevice
		constexpr auto m_BeamCollisionProxy = 0xa08; // ObjectProperty
		constexpr auto m_ActorsInRange = 0xa10; // TArray<ObjectProperty>
	}

	namespace n_ATgPawn_MalDamba { // : ATgPawn_Character
		constexpr auto m_CachedSnakeTossDeviceFire = 0x3164; // ObjectProperty
	}

	namespace n_UTgAchievement_SurgeonGeneral { // : UTgAchievement
		constexpr auto m_nHealing = 0x94; // int32_t
	}

	namespace n_ATgDevice_SniperMode { // : ATgDevice_ToggleModeWithLockout
		constexpr auto m_CachedKinessaOwner = 0xa1c; // ObjectProperty
		constexpr auto m_CachedKinessaInhandDev = 0xa24; // ObjectProperty
		constexpr auto m_bIsZoomed = 0xa2c; // uint32_t : 1
	}

	namespace n_UIniLocPatcher { // : UObject
		constexpr auto Files = 0x60; // TArray<FIniLocFileEntry>
		constexpr auto bRequestEmsFileList = 0x70; // uint32_t : 1
		constexpr auto MaxCachedFileAge = 0x74; // int32_t
		constexpr auto TitleFileInterface = 0x78; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x88; // TScriptInterface<Class>
		constexpr auto ReadTitleFileCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnAllTitleFilesCompleted__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UTgObjectReferencer { // : UObjectReferencer
		constexpr auto m_Manifest = 0x74; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_BowlingBall { // : UTgInventoryObject_Listen_ActiveDuringAbility
		constexpr auto m_fRocketBootsEndTime = 0xd4; // float
		constexpr auto m_fPostRocketBootsTime = 0xd8; // float
	}

	namespace n_ATgPawn_Shadow { // : ATgPawn_Character
		constexpr auto m_pTeleportTarget = 0x3164; // ObjectProperty
		constexpr auto fInputForward = 0x316c; // float
		constexpr auto fInputStrafe = 0x3170; // float
		constexpr auto m_StickyBombProps = 0x3174; // ObjectProperty [0x3]
		constexpr auto m_nNextStickyBombIndex = 0x318c; // int32_t
		constexpr auto m_BeamFXId = 0x3190; // int32_t
	}

	namespace n_ATgProj_Tracer { // : ATgProjectile
		constexpr auto PSC = 0x450; // ComponentProperty
	}

	namespace n_UUIComponent_ImaniUltTimer { // : UUIComponent_ProgressBarRadial
		constexpr auto m_bUltActive = 0x148; // uint32_t : 1
		constexpr auto m_fUltBarMax = 0x14c; // float
		constexpr auto m_pDragonViewTarget = 0x150; // ObjectProperty
	}

	namespace n_UTgGameDC_DeviceList { // : UTgDataChunk
		constexpr auto m_DeviceList = 0x158; // ObjectProperty [0x19]
	}

	namespace n_USeqVar_Named { // : USequenceVariable
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto FindVarName = 0xa8; // FName
		constexpr auto bStatusIsOk = 0xb0; // uint32_t : 1
	}

	namespace n_UTgSeqAct_ParentAnimComponent { // : USequenceAction
		constexpr auto bDetach = 0x108; // uint32_t : 1
	}

	namespace n_UUIScene_UIHudSkills { // : UUIScene
		constexpr auto m_pSkillIcon = 0x1cc; // ObjectProperty [0x5]
		constexpr auto m_pAltSkillIcon = 0x1f4; // ObjectProperty [0x5]
		constexpr auto m_pAltAltSkillIcon = 0x21c; // ObjectProperty [0x5]
		constexpr auto m_pCardCooldowns = 0x244; // ObjectProperty [0x6]
		constexpr auto m_fSkillRotation = 0x274; // float
		constexpr auto m_mcGroupA = 0x278; // ObjectProperty
		constexpr auto m_mcGroupB = 0x280; // ObjectProperty
		constexpr auto m_mcCardCooldowns = 0x288; // ObjectProperty
		constexpr auto m_LexVengeance = 0x290; // ObjectProperty
		constexpr auto m_CorvusMark = 0x298; // ObjectProperty
		constexpr auto m_CorvusMarkTeam = 0x2a0; // ObjectProperty
		constexpr auto m_OracleSoulCharges = 0x2a8; // ObjectProperty
		constexpr auto m_CorrupterCorruptionUI = 0x2b0; // ObjectProperty
		constexpr auto m_RaumShards = 0x2b8; // ObjectProperty
		constexpr auto m_nSpectatorMode = 0x2c0; // int32_t
		constexpr auto m_bUltimateReady = 0x2c4; // uint32_t : 1
		constexpr auto m_bThirdPersonMode = 0x2c4; // uint32_t : 1
	}

	namespace n_UUIComponent_BurnCardItem { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcDesc = 0x134; // ObjectProperty
		constexpr auto m_mcDeselected = 0x13c; // ObjectProperty
		constexpr auto m_nCardTier = 0x144; // int32_t
	}

	namespace n_ATgProj_YagoNeedler { // : ATgProj_Simulated
		constexpr auto m_CachedTargetImpact = 0x52c; // FImpactInfo
	}

	namespace n_UTgAIBehaviorCondition_DeviceReadyToUse { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_USeqAct_ChangeCollision { // : USequenceAction
		constexpr auto bCollideActors = 0x108; // uint32_t : 1
		constexpr auto bBlockActors = 0x108; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0x108; // uint32_t : 1
		constexpr auto CollisionType = 0x10c; // ECollisionType
	}

	namespace n_ATgDeploy_ShieldFernando { // : ATgDeploy_Shield
		constexpr auto m_nLargeShieldMeshID = 0x470; // int32_t
		constexpr auto m_SmallMesh = 0x474; // ComponentProperty
		constexpr auto m_LargeMesh = 0x47c; // ComponentProperty
		constexpr auto r_nToweringBarrierHealth = 0x484; // int32_t
		constexpr auto r_nAegisBonusHealth = 0x488; // int32_t
		constexpr auto m_bHasHeatTransfer = 0x48c; // uint32_t : 1
		constexpr auto m_bHasRattle = 0x48c; // uint32_t : 1
		constexpr auto m_CachedFernandoOwner = 0x490; // ObjectProperty
	}

	namespace n_ATgDemoRecSpectator_Debug { // : ATgDemoRecSpectator
		constexpr auto m_OriginalPlayer = 0x18fc; // ObjectProperty
		constexpr auto m_OriginalPlayerController = 0x1904; // ObjectProperty
	}

	namespace n_UUIComponent_WinterEventHome { // : UUIComponent_Display
		constexpr auto m_mcBundlesOwnedTF = 0x124; // ObjectProperty
		constexpr auto m_pBundles = 0x12c; // ObjectProperty
		constexpr auto m_pBonusProgress = 0x134; // ObjectProperty
		constexpr auto m_pBundlePanel = 0x13c; // ObjectProperty
		constexpr auto m_pBonusPanel = 0x144; // ObjectProperty
		constexpr auto m_grHome = 0x14c; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x154; // ObjectProperty
		constexpr auto m_pUnlockAllAction = 0x15c; // ObjectProperty
	}

	namespace n_ARB_CylindricalForceActor { // : ARigidBodyBase
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto RadialStrength = 0x288; // float
		constexpr auto RotationalStrength = 0x28c; // float
		constexpr auto LiftStrength = 0x290; // float
		constexpr auto LiftFalloffHeight = 0x294; // float
		constexpr auto EscapeVelocity = 0x298; // float
		constexpr auto ForceRadius = 0x29c; // float
		constexpr auto ForceTopRadius = 0x2a0; // float
		constexpr auto ForceHeight = 0x2a4; // float
		constexpr auto HeightOffset = 0x2a8; // float
		constexpr auto bForceActive = 0x2ac; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x2ac; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x2ac; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x2ac; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x2ac; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x2b0; // FRBCollisionChannelContainer
	}

	namespace n_UTgDeviceFire_BunnyLink { // : UTgDeviceFire_EncroachmentFireCone
		constexpr auto m_CachedBunny = 0x278; // ObjectProperty
		constexpr auto m_bInLinkTargetSelection = 0x280; // uint32_t : 1
		constexpr auto m_fEnemyTargetPenalty = 0x284; // float
		constexpr auto m_fLinkedTargetPenalty = 0x288; // float
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetInDeviceVolume { // : UTgAIBehaviorCondition
		constexpr auto DeviceID = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_AzaanUlt { // : ATgDevice
		constexpr auto m_AzaanUltSlamDevice = 0xa08; // ObjectProperty
		constexpr auto m_pAzaan = 0xa10; // ObjectProperty
	}

	namespace n_ATgDevice_Charge { // : ATgDevice
		constexpr auto m_eChargeState = 0xa08; // EChargeState
		constexpr auto m_bStopOnHitType = 0xa09; // ChargeStopOnHitType
		constexpr auto m_ChargeTimingType = 0xa0a; // ChargeFiringType
		constexpr auto m_bUsePhysFlying = 0xa0c; // uint32_t : 1
		constexpr auto m_bUseReticleTargetAim = 0xa0c; // uint32_t : 1
		constexpr auto m_bUseDamageRadiusForHitProxy = 0xa0c; // uint32_t : 1
		constexpr auto m_bIgnoreHumanoids = 0xa0c; // uint32_t : 1
		constexpr auto m_bHitOnce = 0xa0c; // uint32_t : 1
		constexpr auto m_bApplyHitOnTouch = 0xa0c; // uint32_t : 1
		constexpr auto m_bApplyHitSpecialOnTouch = 0xa0c; // uint32_t : 1
		constexpr auto m_bCharging = 0xa0c; // uint32_t : 1
		constexpr auto m_bInterruptDeviceIfChargeEnds = 0xa0c; // uint32_t : 1
		constexpr auto m_bUseDirectHitSpecial = 0xa0c; // uint32_t : 1
		constexpr auto m_bChargeBackward = 0xa0c; // uint32_t : 1
		constexpr auto m_bCanLeftClickCancel = 0xa0c; // uint32_t : 1
		constexpr auto m_bIgnoreMovementCorrection = 0xa0c; // uint32_t : 1
		constexpr auto m_bAimTowardsAcceleration = 0xa0c; // uint32_t : 1
		constexpr auto m_bAimUpIfAccelZero = 0xa0c; // uint32_t : 1
		constexpr auto m_bPostChargeUseWalkSpeed = 0xa0c; // uint32_t : 1
		constexpr auto m_bChargeRespectsMoveSpeedMultipliers = 0xa0c; // uint32_t : 1
		constexpr auto s_bHasQueuedChargeDir = 0xa0c; // uint32_t : 1
		constexpr auto s_bForcingStartCharge = 0xa0c; // uint32_t : 1
		constexpr auto m_bEndChargeImmediately = 0xa0c; // uint32_t : 1
		constexpr auto m_bHasQueuedCharge = 0xa0c; // uint32_t : 1
		constexpr auto m_HitProxy = 0xa10; // ObjectProperty
		constexpr auto m_vHitProxyRelativeLocation = 0xa18; // FVector
		constexpr auto m_vHitProxySizeOffset = 0xa24; // FVector
		constexpr auto s_fServerValidationSizeMultiplier = 0xa30; // float
		constexpr auto m_fPostChargeVelocityMult = 0xa34; // float
		constexpr auto m_fPostChargeVelocityCap = 0xa38; // float
		constexpr auto m_fWaitForClientStartChargeAimTime = 0xa3c; // float
		constexpr auto s_rQueuedChargeDir = 0xa40; // FRotator
		constexpr auto m_fChargeQueueTime = 0xa4c; // float
		constexpr auto m_rLastChargeDirection = 0xa50; // FRotator
		constexpr auto s_AppliedList = 0xa5c; // TArray<ObjectProperty>
		constexpr auto s_HitActors = 0xa6c; // TArray<FTimestampedActor>
	}

	namespace n_UMaterialExpressionTransformPosition { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialPositionTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialPositionTransform
	}

	namespace n_UTgAnimNotify_PlayPetAnim { // : UAnimNotify
		constexpr auto m_ChildSeqName = 0x68; // FName
	}

	namespace n_USeqEvent_LOS { // : USequenceEvent
		constexpr auto ScreenCenterDistance = 0x128; // float
		constexpr auto TriggerDistance = 0x12c; // float
		constexpr auto bCheckForObstructions = 0x130; // uint32_t : 1
	}

	namespace n_UUIComponent_MatchLobbyBans { // : UUIComponent_Display
		constexpr auto m_BanList = 0x124; // ObjectProperty
		constexpr auto m_bBlueTeam = 0x12c; // uint32_t : 1
	}

	namespace n_UUIDataStore_StringAliasMap { // : UUIDataStore_StringBase
		constexpr auto MenuInputMapArray = 0x98; // TArray<FUIMenuInputMap>
		constexpr auto MenuInputSets = 0xa8; // FMap_Mirror
		constexpr auto PlayerIndex = 0xf0; // int32_t
	}

	namespace n_UPBRuleNodeQuad { // : UPBRuleNodeBase
		constexpr auto Material = 0x70; // ObjectProperty
		constexpr auto RepeatMaxSizeX = 0x78; // float
		constexpr auto RepeatMaxSizeZ = 0x7c; // float
		constexpr auto QuadLightmapRes = 0x80; // int32_t
		constexpr auto YOffset = 0x84; // float
		constexpr auto bDisableMaterialRepeat = 0x88; // uint32_t : 1
	}

	namespace n_UAnimNodeRandom { // : UAnimNodeBlendList
		constexpr auto RandomInfo = 0x144; // TArray<FRandomAnimInfo>
		constexpr auto PlayingSeqNode = 0x154; // ObjectProperty
		constexpr auto PendingChildIndex = 0x15c; // int32_t
		constexpr auto bPickedPendingChildIndex = 0x160; // uint32_t : 1
	}

	namespace n_UTgAnimBlendBySpeedWithExhaustion { // : UTgAnimBlendBySpeed
		constexpr auto m_bEnableExhaustion = 0x21c; // uint32_t : 1
		constexpr auto m_fExhaustionLevel = 0x220; // float
		constexpr auto m_ExhaustedChildren = 0x224; // TArray<int32_t>
		constexpr auto m_GainExhaustionChildren = 0x234; // TArray<int32_t>
		constexpr auto m_fExhaustionGainSpeed = 0x244; // float
		constexpr auto m_fExhaustionLossSpeed = 0x248; // float
		constexpr auto m_fExhaustionLevelMax = 0x24c; // float
		constexpr auto m_fExhaustionLevelMin = 0x250; // float
	}

	namespace n_UInterpTrackInstBoolProp { // : UInterpTrackInstProperty
		constexpr auto BoolProp = 0x70; // FPointer
		constexpr auto BitMask = 0x78; // int32_t
		constexpr auto ResetBool = 0x7c; // uint32_t : 1
	}

	namespace n_UParticleModuleMeshRotationRateOverLife { // : UParticleModuleRotationRateBase
		constexpr auto RotRate = 0x68; // FRawDistributionVector
		constexpr auto bScaleRotRate = 0x8c; // uint32_t : 1
	}

	namespace n_UMcpUserInventoryManager { // : UMcpUserInventoryBase
		constexpr auto CreateSaveSlotUrl = 0x128; // FString
		constexpr auto DeleteSaveSlotUrl = 0x138; // FString
		constexpr auto ListSaveSlotUrl = 0x148; // FString
		constexpr auto ListItemsUrl = 0x158; // FString
		constexpr auto PurchaseItemUrl = 0x168; // FString
		constexpr auto SellItemUrl = 0x178; // FString
		constexpr auto EarnItemUrl = 0x188; // FString
		constexpr auto ConsumeItemUrl = 0x198; // FString
		constexpr auto DeleteItemUrl = 0x1a8; // FString
		constexpr auto IapRecordUrl = 0x1b8; // FString
		constexpr auto SaveSlots = 0x1c8; // TArray<FMcpInventorySaveSlot>
		constexpr auto SaveSlotRequests = 0x1d8; // TArray<FSaveSlotRequestState>
		constexpr auto ListSaveSlotRequests = 0x1e8; // TArray<FSaveSlotRequestState>
		constexpr auto ListItemsRequests = 0x1f8; // TArray<FSaveSlotRequestState>
		constexpr auto ItemRequests = 0x208; // TArray<FInventoryItemRequestState>
	}

	namespace n_UUIScene_UIFullScreenPopup { // : UUIScene
		constexpr auto m_InputBack = 0x1cc; // ObjectProperty
		constexpr auto m_InputOk = 0x1d4; // ObjectProperty
		constexpr auto m_mcTitle = 0x1dc; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x1e4; // ObjectProperty
		constexpr auto m_mcTexture = 0x1ec; // ObjectProperty
		constexpr auto m_pBack = 0x1f4; // ObjectProperty
		constexpr auto m_pButton = 0x1fc; // ObjectProperty
		constexpr auto m_pButtonKey = 0x204; // ObjectProperty
	}

	namespace n_ATgPawn_Astro { // : ATgPawn_Character
		constexpr auto m_LightSpeedDevice = 0x3164; // ObjectProperty
		constexpr auto m_GravityLiftDevice = 0x316c; // ObjectProperty
		constexpr auto m_AstralMarkDevice = 0x3174; // ObjectProperty
		constexpr auto m_AstralCycleCard = 0x317c; // ObjectProperty
		constexpr auto m_StarSeekerCard = 0x3184; // ObjectProperty
		constexpr auto m_AstralTarget = 0x318c; // ObjectProperty
		constexpr auto m_GravityLiftTarget = 0x3194; // ObjectProperty
		constexpr auto m_HitGravityLiftTarget = 0x319c; // ObjectProperty
		constexpr auto r_HitAstralTarget = 0x31a4; // ObjectProperty
		constexpr auto r_RemoveAstralTarget = 0x31ac; // ObjectProperty
		constexpr auto m_AstralMarkTargets = 0x31b4; // TArray<ObjectProperty>
		constexpr auto m_fDeadSpaceTimer = 0x31c4; // float
		constexpr auto m_bDeadSpaceTimerActive = 0x31c8; // uint32_t : 1
		constexpr auto r_mUltimateAimRotation = 0x31cc; // FRotator
	}

	namespace n_UUIData_Commendation { // : UUIData
		constexpr auto m_nType = 0x64; // int32_t
	}

	namespace n_UUIComponent_TencentJsonPanel { // : UUIComponent_Display
		constexpr auto m_pFeatureData = 0x124; // TArray<FJsonFeatureData>
		constexpr auto m_pFeatureMap = 0x134; // TMap<None, None>
		constexpr auto m_pJsonPanels = 0x17c; // ObjectProperty [0x3]
		constexpr auto m_pCarouselPanel = 0x194; // ObjectProperty
		constexpr auto m_pBack = 0x19c; // ObjectProperty
		constexpr auto m_grTencentJson = 0x1a4; // ObjectProperty
		constexpr auto m_InputBack = 0x1ac; // ObjectProperty
	}

	namespace n_UTgAnimBlendByDirection { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_SpeedType = 0x170; // EBlendByDirectionSpeedType
		constexpr auto LastDirection = 0x171; // EBlendDirTypes
		constexpr auto bAdjustRateByVelocity = 0x174; // uint32_t : 1
		constexpr auto bNoDirectionIsEnabled = 0x174; // uint32_t : 1
		constexpr auto bResetLooping = 0x174; // uint32_t : 1
		constexpr auto m_bDelayBlendOutToPlayAnim = 0x174; // uint32_t : 1
		constexpr auto m_bIsAllowedToBlendOut = 0x174; // uint32_t : 1
		constexpr auto m_bMirrorDirectionsWhenPawnMirrored = 0x174; // uint32_t : 1
		constexpr auto m_bStopChildrenOnCeaseRelevant = 0x174; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_DruidRMB { // : UTgDeviceForm
		constexpr auto m_CachedDruid = 0x28c; // ObjectProperty
		constexpr auto m_pLastTarget = 0x294; // ObjectProperty
		constexpr auto m_DruidHealBeams = 0x29c; // FDruidHealBeam [0xa]
		constexpr auto m_nNextBeamIndex = 0x314; // int32_t
		constexpr auto m_vFireLocationOffset = 0x318; // FVector
	}

	namespace n_URB_Spring { // : UActorComponent
		constexpr auto Component1 = 0x88; // ComponentProperty
		constexpr auto BoneName1 = 0x90; // FName
		constexpr auto Component2 = 0x98; // ComponentProperty
		constexpr auto BoneName2 = 0xa0; // FName
		constexpr auto SceneIndex = 0xa8; // int32_t
		constexpr auto bInHardware = 0xac; // uint32_t : 1
		constexpr auto bEnableForceMassRatio = 0xac; // uint32_t : 1
		constexpr auto SpringData = 0xb0; // FPointer
		constexpr auto TimeSinceActivation = 0xb8; // float
		constexpr auto MinBodyMass = 0xbc; // float
		constexpr auto SpringSaturateDist = 0xc0; // float
		constexpr auto SpringMaxForce = 0xc4; // float
		constexpr auto MaxForceMassRatio = 0xc8; // float
		constexpr auto SpringMaxForceTimeScale = 0xcc; // FInterpCurveFloat
		constexpr auto DampSaturateVel = 0xe0; // float
		constexpr auto DampMaxForce = 0xe4; // float
	}

	namespace n_ACrowdAgentBase { // : AActor
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
	}

	namespace n_ATgDeploy_DeployableLinkedEffectField { // : ATgDeploy_EffectField
		constexpr auto m_ParentDeployable = 0x4a0; // ObjectProperty
	}

	namespace n_UUIScene_UIHudDecks { // : UUIScene
		constexpr auto m_fSelectedTalentX = 0x1cc; // float
		constexpr auto m_fSelectedTalentY = 0x1d0; // float
		constexpr auto m_TeamPortraitsLeft = 0x1d4; // ObjectProperty
		constexpr auto m_TeamPortraitsRight = 0x1dc; // ObjectProperty
		constexpr auto m_PassiveSelection = 0x1e4; // ObjectProperty
		constexpr auto m_fUpdateTalentsDelay = 0x1ec; // float
	}

	namespace n_ATgFogOfWarBarrier { // : AStaticMeshActor
		constexpr auto m_bOneDirectional = 0x2a4; // uint32_t : 1
		constexpr auto m_fBlockMinimumDistance = 0x2a8; // float
	}

	namespace n_UTerrainMaterial { // : UObject
		constexpr auto LocalToMapping = 0x60; // FMatrix
		constexpr auto MappingType = 0xa0; // ETerrainMappingType
		constexpr auto MappingScale = 0xa4; // float
		constexpr auto MappingRotation = 0xa8; // float
		constexpr auto MappingPanU = 0xac; // float
		constexpr auto MappingPanV = 0xb0; // float
		constexpr auto Material = 0xb4; // ObjectProperty
		constexpr auto DisplacementMap = 0xbc; // ObjectProperty
		constexpr auto DisplacementScale = 0xc4; // float
	}

	namespace n_UTgAnimNodeBlendByStrafe { // : UAnimNodeBlend
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
		constexpr auto m_fBlendTime = 0x12c; // float
	}

	namespace n_UTgDeviceForm_CorvusUlt { // : UTgDeviceForm
		constexpr auto m_CorvusUltNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_CorvusUltNodes1p = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UUIData_Goal { // : UUIData
		constexpr auto m_dwActivityId = 0x64; // Fdword
		constexpr auto m_dwGoalGroupId = 0x68; // Fdword
		constexpr auto m_dwGoalId = 0x6c; // Fdword
	}

	namespace n_AGamePlayerCamera { // : ACamera
		constexpr auto ThirdPersonCam = 0x604; // ObjectProperty
		constexpr auto ThirdPersonCameraClass = 0x60c; // UGameCameraBase*
		constexpr auto FixedCam = 0x614; // ObjectProperty
		constexpr auto FixedCameraClass = 0x61c; // UGameCameraBase*
		constexpr auto CurrentCamera = 0x624; // ObjectProperty
		constexpr auto bUseForcedCamFOV = 0x62c; // uint32_t : 1
		constexpr auto bInterpolateCamChanges = 0x62c; // uint32_t : 1
		constexpr auto bResetInterp = 0x62c; // uint32_t : 1
		constexpr auto ForcedCamFOV = 0x630; // float
		constexpr auto LastViewTarget = 0x634; // ObjectProperty
		constexpr auto SplitScreenShakeScale = 0x63c; // float
		constexpr auto LastTargetBase = 0x640; // ObjectProperty
		constexpr auto LastTargetBaseTM = 0x650; // FMatrix
	}

	namespace n_UMaterialExpressionCustomTexture { // : UMaterialExpression
		constexpr auto Texture = 0xb0; // ObjectProperty
		constexpr auto TextureObject = 0xb8; // FExpressionInput
	}

	namespace n_APComVideoPlayer { // : AActor
		constexpr auto VideoURL = 0x280; // FString
		constexpr auto Width = 0x290; // int32_t
		constexpr auto Height = 0x294; // int32_t
		constexpr auto Volume = 0x298; // float
		constexpr auto bAutoResize = 0x29c; // uint32_t : 1
		constexpr auto bConstrainAspectRatio = 0x29c; // uint32_t : 1
		constexpr auto bDebugRender = 0x29c; // uint32_t : 1
		constexpr auto bVideoFinished = 0x29c; // uint32_t : 1
		constexpr auto bOnVideoFinishedIssued = 0x29c; // uint32_t : 1
		constexpr auto bHasMinorStreamingProblem = 0x29c; // uint32_t : 1
		constexpr auto ConstrainedAspectRatio = 0x2a0; // float
		constexpr auto Resource = 0x2a4; // FPointer
		constexpr auto RenderTargetToUse = 0x2ac; // ObjectProperty
		constexpr auto TextureCopyForStreamingProblem = 0x2b4; // ObjectProperty
		constexpr auto TimeSinceMinorStreamingProblem = 0x2bc; // float
		constexpr auto StreamingProblemMaterial = 0x2c0; // ObjectProperty
		constexpr auto CurrentErrorState = 0x2c8; // EPComVideoPlayerError
		constexpr auto RenderThreadErrorState = 0x2c9; // EPComVideoPlayerError
		constexpr auto BlackTexture = 0x2cc; // ObjectProperty
		constexpr auto __OnVideoFinished__Delegate = 0x2d4; // DelegateProperty
		constexpr auto __OnVideoError__Delegate = 0x2e4; // DelegateProperty
	}

	namespace n_ATgCollisionProxy_Cylinder { // : ATgCollisionProxy
		constexpr auto m_CollisionCylinder = 0x2b4; // ComponentProperty
	}

	namespace n_UUIDataProvider_OnlineFriends { // : UUIDataProvider_OnlinePlayerDataBase
		constexpr auto FriendsList = 0x74; // TArray<FOnlineFriend>
		constexpr auto NickNameCol = 0x84; // FString
		constexpr auto PresenceInfoCol = 0x94; // FString
		constexpr auto FriendStateCol = 0xa4; // FString
		constexpr auto bIsOnlineCol = 0xb4; // FString
		constexpr auto bIsPlayingCol = 0xc4; // FString
		constexpr auto bIsPlayingThisGameCol = 0xd4; // FString
		constexpr auto bIsJoinableCol = 0xe4; // FString
		constexpr auto bHasVoiceSupportCol = 0xf4; // FString
		constexpr auto bHaveInvitedCol = 0x104; // FString
		constexpr auto bHasInvitedYouCol = 0x114; // FString
		constexpr auto OfflineText = 0x124; // FString
		constexpr auto OnlineText = 0x134; // FString
		constexpr auto AwayText = 0x144; // FString
		constexpr auto BusyText = 0x154; // FString
	}

	namespace n_ATgRepInfo_TaskForce { // : ATeamInfo
		constexpr auto c_fsName = 0x2a0; // FString
		constexpr auto r_nTeamId = 0x2b0; // int32_t
		constexpr auto r_nLeaderPlayerId = 0x2b4; // int32_t
		constexpr auto r_nTaskForce = 0x2b8; // char
		constexpr auto r_MapTeam = 0x2b9; // TgMapTeam
		constexpr auto s_nTaskForceChatId = 0x2bc; // int32_t
		constexpr auto s_nStrikeForceId = 0x2c0; // int32_t
		constexpr auto s_nTaskTeamNum = 0x2c4; // int32_t
		constexpr auto m_Color = 0x2c8; // FColor
		constexpr auto r_bIsSurrendering = 0x2cc; // uint32_t : 1
		constexpr auto r_bSpectator = 0x2cc; // uint32_t : 1
		constexpr auto m_bDestroyOnEmpty = 0x2cc; // uint32_t : 1
		constexpr auto r_bIsAttacking = 0x2cc; // uint32_t : 1
		constexpr auto s_nPlayerStartCount = 0x2d0; // int32_t
		constexpr auto m_TeamPlayers = 0x2d4; // TArray<FTGTEAM_ENTRY>
		constexpr auto m_TeamBots = 0x2e4; // TArray<FTGTEAM_ENTRY>
		constexpr auto m_Factories = 0x2f4; // TArray<ObjectProperty>
		constexpr auto m_MinionFactories = 0x304; // TArray<ObjectProperty>
		constexpr auto s_TeamTimerManagers = 0x314; // TArray<FTEAMTIMEMANAGER_ENTRY>
		constexpr auto s_MinimapManager = 0x324; // ObjectProperty
		constexpr auto r_nScore = 0x32c; // int32_t
		constexpr auto r_fTickets = 0x330; // float
		constexpr auto r_nPhaseTickets = 0x334; // int32_t
		constexpr auto r_fSecondaryScore = 0x338; // float
		constexpr auto r_nScorePercent = 0x33c; // int32_t
		constexpr auto r_nGoldBuffCount = 0x340; // int32_t
		constexpr auto r_fUltBuffPerc = 0x344; // float
		constexpr auto s_nGodVisionMask = 0x348; // int32_t
		constexpr auto m_GlobalEffectGroups = 0x34c; // TArray<FGLOBALEFFECT_ENTRY>
		constexpr auto m_nTowersKilled = 0x35c; // int32_t
		constexpr auto m_nPhoenixCount = 0x360; // int32_t
		constexpr auto r_nGodKillCount = 0x364; // int32_t
		constexpr auto m_nLastGodIndex = 0x368; // int32_t
		constexpr auto m_nLastGodList = 0x36c; // int32_t
		constexpr auto r_RespawnBeaconExit = 0x370; // ObjectProperty
		constexpr auto c_nScoreOverride = 0x378; // int32_t
	}

	namespace n_UTgEffectModifyProperty { // : UTgEffect
		constexpr auto m_TargetDeviceFire = 0xa0; // ObjectProperty
		constexpr auto m_eEquipPointTarget = 0xa8; // int32_t
		constexpr auto m_fStaticValueOffsets = 0xac; // TArray<float>
	}

	namespace n_ASplineLoftActor { // : ASplineActor
		constexpr auto ScaleX = 0x2e8; // float
		constexpr auto ScaleY = 0x2ec; // float
		constexpr auto SplineMeshComps = 0x2f0; // TArray<ComponentProperty>
		constexpr auto DeformMesh = 0x300; // ObjectProperty
		constexpr auto DeformMeshMaterials = 0x308; // TArray<ObjectProperty>
		constexpr auto Roll = 0x318; // float
		constexpr auto WorldXDir = 0x31c; // FVector
		constexpr auto Offset = 0x328; // FVector2D
		constexpr auto bSmoothInterpRollAndScale = 0x330; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x330; // uint32_t : 1
		constexpr auto MeshLightEnvironment = 0x334; // ComponentProperty
		constexpr auto MeshMaxDrawDistance = 0x33c; // float
	}

	namespace n_UTgSkelCon_Gate { // : USkelControlBase
		constexpr auto ChildControls = 0xd0; // TArray<FSkelControlGateChild>
	}

	namespace n_UTgAnimNodeStanceTransitionerSynchronized { // : UTgAnimNodeBlendList
		constexpr auto StanceResetTime = 0x168; // float
		constexpr auto CanResetStanceOnTick = 0x16c; // uint32_t : 1
		constexpr auto m_bDelayingChildSwitch = 0x16c; // uint32_t : 1
		constexpr auto m_nCurrentStance = 0x170; // int32_t
		constexpr auto m_fTimestampToSwitchStance = 0x174; // float
		constexpr auto StanceTransitionControl = 0x178; // TArray<FStanceTransitionParam>
	}

	namespace n_UTgSkelCon_RotateToVelocity { // : UTgSkelCon_MirrorToOtherMesh
		constexpr auto m_fRotationSpeed = 0x108; // float
		constexpr auto m_bUseConstantSpeed = 0x10c; // uint32_t : 1
		constexpr auto m_bVelocity2DOnly = 0x10c; // uint32_t : 1
		constexpr auto m_fMinVelocity = 0x110; // float
		constexpr auto m_rTargetRotation = 0x114; // FRotator
		constexpr auto m_CachedOwner = 0x120; // ObjectProperty
	}

	namespace n_USeqCond_Increment { // : USequenceCondition
		constexpr auto IncrementAmount = 0xec; // int32_t
		constexpr auto ValueA = 0xf0; // int32_t
		constexpr auto ValueB = 0xf4; // int32_t
	}

	namespace n_UTgEffect_TimeBasedScaling { // : UTgEffect
		constexpr auto m_nSiegeIntervalSeconds = 0xa0; // int32_t
		constexpr auto m_nTDMIntervalSeconds = 0xa4; // int32_t
		constexpr auto m_nOnslaughtIntervalSeconds = 0xa8; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NumDeaths { // : UTgAIBehaviorCondition
		constexpr auto DeathThreshold = 0x98; // int32_t
	}

	namespace n_USeqAct_AddRemoveFaceFXAnimSet { // : USequenceAction
		constexpr auto FaceFXAnimSets = 0x108; // TArray<ObjectProperty>
	}

	namespace n_UWindDirectionalSourceComponent { // : UActorComponent
		constexpr auto SceneProxy = 0x88; // FPointer
		constexpr auto Strength = 0x90; // float
		constexpr auto Phase = 0x94; // float
		constexpr auto Frequency = 0x98; // float
		constexpr auto Speed = 0x9c; // float
	}

	namespace n_UAnimNotify_Sound { // : UAnimNotify
		constexpr auto SoundCue = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // uint32_t : 1
		constexpr auto bIgnoreIfMeshHidden = 0x70; // uint32_t : 1
		constexpr auto bIgnoreIfActorHidden = 0x70; // uint32_t : 1
		constexpr auto BoneName = 0x74; // FName
		constexpr auto PercentToPlay = 0x7c; // float
		constexpr auto VolumeMultiplier = 0x80; // float
		constexpr auto PitchMultiplier = 0x84; // float
	}

	namespace n_UUIComponent_Currency { // : UUIComponent_Display
		constexpr auto eCurrencyCode = 0x124; // Fdword
		constexpr auto ePurchaseType = 0x128; // Fdword
		constexpr auto bShowIfOwnedOrRented = 0x12c; // uint32_t : 1
		constexpr auto bStrikeIfOwnedOrRented = 0x12c; // uint32_t : 1
		constexpr auto bDisplayIfZero = 0x12c; // uint32_t : 1
		constexpr auto eDisplayType = 0x130; // UICCurr_DisplayType
		constexpr auto eAlignment = 0x131; // UIALIGNINGTYPE
		constexpr auto m_mcTF = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
	}

	namespace n_UMaterialExpressionTextureSampleParameterNormal { // : UMaterialExpressionTextureSampleParameter
		constexpr auto InstanceOverride = 0x140; // FPointer
	}

	namespace n_ATgDevice_LazarusInhand { // : ATgDevice_ChainSequence
		constexpr auto HitActorsAngles = 0xa14; // TArray<FHitSoundData>
		constexpr auto m_nHitIndex = 0xa24; // int32_t
		constexpr auto __InterruptFiringAndResetChainDelegate__Delegate = 0xa28; // DelegateProperty
	}

	namespace n_UTgAnimMetaData_InvisibleWallFailSafe { // : UAnimMetaData
		constexpr auto WallEnableBaseName = 0x60; // FName
	}

	namespace n_UUIComponent_PlayPanel { // : UUIComponent_Display
		constexpr auto m_mcFade = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcIconMulti = 0x134; // ObjectProperty
		constexpr auto m_mcTitle = 0x13c; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x144; // ObjectProperty
		constexpr auto m_mcDelayText = 0x14c; // ObjectProperty
		constexpr auto m_mcModeCTA = 0x154; // ObjectProperty
		constexpr auto m_mcQueueBonusIcon = 0x15c; // ObjectProperty
		constexpr auto m_mcQuestCTA = 0x164; // ObjectProperty
		constexpr auto m_mcCheckbox = 0x16c; // ObjectProperty
		constexpr auto m_mcModeTypeTF = 0x174; // ObjectProperty
		constexpr auto m_mcQueueBonusText = 0x17c; // ObjectProperty
		constexpr auto m_mcAchievements = 0x184; // ObjectProperty
		constexpr auto m_mcLock = 0x18c; // ObjectProperty
		constexpr auto m_mcLockNew = 0x194; // ObjectProperty
		constexpr auto m_mcLockInfo = 0x19c; // ObjectProperty
		constexpr auto m_mcLockInfoTF = 0x1a4; // ObjectProperty
		constexpr auto m_mcMultiQueueStateTF = 0x1ac; // ObjectProperty
		constexpr auto m_mcProgressMask = 0x1b4; // ObjectProperty
		constexpr auto m_mcInfoButtonIcon = 0x1bc; // ObjectProperty
		constexpr auto m_mcRankedProgress = 0x1c4; // ObjectProperty
		constexpr auto m_mcRankedProgressRankTF = 0x1cc; // ObjectProperty
		constexpr auto m_mcRankedProgressRankIcon = 0x1d4; // ObjectProperty
		constexpr auto m_mcRankedProgressProgressTF = 0x1dc; // ObjectProperty
		constexpr auto m_pPanelButton = 0x1e4; // ObjectProperty
		constexpr auto m_pInfoButton = 0x1ec; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x1f4; // ObjectProperty
		constexpr auto m_pQueueOpensCountdown = 0x1fc; // ObjectProperty
		constexpr auto m_pQueueClosesCountdown = 0x204; // ObjectProperty
		constexpr auto m_pRating = 0x20c; // ObjectProperty
		constexpr auto m_pRatingTooltip = 0x214; // ObjectProperty
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Flak { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_CachedFlakPawn = 0x544; // ObjectProperty
	}

	namespace n_ATgTutorialInfo { // : AActor
		constexpr auto fButtonHoldTime = 0x280; // float
		constexpr auto fVolumeStandTime = 0x284; // float
		constexpr auto fBotRespawnTime = 0x288; // float
		constexpr auto fBotTargetsKilledWaitTime = 0x28c; // float
		constexpr auto fPlayerTeamCaptureMultiplier = 0x290; // float
		constexpr auto fRepeatInstructionTime = 0x294; // float
		constexpr auto fExtendedRepeatInstructionTime = 0x298; // float
		constexpr auto fIntroExtensionTime = 0x29c; // float
		constexpr auto fBotDelayTravelToMovementTime = 0x2a0; // float
		constexpr auto fBotDelayTravelToUltRangeTime = 0x2a4; // float
		constexpr auto fPayloadContestPercent = 0x2a8; // float
		constexpr auto fLanePusherGroundSpeed = 0x2ac; // float
		constexpr auto fEnergyChargeMultiplier = 0x2b0; // float
		constexpr auto ApproachHelperArea = 0x2b4; // ObjectProperty
		constexpr auto AutoShootingRangeStandingTargetArea = 0x2bc; // ObjectProperty
		constexpr auto UltimateShootingRangeStandingTargetArea = 0x2c4; // ObjectProperty
		constexpr auto JumpLowerArea = 0x2cc; // ObjectProperty
		constexpr auto JumpUpperArea = 0x2d4; // ObjectProperty
		constexpr auto HelperBotFactory = 0x2dc; // ObjectProperty
		constexpr auto AutoBotFactory = 0x2e4; // ObjectProperty
		constexpr auto MultipleAutoBotFactory = 0x2ec; // ObjectProperty
		constexpr auto BattleAbilityBotFactory = 0x2f4; // ObjectProperty
		constexpr auto AltAbilityBotFactory = 0x2fc; // ObjectProperty
		constexpr auto UltimateChargeBotFactory = 0x304; // ObjectProperty
		constexpr auto UltimateAbilityBotFactory = 0x30c; // ObjectProperty
		constexpr auto ContestCapturePointBotFactory = 0x314; // ObjectProperty
		constexpr auto ContestPayloadBotsFactory = 0x31c; // ObjectProperty
		constexpr auto HelperMoveTargetAutoRange = 0x324; // ObjectProperty
		constexpr auto HelperMoveTargetMovementAbility = 0x32c; // ObjectProperty
		constexpr auto HelperMoveTargetUltRange = 0x334; // ObjectProperty
		constexpr auto EndGameFocus = 0x33c; // ObjectProperty
		constexpr auto HelperBotController = 0x344; // ObjectProperty
	}

	namespace n_USeqAct_FeatureTest { // : USeqAct_Log
		constexpr auto FreezeAtParameters = 0x12c; // FString
		constexpr auto ScreenShotDelay = 0x13c; // float
		constexpr auto ScreenShotName = 0x140; // FString
		constexpr auto RemainingScreenShotDelay = 0x150; // float
	}

	namespace n_UTgInventoryObject_Listen_DeployOnAbility { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_eDeployType = 0xcc; // EDeployOnAbilityType
	}

	namespace n_UUIDataCommon { // : UUIDataObject
		constexpr auto m_bInitialLevelUpdate = 0x74; // uint32_t : 1
		constexpr auto m_bHasBountyInventory = 0x74; // uint32_t : 1
		constexpr auto m_nPreviousLevel = 0x78; // int32_t
		constexpr auto m_nLevel = 0x7c; // int32_t
		constexpr auto m_nItemsTotal = 0x80; // int32_t
		constexpr auto m_nItemsOwned = 0x84; // int32_t
		constexpr auto m_nXPProgress = 0x88; // int32_t
		constexpr auto m_nXPRequired = 0x8c; // int32_t
		constexpr auto m_fXPPercent = 0x90; // float
		constexpr auto m_fItemsPercent = 0x94; // float
		constexpr auto m_pHiddenDLCFeatureToShow = 0x98; // ObjectProperty
		constexpr auto m_PortalAccounts = 0xa0; // TMap<None, None>
		constexpr auto m_BurnA = 0xe8; // TArray<ObjectProperty>
		constexpr auto m_BurnB = 0xf8; // TArray<ObjectProperty>
		constexpr auto m_BurnC = 0x108; // TArray<ObjectProperty>
		constexpr auto m_BurnD = 0x118; // TArray<ObjectProperty>
		constexpr auto m_BurnV2Track1 = 0x128; // TArray<ObjectProperty>
		constexpr auto m_BurnV2Track2 = 0x138; // TArray<ObjectProperty>
		constexpr auto m_BurnV2Track3 = 0x148; // TArray<ObjectProperty>
		constexpr auto m_BurnV2Track4 = 0x158; // TArray<ObjectProperty>
		constexpr auto m_Avatars = 0x168; // TArray<ObjectProperty>
		constexpr auto m_EquipableTitles = 0x178; // TArray<ObjectProperty>
		constexpr auto m_LoadingFrames = 0x188; // TArray<ObjectProperty>
		constexpr auto m_Mounts = 0x198; // TArray<ObjectProperty>
		constexpr auto m_AnnouncerPacks = 0x1a8; // TArray<ObjectProperty>
		constexpr auto m_Sprays = 0x1b8; // TArray<ObjectProperty>
		constexpr auto m_DeathStamps = 0x1c8; // TArray<ObjectProperty>
		constexpr auto m_MusicPacks = 0x1d8; // TArray<ObjectProperty>
		constexpr auto m_DeathCards = 0x1e8; // TArray<ObjectProperty>
		constexpr auto m_MatchBoosters = 0x1f8; // TArray<ObjectProperty>
		constexpr auto m_LoadoutSlots = 0x208; // TArray<ObjectProperty>
		constexpr auto m_Bundles = 0x218; // TArray<ObjectProperty>
		constexpr auto m_GameStore = 0x228; // TArray<ObjectProperty>
		constexpr auto m_ActivatedMatchBoosters = 0x238; // TArray<ObjectProperty>
		constexpr auto m_dwPrevBattlePassPoints = 0x248; // Fdword
		constexpr auto m_dwBattlePassPoints = 0x24c; // Fdword
		constexpr auto m_dwPrevBattlePassLevel = 0x250; // Fdword
		constexpr auto m_dwBattlePassLevel = 0x254; // Fdword
		constexpr auto m_dwPrevBattlePassTier = 0x258; // Fdword
		constexpr auto m_dwBattlePassTier = 0x25c; // Fdword
		constexpr auto m_bBattlePassOwned = 0x260; // Fdword
		constexpr auto m_nBountyCoinBalance = 0x264; // int32_t
		constexpr auto m_fDeferredBountyInventoryUpdateDelay = 0x268; // float
		constexpr auto m_fLastBountySaleUpdateTimestamp = 0x26c; // float
		constexpr auto m_fBountySaleUpdateMinPeriod = 0x270; // float
		constexpr auto m_fLastBountyInventoryUpdateTimestamp = 0x274; // float
		constexpr auto m_fBountyInventoryUpdateMinPeriod = 0x278; // float
		constexpr auto m_BountySaleItems = 0x27c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_Button_LoadoutAnnouncer { // : UUIComponent_Display
		constexpr auto m_Play = 0x124; // ObjectProperty
		constexpr auto m_mcAnnouncerIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcAnnouncerIconRarity = 0x134; // ObjectProperty
		constexpr auto m_mcAnnouncerIconTexture = 0x13c; // ObjectProperty
		constexpr auto m_mcEquipped = 0x144; // ObjectProperty
		constexpr auto m_mcName = 0x14c; // ObjectProperty
	}

	namespace n_ATgDevice_ImaniLMB2 { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedImani = 0xa10; // ObjectProperty
		constexpr auto m_vProjectileSpawnOffset2 = 0xa18; // FVector
		constexpr auto m_bFireLeftHand = 0xa24; // uint32_t : 1
		constexpr auto c_fLastFireTimestamp = 0xa28; // float
		constexpr auto c_fTimeToRelaxHands = 0xa2c; // float
		constexpr auto s_fLastFireHoldPct = 0xa30; // float
		constexpr auto m_fFireReleasePercent = 0xa34; // float
		constexpr auto m_fReticleReleaseAnimationDuration = 0xa38; // float
	}

	namespace n_UPBRuleNodeVariation { // : UPBRuleNodeBase
		constexpr auto bVariationOfScopeOnLeft = 0x70; // uint32_t : 1
	}

	namespace n_UUIComponent_ArcadeRankedProgress { // : UUIComponent_Display
		constexpr auto m_mcQueueName = 0x124; // ObjectProperty
		constexpr auto m_mcRatingChange = 0x12c; // ObjectProperty
		constexpr auto m_mcRatingImproved = 0x134; // ObjectProperty
		constexpr auto m_pRating = 0x13c; // ObjectProperty
	}

	namespace n_UUIComponent_StreetStyleEventOverview { // : UUIComponent_Display
		constexpr auto m_grInput = 0x124; // ObjectProperty
	}

	namespace n_UInterpTrackInstVectorProp { // : UInterpTrackInstProperty
		constexpr auto VectorProp = 0x70; // FPointer
		constexpr auto ResetVector = 0x78; // FVector
	}

	namespace n_AVolumeTimer { // : AInfo
		constexpr auto V = 0x280; // ObjectProperty
	}

	namespace n_UUIHudPlayer_Base { // : UTgGfxScene
		constexpr auto m_nStreak = 0x1ec; // int32_t
		constexpr auto m_nProfile = 0x1f0; // int32_t
		constexpr auto m_nSkin = 0x1f4; // int32_t
		constexpr auto m_nRespawnTime = 0x1f8; // int32_t
		constexpr auto m_bInCombat = 0x1fc; // uint32_t : 1
		constexpr auto m_bShowCombat = 0x1fc; // uint32_t : 1
		constexpr auto m_bSpectateEnemy = 0x1fc; // uint32_t : 1
		constexpr auto m_bRespawning = 0x1fc; // uint32_t : 1
		constexpr auto m_bShowMapCallout = 0x1fc; // uint32_t : 1
		constexpr auto m_bDisableKillStreakUI = 0x1fc; // uint32_t : 1
		constexpr auto m_fCombatTime = 0x200; // float
		constexpr auto m_fCombatPercent = 0x204; // float
		constexpr auto m_CachedRotation = 0x208; // float
		constexpr auto m_mcTopBar = 0x20c; // ObjectProperty
		constexpr auto m_mcBotBar = 0x214; // ObjectProperty
		constexpr auto m_mcBotBarRespawn = 0x21c; // ObjectProperty
		constexpr auto m_mcBotBarRespawnTF = 0x224; // ObjectProperty
		constexpr auto m_mcBotBarRecapPrompt = 0x22c; // ObjectProperty
		constexpr auto m_pBotBarPlayer = 0x234; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x23c; // ObjectProperty
		constexpr auto m_mcDeathCardOneLiner = 0x244; // TArray<ObjectProperty>
		constexpr auto m_grScene = 0x254; // ObjectProperty
		constexpr auto m_mcIcon = 0x25c; // ObjectProperty
		constexpr auto m_HealthBar = 0x264; // ObjectProperty
		constexpr auto m_mcCombat = 0x26c; // ObjectProperty
		constexpr auto m_mcCombatBar = 0x274; // ObjectProperty
		constexpr auto m_mcDebugText = 0x27c; // ObjectProperty
		constexpr auto m_DruidGuardian = 0x284; // ObjectProperty
		constexpr auto m_mcStreak = 0x28c; // ObjectProperty
		constexpr auto m_mcStreakBack = 0x294; // ObjectProperty
		constexpr auto m_mcStreakTitle = 0x29c; // ObjectProperty
		constexpr auto m_mcStreakSubtitle = 0x2a4; // ObjectProperty
		constexpr auto m_sSpectatorName = 0x2ac; // FString
		constexpr auto m_sSpectatorTeam = 0x2bc; // FString
		constexpr auto m_mcSpectatorGroup = 0x2cc; // ObjectProperty
		constexpr auto m_mcSpectatorNameTF = 0x2d4; // ObjectProperty
		constexpr auto m_mcSpectatorNameTF1 = 0x2dc; // ObjectProperty
		constexpr auto m_mcZoneName = 0x2e4; // ObjectProperty
		constexpr auto m_mcSpectatorTeam = 0x2ec; // ObjectProperty
		constexpr auto m_mcSpectatorTeamAdd = 0x2f4; // ObjectProperty
		constexpr auto m_mcSpectatorBG = 0x2fc; // ObjectProperty
		constexpr auto m_HealFeed = 0x304; // ObjectProperty
		constexpr auto m_OracleSoulStacks = 0x30c; // ObjectProperty
		constexpr auto m_CorrupterCorruption = 0x314; // ObjectProperty
		constexpr auto m_RaumSoulStacks = 0x31c; // ObjectProperty
		constexpr auto m_Ping = 0x324; // ObjectProperty
	}

	namespace n_ATgDevice_DemonInhand { // : ATgDevice
		constexpr auto m_bUltIsActive = 0xa08; // uint32_t : 1
		constexpr auto m_bDemonStimIsActive = 0xa08; // uint32_t : 1
	}

	namespace n_UTgInvListener_OpportunityInChaos { // : UTgInvListener
		constexpr auto m_fStartFireTime = 0xc4; // float
	}

	namespace n_UUIComponent_CustomMatch { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
		constexpr auto m_mcMode = 0x134; // ObjectProperty
		constexpr auto m_mcMap = 0x13c; // ObjectProperty
		constexpr auto m_mcDraft = 0x144; // ObjectProperty
		constexpr auto m_mcOwner = 0x14c; // ObjectProperty
		constexpr auto m_mcPlayers = 0x154; // ObjectProperty
		constexpr auto m_pJoinButton = 0x15c; // ObjectProperty
	}

	namespace n_UUIComponent_DeathRecapPlayerSkill { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcNameTF = 0x12c; // ObjectProperty
		constexpr auto m_mcDamageTF = 0x134; // ObjectProperty
		constexpr auto m_mcCountTF = 0x13c; // ObjectProperty
		constexpr auto m_mcCountBG = 0x144; // ObjectProperty
	}

	namespace n_UMaterialExpressionClamp { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // FExpressionInput
		constexpr auto Max = 0x118; // FExpressionInput
	}

	namespace n_UTextureRenderTarget2D { // : UTextureRenderTarget
		constexpr auto SizeX = 0x108; // int32_t
		constexpr auto SizeY = 0x10c; // int32_t
		constexpr auto Format = 0x110; // EPixelFormat
		constexpr auto AddressX = 0x111; // TextureAddress
		constexpr auto AddressY = 0x112; // TextureAddress
		constexpr auto ClearColor = 0x114; // FLinearColor
		constexpr auto bForceLinearGamma = 0x124; // uint32_t : 1
	}

	namespace n_ATgDevice_WYRMJets { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedBoosterDevice = 0xa10; // ObjectProperty
	}

	namespace n_UTgDeviceForm_ShellShield { // : UTgDeviceForm
		constexpr auto m_bShouldBeActive = 0x28c; // uint32_t : 1
		constexpr auto m_fShieldActivationTime = 0x290; // float
		constexpr auto m_fShieldActivationPercent = 0x294; // float
	}

	namespace n_UTgAIBehaviorCondition_IsCombatTargetOfType { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UUIHudBurns { // : UTgGfxScene
		constexpr auto m_nCurrentCredits = 0x1ec; // int32_t
		constexpr auto m_nUsedCredits = 0x1f0; // int32_t
		constexpr auto m_nActiveItem = 0x1f4; // int32_t
		constexpr auto m_nLastActiveIndex = 0x1f8; // int32_t
		constexpr auto m_bOpenPostTimelapse = 0x1fc; // uint32_t : 1
		constexpr auto m_Items = 0x200; // FUIITEMRANK [0x4]
		constexpr auto m_Temps = 0x230; // FUIITEMRANK [0x4]
		constexpr auto m_mcItemsVer1 = 0x260; // ObjectProperty
		constexpr auto m_mcBack = 0x268; // ObjectProperty
		constexpr auto m_mcUndo = 0x270; // ObjectProperty
		constexpr auto m_mcTitle = 0x278; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x280; // ObjectProperty
		constexpr auto m_mcCredits = 0x288; // ObjectProperty
		constexpr auto m_mcInfo = 0x290; // ObjectProperty
		constexpr auto m_mcInfoFrame = 0x298; // ObjectProperty
		constexpr auto m_mcInfoTitle = 0x2a0; // ObjectProperty
		constexpr auto m_mcInfoSubtitle = 0x2a8; // ObjectProperty
		constexpr auto m_mcAutoBuyDialogue = 0x2b0; // ObjectProperty
		constexpr auto m_mcAutoBuyTitle = 0x2b8; // ObjectProperty
		constexpr auto m_mcAutoBuyDesc = 0x2c0; // ObjectProperty
		constexpr auto m_mcAutoBuyPrompt = 0x2c8; // ObjectProperty
		constexpr auto m_mcInfoUpgrade = 0x2d0; // FUIITEMDATA [0x3]
		constexpr auto m_mcInfoUpgradeArrow = 0x390; // ObjectProperty [0x2]
		constexpr auto m_AutoBuyOffButton = 0x3a0; // ObjectProperty
		constexpr auto m_Group = 0x3a8; // FUIITEMGROUP [0x4]
		constexpr auto m_scPurchase = 0x928; // ObjectProperty
		constexpr auto m_grItem = 0x930; // ObjectProperty
		constexpr auto m_UndoQue = 0x938; // FUIITEMRANK [0xc]
		constexpr auto m_nUndoIterator = 0x9c8; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsInTowerRadius { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
	}

	namespace n_APlayerStart { // : ANavigationPoint
		constexpr auto bEnabled = 0x378; // uint32_t : 1
		constexpr auto bPrimaryStart = 0x378; // uint32_t : 1
		constexpr auto bBestStart = 0x378; // uint32_t : 1
		constexpr auto TeamIndex = 0x37c; // int32_t
		constexpr auto Score = 0x380; // int32_t
		constexpr auto SelectionIndex = 0x384; // int32_t
	}

	namespace n_UOnlineTitleFileDownloadBase { // : UMCPBase
		constexpr auto ReadTitleFileCompleteDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto RequestTitleFileListCompleteDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto BaseUrl = 0xa0; // FString
		constexpr auto RequestFileListURL = 0xb0; // FString
		constexpr auto RequestFileURL = 0xc0; // FString
		constexpr auto TimeOut = 0xd0; // float
		constexpr auto FilesToUrls = 0xd4; // TArray<FFileNameToURLMapping>
		constexpr auto __OnReadTitleFileComplete__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnRequestTitleFileListComplete__Delegate = 0xf4; // DelegateProperty
	}

	namespace n_UUIComponent_EndTimesEventQuests { // : UUIComponent_Display
		constexpr auto m_mcQuestExpireTF = 0x124; // ObjectProperty
		constexpr auto m_pQuests = 0x12c; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x134; // ObjectProperty
		constexpr auto m_pRightArrow = 0x13c; // ObjectProperty
		constexpr auto m_pPlayPanel = 0x144; // ObjectProperty
		constexpr auto m_pOwnedCurrency = 0x14c; // ObjectProperty
		constexpr auto m_grInput = 0x154; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearbyTargetTypeDelta { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto TargetTypeThreshold = 0x9c; // int32_t
		constexpr auto TargetType = 0xa0; // ECombatTargetType
		constexpr auto bMustBeInForwardCone = 0xa4; // uint32_t : 1
		constexpr auto ForwardConeAngle = 0xa8; // float
	}

	namespace n_UTgGamePhase_TicketsOnKill { // : UTgGamePhase
		constexpr auto m_nTicketsPerKill = 0xb8; // int32_t
	}

	namespace n_UActorFactoryVehicle { // : UActorFactory
		constexpr auto VehicleClass = 0x9c; // AVehicle*
	}

	namespace n_UTgAchievement_GlobalPetTimer { // : UTgAchievement
		constexpr auto m_nNumLivePets = 0x94; // int32_t
		constexpr auto m_fStartTime = 0x98; // float
	}

	namespace n_ATgWeaponMeshActor_ImaniInhand { // : ATgWeaponMeshActor
		constexpr auto m_bUsingSecondaryStance = 0x450; // uint32_t : 1
		constexpr auto m_stanceNodes3p = 0x454; // TArray<ObjectProperty>
		constexpr auto m_stanceNodes1p = 0x464; // TArray<ObjectProperty>
	}

	namespace n_AAkAmbientSound { // : AKeypoint
		constexpr auto bAutoPlay = 0x288; // uint32_t : 1
		constexpr auto StopWhenOwnerIsDestroyed = 0x288; // uint32_t : 1
		constexpr auto bIsPlaying = 0x288; // uint32_t : 1
		constexpr auto PlayEvent = 0x28c; // ObjectProperty
	}

	namespace n_ASceneCapture2DActor { // : ASceneCaptureActor
		constexpr auto DrawFrustum = 0x288; // ComponentProperty
	}

	namespace n_UOnlineStatsRead { // : UOnlineStats
		constexpr auto LeaderboardName = 0x84; // FString
	}

	namespace n_UMaterialExpressionConstant { // : UMaterialExpression
		constexpr auto R = 0xb0; // float
	}

	namespace n_UUIComponent_LexVengeance { // : UUIComponent_Display
		constexpr auto m_RouletteTarget = 0x124; // ObjectProperty
		constexpr auto m_Target = 0x12c; // ObjectProperty
		constexpr auto m_mcBounty = 0x134; // ObjectProperty
		constexpr auto m_mcKillstreak = 0x13c; // ObjectProperty
		constexpr auto m_mcKillstreakText = 0x144; // ObjectProperty
		constexpr auto m_Lex = 0x14c; // ObjectProperty
		constexpr auto m_pUIData = 0x154; // ObjectProperty
		constexpr auto m_CachedTargetChampion = 0x15c; // ObjectProperty
		constexpr auto m_pInRangeEnemies = 0x164; // TArray<ObjectProperty>
		constexpr auto m_Timer = 0x174; // float
		constexpr auto m_TimePerFrame = 0x178; // float
		constexpr auto m_fOffsetX = 0x17c; // float
		constexpr auto m_bRouletteSpinning = 0x180; // uint32_t : 1
		constexpr auto m_bEnabled = 0x180; // uint32_t : 1
		constexpr auto m_nRouletteIndex = 0x184; // int32_t
		constexpr auto m_nDisplayedKillstreak = 0x188; // int32_t
		constexpr auto m_nDisplayedBounty = 0x18c; // int32_t
		constexpr auto m_fEmblemXPos = 0x190; // float
		constexpr auto m_FlipbookSound = 0x194; // ObjectProperty
		constexpr auto m_LockInSound = 0x19c; // ObjectProperty
		constexpr auto m_SwooshSound = 0x1a4; // ObjectProperty
		constexpr auto m_FrontlineComment = 0x1ac; // ObjectProperty
		constexpr auto m_DamageComment = 0x1b4; // ObjectProperty
		constexpr auto m_SupportComment = 0x1bc; // ObjectProperty
		constexpr auto m_FlankComment = 0x1c4; // ObjectProperty
	}

	namespace n_UActorFactoryEmitter { // : UActorFactory
		constexpr auto ParticleSystem = 0x9c; // ObjectProperty
	}

	namespace n_UUIComponent_SimpleIconWithFrames { // : UUIComponent_Display
		constexpr auto m_bZeroIndexed = 0x124; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_NumRallyPoints { // : UTgAIBehaviorCondition
		constexpr auto nRallyPointsThreshold = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bMustBeSameTaskForce = 0x9c; // uint32_t : 1
	}

	namespace n_USpriteComponent { // : UPrimitiveComponent
		constexpr auto Sprite = 0x24c; // ObjectProperty
		constexpr auto bIsScreenSizeScaled = 0x254; // uint32_t : 1
		constexpr auto ScreenSize = 0x258; // float
		constexpr auto U = 0x25c; // float
		constexpr auto UL = 0x260; // float
		constexpr auto V = 0x264; // float
		constexpr auto VL = 0x268; // float
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromSelectedTarget { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreTaskforce = 0x9c; // uint32_t : 1
		constexpr auto TargetSelector = 0xa0; // ETargetSelector
		constexpr auto TargetType = 0xa1; // ECombatTargetType
		constexpr auto DeployableId = 0xa4; // int32_t
	}

	namespace n_UUIScene_UIBattlePassPurchase { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_mcTimeRemaining = 0x1d4; // ObjectProperty
		constexpr auto m_pDLCList = 0x1dc; // ObjectProperty
		constexpr auto m_pCloseButton = 0x1e4; // ObjectProperty
		constexpr auto m_grMain = 0x1ec; // ObjectProperty
	}

	namespace n_UParticleModuleMeshMaterial { // : UParticleModuleMaterialBase
		constexpr auto MeshMaterials = 0x68; // TArray<ObjectProperty>
	}

	namespace n_ATgStaticMeshActor_PantheonMIC { // : ATgStaticMeshActor
		constexpr auto MICOverrides = 0x2a4; // ObjectProperty [0x8]
		constexpr auto m_nGameTaskForce = 0x2e4; // int32_t
		constexpr auto m_nTeamIndex = 0x2e8; // int32_t
	}

	namespace n_UUIData_MultiQueue { // : UUIData
		constexpr auto nIcon = 0x64; // int32_t
		constexpr auto sName = 0x68; // FString
		constexpr auto sDesc = 0x78; // FString
		constexpr auto pQueues = 0x88; // TArray<ObjectProperty>
	}

	namespace n_UUIDataStore_OnlinePlaylists { // : UUIDataStore
		constexpr auto ProviderClassName = 0x98; // FString
		constexpr auto ProviderClass = 0xa8; // UUIResourceDataProvider*
		constexpr auto RankedDataProviders = 0xb0; // TArray<ObjectProperty>
		constexpr auto UnrankedDataProviders = 0xc0; // TArray<ObjectProperty>
		constexpr auto RecModeDataProviders = 0xd0; // TArray<ObjectProperty>
		constexpr auto PrivateDataProviders = 0xe0; // TArray<ObjectProperty>
		constexpr auto PlaylistMan = 0xf0; // ObjectProperty
	}

	namespace n_UMaterialFunction { // : UObject
		constexpr auto StateId = 0x60; // FGuid
		constexpr auto Description = 0x70; // FString
		constexpr auto bExposeToLibrary = 0x80; // uint32_t : 1
		constexpr auto bReentrantFlag = 0x80; // uint32_t : 1
		constexpr auto LibraryCategories = 0x84; // TArray<FString>
		constexpr auto FunctionExpressions = 0x94; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_CorrupterSpin { // : ATgDevice_Leap
		constexpr auto fAoeDistance = 0xa10; // float
		constexpr auto m_Corrupter = 0xa14; // ObjectProperty
		constexpr auto fDeactivateTime = 0xa1c; // float
	}

	namespace n_UTgDeviceForm_CommanderScope { // : UTgDeviceForm_ToggleADS
		constexpr auto m_CachedOctavia = 0x2a0; // ObjectProperty
		constexpr auto m_bAirScoped = 0x2a8; // uint32_t : 1
		constexpr auto m_SimpleStanceAirScoped1P = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceAirScoped3P = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UPath_MinDistBetweenSpecsOfType { // : UPathConstraint
		constexpr auto MinDistBetweenSpecTypes = 0x6c; // float
		constexpr auto InitLocation = 0x70; // FVector
		constexpr auto ReachSpecClass = 0x7c; // UReachSpec*
	}

	namespace n_USeqAct_SetDOFParams { // : USeqAct_Latent
		constexpr auto FalloffExponent = 0x120; // float
		constexpr auto BlurKernelSize = 0x124; // float
		constexpr auto MaxNearBlurAmount = 0x128; // float
		constexpr auto MinBlurAmount = 0x12c; // float
		constexpr auto MaxFarBlurAmount = 0x130; // float
		constexpr auto FocusInnerRadius = 0x134; // float
		constexpr auto FocusDistance = 0x138; // float
		constexpr auto FocusPosition = 0x13c; // FVector
		constexpr auto InterpolateSeconds = 0x148; // float
		constexpr auto InterpolateElapsed = 0x14c; // float
		constexpr auto OldFalloffExponent = 0x150; // float
		constexpr auto OldBlurKernelSize = 0x154; // float
		constexpr auto OldMaxNearBlurAmount = 0x158; // float
		constexpr auto OldMinBlurAmount = 0x15c; // float
		constexpr auto OldMaxFarBlurAmount = 0x160; // float
		constexpr auto OldFocusInnerRadius = 0x164; // float
		constexpr auto OldFocusDistance = 0x168; // float
		constexpr auto OldFocusPosition = 0x16c; // FVector
	}

	namespace n_UUIComponent_Targeter_Rider { // : UUIComponent_Targeter_PointTargeter
		constexpr auto m_mcSpinner = 0x184; // ObjectProperty
		constexpr auto m_fSpinnerRotation = 0x18c; // float
		constexpr auto m_nNumStacks = 0x190; // int32_t
		constexpr auto m_nMaxStacks = 0x194; // int32_t
	}

	namespace n_USeqAct_CastToFloat { // : USeqAct_SetSequenceVariable
		constexpr auto Value = 0x108; // int32_t
		constexpr auto FloatResult = 0x10c; // float
	}

	namespace n_UUIData_TreasureRoll { // : UUIData
		constexpr auto m_pChestItem = 0x64; // ObjectProperty
		constexpr auto m_dwRollDelay = 0x6c; // Fdword
		constexpr auto m_pRolledItems = 0x70; // TArray<ObjectProperty>
	}

	namespace n_ASceneCaptureCubeMapActor { // : ASceneCaptureActor
		constexpr auto StaticMesh = 0x288; // ComponentProperty
		constexpr auto CubeMaterialInst = 0x290; // ObjectProperty
	}

	namespace n_UProcBuildingRuleset { // : UObject
		constexpr auto RootRule = 0x60; // ObjectProperty
		constexpr auto bBeingEdited = 0x68; // uint32_t : 1
		constexpr auto bEnableInteriorTexture = 0x68; // uint32_t : 1
		constexpr auto bLODOnlyRoof = 0x68; // uint32_t : 1
		constexpr auto bPickRandomSwatch = 0x68; // uint32_t : 1
		constexpr auto DefaultRoofMaterial = 0x6c; // ObjectProperty
		constexpr auto DefaultFloorMaterial = 0x74; // ObjectProperty
		constexpr auto DefaultNonRectWallMaterial = 0x7c; // ObjectProperty
		constexpr auto RoofZOffset = 0x84; // float
		constexpr auto NotRoofZOffset = 0x88; // float
		constexpr auto FloorZOffset = 0x8c; // float
		constexpr auto NotFloorZOffset = 0x90; // float
		constexpr auto RoofPolyInset = 0x94; // float
		constexpr auto FloorPolyInset = 0x98; // float
		constexpr auto BuildingLODSpecular = 0x9c; // float
		constexpr auto RoofEdgeScopeRaise = 0xa0; // float
		constexpr auto LODCubemap = 0xa4; // ObjectProperty
		constexpr auto InteriorTexture = 0xac; // ObjectProperty
		constexpr auto Variations = 0xb4; // TArray<FPBVariationInfo>
		constexpr auto ParamSwatches = 0xc4; // TArray<FPBParamSwatch>
	}

	namespace n_UMantleReachSpec { // : UForcedReachSpec
		constexpr auto bClimbUp = 0xc8; // uint32_t : 1
	}

	namespace n_UMaterialExpressionSceneDepth { // : UMaterialExpression
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto bNormalize = 0xe4; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByFall { // : UTgAnimNodeBlendList
		constexpr auto m_FallSource = 0x168; // EFallSource
		constexpr auto FallState = 0x169; // EBlendFallTypes
		constexpr auto m_PreviousTickPhysics = 0x16a; // EPhysics
		constexpr auto LastFallingVelocity = 0x16c; // float
		constexpr auto pOwner = 0x170; // ObjectProperty
		constexpr auto m_fPrelandDistance = 0x178; // float
		constexpr auto m_bDebugMeasureJumpUp = 0x17c; // uint32_t : 1
		constexpr auto m_bDebugMeasureJumpDownToLand = 0x17c; // uint32_t : 1
		constexpr auto m_bMeasuring = 0x17c; // uint32_t : 1
		constexpr auto m_bUsesPreDown = 0x17c; // uint32_t : 1
		constexpr auto m_bJumpOnly = 0x17c; // uint32_t : 1
		constexpr auto m_bForceDownOnRelevantWhileFalling = 0x17c; // uint32_t : 1
		constexpr auto m_bPlayDownStateWhileFlying = 0x17c; // uint32_t : 1
		constexpr auto m_StartMeasureJump = 0x180; // FVector
		constexpr auto m_fMeasureTime = 0x18c; // float
		constexpr auto m_fLandingMovementPlayRate = 0x190; // float
		constexpr auto m_nmNameLandingSynchGroup = 0x194; // FName
	}

	namespace n_UTgSeqEvent_SpawnLanePusher { // : USequenceEvent
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_UTgAIBehaviorComposite_Random { // : UTgAIBehaviorComposite
		constexpr auto ChildWeights = 0xb8; // TArray<float>
		constexpr auto ChildFreezeTime = 0xc8; // float
		constexpr auto bRandomizeOnComplete = 0xcc; // uint32_t : 1
	}

	namespace n_ATgDeviceVolume_Pulse { // : AVolume
		constexpr auto DamageInstigator = 0x2bc; // ObjectProperty
		constexpr auto m_nMapObjectId = 0x2c4; // int32_t
		constexpr auto s_nDeviceId = 0x2c8; // int32_t
		constexpr auto m_FireMode = 0x2cc; // ObjectProperty
		constexpr auto s_nTeamNumber = 0x2d4; // int32_t
		constexpr auto s_nTaskForce = 0x2d8; // char
	}

	namespace n_ATgChaosCapturePoint_ParticleStorm { // : ATgChaosCapturePoint
		constexpr auto m_FrontEffect = 0x3a0; // ObjectProperty
		constexpr auto m_SwirlEffect = 0x3a8; // ObjectProperty
		constexpr auto m_fFogStartDistance = 0x3b0; // float
		constexpr auto m_fFogConvergeSpeed = 0x3b4; // float
		constexpr auto m_fSecondsBeforeFogConverge = 0x3b8; // float
		constexpr auto m_fFogMapDistance = 0x3bc; // float
		constexpr auto m_fFogRadiusRatio = 0x3c0; // float
		constexpr auto m_fFogAlphaRatio = 0x3c4; // float
		constexpr auto m_2DSoundActor = 0x3c8; // ObjectProperty
		constexpr auto m_nNumMobileSoundActors = 0x3d0; // int32_t
		constexpr auto m_MobileSoundActors = 0x3d4; // TArray<ObjectProperty>
		constexpr auto m_MobileSoundActorAkEvent = 0x3e4; // ObjectProperty
		constexpr auto m_MobileSoundActorAkEvent_Alt = 0x3ec; // ObjectProperty
		constexpr auto m_vPerimeterAnchors = 0x3f4; // TArray<FVector>
		constexpr auto m_fTargetStartDistance = 0x404; // float
		constexpr auto m_fPreviousStartDistance = 0x408; // float
		constexpr auto m_fFogUpdateTimestamp = 0x40c; // float
		constexpr auto m_fSoundActorConvergeLimit = 0x410; // float
	}

	namespace n_ATgPawn_Grohk { // : ATgPawn_Character
		constexpr auto r_InhandTarget = 0x3164; // ObjectProperty
		constexpr auto r_InhandHitOffset = 0x316c; // FVector
		constexpr auto c_bIsInTempest = 0x3178; // uint32_t : 1
		constexpr auto c_fTempestOverlayStrength = 0x317c; // float
		constexpr auto c_fTempestRampUpRate = 0x3180; // float
		constexpr auto c_fTempsetRampDownRate = 0x3184; // float
		constexpr auto m_CachedTempest = 0x3188; // ObjectProperty
	}

	namespace n_UAnimNodeBlendList { // : UAnimNodeBlendBase
		constexpr auto TargetWeight = 0x114; // TArray<float>
		constexpr auto BlendTimeToGo = 0x124; // float
		constexpr auto ActiveChildIndex = 0x128; // int32_t
		constexpr auto bPlayActiveChild = 0x12c; // uint32_t : 1
		constexpr auto bForceChildFullWeightWhenBecomingRelevant = 0x12c; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x12c; // uint32_t : 1
		constexpr auto PlayActiveChildExceptionList = 0x130; // TArray<int32_t>
		constexpr auto SliderPosition = 0x140; // float
	}

	namespace n_UTgSkelCon_MirrorFromOtherMesh { // : USkelControlSingleBone
		constexpr auto m_nmIdentifier = 0x100; // FName
		constexpr auto m_PawnOwner = 0x108; // ObjectProperty
		constexpr auto m_MirrorControl = 0x110; // ObjectProperty
	}

	namespace n_UUIComponent_LoadoutHeader { // : UUIComponent_Display
		constexpr auto m_Back = 0x124; // ObjectProperty
		constexpr auto m_Prev = 0x12c; // ObjectProperty
		constexpr auto m_Next = 0x134; // ObjectProperty
		constexpr auto m_InputNext = 0x13c; // ObjectProperty
		constexpr auto m_InputPrev = 0x144; // ObjectProperty
	}

	namespace n_USeqEvent_SequenceActivated { // : USequenceEvent
		constexpr auto InputLabel = 0x128; // FString
	}

	namespace n_AGameCrowdPopulationManager { // : ACrowdPopulationManagerBase
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto CloudSpawnInfo = 0x288; // FCrowdSpawnInfoItem
		constexpr auto ScriptedSpawnInfo = 0x318; // TArray<FCrowdSpawnInfoItem>
		constexpr auto ActiveCrowdInfoVolume = 0x328; // ObjectProperty
		constexpr auto GlobalPotentialSpawnPoints = 0x330; // TArray<ObjectProperty>
		constexpr auto SplitScreenNumReduction = 0x340; // float
		constexpr auto PlayerPositionPredictionTime = 0x344; // float
		constexpr auto HeadVisibilityOffset = 0x348; // float
		constexpr auto NavigationHandleClass = 0x34c; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x354; // ObjectProperty
		constexpr auto QueryingAgent = 0x35c; // ObjectProperty
		constexpr auto PlayerInfo = 0x364; // TArray<FCrowdSpawnerPlayerInfo>
		constexpr auto LastPlayerInfoUpdateTime = 0x374; // float
		constexpr auto bDebugSpawns = 0x378; // uint32_t : 1
		constexpr auto bPauseCrowd = 0x378; // uint32_t : 1
	}

	namespace n_UHttpRequestInterface { // : UHttpBaseInterface
		constexpr auto __OnProcessRequestComplete__Delegate = 0x60; // DelegateProperty
	}

	namespace n_UUIScene_UIPurchaseGems { // : UUIScene
		constexpr auto m_dwVendorRequestId = 0x1cc; // Fdword
	}

	namespace n_USeqAct_ActorFactory { // : USeqAct_Latent
		constexpr auto bEnabled = 0x120; // uint32_t : 1
		constexpr auto bIsSpawning = 0x120; // uint32_t : 1
		constexpr auto bCheckSpawnCollision = 0x120; // uint32_t : 1
		constexpr auto Factory = 0x124; // ObjectProperty
		constexpr auto PointSelection = 0x12c; // EPointSelection
		constexpr auto SpawnPoints = 0x130; // TArray<ObjectProperty>
		constexpr auto SpawnLocations = 0x140; // TArray<FVector>
		constexpr auto SpawnOrientations = 0x150; // TArray<FVector>
		constexpr auto SpawnCount = 0x160; // int32_t
		constexpr auto SpawnDelay = 0x164; // float
		constexpr auto LastSpawnIdx = 0x168; // int32_t
		constexpr auto CurrentSpawnIdx = 0x16c; // int32_t
		constexpr auto SpawnedCount = 0x170; // int32_t
		constexpr auto RemainingDelay = 0x174; // float
	}

	namespace n_ATgCameraVolume { // : AVolume
		constexpr auto AssociatedCamera = 0x2bc; // ObjectProperty
	}

	namespace n_UCameraModifier { // : UObject
		constexpr auto bDisabled = 0x60; // uint32_t : 1
		constexpr auto bPendingDisable = 0x60; // uint32_t : 1
		constexpr auto bExclusive = 0x60; // uint32_t : 1
		constexpr auto bDebug = 0x60; // uint32_t : 1
		constexpr auto CameraOwner = 0x64; // ObjectProperty
		constexpr auto Priority = 0x6c; // char
		constexpr auto AlphaInTime = 0x70; // float
		constexpr auto AlphaOutTime = 0x74; // float
		constexpr auto Alpha = 0x78; // float
		constexpr auto TargetAlpha = 0x7c; // float
	}

	namespace n_UTgAnimNodePlayFireAnim { // : UTgAnimNodeBlendList
		constexpr auto FireAnimNodeName = 0x168; // FName
		constexpr auto FireAnimNodeSequence = 0x170; // ObjectProperty
	}

	namespace n_UUIComponent_EndOfMatchLobbyChallenges { // : UUIComponent_Display
		constexpr auto m_pChallenges = 0x124; // ObjectProperty
		constexpr auto m_grChallenges = 0x12c; // ObjectProperty
	}

	namespace n_UGameThirdPersonCameraMode_Default { // : UGameThirdPersonCameraMode
		constexpr auto WorstLocAimingZOffset = 0x258; // float
		constexpr auto bTemporaryOriginRotInterp = 0x25c; // uint32_t : 1
		constexpr auto TemporaryOriginRotInterpSpeed = 0x260; // float
	}

	namespace n_UWindPointSourceComponent { // : UWindDirectionalSourceComponent
		constexpr auto PreviewRadiusComponent = 0xa0; // ComponentProperty
		constexpr auto Radius = 0xa8; // float
	}

	namespace n_UUIComponent_TwitchPrime { // : UUIComponent_Display
		constexpr auto m_pClaimButton = 0x124; // ObjectProperty
		constexpr auto m_pNotNowButton = 0x12c; // ObjectProperty
		constexpr auto m_pLinkButton = 0x134; // ObjectProperty
		constexpr auto m_pRewardItems = 0x13c; // ObjectProperty
		constexpr auto m_pLinkAccountPopup = 0x144; // ObjectProperty
		constexpr auto m_mcTwitchLink = 0x14c; // ObjectProperty
	}

	namespace n_UInterpTrackInstFloatMaterialParam { // : UInterpTrackInst
		constexpr auto MICInfos = 0x60; // TArray<FFloatMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_UNavMeshGoal_Filter { // : UObject
		constexpr auto bShowDebug = 0x60; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x64; // int32_t
		constexpr auto NumNodesProcessed = 0x68; // int32_t
	}

	namespace n_UMorphTarget { // : UObject
		constexpr auto MorphLODModels = 0x60; // TArray<int32_t>
		constexpr auto MaterialSlotId = 0x70; // int32_t
		constexpr auto ScalarParameterName = 0x74; // FName
	}

	namespace n_UUIComponent_Skill { // : UUIComponent_Display
		constexpr auto m_mcPrompt = 0x124; // ObjectProperty
		constexpr auto m_mcBase = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcTitle = 0x13c; // ObjectProperty
		constexpr auto m_mcDamage = 0x144; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x14c; // ObjectProperty
		constexpr auto m_mcSubtitleShort = 0x154; // ObjectProperty
		constexpr auto m_mcCooldown = 0x15c; // ObjectProperty
		constexpr auto m_mcCooldownTF = 0x164; // ObjectProperty
	}

	namespace n_USeqAct_SetVectorComponents { // : USequenceAction
		constexpr auto OutVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_URB_BodyInstance { // : UObject
		constexpr auto OwnerComponent = 0x60; // ComponentProperty
		constexpr auto BodyIndex = 0x68; // int32_t
		constexpr auto Velocity = 0x6c; // FVector
		constexpr auto PreviousVelocity = 0x78; // FVector
		constexpr auto SceneIndex = 0x84; // int32_t
		constexpr auto BodyData = 0x88; // FPointer
		constexpr auto BoneSpring = 0x90; // FPointer
		constexpr auto BoneSpringKinActor = 0x98; // FPointer
		constexpr auto bEnableBoneSpringLinear = 0xa0; // uint32_t : 1
		constexpr auto bEnableBoneSpringAngular = 0xa0; // uint32_t : 1
		constexpr auto bDisableOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bNotifyOwnerOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bTeleportOnOverextension = 0xa0; // uint32_t : 1
		constexpr auto bUseKinActorForBoneSpring = 0xa0; // uint32_t : 1
		constexpr auto bMakeSpringToBaseCollisionComponent = 0xa0; // uint32_t : 1
		constexpr auto bOnlyCollideWithPawns = 0xa0; // uint32_t : 1
		constexpr auto bEnableCollisionResponse = 0xa0; // uint32_t : 1
		constexpr auto bPushBody = 0xa0; // uint32_t : 1
		constexpr auto bForceUnfixed = 0xa0; // uint32_t : 1
		constexpr auto bInstanceAlwaysFullAnimWeight = 0xa0; // uint32_t : 1
		constexpr auto BoneLinearSpring = 0xa4; // float
		constexpr auto BoneLinearDamping = 0xa8; // float
		constexpr auto BoneAngularSpring = 0xac; // float
		constexpr auto BoneAngularDamping = 0xb0; // float
		constexpr auto OverextensionThreshold = 0xb4; // float
		constexpr auto CustomGravityFactor = 0xb8; // float
		constexpr auto LastEffectPlayedTime = 0xbc; // float
		constexpr auto ContactReportForceThreshold = 0xc0; // float
		constexpr auto InstanceMassScale = 0xc4; // float
		constexpr auto InstanceDampingScale = 0xc8; // float
		constexpr auto PhysMaterialOverride = 0xcc; // ObjectProperty
	}

	namespace n_UUIDataProvider_Settings { // : UUIPropertyDataProvider
		constexpr auto Settings = 0x90; // ObjectProperty
		constexpr auto bIsAListRow = 0x98; // uint32_t : 1
	}

	namespace n_USeqVar_External { // : USequenceVariable
		constexpr auto ExpectedType = 0xa0; // USequenceVariable*
		constexpr auto VariableLabel = 0xa8; // FString
	}

	namespace n_ATgWeaponMeshActor_BombKingInhand { // : ATgWeaponMeshActor
		constexpr auto m_bPlayPoppyDetonateAnimation = 0x450; // uint32_t : 1
	}

	namespace n_UTgAnimBlendInterpBySpeed { // : UAnimNodeBlend
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
		constexpr auto m_fBlendTime = 0x12c; // float
		constexpr auto m_fFullRunSpeed = 0x130; // float
		constexpr auto m_fFullIdleSpeed = 0x134; // float
	}

	namespace n_UTgEffectDamage_PresenceDoT { // : UTgEffectDamage
		constexpr auto m_EffectTimeStamps = 0xc4; // TArray<float>
		constexpr auto m_EffectDamageValues = 0xd4; // TArray<float>
		constexpr auto m_DamageInstances = 0xe4; // FPointer
	}

	namespace n_UTgIconManager { // : UObject
		constexpr auto m_GFxReferenceToIconDetailsMap = 0x60; // FMap_Mirror
		constexpr auto m_ItemIdToIconGroupMap = 0xa8; // FMultiMap_Mirror
		constexpr auto m_TextureStringToIconGroupMap = 0xf0; // FMultiMap_Mirror
	}

	namespace n_UTimeLapseRecordingDriver { // : UNetDriver
		constexpr auto DemoSpectatorClass = 0x208; // FString
		constexpr auto DefaultRewindTime = 0x218; // float
	}

	namespace n_UTgAnimNodeStanceTransitioner { // : UAnimNodeBlendList
		constexpr auto m_DefaultStance = 0x144; // int32_t
		constexpr auto m_CurrentStance = 0x148; // int32_t
		constexpr auto m_bIsPlayingTransition = 0x14c; // uint32_t : 1
		constexpr auto m_BlendTransitionDuration = 0x150; // float
		constexpr auto m_StanceNodeInfos = 0x154; // TArray<FCachedTgAnimNodeStanceInfo>
		constexpr auto m_TransitionNodeInfos = 0x164; // TArray<FCachedTgAnimNodeStanceTransitionInfo>
	}

	namespace n_UTgGameDC_Game { // : UTgDataChunk
		constexpr auto m_GameTimer = 0x158; // ObjectProperty
		constexpr auto m_FriendTeamData = 0x160; // ObjectProperty
		constexpr auto m_EnemyTeamData = 0x168; // ObjectProperty
		constexpr auto m_GoldFury = 0x170; // ObjectProperty
		constexpr auto currentGameType = 0x178; // GAME_MODE_TYPE
	}

	namespace n_UInstancedStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto PerInstanceData = 0x310; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto PerInstanceSMData = 0x320; // TArray<FInstancedStaticMeshInstanceData>
		constexpr auto NumPendingLightmaps = 0x330; // int32_t
		constexpr auto ComponentJoinKey = 0x334; // int32_t
		constexpr auto CachedMappings = 0x338; // TArray<FInstancedStaticMeshMappingInfo>
		constexpr auto InstancingRandomSeed = 0x348; // int32_t
		constexpr auto InstanceStartCullDistance = 0x34c; // int32_t
		constexpr auto InstanceEndCullDistance = 0x350; // int32_t
		constexpr auto StreamingBounds = 0x354; // FBoxSphereBounds
		constexpr auto InstanceBufferResource = 0x370; // FPointer
		constexpr auto InstancedMeshStreamGroup = 0x378; // FPointer
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x380; // uint32_t : 1
		constexpr auto bStreamInstanceBuffer = 0x380; // uint32_t : 1
		constexpr auto bDontResolveInstancedLightmaps = 0x380; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_HitWithDevice { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bIgnoreChildDevice = 0xcc; // uint32_t : 1
		constexpr auto m_bAutoProcOnInhand = 0xcc; // uint32_t : 1
		constexpr auto m_bAutoProcOnAsIfInhand = 0xcc; // uint32_t : 1
		constexpr auto m_bSkipActiveCheck = 0xcc; // uint32_t : 1
		constexpr auto m_bSkipStartCooldown = 0xcc; // uint32_t : 1
		constexpr auto m_bUseAllyTargets = 0xcc; // uint32_t : 1
		constexpr auto m_nLastFireLoopInstanceId = 0xd0; // int32_t
		constexpr auto m_nNumTimesApplied = 0xd4; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_FirstShotAfterMovementAbility { // : UTgInvListener
		constexpr auto m_fLastMovementAbilityTime = 0xc4; // float
		constexpr auto m_bJustFinishedMovementAbility = 0xc8; // uint32_t : 1
		constexpr auto m_nNumApplicationsRemaining = 0xcc; // int32_t
		constexpr auto m_fLastAppliedTime = 0xd0; // float
	}

	namespace n_USeqEvent_AnimNotify { // : USequenceEvent
		constexpr auto NotifyName = 0x128; // FName
	}

	namespace n_UTgInventoryObject_Listen_PipConsequential { // : UTgInvListener
		constexpr auto s_nHitCounter = 0xc4; // int32_t
	}

	namespace n_ATgHeightFog { // : AInfo
		constexpr auto FogComponent = 0x280; // ComponentProperty
	}

	namespace n_ATgPawn_Blades { // : ATgPawn_Character
		constexpr auto m_fGravityFalloffDuration = 0x3164; // float
		constexpr auto m_fGravityFalloffTimer = 0x3168; // float
		constexpr auto m_fAirControlReductionDuration = 0x316c; // float
		constexpr auto m_fAirControlReductionTimer = 0x3170; // float
		constexpr auto m_fAirControlReductionPercent = 0x3174; // float
		constexpr auto r_bProwlActive = 0x3178; // uint32_t : 1
		constexpr auto c_bHasDjSkin = 0x3178; // uint32_t : 1
		constexpr auto c_bHasDjWeapon = 0x3178; // uint32_t : 1
		constexpr auto r_fProwlAccelMultiplier = 0x317c; // float
		constexpr auto r_fProwlGroundSpeedMultiplier = 0x3180; // float
		constexpr auto r_fProwlJumpHeightMultiplier = 0x3184; // float
		constexpr auto r_fProwlAirControlMultiplier = 0x3188; // float
		constexpr auto r_fProwlFadeOutDuration = 0x318c; // float
		constexpr auto m_fProwlFadeOutTimer = 0x3190; // float
		constexpr auto r_fFeatherliteGravityMultiplier = 0x3194; // float
		constexpr auto r_eGemEmissiveAnim = 0x3198; // GemEmissiveAnim
		constexpr auto r_eGemEmissiveEndAnim = 0x3199; // GemEmissiveAnim
		constexpr auto c_eCurrentDjBladesFace = 0x319a; // DjBladesFace
		constexpr auto c_eDjBladesFace = 0x319b; // DjBladesFace [0x3]
		constexpr auto c_pGemEmissiveMIC = 0x31a0; // ObjectProperty
		constexpr auto m_nmGemEmissiveParamName = 0x31a8; // FName
		constexpr auto m_fGemEmissiveBaseValue = 0x31b0; // float
		constexpr auto m_fGemEmissiveBaseAnimSpeed = 0x31b4; // float
		constexpr auto c_fGemEmissiveCurrentValue = 0x31b8; // float
		constexpr auto c_eGemEmissiveAnimType = 0x31bc; // TArray<GemEmissiveAnim>
		constexpr auto c_fGemEmissiveTargetValue = 0x31cc; // TArray<float>
		constexpr auto c_fGemEmissiveAnimSpeed = 0x31dc; // TArray<float>
		constexpr auto c_fGemEmissiveHoldTimer = 0x31ec; // TArray<float>
		constexpr auto m_fGemEmissive1PBaseValue = 0x31fc; // float
		constexpr auto m_fGemEmissive1PAnimSpeedMult = 0x3200; // float
		constexpr auto m_fGemEmissive1PValueMult = 0x3204; // float
		constexpr auto m_fGemEmissiveGlobalScalar = 0x3208; // float
		constexpr auto c_fDjBladesFaceTimeout = 0x320c; // float [0x3]
		constexpr auto c_DjBladesFaceConfig = 0x3218; // FDjBladesFaceConfig [0x8]
		constexpr auto c_DjBladesVGSFaces = 0x3258; // TArray<FDjBladesVGSFace>
		constexpr auto c_nmDjBladesFaceXParamName = 0x3268; // FName
		constexpr auto c_nmDjBladesFaceYParamName = 0x3270; // FName
	}

	namespace n_ATgDevice_WallBang { // : ATgDevice
		constexpr auto m_SaatiUltFireDevice = 0xa08; // ObjectProperty
		constexpr auto m_bShouldShowUltUI = 0xa10; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetDamageableByDevice { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_UTgMaterialStack { // : UObject
		constexpr auto m_pOwner = 0x60; // ComponentProperty
		constexpr auto m_nMaterialStackId = 0x68; // int32_t
		constexpr auto m_MaterialStack = 0x6c; // TArray<FMaterialStackInstance>
	}

	namespace n_UUIComponent_ChallengeGoal { // : UUIComponent_Display
		constexpr auto m_pProgress = 0x124; // ObjectProperty
		constexpr auto m_mcTexture = 0x12c; // ObjectProperty
		constexpr auto m_mcTF0 = 0x134; // ObjectProperty
		constexpr auto m_mcCheckmark = 0x13c; // ObjectProperty
	}

	namespace n_UUIInteraction { // : UInteraction
		constexpr auto VfTable_FExec = 0xb0; // FPointer
		constexpr auto VfTable_FGlobalDataStoreClientManager = 0xb8; // FPointer
		constexpr auto VfTable_FCallbackEventDevice = 0xc0; // FPointer
		constexpr auto UIManager = 0xc8; // ObjectProperty
		constexpr auto UIManagerClass = 0xd0; // UUIManager*
		constexpr auto SceneClientClass = 0xd8; // UGameUISceneClient*
		constexpr auto SceneClient = 0xe0; // ObjectProperty
		constexpr auto SupportedDoubleClickKeys = 0xe8; // TArray<FName>
		constexpr auto DataStoreManager = 0xf8; // ObjectProperty
		constexpr auto bProcessInput = 0x100; // uint32_t : 1
		constexpr auto UIJoystickDeadZone = 0x104; // float
		constexpr auto UIAxisMultiplier = 0x108; // float
		constexpr auto AxisRepeatDelay = 0x10c; // float
		constexpr auto MouseButtonRepeatDelay = 0x110; // float
		constexpr auto DoubleClickTriggerSeconds = 0x114; // float
		constexpr auto DoubleClickPixelTolerance = 0x118; // int32_t
		constexpr auto MouseButtonRepeatInfo = 0x11c; // FUIKeyRepeatData
		constexpr auto ConfiguredAxisEmulationDefinitions = 0x12c; // TArray<FUIAxisEmulationDefinition>
		constexpr auto AxisEmulationDefinitions = 0x13c; // TMap<None, None>
		constexpr auto AxisInputEmulation = 0x184; // FUIAxisEmulationData [0x18]
	}

	namespace n_ATgDeploy_ShieldSiegeUnit { // : ATgDeployable
		constexpr auto m_InitRotation = 0x46c; // FRotator
		constexpr auto m_VFXCollisionMesh = 0x478; // ComponentProperty
		constexpr auto m_CollisionProxy = 0x480; // ObjectProperty
		constexpr auto m_WatchtowerFiremode = 0x488; // ObjectProperty
		constexpr auto m_CachedWatchtowerCard = 0x490; // ObjectProperty
		constexpr auto r_GroundSpeed = 0x498; // float
		constexpr auto m_bOnlyHitOnce = 0x49c; // uint32_t : 1
		constexpr auto m_TouchingPawns = 0x4a0; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionNormalize { // : UMaterialExpression
		constexpr auto VectorInput = 0xb0; // FExpressionInput
	}

	namespace n_UTgAIBehaviorCondition_VisibilityBase { // : UTgAIBehaviorCondition
		constexpr auto bRestrictFoV = 0x98; // uint32_t : 1
	}

	namespace n_UPBRuleNodeEdgeMesh { // : UPBRuleNodeBase
		constexpr auto FlatThreshold = 0x70; // float
		constexpr auto MainXPullIn = 0x74; // float
	}

	namespace n_UMaterialExpressionFloor { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_ATgVisibilityVolume { // : AVolume
		constexpr auto m_PlayerCameraParticleSystem = 0x2bc; // ObjectProperty
		constexpr auto m_PlayerCameraInvisibleParticleSystem = 0x2c4; // ObjectProperty
	}

	namespace n_USeqAct_PrepareMapChange { // : USeqAct_Latent
		constexpr auto MainLevelName = 0x120; // FName
		constexpr auto InitiallyLoadedSecondaryLevelNames = 0x128; // TArray<FName>
		constexpr auto bIsHighPriority = 0x138; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x138; // uint32_t : 1
	}

	namespace n_USeqAct_MultiplyFloat { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_ATgProj_SaatiCoin { // : ATgProj_FreeGrenade
		constexpr auto m_CoinHitBoxCollisionComponent = 0x580; // ComponentProperty
	}

	namespace n_UPComGameEngine { // : UGameEngine
		constexpr auto pOutgoingMarshal = 0xaa8; // FPointer
	}

	namespace n_UTgAIBehaviorAction_LookAtFortress { // : UTgAIBehaviorAction
		constexpr auto bMustBeEnemy = 0x94; // uint32_t : 1
	}

	namespace n_UUIMatchLobby { // : UTgGfxScene
		constexpr auto m_akTabChange = 0x1ec; // ObjectProperty
		constexpr auto m_nTencentRecommendedChampions = 0x1f4; // TArray<int32_t>
	}

	namespace n_UTgAnimNodeBlendByDrogozFlying { // : UTgAnimNodeBlendList
		constexpr auto m_BoosterRecords = 0x168; // TArray<FBoosterFlightInfo>
		constexpr auto m_CachedDrogozOwner = 0x178; // ObjectProperty
		constexpr auto m_bInThrust = 0x180; // uint32_t : 1
		constexpr auto m_bInBooster = 0x180; // uint32_t : 1
		constexpr auto m_bTransitionsCanBeInterrupted = 0x180; // uint32_t : 1
		constexpr auto m_fBoosterStartTime = 0x184; // float
		constexpr auto m_fBoosterRelevancyWindow = 0x188; // float
		constexpr auto m_fBoosterTriggerPercent = 0x18c; // float
		constexpr auto m_fMaxFlightFallSpeed = 0x190; // float
	}

	namespace n_UUIScene_UIQuests { // : UUIScene
		constexpr auto m_mcDailyQuests = 0x1cc; // ObjectProperty
		constexpr auto m_mcActiveDailyQuests = 0x1d4; // ObjectProperty
		constexpr auto m_DailyQuestsGroup = 0x1dc; // ObjectProperty
		constexpr auto m_DailyQuestList = 0x1e4; // ObjectProperty
		constexpr auto m_mcDailyLoginsResetTF = 0x1ec; // ObjectProperty
		constexpr auto m_EmptyPanels = 0x1f4; // TArray<FEmptyPanel>
		constexpr auto m_ChampionQuest = 0x204; // ObjectProperty
		constexpr auto m_DailyLoginsQuest = 0x20c; // ObjectProperty
		constexpr auto m_mcSpecialQuests = 0x214; // ObjectProperty
		constexpr auto m_mcActiveSpecialQuests = 0x21c; // ObjectProperty
		constexpr auto m_SpecialQuestsGroup = 0x224; // ObjectProperty
		constexpr auto m_SpecialQuestList = 0x22c; // ObjectProperty
		constexpr auto m_SpecialQuestsArrowNext = 0x234; // ObjectProperty
		constexpr auto m_SpecialQuestsArrowPrev = 0x23c; // ObjectProperty
		constexpr auto m_mcLoreQuests = 0x244; // ObjectProperty
		constexpr auto m_LoreQuestsGroup = 0x24c; // ObjectProperty
		constexpr auto m_LoreQuest = 0x254; // ObjectProperty
		constexpr auto m_mcLoreQuestTFNext = 0x25c; // ObjectProperty
		constexpr auto m_mcLoreQuestProgress = 0x264; // ObjectProperty
		constexpr auto m_mcLoreQuestProgressChest = 0x26c; // ObjectProperty
		constexpr auto m_mcLoreQuestProgressTF0 = 0x274; // ObjectProperty
		constexpr auto m_mcLoreQuestProgressTF1 = 0x27c; // ObjectProperty
		constexpr auto m_mcLoreQuestProgressTF2 = 0x284; // ObjectProperty
		constexpr auto m_mcLoreQuestProgressTF3 = 0x28c; // ObjectProperty
		constexpr auto m_LoreQuestProgressBar = 0x294; // ObjectProperty
		constexpr auto m_nLoreSeekerGoalAck = 0x29c; // int32_t
		constexpr auto m_nLoreSeekerGoalCurrent = 0x2a0; // int32_t
		constexpr auto m_pPrimeQuest = 0x2a4; // ObjectProperty
		constexpr auto m_PrimeQuestGroup = 0x2ac; // ObjectProperty
		constexpr auto m_mcDailyLogins = 0x2b4; // ObjectProperty
		constexpr auto m_DailyLoginsProgress = 0x2bc; // ObjectProperty
		constexpr auto m_mcDailyLoginsTF0 = 0x2c4; // ObjectProperty
		constexpr auto m_mcDailyLoginsTF1 = 0x2cc; // ObjectProperty
		constexpr auto m_eCurrentPanel = 0x2d4; // QuestPanel
		constexpr auto m_nNumDailyQuests = 0x2d8; // int32_t
		constexpr auto m_nNumSpecialQuests = 0x2dc; // int32_t
		constexpr auto m_nQuestsUpdatedHandle = 0x2e0; // int32_t
		constexpr auto m_nActivitiesUpdatedHandle = 0x2e4; // int32_t
		constexpr auto m_DiscardAction = 0x2e8; // ObjectProperty
		constexpr auto m_ClaimRewardAction = 0x2f0; // ObjectProperty
		constexpr auto m_LinkAccountAction = 0x2f8; // ObjectProperty
		constexpr auto m_BackAction = 0x300; // ObjectProperty
		constexpr auto m_pSelectedQuest = 0x308; // ObjectProperty
	}

	namespace n_UTgAchievement_KillDuringDeviceInvocation { // : UTgAchievement
		constexpr auto m_CachedDevice = 0x94; // ObjectProperty
		constexpr auto m_bFiring = 0x9c; // uint32_t : 1
		constexpr auto m_bKillThresholdReachedThisInvocation = 0x9c; // uint32_t : 1
		constexpr auto m_nKillsOccurredThisInvocation = 0xa0; // int32_t
	}

	namespace n_UUIComponent_MatchLobbyRoleTab { // : UUIComponent_Display
		constexpr auto m_pButton = 0x124; // ObjectProperty
		constexpr auto m_mcSelected = 0x12c; // ObjectProperty
		constexpr auto m_mcWarning = 0x134; // ObjectProperty
	}

	namespace n_UMobileMenuElement { // : UObject
		constexpr auto VpPos = 0x60; // FVector2D
		constexpr auto VpSize = 0x68; // FVector2D
		constexpr auto bIsVisible = 0x70; // uint32_t : 1
		constexpr auto bIsActive = 0x70; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_MoveToRallyPoint { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto ArbitratorOnMultipleValid = 0x9c; // ESelectionArbitrator
		constexpr auto bMustBeSameLane = 0xa0; // uint32_t : 1
	}

	namespace n_ATgDevice_ChainLightning { // : ATgDevice_ArcingBeam
		constexpr auto m_CachedInhand = 0xa20; // ObjectProperty
	}

	namespace n_USequenceOp { // : USequenceObject
		constexpr auto bIsActivated = 0x98; // uint32_t : 1
		constexpr auto bIsCurrentDebuggerOp = 0x98; // uint32_t : 1
		constexpr auto bActive = 0x98; // uint32_t : 1
		constexpr auto bLatentExecution = 0x98; // uint32_t : 1
		constexpr auto bAutoActivateOutputLinks = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingVarConnector = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingInputConnector = 0x98; // uint32_t : 1
		constexpr auto bHaveMovingOutputConnector = 0x98; // uint32_t : 1
		constexpr auto bPendingVarConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bPendingInputConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bPendingOutputConnectorRecalc = 0x98; // uint32_t : 1
		constexpr auto bIsBreakpointSet = 0x98; // uint32_t : 1
		constexpr auto bIsHiddenBreakpointSet = 0x98; // uint32_t : 1
		constexpr auto InputLinks = 0x9c; // TArray<FSeqOpInputLink>
		constexpr auto OutputLinks = 0xac; // TArray<FSeqOpOutputLink>
		constexpr auto VariableLinks = 0xbc; // TArray<FSeqVarLink>
		constexpr auto EventLinks = 0xcc; // TArray<FSeqEventLink>
		constexpr auto PlayerIndex = 0xdc; // int32_t
		constexpr auto GamepadID = 0xe0; // char
		constexpr auto ActivateCount = 0xe4; // int32_t
		constexpr auto SearchTag = 0xe8; // int32_t
	}

	namespace n_AEmitterPool { // : AActor
		constexpr auto PSCTemplate = 0x280; // ComponentProperty
		constexpr auto PoolComponents = 0x288; // TArray<ComponentProperty>
		constexpr auto ActiveComponents = 0x298; // TArray<ComponentProperty>
		constexpr auto MaxActiveEffects = 0x2a8; // int32_t
		constexpr auto InitialPooledComponentCount = 0x2ac; // int32_t
		constexpr auto bLogPoolOverflow = 0x2b0; // uint32_t : 1
		constexpr auto bLogPoolOverflowList = 0x2b0; // uint32_t : 1
		constexpr auto RelativePSCs = 0x2b4; // TArray<FEmitterBaseInfo>
		constexpr auto SMC_MIC_ReductionTime = 0x2c4; // float
		constexpr auto SMC_MIC_CurrentReductionTime = 0x2c8; // float
		constexpr auto IdealStaticMeshComponents = 0x2cc; // int32_t
		constexpr auto IdealMaterialInstanceConstants = 0x2d0; // int32_t
		constexpr auto FreeSMComponents = 0x2d4; // TArray<ComponentProperty>
		constexpr auto FreeMatInstConsts = 0x2e4; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleSizeMultiplyLife { // : UParticleModuleSizeBase
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // uint32_t : 1
		constexpr auto MultiplyY = 0x8c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x8c; // uint32_t : 1
	}

	namespace n_UFacebookIntegration { // : UPlatformInterfaceBase
		constexpr auto AppID = 0x80; // FString
		constexpr auto Permissions = 0x90; // TArray<FString>
		constexpr auto UserName = 0xa0; // FString
		constexpr auto UserId = 0xb0; // FString
		constexpr auto AccessToken = 0xc0; // FString
		constexpr auto FriendsList = 0xd0; // TArray<FFacebookFriend>
	}

	namespace n_UInterpTrackFade { // : UInterpTrackFloatBase
		constexpr auto bPersistFade = 0xb8; // uint32_t : 1
	}

	namespace n_ATgPawn_Androxus { // : ATgPawn_Character
		constexpr auto m_bIsInSlowFall = 0x3164; // uint32_t : 1
		constexpr auto r_bIsInSlowFallSimulated = 0x3164; // uint32_t : 1
		constexpr auto m_bForceAccursedArmDevice = 0x3164; // uint32_t : 1
		constexpr auto r_bAccursedArmFiring = 0x3164; // uint32_t : 1
		constexpr auto m_bUltimateReadyDisplayGroupOn = 0x3164; // uint32_t : 1
		constexpr auto m_fAccursedArmSpeedModifier = 0x3168; // float
		constexpr auto m_AccursedArmInHand = 0x316c; // ObjectProperty
		constexpr auto m_fDefianceAirControl = 0x3174; // float
		constexpr auto m_fAirHangGravityModifier = 0x3178; // float
		constexpr auto m_fJumpHoldMaxFallSpeed = 0x317c; // float
		constexpr auto m_NetherStepDevice = 0x3180; // ObjectProperty
		constexpr auto r_fFeatherweightDamageReduction = 0x3188; // float
		constexpr auto r_fLiftOffDrift = 0x318c; // float
		constexpr auto m_nAccursedArmActiveFX = 0x3190; // int32_t
		constexpr auto m_SlowFallAnimNodes = 0x3194; // TArray<ObjectProperty>
		constexpr auto r_nDesiredSlowFallAnimChild = 0x31a4; // int32_t
		constexpr auto m_SlowFallFX = 0x31a8; // ObjectProperty
	}

	namespace n_UUIHudChampionSelect { // : UTgGfxScene
		constexpr auto m_mcBack = 0x1ec; // ObjectProperty
		constexpr auto m_mcTitle = 0x1f4; // ObjectProperty
		constexpr auto m_mcChampion = 0x1fc; // ObjectProperty [0x3c]
		constexpr auto m_mcChampionIcon = 0x3dc; // ObjectProperty [0x3c]
		constexpr auto m_mcChampionTitle = 0x5bc; // ObjectProperty [0x3c]
		constexpr auto m_mcChampionSubtitle = 0x79c; // ObjectProperty [0x3c]
		constexpr auto m_grChampions = 0x97c; // ObjectProperty
		constexpr auto m_AvailableChampions = 0x984; // TArray<ObjectProperty>
	}

	namespace n_UMorphNodeWeight { // : UMorphNodeWeightBase
		constexpr auto NodeWeight = 0x84; // float
	}

	namespace n_UTgInvListener_SoulChargesConsumed { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bIsListenerActive = 0xcc; // uint32_t : 1
		constexpr auto m_nNumSoulCharges = 0xd0; // int32_t
	}

	namespace n_UTgAnimNodeBlendByIntroduction { // : UTgAnimNodeBlendList
		constexpr auto m_bIsRelevant = 0x168; // uint32_t : 1
	}

	namespace n_UTgAnimNotify_ToggleRigidBodies { // : UAnimNotify
		constexpr auto BoneNames = 0x68; // TArray<FName>
		constexpr auto Effect = 0x78; // ERigidBodyFixationChange
	}

	namespace n_UTgSeqEvent_Escort_Despawn_Success { // : USequenceEvent
		constexpr auto DefendersTaskForce = 0x128; // int32_t
	}

	namespace n_ATgPawn_Raum { // : ATgPawn_Character
		constexpr auto m_CachedMinigun = 0x3164; // ObjectProperty
		constexpr auto m_CachedRev = 0x316c; // ObjectProperty
		constexpr auto m_CachedSuck = 0x3174; // ObjectProperty
		constexpr auto m_CachedUlt = 0x317c; // ObjectProperty
		constexpr auto m_CachedStomp = 0x3184; // ObjectProperty
		constexpr auto m_CachedShardTalent = 0x318c; // ObjectProperty
		constexpr auto c_MinigunForm = 0x3194; // ObjectProperty
		constexpr auto c_RevUpForm = 0x319c; // ObjectProperty
		constexpr auto m_fShardTimeToLive = 0x31a4; // float
		constexpr auto m_fShardSuckSpeed = 0x31a8; // float
		constexpr auto m_fShardSuckAcceleration = 0x31ac; // float
		constexpr auto m_fShardMinSuckDistance = 0x31b0; // float
		constexpr auto m_fShardSuckDistanceIncreasePerSec = 0x31b4; // float
		constexpr auto m_fInitialShardSpeed = 0x31b8; // float
		constexpr auto m_fInitialShardPitch = 0x31bc; // float
		constexpr auto m_fSpinPercentBonusWhileFiring = 0x31c0; // float
		constexpr auto r_fLastRevUpRateBefore = 0x31c4; // float
		constexpr auto r_fLastRevUpRateAfter = 0x31c8; // float
		constexpr auto s_nNextAvailableId = 0x31cc; // char
		constexpr auto r_eFiringState = 0x31cd; // ERaumFiringState
		constexpr auto c_eFiringStateAckd = 0x31ce; // ERaumFiringState
		constexpr auto r_nShardNonces = 0x31cf; // char [0x14]
		constexpr auto r_nShardIds = 0x31e3; // char [0x14]
		constexpr auto r_bShardFlags = 0x31f7; // char [0x14]
		constexpr auto m_nmFiringStateDisplayGroups = 0x320c; // TArray<FName>
		constexpr auto m_fMinigunSpinningThreshold = 0x321c; // float
		constexpr auto m_fMinigunFiringHighThreshold = 0x3220; // float
		constexpr auto r_vShardLocations = 0x3224; // FVector [0x14]
		constexpr auto r_nShardVelocityYaw = 0x3314; // int32_t [0x14]
		constexpr auto s_nCurrentShardPoints = 0x3364; // int32_t
		constexpr auto r_fSpinUpPct = 0x3368; // float
		constexpr auto r_bIsLMBHeld = 0x336c; // uint32_t : 1
		constexpr auto r_bIsRMBHeld = 0x336c; // uint32_t : 1
		constexpr auto m_nActiveShards = 0x3370; // int32_t
		constexpr auto m_nPointsPerShot = 0x3374; // int32_t [0x31]
		constexpr auto m_nPointsPerShard = 0x3438; // int32_t
		constexpr auto m_nMaxCachedShards = 0x343c; // int32_t
		constexpr auto r_nCachedShards = 0x3440; // int32_t
		constexpr auto r_nMaxShardStacks = 0x3444; // int32_t
		constexpr auto r_nCurrentShardStacks = 0x3448; // int32_t
		constexpr auto m_LocalShards = 0x344c; // FRaumShard [0x14]
	}

	namespace n_UParticleModuleEventReceiverBase { // : UParticleModuleEventBase
		constexpr auto EventGeneratorType = 0x68; // EParticleEventType
		constexpr auto EventName = 0x6c; // FName
	}

	namespace n_UTgSeqAct_SetMapLane { // : USequenceAction
		constexpr auto m_nMapLane = 0x108; // int32_t
	}

	namespace n_UTgInvListener_ConsumeMarksForDamage { // : UTgInventoryObject_Listen_AddDamage
		constexpr auto m_PendingMarkRemoval = 0xc8; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceFire_Smash { // : UTgDeviceFire
		constexpr auto m_NormalTargetingEncroachmentActor = 0x268; // ObjectProperty
		constexpr auto m_LargeTargetingEncroachmentActor = 0x270; // ObjectProperty
		constexpr auto m_nLargeTargetingMeshID = 0x278; // int32_t
	}

	namespace n_UCanvas { // : UObject
		constexpr auto Font = 0x60; // ObjectProperty
		constexpr auto OrgX = 0x68; // float
		constexpr auto OrgY = 0x6c; // float
		constexpr auto ClipX = 0x70; // float
		constexpr auto ClipY = 0x74; // float
		constexpr auto CurX = 0x78; // float
		constexpr auto CurY = 0x7c; // float
		constexpr auto CurZ = 0x80; // float
		constexpr auto CurYL = 0x84; // float
		constexpr auto DrawColor = 0x88; // FColor
		constexpr auto bCenter = 0x8c; // uint32_t : 1
		constexpr auto bNoSmooth = 0x8c; // uint32_t : 1
		constexpr auto SizeX = 0x90; // int32_t
		constexpr auto SizeY = 0x94; // int32_t
		constexpr auto Canvas = 0x98; // FPointer
		constexpr auto SceneView = 0xa0; // FPointer
		constexpr auto ColorModulate = 0xb0; // FPlane
		constexpr auto DefaultTexture = 0xc0; // ObjectProperty
	}

	namespace n_UTgDeviceForm_AzaanUlt { // : UTgDeviceForm
		constexpr auto m_AzaanUltNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_AzaanUltNodes1p = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_PlayerCurrency { // : UUIComponent_Display
		constexpr auto m_mcCurrencyIcon = 0x124; // TArray<ObjectProperty>
		constexpr auto m_mcCurrencyTF = 0x134; // TArray<ObjectProperty>
	}

	namespace n_ATgPawn_SiegeWall { // : ATgPawn_Tower
		constexpr auto m_fImpactEffectXRange = 0x2f2c; // float
		constexpr auto m_fImpactEffectYRange = 0x2f30; // float
		constexpr auto r_vNextImpactEffectLocation = 0x2f34; // FVector
		constexpr auto m_fImpactRecoveryTime = 0x2f40; // float
		constexpr auto m_fRemainingImpactRecoveryTime = 0x2f44; // float
		constexpr auto m_fMaxImpactSize = 0x2f48; // float
		constexpr auto m_ImpactMIC = 0x2f4c; // ObjectProperty
		constexpr auto c_bIsVulnerable = 0x2f54; // uint32_t : 1
		constexpr auto m_bHasRegisteredObstacle = 0x2f54; // uint32_t : 1
		constexpr auto m_bSpawnedThisFrame = 0x2f54; // uint32_t : 1
		constexpr auto m_bQueriedBorderEdges = 0x2f54; // uint32_t : 1
	}

	namespace n_UGameplayEvents { // : UObject
		constexpr auto Archive = 0x60; // FPointer
		constexpr auto StatsFileName = 0x68; // FString
		constexpr auto Header = 0x78; // FGameplayEventsHeader
		constexpr auto CurrentSessionInfo = 0xa8; // FGameSessionInformation
		constexpr auto PlayerList = 0x130; // TArray<FPlayerInformation>
		constexpr auto TeamList = 0x140; // TArray<FTeamInformation>
		constexpr auto SupportedEvents = 0x150; // TArray<FGameplayEventMetaData>
		constexpr auto WeaponClassArray = 0x160; // TArray<FWeaponClassEventData>
		constexpr auto DamageClassArray = 0x170; // TArray<FDamageClassEventData>
		constexpr auto ProjectileClassArray = 0x180; // TArray<FProjectileClassEventData>
		constexpr auto PawnClassArray = 0x190; // TArray<FPawnClassEventData>
		constexpr auto ActorArray = 0x1a0; // TArray<FString>
		constexpr auto SoundCueArray = 0x1b0; // TArray<FString>
	}

	namespace n_UTgThreatModel { // : UObject
		constexpr auto m_PawnsWithThreatLevels = 0x60; // TArray<ObjectProperty>
		constexpr auto m_bThreatSystemEnabled = 0x70; // uint32_t : 1
		constexpr auto m_bOcclusionSystemEnabled = 0x70; // uint32_t : 1
		constexpr auto m_bDebugThreatSystem = 0x70; // uint32_t : 1
		constexpr auto m_fThreatCoefficientProximity = 0x74; // float
		constexpr auto m_fThreatCoefficientOcclusion = 0x78; // float
		constexpr auto m_fThreatCoefficientBinnedOcclusion = 0x7c; // float
		constexpr auto m_fThreatCoefficientUlt = 0x80; // float
		constexpr auto m_fThreatCoefficientShotAt = 0x84; // float
		constexpr auto m_fThreatCoefficientSeenBy = 0x88; // float
		constexpr auto m_fThreatCoefficientDamaged = 0x8c; // float
		constexpr auto m_fThreatCoefficientFocused = 0x90; // float
		constexpr auto m_fThreatCoefficientFocusTarget = 0x94; // float
		constexpr auto m_fThreatDecayCoefficientShotAt = 0x98; // float
		constexpr auto m_fThreatDecayCoefficientSeenBy = 0x9c; // float
		constexpr auto m_fThreatDecayCoefficientUlt = 0xa0; // float
		constexpr auto m_DebugThreatSystemChannel = 0xa4; // FString
	}

	namespace n_UTgGameDC_Effect { // : UTgDataChunk
		constexpr auto m_nGroup = 0x158; // int32_t
		constexpr auto m_nIcon = 0x15c; // int32_t
		constexpr auto m_bBuff = 0x160; // int32_t
		constexpr auto m_bActive = 0x164; // int32_t
		constexpr auto m_nStacks = 0x168; // int32_t
		constexpr auto m_fTimer = 0x16c; // float
		constexpr auto m_sIcon = 0x170; // FString
		constexpr auto m_sName = 0x180; // FString
		constexpr auto m_sDescription = 0x190; // FString
		constexpr auto m_lifeTimer = 0x1a0; // ObjectProperty
	}

	namespace n_ADebugCameraHUD { // : AHUD
		constexpr auto bDrawDebugText = 0x5a0; // uint32_t : 1
	}

	namespace n_ATgDevice_CommanderCreditPassive { // : ATgDevice
		constexpr auto VfTable_ITgCallbackInterface = 0xa08; // FPointer
		constexpr auto nKillCount = 0xa10; // int32_t
		constexpr auto m_CallbackContainer = 0xa14; // ObjectProperty
	}

	namespace n_UTgAnimNodeChannelFire_Spite { // : UTgAnimNodeChannelFire
		constexpr auto m_eAnimState = 0x180; // SpiteAnimState
	}

	namespace n_ATgWeaponMeshActor_RaumMinigun { // : ATgWeaponMeshActor
		constexpr auto m_CachedRaum = 0x450; // ObjectProperty
		constexpr auto m_CachedInhandForm = 0x458; // ObjectProperty
		constexpr auto m_PropWeapon = 0x460; // ObjectProperty
		constexpr auto m_vPropWeaponOrigin = 0x468; // FVector
		constexpr auto m_bPendingThrow = 0x474; // uint32_t : 1
		constexpr auto c_b3PWepHiddenDueToThrow = 0x474; // uint32_t : 1
		constexpr auto m_fPendingThrowTime = 0x478; // float
		constexpr auto m_fMinimumThrowHistory = 0x47c; // float
		constexpr auto m_fWeaponThrownFailsafeTime = 0x480; // float
		constexpr auto m_fSyntheticShotAccuracyModifier = 0x484; // float
		constexpr auto m_fReloadTimeToThrowWeapon = 0x488; // float
		constexpr auto m_fReloadPctWeaponThrown = 0x48c; // float
		constexpr auto m_fReloadTimeToRecoverWeapon = 0x490; // float
		constexpr auto m_fThrowVelocityFactor = 0x494; // float
	}

	namespace n_USoundNodeModulator { // : USoundNode
		constexpr auto PitchMin = 0x74; // float
		constexpr auto PitchMax = 0x78; // float
		constexpr auto VolumeMin = 0x7c; // float
		constexpr auto VolumeMax = 0x80; // float
		constexpr auto PitchModulation = 0x84; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0xa8; // FRawDistributionFloat
	}

	namespace n_UTgInventoryObject_Listen_MirrorDamageToHeal { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_CachedFiremode = 0xcc; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromDamagingDeployable { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_ATrigger { // : AActor
		constexpr auto CylinderComponent = 0x280; // ComponentProperty
		constexpr auto bRecentlyTriggered = 0x288; // uint32_t : 1
		constexpr auto AITriggerDelay = 0x28c; // float
	}

	namespace n_UParticleModuleParameterDynamic { // : UParticleModuleParameterBase
		constexpr auto DynamicParams = 0x68; // TArray<FEmitterDynamicParameter>
		constexpr auto UpdateFlags = 0x78; // int32_t
		constexpr auto bUsesVelocity = 0x7c; // uint32_t : 1
	}

	namespace n_UFogVolumeDensityComponent { // : UActorComponent
		constexpr auto FogMaterial = 0x88; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterial = 0x90; // ObjectProperty
		constexpr auto bEnabled = 0x98; // uint32_t : 1
		constexpr auto bAffectsTranslucency = 0x98; // uint32_t : 1
		constexpr auto bOnlyAffectsTranslucency = 0x98; // uint32_t : 1
		constexpr auto bUseViewOriginOverride = 0x98; // uint32_t : 1
		constexpr auto SimpleLightColor = 0x9c; // FLinearColor
		constexpr auto ApproxFogLightColor = 0xac; // FLinearColor
		constexpr auto StartDistance = 0xbc; // float
		constexpr auto MaxDistance = 0xc0; // float
		constexpr auto FogVolumeActors = 0xc4; // TArray<ObjectProperty>
		constexpr auto ViewOriginOverride = 0xd4; // FVector
	}

	namespace n_ATgEffectManager { // : AActor
		constexpr auto r_GroundSpeedMods = 0x280; // FDiminishedEffectInfo
		constexpr auto r_ManagedEffectList = 0x290; // FEffectListEntry [0x10]
		constexpr auto c_byCounterList = 0x390; // char [0x10]
		constexpr auto s_eCachedStunType = 0x3a0; // EStunType
		constexpr auto m_fTimeRemaining = 0x3a4; // float [0x10]
		constexpr auto c_Forms = 0x3e4; // ObjectProperty [0x10]
		constexpr auto c_ActiveTimers = 0x464; // uint32_t : 1
		constexpr auto r_bRelevancyNotify = 0x464; // uint32_t : 1
		constexpr auto r_EventQueue = 0x468; // FEffectQueueEntry [0x10]
		constexpr auto r_nNextQueueIndex = 0x668; // int32_t
		constexpr auto r_nFirstValidQueueIndex = 0x66c; // int32_t
		constexpr auto c_nLastQueueIndex = 0x670; // int32_t
		constexpr auto s_AppliedEffectGroups = 0x674; // TArray<ObjectProperty>
		constexpr auto s_AppliedPermanentEffects = 0x684; // TArray<ObjectProperty>
		constexpr auto r_Owner = 0x694; // ObjectProperty
		constexpr auto m_ApplyDamageEffectGroup = 0x69c; // ObjectProperty
		constexpr auto m_ApplyDamageEffect = 0x6a4; // ObjectProperty
		constexpr auto m_ApplyHealthEffectGroup = 0x6ac; // ObjectProperty
		constexpr auto m_ApplyHealthEffect = 0x6b4; // ObjectProperty
		constexpr auto m_ApplyManaEffectGroup = 0x6bc; // ObjectProperty
		constexpr auto m_ApplyManaEffect = 0x6c4; // ObjectProperty
		constexpr auto m_ApplyEnergyEffectGroup = 0x6cc; // ObjectProperty
		constexpr auto m_ApplyEnergyEffect = 0x6d4; // ObjectProperty
		constexpr auto s_StunStack = 0x6dc; // TArray<FStunStackEntry>
		constexpr auto s_EnergyStunStack = 0x6ec; // TArray<FEnergyStunStackEntry>
		constexpr auto s_ReduceActiveCooldownEffects = 0x6fc; // TArray<FReduceActiveCooldownEntry>
		constexpr auto m_fMaxReduceActiveCooldownDelay = 0x70c; // float
		constexpr auto s_nSilenceCount = 0x710; // int32_t
		constexpr auto s_nDisarmCount = 0x714; // int32_t
		constexpr auto s_nCrippleCount = 0x718; // int32_t
		constexpr auto s_nStealthCount = 0x71c; // int32_t
		constexpr auto s_nDazeCount = 0x720; // int32_t
		constexpr auto s_nSlowCount = 0x724; // int32_t
		constexpr auto s_bStealthDisabledCount = 0x728; // int32_t
		constexpr auto s_nOnFireCount = 0x72c; // int32_t
		constexpr auto s_nCCImmuneCount = 0x730; // int32_t
		constexpr auto s_nBleedingCount = 0x734; // int32_t
		constexpr auto s_nKnockbackCount = 0x738; // int32_t
		constexpr auto s_nRootCount = 0x73c; // int32_t
		constexpr auto s_nPoisonedCount = 0x740; // int32_t
		constexpr auto s_nBoostCount = 0x744; // int32_t
		constexpr auto s_nStealthInCombatCount = 0x748; // int32_t
		constexpr auto s_nWallHackCount = 0x74c; // int32_t
		constexpr auto s_nForceOutOfCombatCount = 0x750; // int32_t
		constexpr auto s_nPolymorphCount = 0x754; // int32_t
		constexpr auto s_nRevealedCount = 0x758; // int32_t
		constexpr auto s_nFlashCount = 0x75c; // int32_t
		constexpr auto s_nBanishCount = 0x760; // int32_t
		constexpr auto s_nDruidMarkCount = 0x764; // int32_t
		constexpr auto s_fSpawnGuardTime = 0x768; // float
		constexpr auto s_InstigatorWallReveals = 0x76c; // TArray<ObjectProperty>
		constexpr auto s_nInstigatorWallRevealCount = 0x77c; // TArray<int32_t>
		constexpr auto s_InstigatorStealthReveals = 0x78c; // TArray<ObjectProperty>
		constexpr auto s_nInstigatorStealthRevealCount = 0x79c; // TArray<int32_t>
		constexpr auto s_nMarkedCounts = 0x7ac; // TArray<int32_t>
		constexpr auto s_SlowCaps = 0x7bc; // TArray<ObjectProperty>
		constexpr auto s_MaxHPDamageCaps = 0x7cc; // TArray<ObjectProperty>
		constexpr auto s_CurHPDamageCaps = 0x7dc; // TArray<ObjectProperty>
		constexpr auto s_HPDamageCaps = 0x7ec; // TArray<ObjectProperty>
		constexpr auto s_FreezeBehaviorCount = 0x7fc; // int32_t
		constexpr auto s_DiminishingReturnsStacks = 0x800; // TArray<FDiminishingReturnsStackInfo>
		constexpr auto m_nDiminishingReturnMaxStacks = 0x810; // int32_t
		constexpr auto s_ActiveDamageDeviceIntercepts = 0x814; // TArray<ObjectProperty>
		constexpr auto s_ActiveDamageMitigationIntercepts = 0x824; // TArray<ObjectProperty>
		constexpr auto s_ActiveOnLandedIntercepts = 0x834; // TArray<ObjectProperty>
		constexpr auto s_ActiveWallGrabbedHits = 0x844; // TArray<ObjectProperty>
		constexpr auto s_ActiveWallKnockbackHits = 0x854; // TArray<ObjectProperty>
		constexpr auto s_ActivePlayerKnockbackHits = 0x864; // TArray<ObjectProperty>
	}

	namespace n_UUIData_RewardPanel { // : UUIData
		constexpr auto m_nValueGained = 0x64; // int32_t
		constexpr auto m_ePanelType = 0x68; // UIEOML_REWARD_TYPE
		constexpr auto m_pEntries = 0x6c; // TArray<ObjectProperty>
	}

	namespace n_USkelControlHandlebars { // : USkelControlSingleBone
		constexpr auto WheelRollAxis = 0x100; // EAxis
		constexpr auto HandlebarRotateAxis = 0x101; // EAxis
		constexpr auto WheelBoneName = 0x104; // FName
		constexpr auto bInvertRotation = 0x10c; // uint32_t : 1
		constexpr auto SteerWheelBoneIndex = 0x110; // int32_t
	}

	namespace n_ATgDeploy_Molotov { // : ATgDeploy_EffectSpots
		constexpr auto m_PointInfos = 0x1a88; // TArray<FMolotovPointInfo>
		constexpr auto m_CenterInfo = 0x1a98; // FMolotovCenterInfo
		constexpr auto m_TriInfos = 0x1ae0; // TArray<FMolotovTriangleInfo>
		constexpr auto m_StrandInfos = 0x1af0; // TArray<FMolotovStrandInfo>
		constexpr auto m_GrowthInfo = 0x1b00; // FMolotovGrowthInfo
		constexpr auto m_Settings = 0x1b1c; // FMolotovGeneralSettings
	}

	namespace n_UUIComponent_HalloweenEventStore { // : UUIComponent_Display
		constexpr auto m_bOwnsMapYing = 0x124; // uint32_t : 1
		constexpr auto m_bOwnsMapFernando = 0x124; // uint32_t : 1
		constexpr auto m_bOwnsMapVivian = 0x124; // uint32_t : 1
		constexpr auto m_mcMapWarning = 0x128; // ObjectProperty
		constexpr auto m_mcMapWarningTF0 = 0x130; // ObjectProperty
		constexpr auto m_mcMapWarningTF1 = 0x138; // ObjectProperty
		constexpr auto m_mcMapWarningIcon = 0x140; // ObjectProperty
		constexpr auto m_mcCurrencyTF = 0x148; // ObjectProperty
		constexpr auto m_mcButtonBG = 0x150; // ObjectProperty
		constexpr auto m_pGoldDoubloons = 0x158; // ObjectProperty
		constexpr auto m_pDarkDoubloons = 0x160; // ObjectProperty
		constexpr auto m_pItemPreview = 0x168; // ObjectProperty
		constexpr auto m_pUnlockButton = 0x170; // ObjectProperty
		constexpr auto m_pStoreBundles = 0x178; // ObjectProperty
		constexpr auto m_pStoreItems = 0x180; // ObjectProperty
		constexpr auto m_grStore = 0x188; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x190; // ObjectProperty
		constexpr auto m_vBaseCameraOffset = 0x198; // FVector
		constexpr auto m_vDeathStampCameraOffset = 0x1a4; // FVector
	}

	namespace n_ATgRepInfo_Deployable { // : AReplicationInfo
		constexpr auto r_nHealthCurrent = 0x280; // int32_t
		constexpr auto r_nHealthMaximum = 0x284; // int32_t
		constexpr auto r_fDeployMaxHealthPCT = 0x288; // float
		constexpr auto r_nDeployableId = 0x28c; // int32_t
		constexpr auto r_nUniqueDeployableId = 0x290; // int32_t
		constexpr auto r_fLifespanInitial = 0x294; // float
		constexpr auto r_fLifespanSync = 0x298; // float
		constexpr auto r_DeployableOwner = 0x29c; // ObjectProperty
		constexpr auto r_InstigatorInfo = 0x2a4; // ObjectProperty
		constexpr auto r_TaskforceInfo = 0x2ac; // ObjectProperty
		constexpr auto r_bOwnedByTaskforce = 0x2b4; // uint32_t : 1
		constexpr auto c_bReceivedOwner = 0x2b4; // uint32_t : 1
		constexpr auto r_bMinimapOnlyOwnerSee = 0x2b4; // uint32_t : 1
		constexpr auto r_bInDestroyedState = 0x2b4; // uint32_t : 1
		constexpr auto c_bShowHUDLifespanTimer = 0x2b4; // uint32_t : 1
		constexpr auto r_ApproxLocation = 0x2b8; // FVector
		constexpr auto c_HudInfo = 0x2c4; // FTG_HUD_INFO
		constexpr auto r_bVisibleOnMap = 0x2c8; // char [0x3]
		constexpr auto r_eDeployableOverlayIcon = 0x2cb; // DeployableOverlayIcon
		constexpr auto r_eDeployableOverlayState = 0x2cc; // DeployableOverlayState
		constexpr auto r_fVisionRange = 0x2d0; // float
		constexpr auto r_nDeployableOverlayDisplayMask = 0x2d4; // int32_t
		constexpr auto r_fDeployableOverlayEnemyViewDist = 0x2d8; // float
		constexpr auto c_fBarragePercent = 0x2dc; // float
	}

	namespace n_UTgSeqAct_PauseSetupTimer { // : USequenceAction
		constexpr auto PauseImmediately = 0x108; // uint32_t : 1
		constexpr auto PauseAtTimeRemaining = 0x10c; // float
	}

	namespace n_ATgHelpAlertVolume { // : AVolume
		constexpr auto TaskForceNumber = 0x2bc; // int32_t
		constexpr auto GameTipIdList = 0x2c0; // TArray<int32_t>
	}

	namespace n_UUIScene_UIHudKoga { // : UUIScene
		constexpr auto m_bViewTargetKoga = 0x1cc; // uint32_t : 1
		constexpr auto m_bInitialized = 0x1cc; // uint32_t : 1
		constexpr auto m_bPostInitActions = 0x1cc; // uint32_t : 1
		constexpr auto m_bBarShown = 0x1cc; // uint32_t : 1
		constexpr auto m_pCachedKoga = 0x1d0; // ObjectProperty
		constexpr auto m_mcMeter = 0x1d8; // ObjectProperty
		constexpr auto m_Bars = 0x1e0; // ObjectProperty [0x3]
		constexpr auto m_nTickCallbackHandle = 0x1f8; // int32_t
		constexpr auto m_nUIHudCallbackHandle = 0x1fc; // int32_t
	}

	namespace n_UParticleModuleCollision { // : UParticleModuleCollisionBase
		constexpr auto DampingFactor = 0x68; // FRawDistributionVector
		constexpr auto DampingFactorRotation = 0x8c; // FRawDistributionVector
		constexpr auto MaxCollisions = 0xb0; // FRawDistributionFloat
		constexpr auto CollisionCompletionOption = 0xd4; // EParticleCollisionComplete
		constexpr auto bApplyPhysics = 0xd8; // uint32_t : 1
		constexpr auto bPawnsDoNotDecrementCount = 0xd8; // uint32_t : 1
		constexpr auto bOnlyVerticalNormalsDecrementCount = 0xd8; // uint32_t : 1
		constexpr auto bDropDetail = 0xd8; // uint32_t : 1
		constexpr auto bCollideOnlyIfVisible = 0xd8; // uint32_t : 1
		constexpr auto bCollideWithWorld = 0xd8; // uint32_t : 1
		constexpr auto bCollideWithWorldAttractors = 0xd8; // uint32_t : 1
		constexpr auto ParticleMass = 0xdc; // FRawDistributionFloat
		constexpr auto DirScalar = 0x100; // float
		constexpr auto VerticalFudgeFactor = 0x104; // float
		constexpr auto DelayAmount = 0x108; // FRawDistributionFloat
		constexpr auto MaxCollisionDistance = 0x12c; // float
		constexpr auto ParticleAttractorCollisionActions = 0x130; // TArray<FParticleAttractorCollisionAction>
	}

	namespace n_UTgAnimNodeBlendByZoomTransition { // : UTgAnimNodeBlendList
		constexpr auto m_fTransitionStartTime = 0x168; // float
	}

	namespace n_UUIComponent_RolledSubItem { // : UUIComponent_Display
		constexpr auto m_mcDuplicate = 0x124; // ObjectProperty
		constexpr auto m_pReplacementCurrency = 0x12c; // ObjectProperty
		constexpr auto m_pItem = 0x134; // ObjectProperty
	}

	namespace n_ATgDeploy_BombKingStickyBomb { // : ATgDeployable
		constexpr auto r_bDetonated = 0x46c; // uint32_t : 1
		constexpr auto c_bSuppressExplosion = 0x46c; // uint32_t : 1
		constexpr auto r_bShouldDetach = 0x46c; // uint32_t : 1
		constexpr auto r_StuckPlayer = 0x470; // ObjectProperty
		constexpr auto m_StuckSocket = 0x478; // FName
		constexpr auto m_CachedPlayer = 0x480; // ObjectProperty
		constexpr auto m_fBounceVelocityMultiplier = 0x488; // float
		constexpr auto r_HitNormal = 0x48c; // FVector
		constexpr auto m_GetStuckFx = 0x498; // ObjectProperty
		constexpr auto m_StickOtherFx = 0x4a0; // ObjectProperty
		constexpr auto r_StuckCart = 0x4a8; // ObjectProperty
		constexpr auto r_StuckRotation = 0x4b0; // FRotator
		constexpr auto r_CartOffset = 0x4bc; // FVector
		constexpr auto r_StuckGeometry = 0x4c8; // ObjectProperty
		constexpr auto r_nOriginalProjectileID = 0x4d0; // int32_t
		constexpr auto r_fFXDamageRadius = 0x4d4; // float
		constexpr auto r_fFXEffectiveRadius = 0x4d8; // float
		constexpr auto m_CollisionProxy = 0x4dc; // ObjectProperty
		constexpr auto m_PendingCollisions = 0x4e4; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_PassiveSelection { // : UUIComponent_Display
		constexpr auto m_Passives = 0x124; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_AssignLane { // : UTgAIBehaviorAction
		constexpr auto LaneIndex = 0x94; // int32_t
	}

	namespace n_USeqAct_CastToInt { // : USeqAct_SetSequenceVariable
		constexpr auto bTruncate = 0x108; // uint32_t : 1
		constexpr auto Value = 0x10c; // float
		constexpr auto IntResult = 0x110; // int32_t
	}

	namespace n_UUIComponent_ItemUIEngagementSkin { // : UUIComponent_Display
		constexpr auto m_mcSkinName = 0x124; // ObjectProperty
		constexpr auto m_mcOwnedIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcChampionName = 0x134; // ObjectProperty
		constexpr auto m_mcQuantityRemaining = 0x13c; // ObjectProperty
		constexpr auto m_mcQuantityRemainingNumTF = 0x144; // ObjectProperty
		constexpr auto m_mcQuantityRemainingTF = 0x14c; // ObjectProperty
		constexpr auto m_mcBackground = 0x154; // ObjectProperty
		constexpr auto m_mcTimer = 0x15c; // ObjectProperty
		constexpr auto m_mcSkinRarity = 0x164; // ObjectProperty
		constexpr auto m_pIcon = 0x16c; // ObjectProperty
		constexpr auto m_bShouldCheckForItemFade = 0x174; // uint32_t : 1
		constexpr auto m_fLowStockThreshold = 0x178; // float
	}

	namespace n_UUIFooter { // : UTgGfxScene
		constexpr auto m_mcFrame = 0x1ec; // ObjectProperty
		constexpr auto m_mcBack = 0x1f4; // ObjectProperty
		constexpr auto m_mcBackTitle = 0x1fc; // ObjectProperty
		constexpr auto m_mcSocial = 0x204; // ObjectProperty
		constexpr auto m_mcSocialTitle = 0x20c; // ObjectProperty
		constexpr auto m_mcOptions = 0x214; // ObjectProperty
		constexpr auto m_mcOptionsTitle = 0x21c; // ObjectProperty
		constexpr auto m_mcFriendsOnline = 0x224; // ObjectProperty
		constexpr auto m_mcActivityCenter = 0x22c; // ObjectProperty
		constexpr auto m_pSocialCTA = 0x234; // ObjectProperty
		constexpr auto m_pActivityCenterCTA = 0x23c; // ObjectProperty
		constexpr auto m_bOptionsEnabled = 0x244; // uint32_t : 1
	}

	namespace n_UUIComponent_AcquisitionCarousel { // : UUIComponent_Interactable
		constexpr auto m_mcLeftArrow = 0x140; // ObjectProperty
		constexpr auto m_mcRightArrow = 0x148; // ObjectProperty
		constexpr auto m_mcLeftButtonPrompt = 0x150; // ObjectProperty
		constexpr auto m_mcRightButtonPrompt = 0x158; // ObjectProperty
		constexpr auto m_CarouselItems = 0x160; // TArray<FUIAcquiredItem>
		constexpr auto m_mcNavDots = 0x170; // TArray<ObjectProperty>
		constexpr auto m_nIndex = 0x180; // int32_t
		constexpr auto m_fNavDotCenter = 0x184; // float
		constexpr auto m_ItemIdList = 0x188; // TArray<int32_t>
		constexpr auto m_ItemQuantityList = 0x198; // TArray<int32_t>
		constexpr auto m_fDotPlacementX = 0x1a8; // float
		constexpr auto m_fDotWidth = 0x1ac; // float
		constexpr auto m_fDotPadding = 0x1b0; // float
	}

	namespace n_UTgDeviceForm_Emote { // : UTgDeviceForm
		constexpr auto m_CachedEmoteSequences = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_CachedEmoteLists = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_TemporaryAddDevice { // : USequenceAction
		constexpr auto m_nDeviceId = 0x108; // int32_t
		constexpr auto m_nEquipPoint = 0x10c; // int32_t
	}

	namespace n_USeqEvent_ProjectileLanded { // : USequenceEvent
		constexpr auto MaxDistance = 0x128; // float
	}

	namespace n_ATgDevice_FuriaRMB { // : ATgDevice
		constexpr auto m_Furia = 0xa08; // ObjectProperty
		constexpr auto m_CachedImpact = 0xa10; // FImpactInfo
	}

	namespace n_UAnimNodeBlendByProperty { // : UAnimNodeBlendList
		constexpr auto PropertyName = 0x144; // FName
		constexpr auto bUseOwnersBase = 0x14c; // uint32_t : 1
		constexpr auto bForceUpdate = 0x14c; // uint32_t : 1
		constexpr auto bUseSpecificBlendTimes = 0x14c; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x14c; // uint32_t : 1
		constexpr auto CachedPropertyName = 0x150; // FName
		constexpr auto CachedFloatProperty = 0x158; // FPointer
		constexpr auto CachedBoolProperty = 0x160; // FPointer
		constexpr auto CachedByteProperty = 0x168; // FPointer
		constexpr auto CachedOwner = 0x170; // ObjectProperty
		constexpr auto BlendTime = 0x178; // float
		constexpr auto FloatPropMin = 0x17c; // float
		constexpr auto FloatPropMax = 0x180; // float
		constexpr auto BlendToChild1Time = 0x184; // float
		constexpr auto BlendToChild2Time = 0x188; // float
	}

	namespace n_AMatineeActor { // : AActor
		constexpr auto InterpAction = 0x280; // ObjectProperty
		constexpr auto bIsPlaying = 0x288; // uint32_t : 1
		constexpr auto bReversePlayback = 0x288; // uint32_t : 1
		constexpr auto bPaused = 0x288; // uint32_t : 1
		constexpr auto AllAIGroupsInitialized = 0x288; // uint32_t : 1
		constexpr auto PlayRate = 0x28c; // float
		constexpr auto Position = 0x290; // float
		constexpr auto AIGroupNames = 0x294; // FName [0xa]
		constexpr auto AIGroupPawns = 0x2e4; // ObjectProperty [0xa]
		constexpr auto AIGroupInitStage = 0x334; // int32_t [0xa]
		constexpr auto ClientSidePositionErrorTolerance = 0x35c; // float
	}

	namespace n_UMaterialExpressionStaticSwitch { // : UMaterialExpression
		constexpr auto DefaultValue = 0xb0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xb0; // uint32_t : 1
		constexpr auto A = 0xb4; // FExpressionInput
		constexpr auto B = 0xe8; // FExpressionInput
		constexpr auto Value = 0x11c; // FExpressionInput
	}

	namespace n_UUIComponent_ProgressBarHorizontal_Flagball { // : UUIComponent_ProgressBarHorizontal
		constexpr auto m_mcTipTF = 0x154; // ObjectProperty
		constexpr auto m_mcIcon = 0x15c; // ObjectProperty
		constexpr auto m_bChangeRootFrameWithPercent = 0x164; // uint32_t : 1
	}

	namespace n_UUIData_LoadoutPrebuilt { // : UUIData
		constexpr auto VfTable_IUIData_LoadoutInterface = 0x64; // FPointer
		constexpr auto m_dwBotId = 0x6c; // Fdword
		constexpr auto m_dwSortOrder = 0x70; // Fdword
		constexpr auto m_sName = 0x74; // FString
		constexpr auto m_sDesc = 0x84; // FString
		constexpr auto m_bTemplate = 0x94; // uint32_t : 1
		constexpr auto m_LoadoutItems = 0x98; // TArray<ObjectProperty>
	}

	namespace n_UImageReflectionShadowPlaneComponent { // : UPrimitiveComponent
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
		constexpr auto ReflectionPlane = 0x250; // FPlane
	}

	namespace n_UPBRuleNodeRepeat { // : UPBRuleNodeBase
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatMaxSize = 0x74; // float
	}

	namespace n_ANxRadialCustomForceField { // : ANxRadialForceField
		constexpr auto SelfRotationStrength = 0x2f0; // float
		constexpr auto Kernel = 0x2f4; // FPointer
	}

	namespace n_UTgSeqAct_SetInputEnabled { // : USequenceAction
		constexpr auto bEnableMoveForward = 0x108; // uint32_t : 1
		constexpr auto bEnableMoveBackward = 0x108; // uint32_t : 1
		constexpr auto bEnableMoveLeft = 0x108; // uint32_t : 1
		constexpr auto bEnableMoveRight = 0x108; // uint32_t : 1
		constexpr auto bEnableLookUp = 0x108; // uint32_t : 1
		constexpr auto bEnableLookDown = 0x108; // uint32_t : 1
		constexpr auto bEnableLookLeft = 0x108; // uint32_t : 1
		constexpr auto bEnableLookRight = 0x108; // uint32_t : 1
		constexpr auto bEnableJumping = 0x108; // uint32_t : 1
		constexpr auto bEnableMounting = 0x108; // uint32_t : 1
		constexpr auto bEnableAuto = 0x108; // uint32_t : 1
		constexpr auto bEnableAlt = 0x108; // uint32_t : 1
		constexpr auto bEnableBattleAbility = 0x108; // uint32_t : 1
		constexpr auto bEnableMovementAbility = 0x108; // uint32_t : 1
		constexpr auto bEnableUltimate = 0x108; // uint32_t : 1
		constexpr auto bEnableEmote = 0x108; // uint32_t : 1
	}

	namespace n_UTgCameraModifier_LobbyCameraTransition { // : UCameraModifier
		constexpr auto SourceCamera = 0x80; // ObjectProperty
		constexpr auto DestinationCamera = 0x88; // ObjectProperty
		constexpr auto TransitionType = 0x90; // CameraTransType
		constexpr auto fSlideDistance = 0x94; // float
	}

	namespace n_UTgGamePhase_FlagballActive { // : UTgGamePhase
		constexpr auto m_fFlagballCorrectInterval = 0xb8; // float
		constexpr auto m_fFlagballCorrectTimer = 0xbc; // float
	}

	namespace n_USeqEvent_HudRenderText { // : USeqEvent_HudRender
		constexpr auto DisplayFont = 0x140; // ObjectProperty
		constexpr auto DisplayColor = 0x148; // FColor
		constexpr auto DisplayLocation = 0x14c; // FVector
		constexpr auto DisplayText = 0x158; // FString
		constexpr auto TextDrawMethod = 0x168; // ETextDrawMethod
	}

	namespace n_ATgDevice_OppressorMine { // : ATgDevice
		constexpr auto m_NewTargetSFXRecentTargets = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_NewTargetSFXTargetTime = 0xa18; // TArray<float>
		constexpr auto m_fMinNewTargetSFXDelay = 0xa28; // float
	}

	namespace n_UInputGroup { // : UObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_nMinX = 0x68; // int32_t
		constexpr auto m_nMinY = 0x6c; // int32_t
		constexpr auto m_nSizeX = 0x70; // int32_t
		constexpr auto m_nSizeY = 0x74; // int32_t
		constexpr auto m_nFocusX = 0x78; // int32_t
		constexpr auto m_nFocusY = 0x7c; // int32_t
		constexpr auto m_nPrevFocusX = 0x80; // int32_t
		constexpr auto m_nPrevFocusY = 0x84; // int32_t
		constexpr auto m_bLoopX = 0x88; // uint32_t : 1
		constexpr auto m_bLoopY = 0x88; // uint32_t : 1
		constexpr auto m_bCursorUpdateX = 0x88; // uint32_t : 1
		constexpr auto m_bCursorUpdateY = 0x88; // uint32_t : 1
		constexpr auto m_bCursorUpdateWidth = 0x88; // uint32_t : 1
		constexpr auto m_bCursorUpdateHeight = 0x88; // uint32_t : 1
		constexpr auto m_bAllowSelect = 0x88; // uint32_t : 1
		constexpr auto m_bAllowNavigation = 0x88; // uint32_t : 1
		constexpr auto m_bCallbacksRegistered = 0x88; // uint32_t : 1
		constexpr auto m_nDefaultXFocus = 0x8c; // int32_t
		constexpr auto m_nDefaultYFocus = 0x90; // int32_t
		constexpr auto m_NavUp = 0x94; // ObjectProperty
		constexpr auto m_NavDown = 0x9c; // ObjectProperty
		constexpr auto m_NavLeft = 0xa4; // ObjectProperty
		constexpr auto m_NavRight = 0xac; // ObjectProperty
		constexpr auto m_Select = 0xb4; // ObjectProperty
		constexpr auto m_InputContext = 0xbc; // ObjectProperty
		constexpr auto m_Objects = 0xc4; // TArray<FUIGroupObject>
		constexpr auto m_mcCursor = 0xd4; // ObjectProperty
		constexpr auto m_CallbackContainer = 0xdc; // ObjectProperty
	}

	namespace n_UMaterialExpressionAntialiasedTextureMask { // : UMaterialExpressionTextureSampleParameter2D
		constexpr auto Threshold = 0x140; // float
		constexpr auto Channel = 0x144; // ETextureColorChannel
	}

	namespace n_UUIComponent_SiteSelectEntry { // : UUIComponent_Display
		constexpr auto m_mcFlagImageStack = 0x124; // ObjectProperty
	}

	namespace n_UUIComponent_ItemRadialMenu_Icon { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcFrame = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcKeybind = 0x13c; // ObjectProperty
	}

	namespace n_UDownloadableContentManager { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto DLCConfigCacheChanges = 0x68; // TArray<FPointer>
		constexpr auto InstalledDLC = 0x78; // TArray<FString>
		constexpr auto NonPackageFilePathMap = 0x88; // FMap_Mirror
		constexpr auto ClassesToReload = 0xd0; // TArray<UObject*>
		constexpr auto ObjectsToReload = 0xe0; // TArray<ObjectProperty>
		constexpr auto QueuedFullyLoadPackageInis = 0xf0; // TArray<FString>
		constexpr auto GameEngine = 0x100; // ObjectProperty
		constexpr auto bWantsToRefreshDLC = 0x108; // uint32_t : 1
		constexpr auto bGameDidAuthorizedDLCRefresh = 0x108; // uint32_t : 1
		constexpr auto __OnRefreshComplete__Delegate = 0x10c; // DelegateProperty
	}

	namespace n_UMaterialExpressionFunctionInput { // : UMaterialExpression
		constexpr auto Preview = 0xb0; // FExpressionInput
		constexpr auto InputName = 0xe4; // FString
		constexpr auto Description = 0xf4; // FString
		constexpr auto Id = 0x104; // FGuid
		constexpr auto InputType = 0x114; // EFunctionInputType
		constexpr auto PreviewValue = 0x120; // FVector4
		constexpr auto bUsePreviewValueAsDefault = 0x130; // uint32_t : 1
		constexpr auto bCompilingFunctionPreview = 0x130; // uint32_t : 1
		constexpr auto SortPriority = 0x134; // int32_t
	}

	namespace n_ATgPawn_Tower { // : ATgPawn_TowerBase
		constexpr auto m_TimeSinceDeath = 0x2edc; // float
		constexpr auto m_DestroyedMICs = 0x2ee0; // TArray<ObjectProperty>
		constexpr auto m_fFadeOutStartTime = 0x2ef0; // float
		constexpr auto m_fFadeOutEndTime = 0x2ef4; // float
		constexpr auto r_vInitialRotation = 0x2ef8; // FVector
		constexpr auto m_bUseDestruction = 0x2f04; // uint32_t : 1
		constexpr auto r_bSide0Destroyed = 0x2f04; // uint32_t : 1
		constexpr auto r_bSide1Destroyed = 0x2f04; // uint32_t : 1
		constexpr auto r_bSide2Destroyed = 0x2f04; // uint32_t : 1
		constexpr auto r_bSide3Destroyed = 0x2f04; // uint32_t : 1
		constexpr auto r_PlaySide0Destruction = 0x2f08; // char
		constexpr auto r_PlaySide1Destruction = 0x2f09; // char
		constexpr auto r_PlaySide2Destruction = 0x2f0a; // char
		constexpr auto r_PlaySide3Destruction = 0x2f0b; // char
		constexpr auto m_nSide0MeshId = 0x2f0c; // int32_t
		constexpr auto m_nSide1MeshId = 0x2f10; // int32_t
		constexpr auto m_nSide2MeshId = 0x2f14; // int32_t
		constexpr auto m_nSide3MeshId = 0x2f18; // int32_t
		constexpr auto m_nSide0Health = 0x2f1c; // int32_t
		constexpr auto m_nSide1Health = 0x2f20; // int32_t
		constexpr auto m_nSide2Health = 0x2f24; // int32_t
		constexpr auto m_nSide3Health = 0x2f28; // int32_t
	}

	namespace n_UTgDeviceForm_ImaniF { // : UTgDeviceForm
		constexpr auto m_CachedImani = 0x28c; // ObjectProperty
	}

	namespace n_UUIBackground { // : UTgGfxScene
		constexpr auto m_eState = 0x1ec; // char
		constexpr auto m_fAnimationDelay = 0x1f0; // float
		constexpr auto m_fAnimationTimer = 0x1f4; // float
		constexpr auto m_mcLine = 0x1f8; // ObjectProperty
		constexpr auto m_mcGlow = 0x200; // ObjectProperty
		constexpr auto m_mcAnimation = 0x208; // ObjectProperty
		constexpr auto m_mcImage = 0x210; // ObjectProperty [0x8]
	}

	namespace n_UInterpTrackInstSound { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
		constexpr auto PlayAudioComp = 0x64; // ComponentProperty
	}

	namespace n_ATgStartPoint { // : APlayerStart
		constexpr auto m_nMapObjectId = 0x388; // int32_t
		constexpr auto m_nStartGroup = 0x38c; // int32_t
		constexpr auto m_nReturnMapType = 0x390; // int32_t
		constexpr auto m_fStartRating = 0x394; // float
		constexpr auto m_fCurrentRating = 0x398; // float
		constexpr auto m_fResetRating = 0x39c; // float
		constexpr auto m_fDecreaseRate = 0x3a0; // float
		constexpr auto m_ArrayOfFloats = 0x3a4; // TArray<ATgTeleporter*>
		constexpr auto m_TgTeleporter = 0x3b4; // ObjectProperty
	}

	namespace n_UUIComponent_Interactable { // : UUIComponent
		constexpr auto m_mcInteractable = 0x118; // ObjectProperty
		constexpr auto m_mcRolloverObjects = 0x120; // TArray<ObjectProperty>
		constexpr auto m_mcSelected = 0x130; // ObjectProperty
		constexpr auto m_bSelected = 0x138; // uint32_t : 1
		constexpr auto m_bShouldHighlightOnRollover = 0x138; // uint32_t : 1
		constexpr auto m_eInteractionType = 0x13c; // UIDISPLAYTYPE
	}

	namespace n_UUIComponent_ShadowUltBar { // : UUIComponent_ProgressBarHorizontal
		constexpr auto m_mcOverfill = 0x154; // ObjectProperty
		constexpr auto m_bOverfillVisible = 0x15c; // uint32_t : 1
	}

	namespace n_ATgDevice_FuriaInhand { // : ATgDevice
		constexpr auto m_Furia = 0xa08; // ObjectProperty
		constexpr auto s_fCurrentAttackSpeedTier = 0xa10; // float
		constexpr auto s_fHolyWrathDecayStartTime = 0xa14; // float
	}

	namespace n_UTgGamePhase_RandomChild { // : UTgGamePhase
		constexpr auto m_bSequentiallyUnique = 0xb8; // uint32_t : 1
		constexpr auto m_nPreviousChildIndex = 0xbc; // int32_t
	}

	namespace n_UMorphNodeWeightByBoneRotation { // : UMorphNodeWeightBase
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BoneName = 0x8c; // FName
		constexpr auto BoneAxis = 0x94; // EAxis
		constexpr auto bInvertBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0x98; // uint32_t : 1
		constexpr auto WeightArray = 0x9c; // TArray<FBoneAngleMorph>
		constexpr auto MaterialSlotId = 0xac; // int32_t
		constexpr auto ScalarParameterName = 0xb0; // FName
		constexpr auto MaterialInstanceConstant = 0xb8; // ObjectProperty
	}

	namespace n_UUIComponent_LexTarget { // : UUIComponent_Display
		constexpr auto m_mcFrame = 0x124; // ObjectProperty
		constexpr auto m_mcFrameTop = 0x12c; // ObjectProperty
		constexpr auto m_mcFrameBottom = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
	}

	namespace n_UUIComponent_Toggle { // : UUIComponent_Interactable
		constexpr auto m_bActive = 0x140; // uint32_t : 1
		constexpr auto m_mcActive = 0x144; // ObjectProperty
	}

	namespace n_UParticleModuleEventReceiverKillParticles { // : UParticleModuleEventReceiverBase
		constexpr auto bStopSpawning = 0x74; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_GrohkInhand { // : UTgDeviceForm
		constexpr auto m_SpinnerSkelControl = 0x28c; // ObjectProperty
	}

	namespace n_UUIScene_UIHudYagorath { // : UUIScene
		constexpr auto m_AcidJuiceBar = 0x1cc; // ObjectProperty
		constexpr auto m_mcUltFire = 0x1d4; // ObjectProperty
		constexpr auto m_bViewTargetYagorath = 0x1dc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1dc; // uint32_t : 1
		constexpr auto m_bAcidJuiceVisible = 0x1dc; // uint32_t : 1
		constexpr auto m_CachedYagorath = 0x1e0; // ObjectProperty
		constexpr auto m_fAcidJuiceCurrent = 0x1e8; // float
		constexpr auto m_fAcidJuiceUpdateSpeed = 0x1ec; // float
	}

	namespace n_UTgSeqAct_SetPlayerMeshVisible { // : USequenceAction
		constexpr auto bIs1PMeshVisible = 0x108; // uint32_t : 1
		constexpr auto bIs3PMeshVisible = 0x108; // uint32_t : 1
	}

	namespace n_USequenceAction { // : USequenceOp
		constexpr auto HandlerName = 0xec; // FName
		constexpr auto bCallHandler = 0xf4; // uint32_t : 1
		constexpr auto Targets = 0xf8; // TArray<ObjectProperty>
	}

	namespace n_ATgDestructibleFactory { // : ATgActorFactory
		constexpr auto LightEnvironment = 0x2c0; // ComponentProperty
	}

	namespace n_UUIComponent_RankedEOMProgress { // : UUIComponent_Display
		constexpr auto m_mcNetTP = 0x124; // ObjectProperty
		constexpr auto m_mcCurrentTP = 0x12c; // ObjectProperty
		constexpr auto m_mcCurrentRank = 0x134; // ObjectProperty
		constexpr auto m_mcRankIconPrev = 0x13c; // ObjectProperty
		constexpr auto m_mcRankIconNext = 0x144; // ObjectProperty
		constexpr auto m_pProgress = 0x14c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_Taskforce { // : UTgAIBehaviorCondition
		constexpr auto Taskforce = 0x98; // int32_t
	}

	namespace n_ADynamicSMActor { // : AActor
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto LightEnvironment = 0x288; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x290; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x298; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x2a0; // ObjectProperty
		constexpr auto bForceStaticDecals = 0x2a8; // uint32_t : 1
		constexpr auto bPawnCanBaseOn = 0x2a8; // uint32_t : 1
		constexpr auto bSafeBaseIfAsleep = 0x2a8; // uint32_t : 1
		constexpr auto bHandleNavMeshRegistrationInGame = 0x2a8; // uint32_t : 1
		constexpr auto bHasRegisteredObstacle = 0x2a8; // uint32_t : 1
		constexpr auto ReplicatedMeshTranslation = 0x2ac; // FVector
		constexpr auto ReplicatedMeshRotation = 0x2b8; // FRotator
		constexpr auto ReplicatedMeshScale3D = 0x2c4; // FVector
	}

	namespace n_UPath_AlongLine { // : UPathConstraint
		constexpr auto Direction = 0x6c; // FVector
	}

	namespace n_UAnimNotify_ClothingMaxDistanceScale { // : UAnimNotify
		constexpr auto StartScale = 0x68; // float
		constexpr auto EndScale = 0x6c; // float
		constexpr auto ScaleMode = 0x70; // EMaxDistanceScaleMode
		constexpr auto Duration = 0x74; // float
	}

	namespace n_AInteractiveFoliageActor { // : AStaticMeshActor
		constexpr auto CylinderComponent = 0x2a4; // ComponentProperty
		constexpr auto TouchingActorEntryPosition = 0x2ac; // FVector
		constexpr auto FoliageVelocity = 0x2b8; // FVector
		constexpr auto FoliageForce = 0x2c4; // FVector
		constexpr auto FoliagePosition = 0x2d0; // FVector
		constexpr auto FoliageDamageImpulseScale = 0x2dc; // float
		constexpr auto FoliageTouchImpulseScale = 0x2e0; // float
		constexpr auto FoliageStiffness = 0x2e4; // float
		constexpr auto FoliageStiffnessQuadratic = 0x2e8; // float
		constexpr auto FoliageDamping = 0x2ec; // float
		constexpr auto MaxDamageImpulse = 0x2f0; // float
		constexpr auto MaxTouchImpulse = 0x2f4; // float
		constexpr auto MaxForce = 0x2f8; // float
		constexpr auto Mass = 0x2fc; // float
	}

	namespace n_ATgProj_Bombardment { // : ATgProj_Simulated
		constexpr auto m_fFadeInTime = 0x52c; // float
		constexpr auto m_fCurrentFade = 0x530; // float
		constexpr auto m_CachedDecalMaterial = 0x534; // ObjectProperty
	}

	namespace n_UTgDeviceFire_AstralMark { // : UTgDeviceFire
		constexpr auto m_InitialLifetime = 0x268; // float
		constexpr auto m_OverflowTime = 0x26c; // float
		constexpr auto m_BaseLifetime = 0x270; // float
	}

	namespace n_UUIComponent_EventChallengeHubReward { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_pIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x134; // ObjectProperty
		constexpr auto m_mcPlusTicket = 0x13c; // ObjectProperty
		constexpr auto m_mcFrame = 0x144; // ObjectProperty
		constexpr auto m_mcCheck = 0x14c; // ObjectProperty
	}

	namespace n_ATgDevice_RaumSuck { // : ATgDevice
		constexpr auto m_CachedRaum = 0xa08; // ObjectProperty
		constexpr auto m_fSuckTime = 0xa10; // float
		constexpr auto m_nVirtualShardsOnFire = 0xa14; // int32_t
		constexpr auto m_nCachedShards = 0xa18; // int32_t
		constexpr auto m_fHealthCacheThreshold = 0xa1c; // float
		constexpr auto m_eCacheOn = 0xa20; // ERaumShardCache
	}

	namespace n_ULightEnvironmentComponent { // : UActorComponent
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto bForceNonCompositeDynamicLights = 0x88; // uint32_t : 1
		constexpr auto bAllowDynamicShadowsOnTranslucency = 0x88; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0x88; // uint32_t : 1
		constexpr auto bTranslucencyShadowed = 0x88; // uint32_t : 1
		constexpr auto DominantShadowFactor = 0x8c; // float
		constexpr auto AffectingDominantLight = 0x90; // ComponentProperty
		constexpr auto AffectedComponents = 0x98; // TArray<ComponentProperty>
	}

	namespace n_UAnimNodeBlend { // : UAnimNodeBlendBase
		constexpr auto Child2Weight = 0x114; // float
		constexpr auto Child2WeightTarget = 0x118; // float
		constexpr auto BlendTimeToGo = 0x11c; // float
		constexpr auto bSkipBlendWhenNotRendered = 0x120; // uint32_t : 1
	}

	namespace n_UParticleModuleSubUVMovie { // : UParticleModuleSubUV
		constexpr auto bUseEmitterTime = 0x90; // uint32_t : 1
		constexpr auto FrameRate = 0x94; // FRawDistributionFloat
		constexpr auto StartingFrame = 0xb8; // int32_t
	}

	namespace n_ARB_ConstraintActor { // : ARigidBodyBase
		constexpr auto ConstraintActor1 = 0x280; // ObjectProperty
		constexpr auto ConstraintActor2 = 0x288; // ObjectProperty
		constexpr auto ConstraintSetup = 0x290; // ObjectProperty
		constexpr auto ConstraintInstance = 0x298; // ObjectProperty
		constexpr auto bDisableCollision = 0x2a0; // uint32_t : 1
		constexpr auto bUpdateActor1RefFrame = 0x2a0; // uint32_t : 1
		constexpr auto bUpdateActor2RefFrame = 0x2a0; // uint32_t : 1
		constexpr auto PulleyPivotActor1 = 0x2a4; // ObjectProperty
		constexpr auto PulleyPivotActor2 = 0x2ac; // ObjectProperty
	}

	namespace n_UTgAchievement_ShieldInOneMatch { // : UTgAchievement
		constexpr auto m_nDamageShielded = 0x94; // int32_t
	}

	namespace n_UTgDeviceForm_OracleInhand { // : UTgDeviceForm_Inhand
		constexpr auto m_CachedOracle = 0x29c; // ObjectProperty
		constexpr auto c_fLastReceivedTransitionInTime = 0x2a4; // float
	}

	namespace n_ATgProj_AtlasRMB { // : ATgProj_Simulated
		constexpr auto m_fGravityZ = 0x52c; // float
		constexpr auto m_bIsAOE = 0x530; // uint32_t : 1
	}

	namespace n_ATgRespawnBeaconEntrance { // : ATgRespawnBeaconBase
		constexpr auto ExitBeacon = 0x32c; // ObjectProperty
		constexpr auto r_bEntranceActive = 0x334; // uint32_t : 1
		constexpr auto r_nPendingTeleport = 0x338; // char
		constexpr auto c_LocalChargingState = 0x339; // ERespawnBeaconChargingState
		constexpr auto r_ChargingState = 0x33a; // ERespawnBeaconChargingState
		constexpr auto m_TeleportPSC = 0x33c; // ComponentProperty
		constexpr auto m_fChargeDelay = 0x344; // float
		constexpr auto m_fTeleportDelay = 0x348; // float
		constexpr auto m_fPreTeleportFXTime = 0x34c; // float
		constexpr auto s_fChargeStateTimeStamp = 0x350; // float
		constexpr auto s_PendingTeleports = 0x354; // TArray<FPendingTeleportInfo>
	}

	namespace n_ATgProj_YagorathUltProj { // : ATgProj_Simulated
		constexpr auto m_YagorathUltForm = 0x52c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHealthPercent { // : UTgAIBehaviorCondition
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UParticleModuleSize { // : UParticleModuleSizeBase
		constexpr auto StartSize = 0x68; // FRawDistributionVector
	}

	namespace n_ATgPawn_Halloween_Vivian { // : ATgPawn_Churchill
		constexpr auto r_fShieldRotation = 0x31b8; // float
		constexpr auto m_fShieldOffset = 0x31bc; // float
		constexpr auto m_fShieldRotation = 0x31c0; // float
		constexpr auto m_fShieldRotationRate = 0x31c4; // float
		constexpr auto c_fShieldRotationError = 0x31c8; // float
		constexpr auto c_fShieldRotationErrorCorrectionRate = 0x31cc; // float
		constexpr auto m_CachedShieldDevice = 0x31d0; // ObjectProperty
	}

	namespace n_ATgDeploy_CorvusDagger { // : ATgDeployable
		constexpr auto r_fPersistTime = 0x46c; // float
	}

	namespace n_UKismetBookMark { // : UBookMark2D
		constexpr auto BookMarkSequencePathName = 0x6c; // FString
	}

	namespace n_UUIComponent_StringWithCount { // : UUIComponent_Display
		constexpr auto m_mcCountTF = 0x124; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_AbilityProcBase { // : UTgInvListener
		constexpr auto m_nAbilitySlotRestriction = 0xc4; // int32_t
		constexpr auto m_nAbilityTypeRestriction = 0xc8; // int32_t
	}

	namespace n_UTgAIBehaviorTree { // : UTgAIBehaviorNode
		constexpr auto ChildNode = 0x94; // ObjectProperty
		constexpr auto SensorNodes = 0x9c; // TArray<ObjectProperty>
		constexpr auto UtilitySets = 0xac; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_ItemIcon { // : UUIComponent_Display
		constexpr auto m_mcRarityText = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x13c; // ObjectProperty
		constexpr auto m_Avatar = 0x144; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x14c; // ObjectProperty
		constexpr auto m_mcIconBorderFrame = 0x154; // ObjectProperty
		constexpr auto m_mcAvatarBorderFrame = 0x15c; // ObjectProperty
		constexpr auto m_bUseBotSpecificRarityName = 0x164; // uint32_t : 1
		constexpr auto m_bLowerCaseNames = 0x164; // uint32_t : 1
	}

	namespace n_UUIComponent_MatchDisplay { // : UUIComponent_Display
		constexpr auto m_mcBuildHeader = 0x124; // ObjectProperty
		constexpr auto m_mcStatsHeader = 0x12c; // ObjectProperty
		constexpr auto m_pList = 0x134; // ObjectProperty
		constexpr auto m_pTabs = 0x13c; // ObjectProperty
		constexpr auto m_pViewProfileAction = 0x144; // ObjectProperty
		constexpr auto m_eDisplayMode = 0x14c; // EUICMatchDisplayTabType
		constexpr auto m_pReportPlayerPopup = 0x150; // ObjectProperty
		constexpr auto m_pReportPlayerAction = 0x158; // ObjectProperty
	}

	namespace n_UPath_TowardGoal { // : UPathConstraint
		constexpr auto GoalActor = 0x6c; // ObjectProperty
	}

	namespace n_UInterpGroup { // : UObject
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto InterpTracks = 0x68; // TArray<ObjectProperty>
		constexpr auto GroupName = 0x78; // FName
		constexpr auto GroupColor = 0x80; // FColor
		constexpr auto GroupAnimSets = 0x84; // TArray<ObjectProperty>
		constexpr auto bCollapsed = 0x94; // uint32_t : 1
		constexpr auto bVisible = 0x94; // uint32_t : 1
		constexpr auto bIsFolder = 0x94; // uint32_t : 1
		constexpr auto bIsParented = 0x94; // uint32_t : 1
		constexpr auto bIsSelected = 0x94; // uint32_t : 1
	}

	namespace n_UGameCameraBase { // : UObject
		constexpr auto PlayerCamera = 0x60; // ObjectProperty
		constexpr auto bResetCameraInterpolation = 0x68; // uint32_t : 1
	}

	namespace n_UTgAnimNodeBlendByCombatWariness { // : UTgAnimNodeBlendList
		constexpr auto CombatWarinessDuration = 0x168; // float
		constexpr auto AllowIdleAnimToComplete = 0x16c; // uint32_t : 1
		constexpr auto AllowWaryAnimToComplete = 0x16c; // uint32_t : 1
		constexpr auto IsWary = 0x16c; // uint32_t : 1
		constexpr auto WaryTime = 0x170; // float
	}

	namespace n_UTgControlModule_StunDisoriented { // : UTgControlModule_Stunned
		constexpr auto m_nInitialYaw = 0xcc; // int32_t
		constexpr auto m_nTargetYaw = 0xd0; // int32_t
		constexpr auto m_fInterpTime = 0xd4; // float
		constexpr auto m_fRemainingInterpTime = 0xd8; // float
	}

	namespace n_UUIComponent_ItemUIChampion { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcOwned = 0x12c; // ObjectProperty
		constexpr auto m_mcRarity = 0x134; // ObjectProperty
		constexpr auto m_mcEquipped = 0x13c; // ObjectProperty
		constexpr auto m_mcChampionName = 0x144; // ObjectProperty
		constexpr auto m_mcSourceIconLock = 0x14c; // ObjectProperty
		constexpr auto m_mcSourceIconEvent = 0x154; // ObjectProperty
		constexpr auto m_mcSourceIconBattlePass = 0x15c; // ObjectProperty
		constexpr auto m_mcSourceIconChest = 0x164; // ObjectProperty
		constexpr auto m_mcColorPickerIcon = 0x16c; // ObjectProperty
		constexpr auto m_pItemHint = 0x174; // ObjectProperty
		constexpr auto m_pItemPrice = 0x17c; // ObjectProperty
		constexpr auto m_pSourceIconCurrencies = 0x184; // ObjectProperty
		constexpr auto m_pExclusiveBanner = 0x18c; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x194; // ObjectProperty
		constexpr auto m_bCheckSkinForCollectionEquipped = 0x19c; // uint32_t : 1
	}

	namespace n_UUIComponent_TeamPortraits { // : UUIComponent_Display
		constexpr auto m_bFriendly = 0x124; // uint32_t : 1
		constexpr auto m_nTaskForceId = 0x128; // int32_t
		constexpr auto m_nPortraitToPlayerId = 0x12c; // int32_t [0x5]
	}

	namespace n_UTgAIBehaviorCondition_DeltaGodsInCapturePoint { // : UTgAIBehaviorCondition
		constexpr auto GodThreshold = 0x98; // int32_t
	}

	namespace n_UParticleModuleTrailSpawn { // : UParticleModuleTrailBase
		constexpr auto SpawnDistanceMap = 0x68; // ComponentProperty
		constexpr auto MinSpawnVelocity = 0x70; // float
	}

	namespace n_UTgTimerManager { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto m_TimerMap = 0x68; // TMap<None, None>
		constexpr auto m_bActive = 0xb0; // uint32_t : 1
		constexpr auto m_bGameWasPaused = 0xb0; // uint32_t : 1
	}

	namespace n_UVivoxClosureOnPrivilegeLevelChecked { // : UVivoxClosure
		constexpr auto m_ChannelJoinCount = 0x70; // int32_t
	}

	namespace n_UUIComponent_Button_LoadoutDeathCard { // : UUIComponent_Display
		constexpr auto m_mcDeathCard = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
	}

	namespace n_UInterpTrackInstLinearColorProp { // : UInterpTrackInstProperty
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FLinearColor
	}

	namespace n_USeqCond_IncrementFloat { // : USequenceCondition
		constexpr auto IncrementAmount = 0xec; // float
		constexpr auto ValueA = 0xf0; // float
		constexpr auto ValueB = 0xf4; // float
	}

	namespace n_UAnimNodeScaleRateBySpeed { // : UAnimNodeScalePlayRate
		constexpr auto BaseSpeed = 0x118; // float
		constexpr auto MinScaleValue = 0x11c; // float
	}

	namespace n_UTexture2DComposite { // : UTexture
		constexpr auto SourceRegions = 0x100; // TArray<FSourceTexture2DRegion>
		constexpr auto MaxTextureSize = 0x110; // int32_t
		constexpr auto DestSizeX = 0x114; // int32_t
		constexpr auto DestSizeY = 0x118; // int32_t
	}

	namespace n_UTgCameraModule_Spectator { // : UTgCameraModule
		constexpr auto WorldViewPitch = 0x68; // int32_t
		constexpr auto OldViewpoint = 0x6c; // FTPOV
		constexpr auto RemainingBlendTime = 0x90; // float
		constexpr auto TotalBlendTime = 0x94; // float
		constexpr auto bCollideWorld = 0x98; // uint32_t : 1
	}

	namespace n_UParticleSystem { // : UObject
		constexpr auto SystemUpdateMode = 0x60; // EParticleSystemUpdateMode
		constexpr auto LODMethod = 0x61; // ParticleSystemLODMethod
		constexpr auto OcclusionBoundsMethod = 0x62; // EParticleSystemOcclusionBoundsMethod
		constexpr auto UpdateTime_FPS = 0x64; // float
		constexpr auto UpdateTime_Delta = 0x68; // float
		constexpr auto WarmupTime = 0x6c; // float
		constexpr auto WarmupTickRate = 0x70; // float
		constexpr auto TranslucencySortPriority = 0x74; // int32_t
		constexpr auto Emitters = 0x78; // TArray<ObjectProperty>
		constexpr auto PreviewComponent = 0x88; // ComponentProperty
		constexpr auto bLit = 0x90; // uint32_t : 1
		constexpr auto bOrientZAxisTowardCamera = 0x90; // uint32_t : 1
		constexpr auto bRegenerateLODDuplicate = 0x90; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x90; // uint32_t : 1
		constexpr auto m_bDeactivateOnInactive = 0x90; // uint32_t : 1
		constexpr auto m_bDeactivateOnInactiveIfEmitterPool = 0x90; // uint32_t : 1
		constexpr auto m_bHasDisplayMasks = 0x90; // uint32_t : 1
		constexpr auto bShouldResetPeakCounts = 0x90; // uint32_t : 1
		constexpr auto bHasPhysics = 0x90; // uint32_t : 1
		constexpr auto bUseRealtimeThumbnail = 0x90; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0x90; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0x90; // uint32_t : 1
		constexpr auto bUseDelayRange = 0x90; // uint32_t : 1
		constexpr auto CurveEdSetup = 0x94; // ObjectProperty
		constexpr auto LODDistanceCheckTime = 0x9c; // float
		constexpr auto LODDistances = 0xa0; // TArray<float>
		constexpr auto LODSettings = 0xb0; // TArray<FParticleSystemLOD>
		constexpr auto FixedRelativeBoundingBox = 0xc0; // FBox
		constexpr auto SecondsBeforeInactive = 0xdc; // float
		constexpr auto Delay = 0xe0; // float
		constexpr auto DelayLow = 0xe4; // float
		constexpr auto MacroUVPosition = 0xe8; // FVector
		constexpr auto MacroUVRadius = 0xf4; // float
		constexpr auto CustomOcclusionBounds = 0xf8; // FBox
		constexpr auto SoloTracking = 0x114; // TArray<FLODSoloTrack>
	}

	namespace n_UUIScene_UIPopupDeal { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_pDealPanel = 0x1d4; // ObjectProperty
		constexpr auto m_pOkButton = 0x1dc; // ObjectProperty
		constexpr auto m_pCancelButton = 0x1e4; // ObjectProperty
	}

	namespace n_ATgBotFactory_Leashed { // : ATgBotFactory
		constexpr auto LeashLocation = 0x370; // FVector
		constexpr auto LeashRange = 0x37c; // float
		constexpr auto LeashVolume = 0x380; // ObjectProperty
	}

	namespace n_ATgPawn_Turret_Flamethrower_Mini { // : ATgPawn_Turret_Flamethrower
		constexpr auto m_fExtraTranslationOffsetZ = 0x2f1c; // float
	}

	namespace n_ATgPortal { // : APortal
		constexpr auto bUpdateRotation = 0x2e4; // uint32_t : 1
		constexpr auto bCheckOverlap = 0x2e4; // uint32_t : 1
		constexpr auto bResetVelocity = 0x2e4; // uint32_t : 1
		constexpr auto bCheckTaskForce = 0x2e4; // uint32_t : 1
		constexpr auto nTaskForce = 0x2e8; // int32_t
		constexpr auto TeleportSoundCue = 0x2ec; // ObjectProperty
		constexpr auto FadeInTime = 0x2f4; // float
		constexpr auto VolumeMultiplier = 0x2f8; // float
		constexpr auto PitchMultiplier = 0x2fc; // float
	}

	namespace n_UMaterialExpressionTerrainLayerWeight { // : UMaterialExpression
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto Base = 0xb8; // FExpressionInput
		constexpr auto Layer = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewWeight = 0x128; // float
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_ATgDevice_CorvusUlt { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedCorvus = 0xa10; // ObjectProperty
		constexpr auto m_CorvusUltFireDevice = 0xa18; // ObjectProperty
	}

	namespace n_ATgDeploy_AbsorptionField { // : ATgDeploy_Shield
		constexpr auto r_ControllerPitch = 0x470; // float
	}

	namespace n_USeqAct_AkLoadBank { // : USeqAct_Latent
		constexpr auto Async = 0x120; // uint32_t : 1
		constexpr auto bWaitingCallback = 0x120; // uint32_t : 1
		constexpr auto Bank = 0x124; // ObjectProperty
		constexpr auto Signal = 0x12c; // int32_t
	}

	namespace n_USeqAct_Deproject { // : USequenceAction
		constexpr auto ScreenX = 0x108; // float
		constexpr auto ScreenY = 0x10c; // float
		constexpr auto TraceDistance = 0x110; // float
		constexpr auto HitObject = 0x114; // ObjectProperty
		constexpr auto HitLocation = 0x11c; // FVector
		constexpr auto HitNormal = 0x128; // FVector
	}

	namespace n_ATgMissionListVolume { // : AVolume
		constexpr auto m_nMapObjectId = 0x2bc; // int32_t
		constexpr auto s_nQueueTableId = 0x2c0; // int32_t
		constexpr auto s_nQueueTableMsgId = 0x2c4; // int32_t
		constexpr auto m_Teleporter = 0x2c8; // ObjectProperty
	}

	namespace n_USeqAct_ApplySoundNode { // : USequenceAction
		constexpr auto PlaySound = 0x108; // ObjectProperty
		constexpr auto ApplyNode = 0x110; // ObjectProperty
	}

	namespace n_UUIComponent_ItemObtainabilityBanner { // : UUIComponent_Display
		constexpr auto m_eObtainability = 0x124; // SimplifiedItemObtainabilityValue
		constexpr auto m_bForceHide = 0x128; // uint32_t : 1
		constexpr auto m_mcTF = 0x12c; // ObjectProperty
	}

	namespace n_UTgAnimMetaData_MICStates_Interp { // : UTgAnimMetaData_Keyframed
		constexpr auto MICStateNameFrom = 0x80; // FName
		constexpr auto MICStateNameTo = 0x88; // FName
		constexpr auto nMaterialIndex = 0x90; // int32_t
		constexpr auto bApplyToChildMeshes = 0x94; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_BarrageFire { // : UTgDeviceForm
		constexpr auto m_LastTargetedActor = 0x28c; // ObjectProperty
		constexpr auto m_CachedActiveOverlayController = 0x294; // ObjectProperty
		constexpr auto m_fIncomingTime = 0x29c; // float
		constexpr auto m_nActiveShotNum = 0x2a0; // int32_t
		constexpr auto m_fIncomingTimeCurrentShot = 0x2a4; // float
		constexpr auto m_fRemainingDurationPct = 0x2a8; // float
	}

	namespace n_UUIComponent_PurchaseOption { // : UUIComponent_Display
		constexpr auto m_mcOption = 0x124; // ObjectProperty
		constexpr auto m_mcSkinBoost = 0x12c; // ObjectProperty
		constexpr auto m_pButton = 0x134; // ObjectProperty
		constexpr auto m_mcControllerCost = 0x13c; // ObjectProperty
		constexpr auto m_mcControllerCurrencyIcon = 0x144; // ObjectProperty
		constexpr auto m_mcControllerButton = 0x14c; // ObjectProperty
		constexpr auto m_mcPreviousCost = 0x154; // ObjectProperty
		constexpr auto m_mcPreviousCostStrikethrough = 0x15c; // ObjectProperty
		constexpr auto m_mcPreviousCostCurrencyIcon = 0x164; // ObjectProperty
		constexpr auto m_nPurchaseQuantity = 0x16c; // int32_t
	}

	namespace n_UMaterialExpressionFunctionOutput { // : UMaterialExpression
		constexpr auto OutputName = 0xb0; // FString
		constexpr auto Description = 0xc0; // FString
		constexpr auto SortPriority = 0xd0; // int32_t
		constexpr auto A = 0xd4; // FExpressionInput
		constexpr auto bLastPreviewed = 0x108; // uint32_t : 1
		constexpr auto Id = 0x10c; // FGuid
	}

	namespace n_USeqCond_SwitchClass { // : USeqCond_SwitchBase
		constexpr auto ClassArray = 0xec; // TArray<FSwitchClassInfo>
	}

	namespace n_ATgDevice_RaumMinigun { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedRaum = 0xa10; // ObjectProperty
		constexpr auto m_CachedForm = 0xa18; // ObjectProperty
		constexpr auto m_CachedWMA = 0xa20; // ObjectProperty
		constexpr auto m_fCurrentSpinUpTime = 0xa28; // float
		constexpr auto m_fMinSpinUpToFire = 0xa2c; // float
		constexpr auto m_fMaxSpinUpTime = 0xa30; // float
		constexpr auto m_fFastestFireDelay = 0xa34; // float
		constexpr auto m_fImpulseSpinUpTime = 0xa38; // float
		constexpr auto m_fInvMaxSpinUpTime = 0xa3c; // float
		constexpr auto m_fLMBSpinningMovementSpeed = 0xa40; // float
		constexpr auto m_fRMBSpinningMovementSpeed = 0xa44; // float
		constexpr auto m_fMinimumMoveSlowTime = 0xa48; // float
		constexpr auto m_fReloadPreSpinResetTime = 0xa4c; // float
	}

	namespace n_UTgDeviceForm_DarklordInhand { // : UTgDeviceForm_Inhand
		constexpr auto m_CachedDarklord = 0x29c; // ObjectProperty
		constexpr auto m_fFadeParamMin = 0x2a4; // float
		constexpr auto m_fFadeParamMax = 0x2a8; // float
		constexpr auto m_fAmmoParamMin = 0x2ac; // float
		constexpr auto m_fAmmoParamMax = 0x2b0; // float
		constexpr auto m_fMaskParamMin = 0x2b4; // float
		constexpr auto m_fMaskParamMax = 0x2b8; // float
		constexpr auto m_fPreviousAppliedAmmoPerc = 0x2bc; // float
		constexpr auto m_fCurrentAppliedAmmoPerc = 0x2c0; // float
		constexpr auto m_fAnimatedReloadStartNormalizedTime = 0x2c4; // float
		constexpr auto m_fAnimatedReloadEndNormalizedTime = 0x2c8; // float
		constexpr auto m_fReloadDuration = 0x2cc; // float
		constexpr auto m_fReloadTimer = 0x2d0; // float
	}

	namespace n_ATgDeploy_ChurchillTurret { // : ATgDeployable
		constexpr auto m_vDroneSocketOffset = 0x46c; // FVector
		constexpr auto r_bLeftDrone = 0x478; // uint32_t : 1
		constexpr auto m_vCurrentAccumulatedVelocity = 0x47c; // FVector
	}

	namespace n_UTgAchievement_FastDamage { // : UTgAchievement
		constexpr auto m_DamageEntries = 0x94; // TArray<FFastDamageEntry>
		constexpr auto m_nCurrentDamageTotal = 0xa4; // int32_t
	}

	namespace n_UTgSkeletalMeshComponent { // : USkeletalMeshComponent
		constexpr auto VfTable_ITgMeshCompInterface_MaterialStack = 0x7b4; // FPointer
		constexpr auto c_bFxApplied = 0x7bc; // uint32_t : 1
		constexpr auto c_bAttachFxToOwner = 0x7bc; // uint32_t : 1
		constexpr auto c_bIsFemale = 0x7bc; // uint32_t : 1
		constexpr auto c_FxList = 0x7c0; // TArray<ObjectProperty>
		constexpr auto c_DatabaseFxList = 0x7d0; // TArray<ObjectProperty>
		constexpr auto m_nAssemblyId = 0x7e0; // int32_t
		constexpr auto m_ChildMeshes = 0x7e4; // TArray<ComponentProperty>
		constexpr auto FPCTranslation = 0x7f4; // FVector
		constexpr auto FPCRotation = 0x800; // FRotator
		constexpr auto FPCScale = 0x80c; // FVector
		constexpr auto c_AudioGroupId = 0x818; // int32_t
		constexpr auto c_nForceUpdateAttachmentsInTick = 0x81c; // int32_t
		constexpr auto m_MaterialStackManager = 0x820; // ObjectProperty
		constexpr auto AnimNotifyPlayParticleEffectEntries = 0x828; // TArray<FAnimNotifyParticleCacheEntry>
		constexpr auto m_MeshAccessoryStorage = 0x838; // TArray<FMeshAccessoryStorage>
		constexpr auto m_MICScalarParamExtendedStorage = 0x848; // TArray<FMICScalarParamMetaDataStorage>
		constexpr auto m_MICStateParamInterpData = 0x858; // TArray<FMICStateParamInterpData>
	}

	namespace n_ATgEmitter { // : AEmitter
		constexpr auto BoneName = 0x294; // FName
	}

	namespace n_UTgInventoryObject_Listen_ModifyRecoilDuringAbility { // : UTgInventoryObject_Listen_ActiveDuringAbility
		constexpr auto m_nPreviousRecoil = 0xd4; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhilePawnsNear { // : UTgInvListener
		constexpr auto m_nAppliedStacks = 0xc4; // int32_t
		constexpr auto m_fPawnCheckRateInterval = 0xc8; // float
		constexpr auto m_fTimeUntilNextPawnCheck = 0xcc; // float
	}

	namespace n_UTgAnimNodeChannelFire_Pounce { // : UTgAnimNodeChannelFire
		constexpr auto m_bPounceHitSuccessful = 0x180; // uint32_t : 1
	}

	namespace n_UTgSeqAct_PlayCameraAnim { // : USequenceAction
		constexpr auto AnimToPlay = 0x108; // ObjectProperty
		constexpr auto BlendInTime = 0x110; // float
		constexpr auto BlendOutTime = 0x114; // float
		constexpr auto Rate = 0x118; // float
		constexpr auto IntensityScale = 0x11c; // float
	}

	namespace n_UTgInventoryObject_Listen_EnergyCharge { // : UTgInvListener
		constexpr auto m_CachedTgPawn = 0xc4; // ObjectProperty
		constexpr auto m_fChargeMultiplierDamageDealt = 0xcc; // float
		constexpr auto m_fChargeMultiplierDamageTaken = 0xd0; // float
		constexpr auto m_fChargeMultiplierPetDamage = 0xd4; // float
	}

	namespace n_UGFxEvent_FSCommand { // : USequenceEvent
		constexpr auto Movie = 0x128; // ObjectProperty
		constexpr auto FSCommand = 0x130; // FString
		constexpr auto Handler = 0x140; // ObjectProperty
	}

	namespace n_UUIDataAcquisitionQueue { // : UUIData
		constexpr auto m_Acquisitions = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UUIMapSummary { // : UUIResourceDataProvider
		constexpr auto MapName = 0x94; // FString
		constexpr auto ScreenshotPathName = 0xa4; // FString
		constexpr auto DisplayName = 0xb4; // FString
		constexpr auto Description = 0xc4; // FString
	}

	namespace n_USeqAct_CameraLookAt { // : USequenceAction
		constexpr auto bAffectCamera = 0x108; // uint32_t : 1
		constexpr auto bAlwaysFocus = 0x108; // uint32_t : 1
		constexpr auto bAdjustCamera = 0x108; // uint32_t : 1
		constexpr auto bTurnInPlace = 0x108; // uint32_t : 1
		constexpr auto bIgnoreTrace = 0x108; // uint32_t : 1
		constexpr auto bAffectHead = 0x108; // uint32_t : 1
		constexpr auto bRotatePlayerWithCamera = 0x108; // uint32_t : 1
		constexpr auto bToggleGodMode = 0x108; // uint32_t : 1
		constexpr auto bLeaveCameraRotation = 0x108; // uint32_t : 1
		constexpr auto bDisableInput = 0x108; // uint32_t : 1
		constexpr auto bUsedTimer = 0x108; // uint32_t : 1
		constexpr auto bCheckLineOfSight = 0x108; // uint32_t : 1
		constexpr auto InterpSpeedRange = 0x10c; // FVector2D
		constexpr auto InFocusFOV = 0x114; // FVector2D
		constexpr auto FocusBoneName = 0x11c; // FName
		constexpr auto TextDisplay = 0x124; // FString
		constexpr auto TotalTime = 0x134; // float
		constexpr auto CameraFOV = 0x138; // float
		constexpr auto RemainingTime = 0x13c; // float
	}

	namespace n_UUIData_ChestDataWithItem { // : UUIData
		constexpr auto m_pItem = 0x64; // ObjectProperty
		constexpr auto m_pChestData = 0x6c; // ObjectProperty
	}

	namespace n_ATgDevice_BombKingDetonator { // : ATgDevice
		constexpr auto m_bDetonatePoppyBombs = 0xa08; // uint32_t : 1
		constexpr auto m_bInFalseFireRetryPeriod = 0xa08; // uint32_t : 1
		constexpr auto m_fFalseFireRetryStart = 0xa0c; // float
		constexpr auto m_fFalseFireRetryTime = 0xa10; // float
	}

	namespace n_UTgSeqAct_AITargetActor { // : USequenceAction
		constexpr auto CombatTarget = 0x108; // ObjectProperty
	}

	namespace n_UUIScene_UIEndOfMatchLobby { // : UUIScene
		constexpr auto m_pHome = 0x1cc; // ObjectProperty
		constexpr auto m_pPlayAgain = 0x1d4; // ObjectProperty
		constexpr auto m_pPrevArrow = 0x1dc; // ObjectProperty
		constexpr auto m_pNextArrow = 0x1e4; // ObjectProperty
		constexpr auto m_pRewards = 0x1ec; // ObjectProperty
		constexpr auto m_pChallenges = 0x1f4; // ObjectProperty
		constexpr auto m_pTrials = 0x1fc; // ObjectProperty
		constexpr auto m_pQuests = 0x204; // ObjectProperty
		constexpr auto m_pBestClass = 0x20c; // ObjectProperty
		constexpr auto m_pScoreboard = 0x214; // ObjectProperty
		constexpr auto m_pPlayAgainAction = 0x21c; // ObjectProperty
		constexpr auto m_fRejoinQueueTimer = 0x224; // float
		constexpr auto m_nRejoinQueueTimerCBHandle = 0x228; // int32_t
		constexpr auto m_fRejoinQueueTime = 0x22c; // float
	}

	namespace n_URadialBlurComponent { // : UActorComponent
		constexpr auto Material = 0x88; // ObjectProperty
		constexpr auto DepthPriorityGroup = 0x90; // ESceneDepthPriorityGroup
		constexpr auto BlurScale = 0x94; // float
		constexpr auto BlurFalloffExponent = 0x98; // float
		constexpr auto BlurOpacity = 0x9c; // float
		constexpr auto MaxCullDistance = 0xa0; // float
		constexpr auto DistanceFalloffExponent = 0xa4; // float
		constexpr auto bRenderAsVelocity = 0xa8; // uint32_t : 1
		constexpr auto bEnabled = 0xa8; // uint32_t : 1
		constexpr auto LocalToWorld = 0xb0; // FMatrix
	}

	namespace n_UDistributionFloatUniformCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector2D
	}

	namespace n_ATgDevice_GrumpyBomb { // : ATgDevice
		constexpr auto m_fPostTargetingLockInDuration = 0xa08; // float
	}

	namespace n_UTgSkelCon_CCD_IK_FootPlacement { // : USkelControlBase
		constexpr auto NumBones = 0xd0; // int32_t
		constexpr auto MaxPerBoneIterations = 0xd4; // int32_t
		constexpr auto IterationsCount = 0xd8; // int32_t
		constexpr auto Precision = 0xdc; // float
		constexpr auto bStartFromTail = 0xe0; // uint32_t : 1
		constexpr auto bNoTurnOptimization = 0xe0; // uint32_t : 1
		constexpr auto bAllowStretching = 0xe0; // uint32_t : 1
		constexpr auto bInvertFootUpAxis = 0xe0; // uint32_t : 1
		constexpr auto bOrientFootToGround = 0xe0; // uint32_t : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0xe0; // uint32_t : 1
		constexpr auto m_bUseCachedFootOffset = 0xe0; // uint32_t : 1
		constexpr auto JointConstraints = 0xe4; // TArray<FJointConstraintInformation>
		constexpr auto MaxAngleSteps = 0xf4; // float
		constexpr auto MaxStretchSteps = 0xf8; // float
		constexpr auto FootOffset = 0xfc; // float
		constexpr auto FootUpAxis = 0x100; // EAxis
		constexpr auto FootRotOffset = 0x104; // FRotator
		constexpr auto MaxUpAdjustment = 0x110; // float
		constexpr auto MaxDownAdjustment = 0x114; // float
		constexpr auto MaxFootOrientAdjust = 0x118; // float
		constexpr auto EffectorLocation = 0x11c; // FVector
		constexpr auto m_vCachedFootOffset = 0x128; // FVector
	}

	namespace n_UTgAIBehaviorNode { // : UTgAIBehaviorObject
		constexpr auto Parent = 0x64; // ObjectProperty
		constexpr auto InvTickFrequency = 0x6c; // float
		constexpr auto TitleName = 0x70; // FString
		constexpr auto FriendlyName = 0x80; // FString
		constexpr auto bShownInMenu = 0x90; // uint32_t : 1
	}

	namespace n_UMeshBeaconHost { // : UMeshBeacon
		constexpr auto ClientConnections = 0xa4; // TArray<FClientMeshBeaconConnection>
		constexpr auto PendingPlayerConnections = 0xb4; // TArray<FUniqueNetId>
		constexpr auto OwningPlayerId = 0xc4; // FUniqueNetId
		constexpr auto bAllowBandwidthTesting = 0xcc; // uint32_t : 1
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto __OnReceivedClientConnectionRequest__Delegate = 0xd4; // DelegateProperty
		constexpr auto __OnStartedBandwidthTest__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnFinishedBandwidthTest__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnAllPendingPlayersConnected__Delegate = 0x104; // DelegateProperty
		constexpr auto __OnReceivedClientCreateNewSessionResult__Delegate = 0x114; // DelegateProperty
	}

	namespace n_ATgSkeletalMeshActor { // : ASkeletalMeshActor
		constexpr auto c_MeshAssets = 0x2e8; // FMeshAssets
		constexpr auto c_bLoadMeshAssetts = 0x328; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_FireOnLowHealth { // : UTgInvListener
		constexpr auto m_bPendingActivation = 0xc4; // uint32_t : 1
	}

	namespace n_ATgDevice_SplittingIce { // : ATgDevice_ArcingBeam
		constexpr auto m_bShouldRequireRootedTarget = 0xa20; // uint32_t : 1
	}

	namespace n_ALiftExit { // : ANavigationPoint
		constexpr auto MyLiftCenter = 0x378; // ObjectProperty
		constexpr auto bExitOnly = 0x380; // uint32_t : 1
	}

	namespace n_USeqVar_RandomInt { // : USeqVar_Int
		constexpr auto Min = 0xa4; // int32_t
		constexpr auto Max = 0xa8; // int32_t
	}

	namespace n_ATgDevice_FernandoInhand { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_ULevelStreamingAlwaysLoaded { // : ULevelStreaming
		constexpr auto bIsProceduralBuildingLODLevel = 0x100; // uint32_t : 1
	}

	namespace n_ATgPawn_Barik { // : ATgPawn_Character
		constexpr auto m_CachedBurninate = 0x3164; // ObjectProperty
	}

	namespace n_UTgSeqAct_ShowGameTip { // : USequenceAction
		constexpr auto GameTipId = 0x108; // int32_t
		constexpr auto TargetPlayer = 0x10c; // ObjectProperty
	}

	namespace n_APortalMarker { // : ANavigationPoint
		constexpr auto MyPortal = 0x378; // ObjectProperty
	}

	namespace n_UUIScene_UIPopupPartyManager { // : UUIScene
		constexpr auto m_pCloseButton = 0x1cc; // ObjectProperty
		constexpr auto m_pList = 0x1d4; // ObjectProperty
		constexpr auto m_mcTitle = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_pSelectAllAction = 0x1ec; // ObjectProperty
		constexpr auto m_fWaitingTimer = 0x1f4; // float
		constexpr auto m_fWaitingTimeOut = 0x1f8; // float
	}

	namespace n_UMcpMessageManager { // : UMcpMessageBase
		constexpr auto VfTable_FTickableObject = 0xec; // FPointer
		constexpr auto CreateMessageUrl = 0xf4; // FString
		constexpr auto DeleteMessageUrl = 0x104; // FString
		constexpr auto QueryMessagesUrl = 0x114; // FString
		constexpr auto QueryMessageContentsUrl = 0x124; // FString
		constexpr auto DeleteAllMessagesUrl = 0x134; // FString
		constexpr auto CompressMessageRequests = 0x144; // TArray<FMcpCompressMessageRequest>
		constexpr auto UncompressMessageRequests = 0x154; // TArray<FMcpUncompressMessageRequest>
	}

	namespace n_ATgPawn_Atlas { // : ATgPawn_Character
		constexpr auto r_nReplicatedInhandFireLevel = 0x3164; // int32_t
		constexpr auto m_CachedRMB = 0x3168; // ObjectProperty
		constexpr auto m_CachedBeyondTheVeil = 0x3170; // ObjectProperty
		constexpr auto s_PawnsRewinding = 0x3178; // TArray<FRewindingPawn>
		constexpr auto m_nmXenoName = 0x3188; // FName
		constexpr auto m_bMeshSwappedDirty = 0x3190; // uint32_t : 1
		constexpr auto m_nSuperWarpTalentId = 0x3194; // int32_t
		constexpr auto m_SuperWarpTalent = 0x3198; // ObjectProperty
	}

	namespace n_UMaterialExpressionCosine { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_ATgStaticMeshActorGrass { // : AStaticMeshActor
		constexpr auto m_fTargetScale = 0x2a4; // float
		constexpr auto m_TargetScale3D = 0x2a8; // FVector
		constexpr auto m_fScaleTransitionTime = 0x2b4; // float
	}

	namespace n_ATgSkeletalMeshActor_Posture { // : ASkeletalMeshActor
		constexpr auto r_CurrentPosture = 0x2e8; // TG_POSTURE
		constexpr auto m_PostureBlendNodes = 0x2ec; // TArray<ObjectProperty>
	}

	namespace n_ATerrain { // : AInfo
		constexpr auto Heights = 0x280; // TArray<FTerrainHeight>
		constexpr auto InfoData = 0x290; // TArray<FTerrainInfoData>
		constexpr auto Layers = 0x2a0; // TArray<FTerrainLayer>
		constexpr auto NormalMapLayer = 0x2b0; // int32_t
		constexpr auto DecoLayers = 0x2b4; // TArray<FTerrainDecoLayer>
		constexpr auto AlphaMaps = 0x2c4; // TArray<FAlphaMap>
		constexpr auto TerrainComponents = 0x2d4; // TArray<ComponentProperty>
		constexpr auto NumSectionsX = 0x2e4; // int32_t
		constexpr auto NumSectionsY = 0x2e8; // int32_t
		constexpr auto WeightedMaterials = 0x2ec; // TArray<FTerrainWeightedMaterial>
		constexpr auto WeightedTextureMaps = 0x2fc; // TArray<ObjectProperty>
		constexpr auto MaxTesselationLevel = 0x30c; // int32_t
		constexpr auto MinTessellationLevel = 0x310; // int32_t
		constexpr auto TesselationDistanceScale = 0x314; // float
		constexpr auto TessellationCheckDistance = 0x318; // float
		constexpr auto CollisionTesselationLevel = 0x31c; // int32_t
		constexpr auto CachedTerrainMaterials = 0x320; // FCachedTerrainMaterialArray [0x2]
		constexpr auto NumVerticesX = 0x340; // int32_t
		constexpr auto NumVerticesY = 0x344; // int32_t
		constexpr auto NumPatchesX = 0x348; // int32_t
		constexpr auto NumPatchesY = 0x34c; // int32_t
		constexpr auto MaxComponentSize = 0x350; // int32_t
		constexpr auto StaticLightingResolution = 0x354; // int32_t
		constexpr auto bIsOverridingLightResolution = 0x358; // uint32_t : 1
		constexpr auto bBilinearFilterLightmapGeneration = 0x358; // uint32_t : 1
		constexpr auto bCastShadow = 0x358; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x358; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x358; // uint32_t : 1
		constexpr auto bEnableSpecular = 0x358; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0x358; // uint32_t : 1
		constexpr auto bAllowRigidBodyUnderneath = 0x358; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x358; // uint32_t : 1
		constexpr auto bMorphingEnabled = 0x358; // uint32_t : 1
		constexpr auto bMorphingGradientsEnabled = 0x358; // uint32_t : 1
		constexpr auto bLocked = 0x358; // uint32_t : 1
		constexpr auto bHeightmapLocked = 0x358; // uint32_t : 1
		constexpr auto bShowingCollision = 0x358; // uint32_t : 1
		constexpr auto bUseWorldOriginTextureUVs = 0x358; // uint32_t : 1
		constexpr auto bShowWireframe = 0x358; // uint32_t : 1
		constexpr auto TerrainPhysMaterialOverride = 0x35c; // ObjectProperty
		constexpr auto LightingChannels = 0x364; // FLightingChannelContainer
		constexpr auto LightmassSettings = 0x368; // FLightmassPrimitiveSettings
		constexpr auto ReleaseResourcesFence = 0x384; // FPointer
		constexpr auto EditorTessellationLevel = 0x38c; // int32_t
		constexpr auto SelectedVertices = 0x390; // TArray<FSelectedTerrainVertex>
		constexpr auto WireframeColor = 0x3a0; // FColor
	}

	namespace n_UUIComponent_EndTimesEventHome { // : UUIComponent_EventVault
		constexpr auto m_grInput = 0x1ec; // ObjectProperty
	}

	namespace n_UUIComponent_HealFeedEntry { // : UUIComponent_Display
		constexpr auto m_mcText = 0x124; // ObjectProperty
		constexpr auto m_fRawAmount = 0x12c; // float
		constexpr auto m_fChangeAmount = 0x130; // float
		constexpr auto m_bHealingReduced = 0x134; // uint32_t : 1
		constexpr auto m_eHealDisplayType = 0x138; // HealDisplayType
	}

	namespace n_UUIComponent_BattlePassRewardLevelSingleTrack { // : UUIComponent_Display
		constexpr auto m_pItemIcon = 0x124; // ObjectProperty
		constexpr auto m_pButton = 0x12c; // ObjectProperty
		constexpr auto m_mcBGHighlight = 0x134; // ObjectProperty
		constexpr auto m_mcProgressBreaker = 0x13c; // ObjectProperty
		constexpr auto m_mcHeader = 0x144; // ObjectProperty
		constexpr auto m_mcTierLock = 0x14c; // ObjectProperty
		constexpr auto m_mcFreeTab = 0x154; // ObjectProperty
		constexpr auto m_mcItemLock = 0x15c; // ObjectProperty
		constexpr auto m_mcItemCheck = 0x164; // ObjectProperty
		constexpr auto m_mcItemCardIcon = 0x16c; // ObjectProperty
		constexpr auto m_mcItemDeathCard = 0x174; // ObjectProperty
		constexpr auto m_pItemTooltip = 0x17c; // ObjectProperty
	}

	namespace n_UTgData_Notifications { // : UTgDataObject
		constexpr auto m_Notifications = 0xc0; // TArray<ObjectProperty>
	}

	namespace n_UUIComponentPool { // : UUIComponent
		constexpr auto m_ActivePooledItems = 0x118; // TArray<ObjectProperty>
		constexpr auto m_InactivePooledItems = 0x128; // TArray<ObjectProperty>
	}

	namespace n_UDistributionFloatUniformRange { // : UDistributionFloat
		constexpr auto MaxHigh = 0x7c; // float
		constexpr auto MaxLow = 0x80; // float
		constexpr auto MinHigh = 0x84; // float
		constexpr auto MinLow = 0x88; // float
		constexpr auto bMirrorMaxMin = 0x8c; // uint32_t : 1
	}

	namespace n_USlotToSlotReachSpec { // : UForcedReachSpec
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UParticleModuleKillHeight { // : UParticleModuleKillBase
		constexpr auto Height = 0x68; // FRawDistributionFloat
		constexpr auto bAbsolute = 0x8c; // uint32_t : 1
		constexpr auto bFloor = 0x8c; // uint32_t : 1
		constexpr auto bApplyPSysScale = 0x8c; // uint32_t : 1
	}

	namespace n_UUIHudChatBox { // : UUIChatScene
		constexpr auto m_bLobby = 0x28c; // uint32_t : 1
		constexpr auto m_bFadeFrame = 0x28c; // uint32_t : 1
		constexpr auto m_bHighlight = 0x28c; // uint32_t : 1
		constexpr auto m_bHideInput = 0x28c; // uint32_t : 1
		constexpr auto m_fOffset = 0x290; // float
		constexpr auto m_fInputPosY = 0x294; // float
		constexpr auto m_fInputWidth = 0x298; // float
		constexpr auto m_fOutputTimer = 0x29c; // float [0x8]
		constexpr auto m_nMaxWidth = 0x2bc; // int32_t
		constexpr auto m_sReplyName = 0x2c0; // FString
		constexpr auto m_Buffer = 0x2d0; // ObjectProperty
		constexpr auto m_Highlight = 0x2d8; // ObjectProperty
		constexpr auto m_Output = 0x2e0; // ObjectProperty
		constexpr auto m_OutputText = 0x2e8; // ObjectProperty [0x8]
		constexpr auto m_OutputIcon = 0x328; // ObjectProperty [0x8]
		constexpr auto m_OutputVgsCallout = 0x368; // ObjectProperty [0x28]
		constexpr auto m_OutputFrame = 0x4a8; // ObjectProperty
		constexpr auto m_OutputScroll = 0x4b0; // ObjectProperty
		constexpr auto m_mcCloseBtn = 0x4b8; // ObjectProperty
		constexpr auto m_Input = 0x4c0; // ObjectProperty
		constexpr auto m_InputBtn = 0x4c8; // ObjectProperty
		constexpr auto m_InputHelp = 0x4d0; // ObjectProperty
		constexpr auto m_InputChan = 0x4d8; // ObjectProperty
		constexpr auto m_InputFrame = 0x4e0; // ObjectProperty
		constexpr auto m_bVGSText = 0x4e8; // TArray<char>
	}

	namespace n_UTgSkelCon_MirrorToOtherMesh { // : USkelControlSingleBone
		constexpr auto m_nmIdentifier = 0x100; // FName
	}

	namespace n_USeqAct_AttachToActor { // : USequenceAction
		constexpr auto bDetach = 0x108; // uint32_t : 1
		constexpr auto bHardAttach = 0x108; // uint32_t : 1
		constexpr auto bUseRelativeOffset = 0x108; // uint32_t : 1
		constexpr auto bUseRelativeRotation = 0x108; // uint32_t : 1
		constexpr auto BoneName = 0x10c; // FName
		constexpr auto RelativeOffset = 0x114; // FVector
		constexpr auto RelativeRotation = 0x120; // FRotator
	}

	namespace n_UUIScene_UIMatchLobbyTradePopup { // : UUIScene
		constexpr auto m_pAccept = 0x1cc; // ObjectProperty
		constexpr auto m_pCancel = 0x1d4; // ObjectProperty
		constexpr auto m_mcWaitingText = 0x1dc; // ObjectProperty
		constexpr auto m_mcIconA = 0x1e4; // ObjectProperty
		constexpr auto m_mcIconB = 0x1ec; // ObjectProperty
		constexpr auto m_mcPlayerA = 0x1f4; // ObjectProperty
		constexpr auto m_mcPlayerB = 0x1fc; // ObjectProperty
		constexpr auto m_grButtonSelection = 0x204; // ObjectProperty
		constexpr auto m_pCancelAction = 0x20c; // ObjectProperty
		constexpr auto m_nCancelCallbackHandle = 0x214; // int32_t
	}

	namespace n_USeqAct_AccessObjectList { // : USeqAct_SetSequenceVariable
		constexpr auto OutputObject = 0x108; // ObjectProperty
		constexpr auto ObjectIndex = 0x110; // int32_t
	}

	namespace n_ATgProj_ExtraColliders { // : ATgProj_SpeedOverRange
		constexpr auto m_SecondaryCollisionProxies = 0x52c; // ObjectProperty [0x2]
		constexpr auto m_SecondaryDebugProximityDistancePSC = 0x53c; // ComponentProperty [0x2]
		constexpr auto m_TrackedCollisions = 0x54c; // TArray<FTrackedCollision>
	}

	namespace n_ATgProj_DrogozRocket { // : ATgProj_Simulated
		constexpr auto m_bWasFromSalvo = 0x52c; // uint32_t : 1
	}

	namespace n_ATgDevice_TiberiusUltSlam { // : ATgDevice_Leap
		constexpr auto m_CachedTiberius = 0xa10; // ObjectProperty
		constexpr auto m_fUltSpamLockout = 0xa18; // float
	}

	namespace n_UUIComponent_ItemHint { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
	}

	namespace n_AGameCrowdDestination { // : AGameCrowdInteractionPoint
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x28c; // FPointer
		constexpr auto bKillWhenReached = 0x294; // uint32_t : 1
		constexpr auto bAllowAsPreviousDestination = 0x294; // uint32_t : 1
		constexpr auto bAvoidWhenPanicked = 0x294; // uint32_t : 1
		constexpr auto bSkipBehaviorIfPanicked = 0x294; // uint32_t : 1
		constexpr auto bFleeDestination = 0x294; // uint32_t : 1
		constexpr auto bMustReachExactly = 0x294; // uint32_t : 1
		constexpr auto bHasRestrictions = 0x294; // uint32_t : 1
		constexpr auto bAllowsSpawning = 0x294; // uint32_t : 1
		constexpr auto bAllowCloudSpawning = 0x294; // uint32_t : 1
		constexpr auto bAllowVisibleSpawning = 0x294; // uint32_t : 1
		constexpr auto bLineSpawner = 0x294; // uint32_t : 1
		constexpr auto bSpawnAtEdge = 0x294; // uint32_t : 1
		constexpr auto bSoftPerimeter = 0x294; // uint32_t : 1
		constexpr auto bIsVisible = 0x294; // uint32_t : 1
		constexpr auto bWillBeVisible = 0x294; // uint32_t : 1
		constexpr auto bCanSpawnHereNow = 0x294; // uint32_t : 1
		constexpr auto bIsBeyondSpawnDistance = 0x294; // uint32_t : 1
		constexpr auto bAdjacentToVisibleNode = 0x294; // uint32_t : 1
		constexpr auto bHasNavigationMesh = 0x294; // uint32_t : 1
		constexpr auto NextDestinations = 0x298; // TArray<ObjectProperty>
		constexpr auto QueueHead = 0x2a8; // ObjectProperty
		constexpr auto Capacity = 0x2b0; // int32_t
		constexpr auto Frequency = 0x2b4; // float
		constexpr auto CustomerCount = 0x2b8; // int32_t
		constexpr auto SupportedAgentClasses = 0x2bc; // TArray<AGameCrowdAgent*>
		constexpr auto SupportedArchetypes = 0x2cc; // TArray<ObjectProperty>
		constexpr auto RestrictedAgentClasses = 0x2dc; // TArray<AGameCrowdAgent*>
		constexpr auto RestrictedArchetypes = 0x2ec; // TArray<ObjectProperty>
		constexpr auto ExactReachTolerance = 0x2fc; // float
		constexpr auto InteractionTag = 0x300; // FName
		constexpr auto InteractionDelay = 0x308; // float
		constexpr auto ReachedBehaviors = 0x30c; // TArray<FBehaviorEntry>
		constexpr auto AgentEnRoute = 0x31c; // ObjectProperty
		constexpr auto Priority = 0x324; // float
		constexpr auto LastSpawnTime = 0x328; // float
		constexpr auto MyPopMgr = 0x32c; // ObjectProperty
	}

	namespace n_ALiftCenter { // : ANavigationPoint
		constexpr auto MyLift = 0x378; // ObjectProperty
		constexpr auto MaxDist2D = 0x380; // float
		constexpr auto LiftOffset = 0x384; // FVector
		constexpr auto bJumpLift = 0x390; // uint32_t : 1
		constexpr auto CollisionHeight = 0x394; // float
		constexpr auto LiftTrigger = 0x398; // ObjectProperty
	}

	namespace n_UShadowMap2D { // : UObject
		constexpr auto Texture = 0x60; // ObjectProperty
		constexpr auto CoordinateScale = 0x68; // FVector2D
		constexpr auto CoordinateBias = 0x70; // FVector2D
		constexpr auto LightGuid = 0x78; // FGuid
		constexpr auto bIsShadowFactorTexture = 0x88; // uint32_t : 1
		constexpr auto Component = 0x8c; // ComponentProperty
		constexpr auto InstanceIndex = 0x94; // int32_t
	}

	namespace n_USeqCond_CompareFloat { // : USequenceCondition
		constexpr auto ValueA = 0xec; // float
		constexpr auto ValueB = 0xf0; // float
	}

	namespace n_USeqEvent_AISeeEnemy { // : USequenceEvent
		constexpr auto MaxSightDistance = 0x128; // float
	}

	namespace n_UUIDataProvider_OnlinePlayerStorageArray { // : UUIDataProvider
		constexpr auto PlayerStorage = 0x70; // ObjectProperty
		constexpr auto PlayerStorageId = 0x78; // int32_t
		constexpr auto ColumnHeaderText = 0x7c; // FString
		constexpr auto Values = 0x8c; // TArray<FName>
	}

	namespace n_UDominantSpotLightComponent { // : USpotLightComponent
		constexpr auto DominantLightShadowInfo = 0x270; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x320; // FArray_Mirror
	}

	namespace n_UTgAnimBlendByPhysics { // : UTgAnimNodeBlendList
		constexpr auto PhysicsMap = 0x168; // int32_t [0xe]
		constexpr auto LastPhysics = 0x1a0; // int32_t
	}

	namespace n_USceneCaptureComponent { // : UActorComponent
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto bEnablePostProcess = 0x88; // uint32_t : 1
		constexpr auto bEnableFog = 0x88; // uint32_t : 1
		constexpr auto bUseMainScenePostProcessSettings = 0x88; // uint32_t : 1
		constexpr auto bSkipUpdateIfTextureUsersOccluded = 0x88; // uint32_t : 1
		constexpr auto bSkipUpdateIfOwnerOccluded = 0x88; // uint32_t : 1
		constexpr auto bSkipRenderingDepthPrepass = 0x88; // uint32_t : 1
		constexpr auto ClearColor = 0x8c; // FColor
		constexpr auto ViewMode = 0x90; // ESceneCaptureViewMode
		constexpr auto SceneLOD = 0x94; // int32_t
		constexpr auto FrameRate = 0x98; // float
		constexpr auto PostProcess = 0x9c; // ObjectProperty
		constexpr auto MaxUpdateDist = 0xa4; // float
		constexpr auto MaxViewDistanceOverride = 0xa8; // float
		constexpr auto MaxStreamingUpdateDist = 0xac; // float
		constexpr auto CaptureInfo = 0xb0; // FPointer
		constexpr auto ViewState = 0xb8; // FPointer
		constexpr auto PostProcessProxies = 0xc0; // TArray<FPointer>
	}

	namespace n_UKMeshProps { // : UObject
		constexpr auto COMNudge = 0x60; // FVector
		constexpr auto AggGeom = 0x6c; // FKAggregateGeom
	}

	namespace n_UTerrainWeightMapTexture { // : UTexture2D
		constexpr auto ParentTerrain = 0x208; // ObjectProperty
		constexpr auto WeightedMaterials = 0x210; // TArray<FPointer>
	}

	namespace n_APlayerReplicationInfo { // : AReplicationInfo
		constexpr auto Score = 0x280; // float
		constexpr auto Deaths = 0x284; // int32_t
		constexpr auto Ping = 0x288; // char
		constexpr auto TTSSpeaker = 0x289; // ETTSSpeaker
		constexpr auto RemoteUserDataUpdated = 0x28a; // char
		constexpr auto NumLives = 0x28c; // int32_t
		constexpr auto PlayerName = 0x290; // FString
		constexpr auto OldName = 0x2a0; // FString
		constexpr auto PlayerID = 0x2b0; // int32_t
		constexpr auto Team = 0x2b4; // ObjectProperty
		constexpr auto bAdmin = 0x2bc; // uint32_t : 1
		constexpr auto bIsSpectator = 0x2bc; // uint32_t : 1
		constexpr auto bOnlySpectator = 0x2bc; // uint32_t : 1
		constexpr auto bWaitingPlayer = 0x2bc; // uint32_t : 1
		constexpr auto bReadyToPlay = 0x2bc; // uint32_t : 1
		constexpr auto bOutOfLives = 0x2bc; // uint32_t : 1
		constexpr auto bBot = 0x2bc; // uint32_t : 1
		constexpr auto bHasBeenWelcomed = 0x2bc; // uint32_t : 1
		constexpr auto bIsInactive = 0x2bc; // uint32_t : 1
		constexpr auto bFromPreviousLevel = 0x2bc; // uint32_t : 1
		constexpr auto bIsTargeted = 0x2bc; // uint32_t : 1
		constexpr auto RemoteUserIsGuest = 0x2bc; // uint32_t : 1
		constexpr auto StartTime = 0x2c0; // int32_t
		constexpr auto StringSpectating = 0x2c4; // FString
		constexpr auto StringUnknown = 0x2d4; // FString
		constexpr auto Kills = 0x2e4; // int32_t
		constexpr auto GameMessageClass = 0x2e8; // UGameMessage*
		constexpr auto ExactPing = 0x2f0; // float
		constexpr auto SavedNetworkAddress = 0x2f4; // FString
		constexpr auto UniqueId = 0x304; // FUniqueNetId
		constexpr auto ConsoleUniqueId = 0x30c; // FUniqueNetId
		constexpr auto SessionName = 0x314; // FName
		constexpr auto AutomatedTestingData = 0x31c; // FAutomatedTestingDatum
		constexpr auto StatConnectionCounts = 0x324; // int32_t
		constexpr auto StatPingTotals = 0x328; // int32_t
		constexpr auto StatPingMin = 0x32c; // int32_t
		constexpr auto StatPingMax = 0x330; // int32_t
		constexpr auto StatPKLTotal = 0x334; // int32_t
		constexpr auto StatPKLMin = 0x338; // int32_t
		constexpr auto StatPKLMax = 0x33c; // int32_t
		constexpr auto StatMaxInBPS = 0x340; // int32_t
		constexpr auto StatAvgInBPS = 0x344; // int32_t
		constexpr auto StatMaxOutBPS = 0x348; // int32_t
		constexpr auto StatAvgOutBPS = 0x34c; // int32_t
		constexpr auto Avatar = 0x350; // ObjectProperty
		constexpr auto RemoteUserAudioDevices = 0x358; // FPRIAudioDeviceInfo [0xa]
		constexpr auto RemoteUserId = 0x470; // FString
	}

	namespace n_ATrigger_LOS { // : ATrigger
		constexpr auto PCsWithLOS = 0x290; // TArray<ObjectProperty>
	}

	namespace n_ATgEmitter_TeamColor { // : AEmitter
		constexpr auto nTaskForce = 0x294; // int32_t
		constexpr auto DefaultParticleChannels = 0x298; // FParticleChannelContainer
	}

	namespace n_ATgPickupFactory { // : APickupFactory
		constexpr auto bRotatingPickup = 0x3a4; // uint32_t : 1
		constexpr auto YawRotationRate = 0x3a8; // float
		constexpr auto TeamOwner = 0x3ac; // ObjectProperty [0x4]
		constexpr auto BaseMesh = 0x3cc; // ComponentProperty
	}

	namespace n_ATgPawn_Owl { // : ATgPawn_Character
		constexpr auto m_bUseSecondWeapon = 0x3164; // uint32_t : 1
		constexpr auto m_bSwappingWeapons = 0x3164; // uint32_t : 1
		constexpr auto c_bUseSecondDeathAnim = 0x3164; // uint32_t : 1
		constexpr auto m_nAltInhandSlot = 0x3168; // int32_t
		constexpr auto m_nAltAltfireSlot = 0x316c; // int32_t
		constexpr auto m_fOwlStealthJuice = 0x3170; // float
		constexpr auto m_fMaxOwlStealthJuice = 0x3174; // float
		constexpr auto r_fRemoteOwlStealthJuice = 0x3178; // float
		constexpr auto c_fOldRemoteOwlStealthJuice = 0x317c; // float
		constexpr auto m_CachedOwlStealth = 0x3180; // ObjectProperty
	}

	namespace n_ATgDevice_YagoSpray { // : ATgDevice
		constexpr auto m_CachedYagorath = 0xa08; // ObjectProperty
		constexpr auto m_fMinAcidJuiceToFire = 0xa10; // float
		constexpr auto m_fFailsafeFireloopTimeout = 0xa14; // float
	}

	namespace n_UTgAIBehaviorCondition_IsInMinotaurRadius { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
	}

	namespace n_UUIComponent_CustomMatchMember { // : UUIComponent_Display
		constexpr auto m_mcLeaderTF = 0x124; // ObjectProperty
		constexpr auto m_mcPlayerNameTF = 0x12c; // ObjectProperty
		constexpr auto m_mcPlayerTitleTF = 0x134; // ObjectProperty
		constexpr auto m_mcPlayerLevelTF = 0x13c; // ObjectProperty
		constexpr auto m_pKickButton = 0x144; // ObjectProperty
		constexpr auto m_pSwapButton = 0x14c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x154; // ObjectProperty
		constexpr auto m_pCrossPlayIcon = 0x15c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_ReturnAlways { // : UTgAIBehaviorCondition
		constexpr auto AlwaysReturn = 0x98; // EBehaviorStatus
	}

	namespace n_ATgWeaponMeshActor_NinjaInhand { // : ATgWeaponMeshActor
		constexpr auto c_bSwapTracerIndices = 0x450; // uint32_t : 1
	}

	namespace n_UHavokNavMeshGrid { // : UObject
		constexpr auto WorldToScreen = 0x60; // FMatrix
		constexpr auto ScreenToWorld = 0xa0; // FMatrix
		constexpr auto TexelDistance = 0xe0; // float
		constexpr auto GridSize = 0xe4; // int32_t
		constexpr auto SerializedGridData = 0xe8; // FUntypedBulkData_Mirror
		constexpr auto MemoryGridData = 0x128; // TArray<char>
	}

	namespace n_ATgWeaponMeshActor_RiderInhand { // : ATgWeaponMeshActor
		constexpr auto m_AltFireFx = 0x450; // ObjectProperty
		constexpr auto m_b3pFireShouldBeActive = 0x458; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_MinigunSpinUp { // : UTgDeviceForm
		constexpr auto m_SpinnerSkelControl1P = 0x28c; // ObjectProperty
		constexpr auto m_SpinnerSkelControl3P = 0x294; // ObjectProperty
	}

	namespace n_UTgDeviceForm_MountNoHorse { // : UTgDeviceForm_Mount
		constexpr auto c_SparkleFXID = 0x29c; // int32_t
		constexpr auto c_SparkleFX = 0x2a0; // ObjectProperty
	}

	namespace n_UUIComponent_DemonTeleportTimer { // : UUIComponent_Display
		constexpr auto m_mcTimerMask = 0x124; // ObjectProperty
		constexpr auto m_CachedViewedDemon = 0x12c; // ObjectProperty
		constexpr auto m_fCurrentTimerPct = 0x134; // float
		constexpr auto m_bVisible = 0x138; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_ImaniRMB2 { // : UTgDeviceForm
		constexpr auto m_bInFireLoop = 0x28c; // uint32_t : 1
	}

	namespace n_UTgSeqAct_ToggleStaticMeshSilhouette { // : USequenceAction
		constexpr auto SMA = 0x108; // ObjectProperty
		constexpr auto bIsEnabled = 0x110; // uint32_t : 1
	}

	namespace n_UGameEngine { // : UEngine
		constexpr auto GPendingLevel = 0x8a4; // ObjectProperty
		constexpr auto PendingLevelPlayerControllerClassName = 0x8ac; // FString
		constexpr auto LastURL = 0x8bc; // FURL
		constexpr auto LastRemoteURL = 0x924; // FURL
		constexpr auto ServerActors = 0x98c; // TArray<FString>
		constexpr auto TravelURL = 0x99c; // FString
		constexpr auto TravelType = 0x9ac; // char
		constexpr auto bWorldWasLoadedThisTick = 0x9b0; // uint32_t : 1
		constexpr auto bWorldWasLoadedLastTick = 0x9b0; // uint32_t : 1
		constexpr auto bCheckForMovieCapture = 0x9b0; // uint32_t : 1
		constexpr auto bTriggerPostLoadMap = 0x9b0; // uint32_t : 1
		constexpr auto bStartedLoadMapMovie = 0x9b0; // uint32_t : 1
		constexpr auto bShouldCommitPendingMapChange = 0x9b0; // uint32_t : 1
		constexpr auto bClearAnimSetLinkupCachesOnLoadMap = 0x9b0; // uint32_t : 1
		constexpr auto bEnableSecondaryDisplay = 0x9b0; // uint32_t : 1
		constexpr auto bEnableSecondaryViewport = 0x9b0; // uint32_t : 1
		constexpr auto OnlineSubsystem = 0x9b4; // ObjectProperty
		constexpr auto GamePadLightbarSubsystem = 0x9bc; // ObjectProperty
		constexpr auto DLCEnumerator = 0x9c4; // ObjectProperty
		constexpr auto DownloadableContentEnumeratorClassName = 0x9cc; // FString
		constexpr auto DLCManager = 0x9dc; // ObjectProperty
		constexpr auto DownloadableContentManagerClassName = 0x9e4; // FString
		constexpr auto LevelsToLoadForPendingMapChange = 0x9f4; // TArray<FName>
		constexpr auto LoadedLevelsForPendingMapChange = 0xa04; // TArray<ObjectProperty>
		constexpr auto PendingMapChangeFailureDescription = 0xa14; // FString
		constexpr auto MaxDeltaTime = 0xa24; // float
		constexpr auto SecondaryViewportClientClassName = 0xa28; // FString
		constexpr auto SecondaryViewportClients = 0xa38; // TArray<ObjectProperty>
		constexpr auto SecondaryViewportFrames = 0xa48; // TArray<FPointer>
		constexpr auto PendingLevelStreamingStatusUpdates = 0xa58; // TArray<FLevelStreamingStatus>
		constexpr auto ObjectReferencers = 0xa68; // TArray<ObjectProperty>
		constexpr auto PackagesToFullyLoad = 0xa78; // TArray<FFullyLoadedPackagesInfo>
		constexpr auto NamedNetDrivers = 0xa88; // TArray<FNamedNetDriver>
		constexpr auto AnimTags = 0xa98; // TArray<FAnimTag>
	}

	namespace n_UInterpTrackFaceFX { // : UInterpTrack
		constexpr auto FaceFXAnimSets = 0xa0; // TArray<ObjectProperty>
		constexpr auto FaceFXSeqs = 0xb0; // TArray<FFaceFXTrackKey>
		constexpr auto CachedActorFXAsset = 0xc0; // ObjectProperty
		constexpr auto FaceFXSoundCueKeys = 0xc8; // TArray<FFaceFXSoundCueKey>
	}

	namespace n_AGamePawn { // : APawn
		constexpr auto bLastHitWasHeadShot = 0x5a8; // uint32_t : 1
		constexpr auto bRespondToExplosions = 0x5a8; // uint32_t : 1
	}

	namespace n_ATgDevice_KinessaInhand { // : ATgDevice
		constexpr auto m_vSniperProjectileSpawnOffset = 0xa08; // FVector
		constexpr auto m_ForceFeedbackStartFireScout = 0xa14; // ObjectProperty
		constexpr auto m_ForceFeedbackStartFireSniper = 0xa1c; // ObjectProperty
	}

	namespace n_ATgSpectatorTempCam { // : ADynamicCameraActor
		constexpr auto bIsViewTarget = 0x420; // uint32_t : 1
		constexpr auto bIsBookmark = 0x420; // uint32_t : 1
	}

	namespace n_ATgDevice_DragonFlight { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedImaniAvatar = 0xa10; // ObjectProperty
		constexpr auto m_fAccumulatedDeviation = 0xa18; // float
		constexpr auto m_fDeviationMeanLifetime = 0xa1c; // float
		constexpr auto m_eCurrentThrottle = 0xa20; // EFlightThrottle
		constexpr auto m_fDragonForcedUpwardAcceleration = 0xa24; // float
		constexpr auto m_fDragonPreferredClearance = 0xa28; // float
		constexpr auto c_bLastInterceptedAscend = 0xa2c; // uint32_t : 1
		constexpr auto m_bWantsAscend = 0xa2c; // uint32_t : 1
		constexpr auto m_bWantsDescend = 0xa2c; // uint32_t : 1
	}

	namespace n_UUIComponent_Targeter_ShadowTeleport { // : UUIComponent_Targeter_BracketTargeter
		constexpr auto m_bHasNullTarget = 0x19c; // uint32_t : 1
	}

	namespace n_UUIComponent_ItemStatsEntry { // : UUIComponent_Display
		constexpr auto m_sItemStatsLabels = 0x124; // FString [0x7]
		constexpr auto m_mcIcon = 0x194; // ObjectProperty
		constexpr auto m_mcTF = 0x19c; // ObjectProperty
	}

	namespace n_ATgDevice_AutoHealing2 { // : ATgDevice
		constexpr auto m_bIsApplied = 0xa08; // uint32_t : 1
		constexpr auto m_bForceRemoval = 0xa08; // uint32_t : 1
		constexpr auto m_CachedPawnOwner = 0xa0c; // ObjectProperty
		constexpr auto m_fLastLowHealthSoundTime = 0xa14; // float
		constexpr auto m_fPrevHealthPct = 0xa18; // float
	}

	namespace n_UTgDeviceForm_HeatHaze { // : UTgDeviceForm
		constexpr auto m_bShouldBeActive = 0x28c; // uint32_t : 1
		constexpr auto m_fUltActivationTime = 0x290; // float
		constexpr auto m_fUltActivationPercent = 0x294; // float
	}

	namespace n_UUIComponent_RankedSnapshotPlayer { // : UUIComponent_Display
		constexpr auto m_mcRank = 0x124; // ObjectProperty
		constexpr auto m_mcScore = 0x12c; // ObjectProperty
		constexpr auto m_mcRegion = 0x134; // ObjectProperty
		constexpr auto m_mcWinLoss = 0x13c; // ObjectProperty
		constexpr auto m_pAvatar = 0x144; // ObjectProperty
		constexpr auto m_pPlayerName = 0x14c; // ObjectProperty
	}

	namespace n_UUIComponent_SummerEventRewards { // : UUIComponent_Display
		constexpr auto m_mcRewardTrack = 0x124; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x12c; // ObjectProperty
		constexpr auto m_pRewardItems = 0x134; // ObjectProperty
	}

	namespace n_UInterpTrackInstAnimControl { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UUIComponent_StoreEngagementItems { // : UUIComponent_Display
		constexpr auto m_mcItemNameTF = 0x124; // ObjectProperty
		constexpr auto m_mcTimerTF = 0x12c; // ObjectProperty
		constexpr auto m_mcEventPassFlag = 0x134; // ObjectProperty
		constexpr auto m_mcOwned = 0x13c; // ObjectProperty
		constexpr auto m_mcOwnedIcon = 0x144; // ObjectProperty
		constexpr auto m_mcOwnedText = 0x14c; // ObjectProperty
		constexpr auto m_EventPassNameTF = 0x154; // ObjectProperty
		constexpr auto m_EventPassExtraTF = 0x15c; // ObjectProperty
		constexpr auto m_pSkinItemList = 0x164; // ObjectProperty
		constexpr auto m_pBoosterItemList = 0x16c; // ObjectProperty
		constexpr auto m_grStoreEngagementItems = 0x174; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x17c; // ObjectProperty
		constexpr auto m_PurchaseButtonEventPass = 0x184; // ObjectProperty
		constexpr auto m_InteractablePurchaseButtons = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_NavDots = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_PurchaseButtonBooster = 0x1ac; // ObjectProperty
		constexpr auto m_LastSelectedItemIndex = 0x1b4; // int32_t
		constexpr auto m_LastSelectedItemVendor = 0x1b8; // int32_t
		constexpr auto m_bOwnBattlePass = 0x1bc; // uint32_t : 1
		constexpr auto m_bPauseAutoRotation = 0x1bc; // uint32_t : 1
		constexpr auto m_bShouldPreviewBoosters = 0x1bc; // uint32_t : 1
		constexpr auto m_nIndex = 0x1c0; // int32_t
		constexpr auto m_fAutoRotationTime = 0x1c4; // float
		constexpr auto m_fAutoRotationDelay = 0x1c8; // float
		constexpr auto m_LeftArrow = 0x1cc; // ObjectProperty
		constexpr auto m_RightArrow = 0x1d4; // ObjectProperty
		constexpr auto m_mcLeftStick = 0x1dc; // ObjectProperty
		constexpr auto m_mcRightStick = 0x1e4; // ObjectProperty
		constexpr auto m_mcBoosterSelectedState = 0x1ec; // ObjectProperty
	}

	namespace n_UUIHudSkills3P { // : UTgGfxScene
		constexpr auto m_nWeapons = 0x1ec; // int32_t [0x3]
		constexpr auto m_bShouldShow = 0x1f8; // uint32_t : 1
		constexpr auto m_mcWeapons = 0x1fc; // ObjectProperty [0x3]
	}

	namespace n_AGameCrowdAgentSM { // : AGameCrowdAgent
		constexpr auto Mesh = 0x500; // ComponentProperty
		constexpr auto MeshColor = 0x508; // ObjectProperty
	}

	namespace n_UPathConstraint { // : UObject
		constexpr auto CacheIdx = 0x60; // int32_t
		constexpr auto NextConstraint = 0x64; // ObjectProperty
	}

	namespace n_AColorScaleVolume { // : AVolume
		constexpr auto ColorScale = 0x2bc; // FVector
		constexpr auto InterpTime = 0x2c8; // float
	}

	namespace n_UGameCrowdBehavior_PlayAnimation { // : UGameCrowdAgentBehavior
		constexpr auto AnimationList = 0x9c; // TArray<FName>
		constexpr auto BlendInTime = 0xac; // float
		constexpr auto BlendOutTime = 0xb0; // float
		constexpr auto bUseRootMotion = 0xb4; // uint32_t : 1
		constexpr auto bLookAtPlayer = 0xb4; // uint32_t : 1
		constexpr auto bLooping = 0xb4; // uint32_t : 1
		constexpr auto bBlendBetweenAnims = 0xb4; // uint32_t : 1
		constexpr auto CustomActionTarget = 0xb8; // ObjectProperty
		constexpr auto LoopIndex = 0xc0; // int32_t
		constexpr auto LoopTime = 0xc4; // float
		constexpr auto AnimSequence = 0xc8; // ObjectProperty
		constexpr auto AnimationIndex = 0xd0; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NumGodsNearDeployable { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto DeployableId = 0xa0; // int32_t
		constexpr auto GodThreshold = 0xa4; // int32_t
	}

	namespace n_ATgDevice_PoisonBolts { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
	}

	namespace n_UTgChatData { // : UObject
		constexpr auto m_nId = 0x60; // int32_t
		constexpr auto m_nSoundId = 0x64; // int32_t
		constexpr auto m_nChannel = 0x68; // int32_t
		constexpr auto m_bFeedback = 0x6c; // uint32_t : 1
		constexpr auto m_bSenderIsPaidBattlePass = 0x6c; // uint32_t : 1
		constexpr auto m_bSenderIsVerifiedPlayer = 0x6c; // uint32_t : 1
		constexpr auto m_bIsVGS = 0x6c; // uint32_t : 1
		constexpr auto m_sSender = 0x70; // FString
		constexpr auto m_dwSenderId = 0x80; // Fdword
		constexpr auto m_dwSenderBattlePassXp = 0x84; // Fdword
		constexpr auto m_sMessage = 0x88; // FString
		constexpr auto m_sSenderColor = 0x98; // FString
		constexpr auto m_sSenderClass = 0xa8; // FString
		constexpr auto m_sMessageColor = 0xb8; // FString
	}

	namespace n_ATgDeploy_DistortionField { // : ATgDeploy_EffectAura
		constexpr auto m_fRadiusVFXScale = 0x4b0; // float
	}

	namespace n_UTgAIBehaviorCondition_DifficultyLevel { // : UTgAIBehaviorCondition
		constexpr auto Difficulty = 0x98; // EBotDifficultyLevel
	}

	namespace n_UTgSeqAct_SetUIClock { // : USequenceAction
		constexpr auto ShowAlarmTexture = 0x108; // uint32_t : 1
		constexpr auto UseProgressBar = 0x108; // uint32_t : 1
		constexpr auto IsCountingDown = 0x108; // uint32_t : 1
	}

	namespace n_UVivoxClosure { // : UObject
		constexpr auto m_Connector = 0x60; // ObjectProperty
		constexpr auto m_OnlineSub = 0x68; // ObjectProperty
	}

	namespace n_UTgAIBehaviorSensor_SafeToRecall { // : UTgAIBehaviorSensor
		constexpr auto SafeRecallDist = 0x94; // float
	}

	namespace n_UTgAnimBlendByFire { // : UTgAnimNodeBlendList
		constexpr auto m_bSetToIdleOnCeaseRelevant = 0x168; // uint32_t : 1
		constexpr auto m_bShouldReplayIfAlreadyActive = 0x168; // uint32_t : 1
		constexpr auto m_InHandDeviceParameters = 0x16c; // FDeviceParameters
		constexpr auto m_OffHand1DeviceParameters = 0x180; // FDeviceParameters
		constexpr auto m_OffHand2DeviceParameters = 0x194; // FDeviceParameters
		constexpr auto m_OffHand3DeviceParameters = 0x1a8; // FDeviceParameters
		constexpr auto m_OffHand4DeviceParameters = 0x1bc; // FDeviceParameters
		constexpr auto m_RecallDeviceParameters = 0x1d0; // FDeviceParameters
		constexpr auto m_OwningPawn = 0x1e4; // ObjectProperty
	}

	namespace n_UNavMeshPathConstraint { // : UObject
		constexpr auto NextConstraint = 0x60; // ObjectProperty
		constexpr auto NumNodesProcessed = 0x68; // int32_t
		constexpr auto NumThrownOutNodes = 0x6c; // int32_t
		constexpr auto AddedDirectCost = 0x70; // float
		constexpr auto AddedHeuristicCost = 0x74; // float
	}

	namespace n_UUIData_BurnCardSelection { // : UUIData
		constexpr auto m_nTier = 0x64; // int32_t
		constexpr auto m_Item = 0x68; // ObjectProperty
		constexpr auto m_LootTableItem = 0x70; // ObjectProperty
		constexpr auto m_State = 0x78; // BurnCardSelectionState
	}

	namespace n_UAnimNodeAdditiveBlending { // : UAnimNodeBlend
		constexpr auto bPassThroughWhenNotRendered = 0x124; // uint32_t : 1
	}

	namespace n_UUIDataStore_OnlineStats { // : UUIDataStore_Remote
		constexpr auto StatsReadClasses = 0x98; // TArray<UOnlineStatsRead*>
		constexpr auto StatsReadName = 0xa8; // FName
		constexpr auto PlayerNickData = 0xb0; // FPlayerNickMetaData
		constexpr auto RankNameMetaData = 0xc8; // FRankMetaData
		constexpr auto TotalRowsName = 0xe0; // FName
		constexpr auto StatsReadObjects = 0xe8; // TArray<ObjectProperty>
		constexpr auto StatsRead = 0xf8; // ObjectProperty
		constexpr auto CurrentReadType = 0x100; // EStatsFetchType
		constexpr auto StatsInterface = 0x104; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x114; // TScriptInterface<Class>
	}

	namespace n_UUIMenuManager { // : UTgGfxScene
		constexpr auto m_pPopupManager = 0x1ec; // ObjectProperty
	}

	namespace n_ATgDeploy_BlackHole { // : ATgDeployable
		constexpr auto r_fRadiusScale = 0x46c; // float
		constexpr auto m_fMaxPullSpeed = 0x470; // float
		constexpr auto m_fMinPullSpeed = 0x474; // float
		constexpr auto m_fDistanceWithMaxSpeed = 0x478; // float
		constexpr auto m_fEventHorizonDistance = 0x47c; // float
		constexpr auto m_fInnerRadius = 0x480; // float
		constexpr auto m_ActorsInRange = 0x484; // TArray<ObjectProperty>
		constexpr auto m_CachedPawnOwner = 0x494; // ObjectProperty
		constexpr auto m_CachedEnemyTaskForce = 0x49c; // ObjectProperty
		constexpr auto r_bPullActive = 0x4a4; // uint32_t : 1
	}

	namespace n_UUIData_LootTableItem { // : UUIData
		constexpr auto m_dwLootId = 0x64; // Fdword
		constexpr auto m_pParentVendor = 0x68; // ObjectProperty
		constexpr auto m_Prices = 0x70; // TArray<ObjectProperty>
	}

	namespace n_ATgAIController { // : AGameAIController
		constexpr auto m_pOwner = 0x4e0; // ObjectProperty
		constexpr auto m_vSpawnLocation = 0x4e8; // FVector
		constexpr auto m_rSpawnDirection = 0x4f4; // FRotator
		constexpr auto m_pFactory = 0x500; // ObjectProperty
		constexpr auto m_nFactorySpawnGroup = 0x508; // int32_t
		constexpr auto m_pBot = 0x50c; // FPointer
		constexpr auto m_pSettings = 0x514; // FPointer
		constexpr auto m_pSkin = 0x51c; // FPointer
		constexpr auto m_iAssignedLane = 0x524; // int32_t
		constexpr auto m_SeePawnCache = 0x528; // TMap<None, None>
		constexpr auto LastSeePawnCacheTime = 0x570; // float
		constexpr auto SeePawnClearTime = 0x574; // float
		constexpr auto m_pLastAttacker = 0x578; // ObjectProperty
		constexpr auto m_Squad = 0x580; // ObjectProperty
		constexpr auto LastDamageTakenTime = 0x588; // float
		constexpr auto LastDamageTakenPosition = 0x58c; // FVector
		constexpr auto m_LoSCache = 0x598; // TMap<None, None>
		constexpr auto LastLoSCacheTime = 0x5e0; // float
		constexpr auto m_eNavmeshType = 0x5e4; // EHavokNavigationMeshType
		constexpr auto WalkingPhysics = 0x5e5; // EPhysics
		constexpr auto m_fAILevelUpSecs = 0x5e8; // float
		constexpr auto VisionDistance = 0x5ec; // float
		constexpr auto VisionDistanceBonus = 0x5f0; // float
		constexpr auto bUsesObstacleAvoidance = 0x5f4; // uint32_t : 1
		constexpr auto bIsPaused = 0x5f4; // uint32_t : 1
		constexpr auto bIsAIFrozen = 0x5f4; // uint32_t : 1
		constexpr auto ObstacleAvoidance = 0x5f8; // ObjectProperty
		constexpr auto ObstacleAvoidanceGridPointSize = 0x600; // float
		constexpr auto ObstacleAvoidanceGridExtents = 0x604; // float
		constexpr auto SpreadLocation = 0x608; // FVector
		constexpr auto CachedPRI = 0x614; // ObjectProperty
		constexpr auto LastCheckStuckTime = 0x61c; // float
		constexpr auto CheckStuckTime = 0x620; // float
		constexpr auto LastCachedStuckPosition = 0x624; // FVector
		constexpr auto LastCheckFlungTime = 0x630; // float
		constexpr auto CheckFlungTime = 0x634; // float
		constexpr auto LastCachedFlungPosition = 0x638; // FVector
	}

	namespace n_UUIComponent_ChampionOverview { // : UUIComponent_Display
		constexpr auto m_mcBioText = 0x124; // ObjectProperty
		constexpr auto m_mcRentalText = 0x12c; // ObjectProperty
		constexpr auto m_mcRentalTextLabel = 0x134; // ObjectProperty
		constexpr auto m_mcRentalTextDuration = 0x13c; // ObjectProperty
		constexpr auto m_mcStatsPanel = 0x144; // ObjectProperty
		constexpr auto m_mcStatsPanelLevel = 0x14c; // ObjectProperty
		constexpr auto m_mcStatsPanelLevelUp = 0x154; // ObjectProperty
		constexpr auto m_mcStatsPanelXP = 0x15c; // ObjectProperty
		constexpr auto m_mcStatsPanelReward = 0x164; // ObjectProperty
		constexpr auto m_mcStatsPanelRewardDetails = 0x16c; // ObjectProperty
		constexpr auto m_mcStatsProgressMask = 0x174; // ObjectProperty
		constexpr auto m_fCurrentXP = 0x17c; // float
		constexpr auto m_fXPBarAnimDuration = 0x180; // int32_t
		constexpr auto m_nTickCallbackHandle = 0x184; // int32_t
		constexpr auto m_pLevelUpButton = 0x188; // ObjectProperty
		constexpr auto m_pMasteryRewardsButton = 0x190; // ObjectProperty
		constexpr auto m_Group = 0x198; // ObjectProperty
		constexpr auto m_pChampionData = 0x1a0; // ObjectProperty
		constexpr auto m_akLevelUp = 0x1a8; // ObjectProperty
		constexpr auto m_pEquippedSkin = 0x1b0; // ObjectProperty
	}

	namespace n_UParticleModuleSourceMovement { // : UParticleModuleLocationBase
		constexpr auto SourceMovementScale = 0x68; // FRawDistributionVector
	}

	namespace n_UUIDataStore_DynamicResource { // : UUIDataStore
		constexpr auto ProfileProvider = 0x98; // ObjectProperty
		constexpr auto GameResourceDataStore = 0xa0; // ObjectProperty
		constexpr auto ResourceProviderDefinitions = 0xa8; // TArray<FDynamicResourceProviderDefinition>
		constexpr auto ResourceProviders = 0xb8; // FMultiMap_Mirror
	}

	namespace n_ATgDeploy_TigronHeavyBlade { // : ATgDeployable
		constexpr auto m_fPersistTime = 0x46c; // float
		constexpr auto m_fPickupRangeSqr = 0x470; // float
		constexpr auto m_bCanPickUp = 0x474; // uint32_t : 1
		constexpr auto m_bWasDeployedOnInaraWall = 0x474; // uint32_t : 1
		constexpr auto m_CachedTiberius = 0x478; // ObjectProperty
		constexpr auto m_GeometryWall = 0x480; // ObjectProperty
		constexpr auto m_GeometryEffectWall = 0x488; // ObjectProperty
		constexpr auto m_fScaleMultiplier = 0x490; // float
	}

	namespace n_ATgDevice_TigronHeavyBlade { // : ATgDevice_DualWield
		constexpr auto m_CachedTiberius = 0xa18; // ObjectProperty
		constexpr auto s_bBladePickedUp = 0xa20; // uint32_t : 1
		constexpr auto m_bHasQueuedRecall = 0xa20; // uint32_t : 1
		constexpr auto m_eLocalBladeState = 0xa24; // TigerBladeState
		constexpr auto m_fSecondaryActivationDelay = 0xa28; // float
		constexpr auto m_fLastProjectileSpawnedTimestamp = 0xa2c; // float
		constexpr auto m_fDeferredSecondaryActivationTime = 0xa30; // float
		constexpr auto m_fActivationLockoutDelay = 0xa34; // float
		constexpr auto m_fOffsetPivotBy = 0xa38; // float
		constexpr auto m_fLastThrowTimestamp = 0xa3c; // float
	}

	namespace n_UUIComponent_ItemRadialMenuVGS { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
		constexpr auto m_mcHighlight = 0x12c; // ObjectProperty
		constexpr auto m_mcDisabledBG = 0x134; // ObjectProperty
		constexpr auto m_mcKeyboardKey = 0x13c; // ObjectProperty
		constexpr auto m_mcKeyboardKeyTF = 0x144; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x14c; // ObjectProperty
	}

	namespace n_UDynamicSpriteComponent { // : USpriteComponent
		constexpr auto AnimatedScale = 0x26c; // FInterpCurveFloat
		constexpr auto AnimatedColor = 0x280; // FInterpCurveLinearColor
		constexpr auto AnimatedPosition = 0x294; // FInterpCurveVector2D
		constexpr auto LocationOffset = 0x2a8; // FVector
		constexpr auto LoopCount = 0x2b4; // int32_t
	}

	namespace n_ACoverReplicator { // : AReplicationInfo
		constexpr auto CoverReplicationData = 0x280; // TArray<FCoverReplicationInfo>
	}

	namespace n_UTgDeviceForm_YagoTravel { // : UTgDeviceForm_SpinnerWhileFiring
		constexpr auto m_SimpleStanceTravelForm1P = 0x2b8; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceTravelForm3P = 0x2c8; // TArray<ObjectProperty>
	}

	namespace n_UDownloadableContentEnumerator { // : UObject
		constexpr auto DLCBundles = 0x60; // TArray<FOnlineContent>
		constexpr auto DLCRootDir = 0x70; // FString
		constexpr auto FindDLCDelegates = 0x80; // TArray<DelegateProperty>
		constexpr auto __OnFindDLCComplete__Delegate = 0x90; // DelegateProperty
	}

	namespace n_UTgInvListener_ActiveDeployableEffect { // : UTgInvListener
		constexpr auto m_AppliedTargetIds = 0xc4; // TArray<int32_t>
	}

	namespace n_UCoverMeshComponent { // : UStaticMeshComponent
		constexpr auto Meshes = 0x310; // TArray<FCoverMeshes>
		constexpr auto LocationOffset = 0x320; // FVector
		constexpr auto AutoAdjustOn = 0x32c; // ObjectProperty
		constexpr auto AutoAdjustOff = 0x334; // ObjectProperty
		constexpr auto Disabled = 0x33c; // ObjectProperty
		constexpr auto bShowWhenNotSelected = 0x344; // uint32_t : 1
	}

	namespace n_UAudioDevice { // : USubsystem
		constexpr auto MaxChannels = 0x68; // int32_t
		constexpr auto CommonAudioPoolSize = 0x6c; // int32_t
		constexpr auto LowPassFilterResonance = 0x70; // float
		constexpr auto MinCompressedDurationEditor = 0x74; // float
		constexpr auto MinCompressedDurationGame = 0x78; // float
		constexpr auto ChirpInSoundNodeWaveName = 0x7c; // FString
		constexpr auto ChirpInSoundNodeWave = 0x8c; // ObjectProperty
		constexpr auto ChirpOutSoundNodeWaveName = 0x94; // FString
		constexpr auto ChirpOutSoundNodeWave = 0xa4; // ObjectProperty
		constexpr auto CommonAudioPool = 0xac; // FPointer
		constexpr auto CommonAudioPoolFreeBytes = 0xb4; // int32_t
		constexpr auto AudioComponents = 0xb8; // TArray<ComponentProperty>
		constexpr auto AudioComponentsToStop = 0xc8; // TArray<ComponentProperty>
		constexpr auto Sources = 0xd8; // TArray<FPointer>
		constexpr auto FreeSources = 0xe8; // TArray<FPointer>
		constexpr auto WaveInstanceSourceMap = 0xf8; // TMap<None, None>
		constexpr auto bGameWasTicking = 0x140; // uint32_t : 1
		constexpr auto bSoundSpawningEnabled = 0x140; // uint32_t : 1
		constexpr auto Listeners = 0x144; // TArray<FListener>
		constexpr auto CurrentTick = 0x154; // FQWord
		constexpr auto SoundClasses = 0x15c; // TMap<None, None>
		constexpr auto SourceSoundClasses = 0x1a4; // TMap<None, None>
		constexpr auto CurrentSoundClasses = 0x1ec; // TMap<None, None>
		constexpr auto DestinationSoundClasses = 0x234; // TMap<None, None>
		constexpr auto SoundModes = 0x27c; // TMap<None, None>
		constexpr auto Effects = 0x2c4; // FPointer
		constexpr auto BaseSoundModeName = 0x2cc; // FName
		constexpr auto CurrentMode = 0x2d4; // ObjectProperty
		constexpr auto SoundModeStartTime = 0x2dc; // FDouble
		constexpr auto SoundModeFadeInStartTime = 0x2e4; // FDouble
		constexpr auto SoundModeFadeInEndTime = 0x2ec; // FDouble
		constexpr auto SoundModeEndTime = 0x2f4; // FDouble
		constexpr auto ListenerVolumeIndex = 0x2fc; // int32_t
		constexpr auto ListenerInteriorSettings = 0x300; // FInteriorSettings
		constexpr auto InteriorStartTime = 0x330; // FDouble
		constexpr auto InteriorEndTime = 0x338; // FDouble
		constexpr auto ExteriorEndTime = 0x340; // FDouble
		constexpr auto InteriorLPFEndTime = 0x348; // FDouble
		constexpr auto ExteriorLPFEndTime = 0x350; // FDouble
		constexpr auto InteriorVolumeInterp = 0x358; // float
		constexpr auto InteriorLPFInterp = 0x35c; // float
		constexpr auto ExteriorVolumeInterp = 0x360; // float
		constexpr auto ExteriorLPFInterp = 0x364; // float
		constexpr auto TestAudioComponent = 0x368; // ComponentProperty
		constexpr auto TextToSpeech = 0x370; // FPointer
		constexpr auto DebugState = 0x378; // EDebugState
		constexpr auto TransientMasterVolume = 0x37c; // float
		constexpr auto LastUpdateTime = 0x380; // float
		constexpr auto DefaultAudioComponentClass = 0x384; // UAudioComponent*
		constexpr auto DefaultAudioComponentClassName = 0x38c; // FString
		constexpr auto DefaultAudioDevice = 0x39c; // FString
	}

	namespace n_UTgDeviceFire_SilenceBeam { // : UTgDeviceFire
		constexpr auto m_CachedGauntlet = 0x268; // ObjectProperty
		constexpr auto m_fLockOnScale = 0x270; // float
		constexpr auto m_fServerRangeBufferMult = 0x274; // float
		constexpr auto m_fBaseEncroachmentActorRange = 0x278; // float
	}

	namespace n_UUIData_ChampionChests { // : UUIData
		constexpr auto m_Chests = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackLinearColorProp { // : UInterpTrackLinearColorBase
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UParticleModuleLocationPrimitiveSphere_Seeded { // : UParticleModuleLocationPrimitiveSphere
		constexpr auto RandomSeedInfo = 0xd8; // FParticleRandomSeedInfo
	}

	namespace n_UTgAIBehaviorCondition_TimeSinceLanepusherTookDamage { // : UTgAIBehaviorCondition
		constexpr auto TimeThreshold = 0x98; // float
	}

	namespace n_UTgDataManager { // : UObject
		constexpr auto m_EOMData = 0x60; // ObjectProperty
		constexpr auto m_CardData = 0x68; // ObjectProperty
		constexpr auto m_NotificationData = 0x70; // ObjectProperty
		constexpr auto m_DataSets = 0x78; // TArray<ObjectProperty>
		constexpr auto m_Callbacks = 0x88; // TArray<ObjectProperty>
	}

	namespace n_UFogVolumeSphericalDensityComponent { // : UFogVolumeDensityComponent
		constexpr auto MaxDensity = 0xe0; // float
		constexpr auto SphereCenter = 0xe4; // FVector
		constexpr auto SphereRadius = 0xf0; // float
		constexpr auto PreviewSphereRadius = 0xf4; // ComponentProperty
	}

	namespace n_UMaterialExpressionLightmassReplace { // : UMaterialExpression
		constexpr auto Realtime = 0xb0; // FExpressionInput
		constexpr auto Lightmass = 0xe4; // FExpressionInput
	}

	namespace n_UTgMenuMeshInfo { // : UObject
		constexpr auto MeshInfo = 0x60; // FLobbyMeshInfo
		constexpr auto Children = 0xcc; // TArray<ObjectProperty>
		constexpr auto ParentSocketName = 0xdc; // FName
		constexpr auto AttachedParticleSystems = 0xe4; // TArray<FParticleSystemInfo>
	}

	namespace n_ATgPawn_Tyra { // : ATgPawn_Character
		constexpr auto m_HuntersMarkDevice = 0x3164; // ObjectProperty
		constexpr auto m_HuntersMarkTargets = 0x316c; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimNodeBlendByCombatWithTransition { // : UTgAnimNodeToggleWithTransition
		constexpr auto m_TgP = 0x170; // ObjectProperty
		constexpr auto m_bInCombatAck = 0x178; // uint32_t : 1
		constexpr auto m_fTransitionIntoCombatTime = 0x17c; // float
		constexpr auto m_fTransitionOutOfCombatTime = 0x180; // float
	}

	namespace n_UTgSpectatorInput { // : UTgPlayerInput
		constexpr auto SpectatorSensitivity = 0x3bc; // float
	}

	namespace n_ATgDevice_Turret { // : ATgDevice_Pet
		constexpr auto m_FlameTurretID = 0xa08; // int32_t
		constexpr auto m_MegaTurretID = 0xa0c; // int32_t
		constexpr auto m_LockdownTurretID = 0xa10; // int32_t
		constexpr auto m_SpawnLocationOverride = 0xa14; // FVector
		constexpr auto m_bLockdownIsOn = 0xa20; // uint32_t : 1
		constexpr auto m_bHasFlamethrowerTurret = 0xa20; // uint32_t : 1
		constexpr auto m_bHasMegaTurret = 0xa20; // uint32_t : 1
	}

	namespace n_UTgAchievement_KillWithComboAny { // : UTgAchievement
		constexpr auto fTime = 0x94; // float
		constexpr auto m_Entries = 0x98; // TArray<float>
	}

	namespace n_ARB_RadialForceActor { // : ARigidBodyBase
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto ForceStrength = 0x288; // float
		constexpr auto ForceRadius = 0x28c; // float
		constexpr auto SwirlStrength = 0x290; // float
		constexpr auto SpinTorque = 0x294; // float
		constexpr auto ForceFalloff = 0x298; // ERadialImpulseFalloff
		constexpr auto RadialForceMode = 0x299; // ERadialForceType
		constexpr auto bForceActive = 0x29c; // uint32_t : 1
		constexpr auto bForceApplyToCloth = 0x29c; // uint32_t : 1
		constexpr auto bForceApplyToFluid = 0x29c; // uint32_t : 1
		constexpr auto bForceApplyToRigidBodies = 0x29c; // uint32_t : 1
		constexpr auto bForceApplyToProjectiles = 0x29c; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x2a0; // FRBCollisionChannelContainer
	}

	namespace n_UParticleModuleLifetime_Seeded { // : UParticleModuleLifetime
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UMaterialEffect { // : UPostProcessEffect
		constexpr auto Material = 0x88; // ObjectProperty
	}

	namespace n_UPBRuleNodeSubRuleset { // : UPBRuleNodeBase
		constexpr auto SubRuleset = 0x70; // ObjectProperty
	}

	namespace n_UUIComponent_EndTimesEventOverview { // : UUIComponent_Display
		constexpr auto m_grInput = 0x124; // ObjectProperty
	}

	namespace n_USeqAct_StreamInTextures { // : USeqAct_Latent
		constexpr auto bLocationBased = 0x120; // uint32_t : 1
		constexpr auto bStreamingActive = 0x120; // uint32_t : 1
		constexpr auto bHasTriggeredAllLoaded = 0x120; // uint32_t : 1
		constexpr auto Seconds = 0x124; // float
		constexpr auto StreamingDistanceMultiplier = 0x128; // float
		constexpr auto NumWantingResourcesID = 0x12c; // int32_t
		constexpr auto StopTimestamp = 0x130; // float
		constexpr auto LocationActors = 0x134; // TArray<ObjectProperty>
		constexpr auto ForceMaterials = 0x144; // TArray<ObjectProperty>
		constexpr auto CinematicTextureGroups = 0x154; // FTextureGroupContainer
	}

	namespace n_UTgAnimNodeToggleWithTransition_Disengage { // : UTgAnimNodeToggleWithTransition
		constexpr auto m_nPendingChildIndex = 0x170; // int32_t
		constexpr auto m_bForceNewActiveChild = 0x174; // uint32_t : 1
	}

	namespace n_ATgDevice_ManaRift { // : ATgDevice
		constexpr auto m_CachedImani = 0xa08; // ObjectProperty
		constexpr auto m_fDistanceTolerance = 0xa10; // float
		constexpr auto m_vLastLocation = 0xa14; // FVector
		constexpr auto m_bLocationIsLive = 0xa20; // uint32_t : 1
		constexpr auto m_fLocationTimestamp = 0xa24; // float
	}

	namespace n_UOnlineSubsystemSteamworks { // : UOnlineSubsystemCommonImpl
		constexpr auto VfTable_PComOnlinePlayerInterface = 0x288; // FPointer
		constexpr auto bStoringAchievement = 0x290; // uint32_t : 1
		constexpr auto bClientStatsStorePending = 0x290; // uint32_t : 1
		constexpr auto bGSStatsStoresSuccess = 0x290; // uint32_t : 1
		constexpr auto bNeedsKeyboardTicking = 0x290; // uint32_t : 1
		constexpr auto bLastHasConnection = 0x290; // uint32_t : 1
		constexpr auto bIsStatsSessionOk = 0x290; // uint32_t : 1
		constexpr auto bHasSteamworksAccount = 0x290; // uint32_t : 1
		constexpr auto bShouldUseMcp = 0x290; // uint32_t : 1
		constexpr auto TotalGSStatsStoresPending = 0x294; // int32_t
		constexpr auto UserStatsReceivedState = 0x298; // EOnlineEnumerationReadState
		constexpr auto LoggedInStatus = 0x299; // ELoginStatus
		constexpr auto bWasKeyboardInputCanceled = 0x29a; // char
		constexpr auto CurrentNotificationPosition = 0x29b; // ENetworkNotificationPosition
		constexpr auto CachedGameInt = 0x29c; // ObjectProperty
		constexpr auto LocalProfileName = 0x2a4; // FString
		constexpr auto LoggedInPlayerName = 0x2b4; // FString
		constexpr auto LoggedInPlayerId = 0x2c4; // FUniqueNetId
		constexpr auto LoggedInPlayerNum = 0x2cc; // int32_t
		constexpr auto ProfileDataDirectory = 0x2d0; // FString
		constexpr auto ProfileDataExtension = 0x2e0; // FString
		constexpr auto WriteProfileSettingsDelegates = 0x2f0; // TArray<DelegateProperty>
		constexpr auto CachedProfile = 0x300; // ObjectProperty
		constexpr auto LocalPlayerStorageReadDelegates = 0x308; // TArray<DelegateProperty>
		constexpr auto LocalPlayerStorageWriteDelegates = 0x318; // TArray<DelegateProperty>
		constexpr auto RemotePlayerStorageReadDelegates = 0x328; // TArray<DelegateProperty>
		constexpr auto SpeechRecognitionCompleteDelegates = 0x338; // TArray<DelegateProperty>
		constexpr auto ReadFriendsDelegates = 0x348; // TArray<DelegateProperty>
		constexpr auto FriendsChangeDelegates = 0x358; // TArray<DelegateProperty>
		constexpr auto MutingChangeDelegates = 0x368; // TArray<DelegateProperty>
		constexpr auto LoginChangeDelegates = 0x378; // TArray<DelegateProperty>
		constexpr auto LoginFailedDelegates = 0x388; // TArray<DelegateProperty>
		constexpr auto ContentPurchaseResponseDelegates = 0x398; // TArray<DelegateProperty>
		constexpr auto LogoutCompletedDelegates = 0x3a8; // TArray<DelegateProperty>
		constexpr auto AccountCreateDelegates = 0x3b8; // TArray<DelegateProperty>
		constexpr auto TalkingDelegates = 0x3c8; // TArray<DelegateProperty>
		constexpr auto ReadOnlineStatsCompleteDelegates = 0x3d8; // TArray<DelegateProperty>
		constexpr auto FlushOnlineStatsDelegates = 0x3e8; // TArray<DelegateProperty>
		constexpr auto ConnectionStatusChangeDelegates = 0x3f8; // TArray<DelegateProperty>
		constexpr auto ControllerChangeDelegates = 0x408; // TArray<DelegateProperty>
		constexpr auto LinkStatusDelegates = 0x418; // TArray<DelegateProperty>
		constexpr auto ReadTitleFileCompleteDelegates = 0x428; // TArray<DelegateProperty>
		constexpr auto AchievementDelegates = 0x438; // TArray<DelegateProperty>
		constexpr auto AchievementReadDelegates = 0x448; // TArray<DelegateProperty>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0x458; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0x468; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0x478; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0x488; // TArray<DelegateProperty>
		constexpr auto SharedFileReadCompleteDelegates = 0x498; // TArray<DelegateProperty>
		constexpr auto SharedFileWriteCompleteDelegates = 0x4a8; // TArray<DelegateProperty>
		constexpr auto TokenAndSignatureRetrievedDelegates = 0x4b8; // TArray<DelegateProperty>
		constexpr auto PrivilegeLevelCheckedDelegates = 0x4c8; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersDelegates = 0x4d8; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersByUniqueNetIdsDelegates = 0x4e8; // TArray<DelegateProperty>
		constexpr auto FilterTextDelegates = 0x4f8; // TArray<DelegateProperty>
		constexpr auto CurrentLocalTalker = 0x508; // FLocalTalkerSteam
		constexpr auto RemoteTalkers = 0x514; // TArray<FRemoteTalker>
		constexpr auto GameID = 0x524; // int32_t
		constexpr auto CurrentStatsRead = 0x528; // ObjectProperty
		constexpr auto PendingStats = 0x530; // TArray<FPendingPlayerStats>
		constexpr auto KeyboardResultsString = 0x540; // FString
		constexpr auto KeyboardInputDelegates = 0x550; // TArray<DelegateProperty>
		constexpr auto FriendInviteReceivedDelegates = 0x560; // TArray<DelegateProperty>
		constexpr auto FriendMessageReceivedDelegates = 0x570; // TArray<DelegateProperty>
		constexpr auto AddFriendByNameCompleteDelegates = 0x580; // TArray<DelegateProperty>
		constexpr auto ProfileCache = 0x590; // FProfileSettingsCache
		constexpr auto PlayerStorageCache = 0x5c8; // ObjectProperty
		constexpr auto CachedFriendMessage = 0x5d0; // FString
		constexpr auto DeviceCache = 0x5e0; // FDeviceIdCache
		constexpr auto LocationUrlsForInvites = 0x604; // TArray<FString>
		constexpr auto LocationUrl = 0x614; // FString
		constexpr auto ReceivedGameInviteDelegates = 0x624; // TArray<DelegateProperty>
		constexpr auto JoinFriendGameCompleteDelegates = 0x634; // TArray<DelegateProperty>
		constexpr auto GetNumberOfCurrentPlayersCompleteDelegates = 0x644; // TArray<DelegateProperty>
		constexpr auto RegisterHostStatGuidCompleteDelegates = 0x654; // TArray<DelegateProperty>
		constexpr auto CachedFriendMessages = 0x664; // TArray<FOnlineFriendMessage>
		constexpr auto StatusMappings = 0x674; // TArray<FOnlineStatusMapping>
		constexpr auto DefaultStatus = 0x684; // FString
		constexpr auto GameInviteMessage = 0x694; // FString
		constexpr auto ControllerStates = 0x6a4; // FControllerConnectionState [0x4]
		constexpr auto ConnectionPresenceTimeInterval = 0x6c4; // float
		constexpr auto ConnectionPresenceElapsedTime = 0x6c8; // float
		constexpr auto EncryptedProductKey = 0x6cc; // FString
		constexpr auto MuteList = 0x6dc; // TArray<FUniqueNetId>
		constexpr auto UserCloudFiles = 0x6ec; // TArray<FSteamUserCloud>
		constexpr auto UserCloudMetadata = 0x6fc; // TArray<FSteamUserCloudMetadata>
		constexpr auto SharedFileCache = 0x70c; // TArray<FTitleFile>
		constexpr auto QueuedAvatarRequests = 0x71c; // TArray<FQueuedAvatarRequest>
		constexpr auto AchievementMappings = 0x72c; // TArray<FAchievementMappingInfo>
		constexpr auto PendingAchievementProgress = 0x73c; // TArray<FAchievementProgressStat>
		constexpr auto LeaderboardList = 0x74c; // TArray<FLeaderboardTemplate>
		constexpr auto DeferredLeaderboardReads = 0x75c; // TArray<FDeferredLeaderboardRead>
		constexpr auto DeferredLeaderboardWrites = 0x76c; // TArray<FDeferredLeaderboardWrite>
		constexpr auto PendingLeaderboardStats = 0x77c; // TArray<FDeferredLeaderboardWrite>
		constexpr auto LeaderboardNameMappings = 0x78c; // TArray<FViewIdToLeaderboardName>
		constexpr auto GameServerStatsMappings = 0x79c; // TArray<int32_t>
		constexpr auto CachedAuthInt = 0x7ac; // ObjectProperty
		constexpr auto PendingRedirects = 0x7b4; // TArray<FIpAddr>
		constexpr auto __OnLoginChange__Delegate = 0x7c4; // DelegateProperty
		constexpr auto __OnLoginCancelled__Delegate = 0x7d4; // DelegateProperty
		constexpr auto __OnMutingChange__Delegate = 0x7e4; // DelegateProperty
		constexpr auto __OnFriendsChange__Delegate = 0x7f4; // DelegateProperty
		constexpr auto __OnLoginFailed__Delegate = 0x804; // DelegateProperty
		constexpr auto __OnLogoutCompleted__Delegate = 0x814; // DelegateProperty
		constexpr auto __OnLoginStatusChange__Delegate = 0x824; // DelegateProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x834; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x844; // DelegateProperty
		constexpr auto __OnReadPlayerStorageComplete__Delegate = 0x854; // DelegateProperty
		constexpr auto __OnReadPlayerStorageForNetIdComplete__Delegate = 0x864; // DelegateProperty
		constexpr auto __OnWritePlayerStorageComplete__Delegate = 0x874; // DelegateProperty
		constexpr auto __OnReadFriendsComplete__Delegate = 0x884; // DelegateProperty
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0x894; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0x8a4; // DelegateProperty
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x8b4; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x8c4; // DelegateProperty
		constexpr auto __OnLinkStatusChange__Delegate = 0x8d4; // DelegateProperty
		constexpr auto __OnExternalUIChange__Delegate = 0x8e4; // DelegateProperty
		constexpr auto __OnControllerChange__Delegate = 0x8f4; // DelegateProperty
		constexpr auto __OnConnectionStatusChange__Delegate = 0x904; // DelegateProperty
		constexpr auto __OnStorageDeviceChange__Delegate = 0x914; // DelegateProperty
		constexpr auto __OnReadTitleFileComplete__Delegate = 0x924; // DelegateProperty
		constexpr auto __OnCreateOnlineAccountCompleted__Delegate = 0x934; // DelegateProperty
		constexpr auto __OnKeyboardInputComplete__Delegate = 0x944; // DelegateProperty
		constexpr auto __OnAddFriendByNameComplete__Delegate = 0x954; // DelegateProperty
		constexpr auto __OnFriendInviteReceived__Delegate = 0x964; // DelegateProperty
		constexpr auto __OnReceivedGameInvite__Delegate = 0x974; // DelegateProperty
		constexpr auto __OnJoinFriendGameComplete__Delegate = 0x984; // DelegateProperty
		constexpr auto __OnFriendMessageReceived__Delegate = 0x994; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0x9a4; // DelegateProperty
		constexpr auto __OnContentPurchaseResponse__Delegate = 0x9b4; // DelegateProperty
		constexpr auto __OnDeviceSelectionComplete__Delegate = 0x9c4; // DelegateProperty
		constexpr auto __OnUnlockAchievementComplete__Delegate = 0x9d4; // DelegateProperty
		constexpr auto __OnProfileDataChanged__Delegate = 0x9e4; // DelegateProperty
		constexpr auto __OnReadAchievementsComplete__Delegate = 0x9f4; // DelegateProperty
		constexpr auto __OnReadOnlineAvatarComplete__Delegate = 0xa04; // DelegateProperty
		constexpr auto __OnGetNumberOfCurrentPlayersComplete__Delegate = 0xa14; // DelegateProperty
		constexpr auto __OnReadCrossTitleProfileSettingsComplete__Delegate = 0xa24; // DelegateProperty
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0xa34; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0xa44; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0xa54; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0xa64; // DelegateProperty
		constexpr auto __OnReadSharedFileComplete__Delegate = 0xa74; // DelegateProperty
		constexpr auto __OnWriteSharedFileComplete__Delegate = 0xa84; // DelegateProperty
		constexpr auto __OnTokenAndSignatureRetrieved__Delegate = 0xa94; // DelegateProperty
		constexpr auto __OnPrivilegeLevelChecked__Delegate = 0xaa4; // DelegateProperty
		constexpr auto __OnStatisticChanged__Delegate = 0xab4; // DelegateProperty
		constexpr auto __OnCurrentUserChanged__Delegate = 0xac4; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsers__Delegate = 0xad4; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsersByUniqueNetIds__Delegate = 0xae4; // DelegateProperty
		constexpr auto __OnFilterText__Delegate = 0xaf4; // DelegateProperty
		constexpr auto __OnSystemUserControllerPairingChanged__Delegate = 0xb04; // DelegateProperty
		constexpr auto __OnShowGamerCardComplete__Delegate = 0xb14; // DelegateProperty
		constexpr auto __OnAccountPickerComplete__Delegate = 0xb24; // DelegateProperty
		constexpr auto __OnUserAccountInfoRetrieved__Delegate = 0xb34; // DelegateProperty
		constexpr auto __OnRemoteTalkerStatusChange__Delegate = 0xb44; // DelegateProperty
		constexpr auto __OnShowComposeMessageUIComplete__Delegate = 0xb54; // DelegateProperty
		constexpr auto __OnPeoplePickerComplete__Delegate = 0xb64; // DelegateProperty
		constexpr auto __OnAcceptReceivedData__Delegate = 0xb74; // DelegateProperty
		constexpr auto __OnShowHelpComplete__Delegate = 0xb84; // DelegateProperty
		constexpr auto __OnReadOnlineProfilesComplete__Delegate = 0xb94; // DelegateProperty
		constexpr auto __OnRegisterLocalTalkerComplete__Delegate = 0xba4; // DelegateProperty
		constexpr auto __OnUnregisterLocalTalkerComplete__Delegate = 0xbb4; // DelegateProperty
		constexpr auto __OnUnregisterRemoteTalkerComplete__Delegate = 0xbc4; // DelegateProperty
	}

	namespace n_UUIHudCenter { // : UTgGfxScene
		constexpr auto m_nReticle = 0x1ec; // int32_t
		constexpr auto m_nStuckCount = 0x1f0; // int32_t
		constexpr auto m_nAmmoCurrent = 0x1f4; // int32_t
		constexpr auto m_nAmmoClipSize = 0x1f8; // int32_t
		constexpr auto m_nReticleColor = 0x1fc; // int32_t
		constexpr auto m_bChangeReticleOverEnemy = 0x200; // uint32_t : 1
		constexpr auto m_bChargeAmmo = 0x200; // uint32_t : 1
		constexpr auto m_bReticleBloom = 0x200; // uint32_t : 1
		constexpr auto m_bReticleVisible = 0x200; // uint32_t : 1
		constexpr auto m_bReticleAccessoryVisible = 0x200; // uint32_t : 1
		constexpr auto m_bDisableCombatLog = 0x200; // uint32_t : 1
		constexpr auto m_bRecharging = 0x200; // uint32_t : 1
		constexpr auto m_bWasHiddenOnTick = 0x200; // uint32_t : 1
		constexpr auto m_bWasReloading = 0x200; // uint32_t : 1
		constexpr auto m_bShowFuel = 0x200; // uint32_t : 1
		constexpr auto m_bHitWarning3pVisible = 0x200; // uint32_t : 1
		constexpr auto m_fReloadTime = 0x204; // float
		constexpr auto m_fReloadTimer = 0x208; // float
		constexpr auto m_scHitMarker = 0x20c; // ObjectProperty [0x5]
		constexpr auto m_mcReticle = 0x234; // ObjectProperty
		constexpr auto m_mcDropReticle = 0x23c; // ObjectProperty
		constexpr auto m_mcCircleReticle = 0x244; // ObjectProperty
		constexpr auto m_mcCicleReticleAccuracy = 0x24c; // ObjectProperty [0x2]
		constexpr auto m_mcCrossReticle = 0x25c; // ObjectProperty
		constexpr auto m_mcCrossReticleUp = 0x264; // ObjectProperty
		constexpr auto m_mcCrossReticleLeft = 0x26c; // ObjectProperty
		constexpr auto m_mcCrossReticleRight = 0x274; // ObjectProperty
		constexpr auto m_mcCrossReticleDown = 0x27c; // ObjectProperty
		constexpr auto m_mcDotReticle = 0x284; // ObjectProperty
		constexpr auto m_mcWideReticle = 0x28c; // ObjectProperty
		constexpr auto m_mcShaLinReticle = 0x294; // ObjectProperty
		constexpr auto m_mcShaLinReticleDraw = 0x29c; // ObjectProperty
		constexpr auto m_mcShaLinImpalerReticle = 0x2a4; // ObjectProperty
		constexpr auto m_mcAtlasReticle = 0x2ac; // ObjectProperty
		constexpr auto m_mcAtlasReticleDraw = 0x2b4; // ObjectProperty
		constexpr auto m_mcMaeveReticle = 0x2bc; // ObjectProperty
		constexpr auto m_mcMaevePounceLIRecticle = 0x2c4; // ObjectProperty
		constexpr auto m_mcMaevePounceLORecticle = 0x2cc; // ObjectProperty
		constexpr auto m_mcMaevePounceRIRecticle = 0x2d4; // ObjectProperty
		constexpr auto m_mcMaevePounceRORecticle = 0x2dc; // ObjectProperty
		constexpr auto m_mcHitWarning3p = 0x2e4; // ObjectProperty
		constexpr auto m_mcTargeter = 0x2ec; // ObjectProperty
		constexpr auto m_mcHitMarker = 0x2f4; // ObjectProperty
		constexpr auto m_mcHitMarkerTicks = 0x2fc; // ObjectProperty [0x4]
		constexpr auto m_mcAccuracy = 0x31c; // ObjectProperty
		constexpr auto m_mcRecharge = 0x324; // ObjectProperty
		constexpr auto m_mcRechargeCD = 0x32c; // ObjectProperty
		constexpr auto m_mcStuck = 0x334; // ObjectProperty
		constexpr auto m_mcAmmoNew = 0x33c; // ObjectProperty
		constexpr auto m_mcAmmoNewCharge = 0x344; // ObjectProperty
		constexpr auto m_mcAmmoNewCurrent = 0x34c; // ObjectProperty
		constexpr auto m_mcAmmoNewClipSize = 0x354; // ObjectProperty
		constexpr auto m_mcAmmoNewChargeMask = 0x35c; // ObjectProperty
		constexpr auto m_mcMakoaSmash = 0x364; // ObjectProperty
		constexpr auto m_mcMakoaSmashObj = 0x36c; // ObjectProperty [0x3]
		constexpr auto m_vMakoaSmashStart = 0x384; // FVector2D [0x3]
		constexpr auto m_vMakoaSmashEnd = 0x39c; // FVector2D [0x3]
		constexpr auto m_eCombatInfoType = 0x3b4; // int32_t
		constexpr auto m_fGlobalChatTimer = 0x3b8; // float
		constexpr auto m_Reward = 0x3bc; // ObjectProperty
		constexpr auto m_RewardName = 0x3c4; // ObjectProperty
		constexpr auto m_RewardAmount = 0x3cc; // ObjectProperty
		constexpr auto m_mcGlobalChat = 0x3d4; // ObjectProperty
		constexpr auto m_mcGlobalChatTF = 0x3dc; // ObjectProperty
		constexpr auto m_mcDamage = 0x3e4; // ObjectProperty
		constexpr auto m_Projectiles = 0x3ec; // ObjectProperty
		constexpr auto m_ProjectilePointers = 0x3f4; // FHudProjectile [0xa]
		constexpr auto m_DamageMarkersLight = 0x674; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistLight = 0x684; // TArray<int32_t>
		constexpr auto m_DamageMarkersMedium = 0x694; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistMedium = 0x6a4; // TArray<int32_t>
		constexpr auto m_DamageMarkersHeavy = 0x6b4; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistHeavy = 0x6c4; // TArray<int32_t>
		constexpr auto m_DamageMarkersAOEMedium = 0x6d4; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistAOEMedium = 0x6e4; // TArray<int32_t>
		constexpr auto m_DamageMarkersAOEHeavy = 0x6f4; // TArray<FHudMarker>
		constexpr auto m_DamageMarkerFreelistAOEHeavy = 0x704; // TArray<int32_t>
		constexpr auto m_mcFuel = 0x714; // ObjectProperty
		constexpr auto m_mcFuelBar = 0x71c; // ObjectProperty
		constexpr auto m_mcFuelMask = 0x724; // ObjectProperty
		constexpr auto m_mcReload = 0x72c; // ObjectProperty
		constexpr auto m_mcReloadTF = 0x734; // ObjectProperty
		constexpr auto m_mcReloadAnim = 0x73c; // ObjectProperty
		constexpr auto m_TorvaldShieldBar = 0x744; // ObjectProperty
		constexpr auto m_DemonTeleportTimer = 0x74c; // ObjectProperty
		constexpr auto m_VanguardShieldBar = 0x754; // ObjectProperty
		constexpr auto m_pLazarusShieldBar = 0x75c; // ObjectProperty
		constexpr auto m_pFernandoShieldBar = 0x764; // ObjectProperty
		constexpr auto m_HealFeed = 0x76c; // ObjectProperty
		constexpr auto m_Messages = 0x774; // TArray<FMessageClip>
		constexpr auto m_fClient3pReloadOffset = 0x784; // float
		constexpr auto m_fHitWarning3pMoveSpeed = 0x788; // float
		constexpr auto m_fHitWarning3pMoveCheckDistance = 0x78c; // float
		constexpr auto m_fHitWarning3pScale = 0x790; // float
		constexpr auto m_cHitWarning3pColor = 0x794; // FColor
		constexpr auto m_cHitWarning3pReticleColor = 0x798; // FColor
		constexpr auto m_fHitWarning3pThreshold = 0x79c; // float
		constexpr auto m_fHitWarning3pThreshold2d = 0x7a0; // float
		constexpr auto m_vHitWarning3pScalingSize = 0x7a4; // FVector2D
		constexpr auto m_vHitWarning3pScalingRange = 0x7ac; // FVector2D
		constexpr auto m_fHitWarning3pScalingSpeed = 0x7b4; // float
		constexpr auto m_fAOEDamageMediumHeavyThreshold = 0x7b8; // float
		constexpr auto m_fDamageLightMediumThreshold = 0x7bc; // float
		constexpr auto m_fDamageMediumHeavyThreshold = 0x7c0; // float
		constexpr auto m_HitMarker = 0x7c4; // FHitMarkerInfo
		constexpr auto m_fMaxDamageTimestamp = 0x7ec; // float
		constexpr auto m_fDamageDealtRTPCSustainDuration = 0x7f0; // float
		constexpr auto m_fChampionHitTimestamp = 0x7f4; // float
		constexpr auto m_fChampionCountRTPCSustainDuration = 0x7f8; // float
		constexpr auto m_AccumulatedDamageInstances = 0x7fc; // TArray<FDamageInstance>
		constexpr auto m_fDamageAccumulationWindow = 0x80c; // float
		constexpr auto m_GameplayCurves = 0x810; // ObjectProperty
	}

	namespace n_UInputAction { // : UUIData
		constexpr auto VfTable_ITgCallbackInterface = 0x64; // FPointer
		constexpr auto m_Keys = 0x6c; // TArray<FInputKeyEvent>
		constexpr auto m_CallbackContainer = 0x7c; // ObjectProperty
		constexpr auto m_bAllowFallThrough = 0x84; // uint32_t : 1
	}

	namespace n_UOnlinePlayerStorage { // : UObject
		constexpr auto VersionNumber = 0x60; // int32_t
		constexpr auto VersionSettingsId = 0x64; // int32_t
		constexpr auto SaveCountSettingId = 0x68; // int32_t
		constexpr auto ProfileSettings = 0x6c; // TArray<FOnlineProfileSetting>
		constexpr auto ProfileMappings = 0x7c; // TArray<FSettingsPropertyPropertyMetaData>
		constexpr auto AsyncState = 0x8c; // EOnlinePlayerStorageAsyncState
		constexpr auto DeviceID = 0x90; // int32_t
	}

	namespace n_UUIScene_UIHnHAcquisition { // : UUIScene
		constexpr auto m_nOrbsToDisplay = 0x1cc; // int32_t
		constexpr auto m_fFadeInTimer = 0x1d0; // float
		constexpr auto m_fBackTimer = 0x1d4; // float
		constexpr auto m_bOwnsBlessing = 0x1d8; // uint32_t : 1
		constexpr auto m_pDrogozBundle = 0x1dc; // ObjectProperty
		constexpr auto m_pMaeveBundle = 0x1e4; // ObjectProperty
		constexpr auto m_pTyraBundle = 0x1ec; // ObjectProperty
		constexpr auto m_pAndroBundle = 0x1f4; // ObjectProperty
		constexpr auto m_pAcquiredItems = 0x1fc; // FMultiMap_Mirror
		constexpr auto m_mcBlessing = 0x244; // ObjectProperty
		constexpr auto m_mcSeal = 0x24c; // ObjectProperty
		constexpr auto m_mcSealTF = 0x254; // ObjectProperty
		constexpr auto m_mcAcquisition = 0x25c; // ObjectProperty
		constexpr auto m_mcAcquisitionTF = 0x264; // ObjectProperty
		constexpr auto m_mcNumItems = 0x26c; // ObjectProperty
		constexpr auto m_pItems = 0x274; // ObjectProperty
		constexpr auto m_pNextButton = 0x27c; // ObjectProperty
		constexpr auto m_pNextButtonAction = 0x284; // ObjectProperty
	}

	namespace n_UStaticMesh { // : UObject
		constexpr auto LODInfo = 0x70; // TArray<FStaticMeshLODInfo>
		constexpr auto LODDistanceRatio = 0x80; // float
		constexpr auto LODMaxRange = 0x84; // float
		constexpr auto LightMapResolution = 0x98; // int32_t
		constexpr auto LightMapCoordinateIndex = 0x9c; // int32_t
		constexpr auto BodySetup = 0xf8; // ObjectProperty
		constexpr auto UseSimpleLineCollision = 0x13c; // uint32_t : 1
		constexpr auto UseSimpleBoxCollision = 0x140; // uint32_t : 1
		constexpr auto UseSimpleRigidBodyCollision = 0x144; // uint32_t : 1
		constexpr auto UseFullPrecisionUVs = 0x148; // uint32_t : 1
		constexpr auto bUsedForInstancing = 0x14c; // uint32_t : 1
		constexpr auto ConsolePreallocateInstanceCount = 0x150; // int32_t
		constexpr auto bUseMaximumStreamingTexelRatio = 0x154; // uint32_t : 1
		constexpr auto bPartitionForEdgeGeometry = 0x158; // uint32_t : 1
		constexpr auto bCanBecomeDynamic = 0x15c; // uint32_t : 1
		constexpr auto bStripComplexCollisionForConsole = 0x164; // uint32_t : 1
		constexpr auto bStripComplexCollision = 0x168; // uint32_t : 1
		constexpr auto bPerLODStaticLightingForInstancing = 0x16c; // uint32_t : 1
		constexpr auto StreamingDistanceMultiplier = 0x170; // float
	}

	namespace n_UTgInvListener_TakingHitsForDamageBonusByCredits { // : UTgInvListener
		constexpr auto m_Targets = 0xc4; // TArray<FTrackedBullies>
	}

	namespace n_ANxCylindricalForceField { // : ANxForceField
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto UseSpecialRadialForce = 0x2f8; // uint32_t : 1
		constexpr auto Kernel = 0x2fc; // FPointer
	}

	namespace n_ATgGame_Paladins { // : ATgGame_Battle
		constexpr auto m_masterPhase = 0x76c; // ObjectProperty
		constexpr auto m_CurrentPhase = 0x774; // ObjectProperty
		constexpr auto m_lastCreatedPhase = 0x77c; // ObjectProperty
		constexpr auto m_lastDecoratedPhase = 0x784; // ObjectProperty
		constexpr auto m_bDeferEndingGame = 0x78c; // uint32_t : 1
		constexpr auto m_bDisableMusicEvents = 0x78c; // uint32_t : 1
		constexpr auto m_bScoringEnabled = 0x78c; // uint32_t : 1
		constexpr auto m_bSuppressItemMenu = 0x78c; // uint32_t : 1
		constexpr auto m_bCanPurchaseMasterRiding = 0x78c; // uint32_t : 1
		constexpr auto m_bCanPurchaseItemsAnywhere = 0x78c; // uint32_t : 1
		constexpr auto m_bCanPurchaseItemsWhileDead = 0x78c; // uint32_t : 1
		constexpr auto m_bLimitBurnCardsToOnePerCategory = 0x78c; // uint32_t : 1
		constexpr auto m_bCanSpoolCredits = 0x78c; // uint32_t : 1
		constexpr auto m_bAutoMountOnRespawn = 0x78c; // uint32_t : 1
		constexpr auto m_bDropHealthNuggetOnDeath = 0x78c; // uint32_t : 1
		constexpr auto m_bRespawnBots = 0x78c; // uint32_t : 1
		constexpr auto m_bDisableKillcam = 0x78c; // uint32_t : 1
		constexpr auto m_bCanApplyCardEquipStats = 0x78c; // uint32_t : 1
		constexpr auto m_bLoadoutSelectionEnabled = 0x78c; // uint32_t : 1
		constexpr auto m_bTalentsEnabled = 0x78c; // uint32_t : 1
		constexpr auto m_bAutoMountAtRoundBegin = 0x78c; // uint32_t : 1
		constexpr auto m_bResetPlayersNotInSpawnRoom = 0x78c; // uint32_t : 1
		constexpr auto m_bDeckSwappingAlwaysEnabled = 0x78c; // uint32_t : 1
		constexpr auto m_bDiminishingReturnsOnCCEnabled = 0x78c; // uint32_t : 1
		constexpr auto m_bSpawnAbyssalEchoes = 0x78c; // uint32_t : 1
		constexpr auto m_bHasCompositionData = 0x78c; // uint32_t : 1
		constexpr auto m_bAllPlayersConnected = 0x78c; // uint32_t : 1
		constexpr auto m_fGameDuration = 0x790; // float
		constexpr auto m_currentCapturePointForPhases = 0x794; // ObjectProperty
		constexpr auto m_nGoalScore = 0x79c; // int32_t
		constexpr auto m_nTF1Score = 0x7a0; // int32_t
		constexpr auto m_nTF2Score = 0x7a4; // int32_t
		constexpr auto m_nWinningScore = 0x7a8; // int32_t
		constexpr auto m_eHUDType = 0x7ac; // EHUDType
		constexpr auto m_eMusicEvent = 0x7ad; // ENotifySound
		constexpr auto m_nCreditSpoolActive = 0x7b0; // int32_t
		constexpr auto m_nCanSpoolUlt = 0x7b4; // int32_t
		constexpr auto m_nAIDisabled = 0x7b8; // int32_t
		constexpr auto m_nAimAssistDisabled = 0x7bc; // int32_t
		constexpr auto m_fPlayerWaitTime = 0x7c0; // float
		constexpr auto m_nHealthNuggetDeployableId = 0x7c4; // int32_t
		constexpr auto m_nHealthNuggetTeamOnlyDeployableId = 0x7c8; // int32_t
		constexpr auto m_fHealthNuggetPersistTime = 0x7cc; // int32_t
		constexpr auto m_fPlayerViewDistance = 0x7d0; // float
		constexpr auto m_fVisibilityVolumeViewDistance = 0x7d4; // float
		constexpr auto m_fCardCooldownIncrease = 0x7d8; // float
		constexpr auto m_fCardCooldownMultiplier = 0x7dc; // float
		constexpr auto m_fGameTypeReminderTime = 0x7e0; // float
		constexpr auto m_fRespawnBeaconLifeSpan = 0x7e4; // float
		constexpr auto m_fBaseRespawnTime = 0x7e8; // float
		constexpr auto m_fMapLaneChangeDelay = 0x7ec; // float
		constexpr auto m_nStartingCredits = 0x7f0; // int32_t
		constexpr auto m_nMaxCredits = 0x7f4; // int32_t
		constexpr auto m_GameplayEventsWriterClassName = 0x7f8; // FString
		constexpr auto GameplayEventsWriter = 0x808; // ObjectProperty
		constexpr auto DifficultyData = 0x810; // FTeamDifficultyData [0x2]
		constexpr auto AIDirector = 0x820; // ObjectProperty
		constexpr auto m_nEventTalentVendorId = 0x828; // int32_t
		constexpr auto m_nEventDeckVendorId = 0x82c; // int32_t
		constexpr auto m_fFlankerSoloKillRewardDistance = 0x830; // float
		constexpr auto m_fDamageRoleMultiplier = 0x834; // float
		constexpr auto m_fFlankRoleMultiplier = 0x838; // float
		constexpr auto m_fFrontLineRoleMultiplier = 0x83c; // float
		constexpr auto m_fSupportRoleMultiplier = 0x840; // float
		constexpr auto m_nNextUniquePlayerID = 0x844; // int32_t
		constexpr auto m_SpawnChatter = 0x848; // ObjectProperty
		constexpr auto m_AbyssalEchoes = 0x850; // ObjectProperty
		constexpr auto m_dwConnectedPlayers = 0x858; // TArray<Fdword>
	}

	namespace n_UUIScene_UIFacebookLivePopup { // : UUIScene
		constexpr auto m_mcPanel = 0x1cc; // ObjectProperty
		constexpr auto m_mcTitle = 0x1d4; // ObjectProperty
		constexpr auto m_mcStatus = 0x1dc; // ObjectProperty
		constexpr auto m_Close = 0x1e4; // ObjectProperty
		constexpr auto m_Confirm = 0x1ec; // ObjectProperty
		constexpr auto m_Options = 0x1f4; // TArray<ObjectProperty>
		constexpr auto m_grOptions = 0x204; // ObjectProperty
		constexpr auto m_bAllIsWell = 0x20c; // uint32_t : 1
	}

	namespace n_UTgSeqAct_DefenseWaveSpawner { // : USequenceAction
		constexpr auto m_nRoundNumber = 0x108; // int32_t
		constexpr auto m_fSpawnFrequency = 0x10c; // float
		constexpr auto m_fNextSpawnTime = 0x110; // float
	}

	namespace n_UTgInventoryObject_Listen_DeployOnDeployable { // : UTgInvListener
		constexpr auto m_ValidDeployableIds = 0xc4; // TArray<int32_t>
	}

	namespace n_UTgSeqAct_ProgressTo { // : USeqAct_Delay
		constexpr auto m_Instigator = 0x134; // ObjectProperty
	}

	namespace n_UTgInvListener_RedirectDamageToDeployables { // : UTgInvListener
		constexpr auto m_ActiveDeployables = 0xc4; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIStoreRentSprayPopup { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_mcRentalDuration = 0x1d4; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x1dc; // ObjectProperty
		constexpr auto m_mcChestName = 0x1e4; // ObjectProperty
		constexpr auto m_mcChestQuantity = 0x1ec; // ObjectProperty
		constexpr auto m_mcSprayIcon = 0x1f4; // ObjectProperty
		constexpr auto m_mcSprayRarity = 0x1fc; // ObjectProperty
		constexpr auto m_mcCursor = 0x204; // ObjectProperty
		constexpr auto m_pBack = 0x20c; // ObjectProperty
		constexpr auto m_pHoldPrompt = 0x214; // ObjectProperty
		constexpr auto m_pPurchaseOptions = 0x21c; // ObjectProperty
		constexpr auto m_pCurrency = 0x224; // ObjectProperty
	}

	namespace n_UTgDeviceForm_StreetJustice { // : UTgDeviceForm
		constexpr auto m_AppliedFx = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_fExecuteThreshold = 0x29c; // float
	}

	namespace n_ATgDevice_OppressorMineMod { // : ATgDevice
		constexpr auto m_MinesInRage = 0xa08; // TArray<ObjectProperty>
	}

	namespace n_ATgDeploy_SmokeScreen { // : ATgDeploy_EffectAura
		constexpr auto m_CachedPawnOwner = 0x4b0; // ObjectProperty
		constexpr auto m_bHasAppliedOwnerStealth = 0x4b8; // uint32_t : 1
		constexpr auto r_fRadiusForFX = 0x4bc; // float
	}

	namespace n_UTgGamePhase_ScoreOnKill { // : UTgGamePhase
		constexpr auto m_nPointsPerKill = 0xb8; // int32_t
	}

	namespace n_UTgAIBehaviorAction_MoveAroundLanePusher { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
		constexpr auto bMoveClockWise = 0xa0; // uint32_t : 1
	}

	namespace n_AAmbientSoundSimpleToggleable { // : AAmbientSoundSimple
		constexpr auto bCurrentlyPlaying = 0x2ac; // uint32_t : 1
		constexpr auto bFadeOnToggle = 0x2ac; // uint32_t : 1
		constexpr auto bIgnoreAutoPlay = 0x2ac; // uint32_t : 1
		constexpr auto FadeInDuration = 0x2b0; // float
		constexpr auto FadeInVolumeLevel = 0x2b4; // float
		constexpr auto FadeOutDuration = 0x2b8; // float
		constexpr auto FadeOutVolumeLevel = 0x2bc; // float
	}

	namespace n_UTgAnimNodeBlendByMeleeIdle { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_UAudioComponent { // : UActorComponent
		constexpr auto SoundCue = 0x88; // ObjectProperty
		constexpr auto CueFirstNode = 0x90; // ObjectProperty
		constexpr auto InstanceParameters = 0x98; // TArray<FAudioComponentParam>
		constexpr auto bUseOwnerLocation = 0xa8; // uint32_t : 1
		constexpr auto bAutoPlay = 0xa8; // uint32_t : 1
		constexpr auto bAutoDestroy = 0xa8; // uint32_t : 1
		constexpr auto bStopWhenOwnerDestroyed = 0xa8; // uint32_t : 1
		constexpr auto bShouldRemainActiveIfDropped = 0xa8; // uint32_t : 1
		constexpr auto bWasOccluded = 0xa8; // uint32_t : 1
		constexpr auto bNeedsOcclusionCheck = 0xa8; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xa8; // uint32_t : 1
		constexpr auto bWasPlaying = 0xa8; // uint32_t : 1
		constexpr auto bAllowSpatialization = 0xa8; // uint32_t : 1
		constexpr auto bFinished = 0xa8; // uint32_t : 1
		constexpr auto bApplyRadioFilter = 0xa8; // uint32_t : 1
		constexpr auto bRadioFilterSelected = 0xa8; // uint32_t : 1
		constexpr auto bPreviewComponent = 0xa8; // uint32_t : 1
		constexpr auto bIgnoreForFlushing = 0xa8; // uint32_t : 1
		constexpr auto StereoBleed = 0xac; // float
		constexpr auto LFEBleed = 0xb0; // float
		constexpr auto bEQFilterApplied = 0xb4; // uint32_t : 1
		constexpr auto bAlwaysPlay = 0xb4; // uint32_t : 1
		constexpr auto bIsUISound = 0xb4; // uint32_t : 1
		constexpr auto bIsMusic = 0xb4; // uint32_t : 1
		constexpr auto bReverb = 0xb4; // uint32_t : 1
		constexpr auto bCenterChannelOnly = 0xb4; // uint32_t : 1
		constexpr auto m_fAdditionalPriority = 0xb8; // float
		constexpr auto WaveInstances = 0xbc; // TArray<FPointer>
		constexpr auto SoundNodeData = 0xcc; // TArray<char>
		constexpr auto SoundNodeOffsetMap = 0xdc; // TMap<None, None>
		constexpr auto SoundNodeResetWaveMap = 0x124; // FMultiMap_Mirror
		constexpr auto Listener = 0x16c; // FPointer
		constexpr auto PlaybackTime = 0x174; // float
		constexpr auto PortalVolume = 0x178; // ObjectProperty
		constexpr auto Location = 0x180; // FVector
		constexpr auto ComponentLocation = 0x18c; // FVector
		constexpr auto LastOwner = 0x198; // ObjectProperty
		constexpr auto SubtitlePriority = 0x1a0; // float
		constexpr auto FadeInStartTime = 0x1a4; // float
		constexpr auto FadeInStopTime = 0x1a8; // float
		constexpr auto FadeInTargetVolume = 0x1ac; // float
		constexpr auto FadeOutStartTime = 0x1b0; // float
		constexpr auto FadeOutStopTime = 0x1b4; // float
		constexpr auto FadeOutTargetVolume = 0x1b8; // float
		constexpr auto m_fFadeOutTargetPitch = 0x1bc; // float
		constexpr auto AdjustVolumeStartTime = 0x1c0; // float
		constexpr auto AdjustVolumeStopTime = 0x1c4; // float
		constexpr auto AdjustVolumeTargetVolume = 0x1c8; // float
		constexpr auto CurrAdjustVolumeTargetVolume = 0x1cc; // float
		constexpr auto CurrentNotifyBufferFinishedHook = 0x1d0; // ObjectProperty
		constexpr auto CurrentLocation = 0x1d8; // FVector
		constexpr auto CurrentVelocity = 0x1e4; // FVector
		constexpr auto CurrentVolume = 0x1f0; // float
		constexpr auto CurrentPitch = 0x1f4; // float
		constexpr auto CurrentHighFrequencyGain = 0x1f8; // float
		constexpr auto CurrentUseSpatialization = 0x1fc; // int32_t
		constexpr auto CurrentNotifyOnLoop = 0x200; // int32_t
		constexpr auto OmniRadius = 0x204; // float
		constexpr auto CurrentVolumeMultiplier = 0x208; // float
		constexpr auto CurrentPitchMultiplier = 0x20c; // float
		constexpr auto CurrentHighFrequencyGainMultiplier = 0x210; // float
		constexpr auto CurrentVoiceCenterChannelVolume = 0x214; // float
		constexpr auto CurrentRadioFilterVolume = 0x218; // float
		constexpr auto CurrentRadioFilterVolumeThreshold = 0x21c; // float
		constexpr auto LastUpdateTime = 0x220; // FDouble
		constexpr auto SourceInteriorVolume = 0x228; // float
		constexpr auto SourceInteriorLPF = 0x22c; // float
		constexpr auto CurrentInteriorVolume = 0x230; // float
		constexpr auto CurrentInteriorLPF = 0x234; // float
		constexpr auto SoundModeStartTime = 0x238; // FDouble
		constexpr auto LastLocation = 0x240; // FVector
		constexpr auto LastInteriorSettings = 0x24c; // FInteriorSettings
		constexpr auto LastReverbVolumeIndex = 0x27c; // int32_t
		constexpr auto VolumeMultiplier = 0x280; // float
		constexpr auto PitchMultiplier = 0x284; // float
		constexpr auto HighFrequencyGainMultiplier = 0x288; // float
		constexpr auto OcclusionCheckInterval = 0x28c; // float
		constexpr auto LastOcclusionCheckTime = 0x290; // float
		constexpr auto PreviewSoundRadius = 0x294; // ComponentProperty
		constexpr auto __OnAudioFinished__Delegate = 0x29c; // DelegateProperty
		constexpr auto __OnAudioFinishedFX__Delegate = 0x2ac; // DelegateProperty
		constexpr auto __OnQueueSubtitles__Delegate = 0x2bc; // DelegateProperty
	}

	namespace n_UMobileMenuObjectProxy { // : UMobileMenuObject
		constexpr auto __OnTouchEvent__Delegate = 0xdc; // DelegateProperty
		constexpr auto __OnRenderObject__Delegate = 0xec; // DelegateProperty
	}

	namespace n_UMaterialExpressionStaticSwitchParameter { // : UMaterialExpressionStaticBoolParameter
		constexpr auto A = 0xdc; // FExpressionInput
		constexpr auto B = 0x110; // FExpressionInput
	}

	namespace n_UParticleModuleTypeDataApex { // : UParticleModuleTypeDataBase
		constexpr auto ApexIOFX = 0x68; // ObjectProperty
		constexpr auto ApexEmitter = 0x70; // ObjectProperty
	}

	namespace n_UUIDataStore_GameResource { // : UUIDataStore
		constexpr auto ElementProviderTypes = 0x98; // TArray<FGameResourceDataProvider>
		constexpr auto ListElementProviders = 0xa8; // FMultiMap_Mirror
	}

	namespace n_ATgTrigger_Instance { // : ATrigger
		constexpr auto m_nMapId = 0x290; // int32_t
		constexpr auto m_nPreload = 0x294; // uint32_t : 1
		constexpr auto m_nTaskForce = 0x294; // uint32_t : 1
		constexpr auto m_SpawnPointName = 0x298; // FString
	}

	namespace n_ATgDeploy_ShieldBarik { // : ATgDeploy_Shield
		constexpr auto r_bHasCapsule = 0x470; // uint32_t : 1
		constexpr auto r_bHasAcceleratorField = 0x470; // uint32_t : 1
		constexpr auto r_bHasImpede = 0x470; // uint32_t : 1
		constexpr auto r_bHasBunker = 0x470; // uint32_t : 1
		constexpr auto r_bHasFortify = 0x470; // uint32_t : 1
		constexpr auto m_AcceleratedActors = 0x474; // TArray<ObjectProperty>
		constexpr auto m_CachedPawnOwner = 0x484; // ObjectProperty
	}

	namespace n_UUIDataChampion { // : UUIDataObject
		constexpr auto m_nBotId = 0x74; // int32_t
		constexpr auto m_nLevel = 0x78; // int32_t
		constexpr auto m_nArchetype = 0x7c; // int32_t
		constexpr auto m_sName = 0x80; // FString
		constexpr auto m_sDesc = 0x90; // FString
		constexpr auto m_sLore = 0xa0; // FString
		constexpr auto m_sDamage = 0xb0; // FString
		constexpr auto m_sSpecial = 0xc0; // FString
		constexpr auto m_nItemsTotal = 0xd0; // int32_t
		constexpr auto m_nItemsOwned = 0xd4; // int32_t
		constexpr auto m_fItemsPercent = 0xd8; // float
		constexpr auto m_nXPProgress = 0xdc; // int32_t
		constexpr auto m_nXPRequired = 0xe0; // int32_t
		constexpr auto m_nXPTotal = 0xe4; // int32_t
		constexpr auto m_fXPPercent = 0xe8; // float
		constexpr auto m_nActivePassive = 0xec; // int32_t
		constexpr auto m_nActiveTalent = 0xf0; // int32_t
		constexpr auto m_nActiveDeck = 0xf4; // int32_t
		constexpr auto m_ClassItem = 0xf8; // ObjectProperty
		constexpr auto m_CharacterRotationLTI = 0x100; // ObjectProperty
		constexpr auto m_Cards = 0x108; // TArray<ObjectProperty>
		constexpr auto m_Skills = 0x118; // TArray<ObjectProperty>
		constexpr auto m_Talents = 0x128; // TArray<ObjectProperty>
		constexpr auto m_EventTalents = 0x138; // TArray<ObjectProperty>
		constexpr auto m_Passives = 0x148; // TArray<ObjectProperty>
		constexpr auto m_Collections = 0x158; // TArray<ObjectProperty>
		constexpr auto m_Weapons = 0x168; // TArray<ObjectProperty>
		constexpr auto m_Emotes = 0x178; // TArray<ObjectProperty>
		constexpr auto m_MVPPoses = 0x188; // TArray<ObjectProperty>
		constexpr auto m_MasteryRewards = 0x198; // TArray<ObjectProperty>
		constexpr auto m_VoicePack = 0x1a8; // ObjectProperty
		constexpr auto m_nPreviewingSkinID = 0x1b0; // int32_t
		constexpr auto m_nPreviewingWeaponID = 0x1b4; // int32_t
		constexpr auto m_bCachedOwnedOrRented = 0x1b8; // uint32_t : 1
		constexpr auto m_nCharacterOwnershipCBHandle = 0x1bc; // int32_t
	}

	namespace n_ATgDevice_TiberiusLeap { // : ATgDevice_Leap
		constexpr auto m_CachedTiberius = 0xa10; // ObjectProperty
	}

	namespace n_UGameUISceneClient { // : UUISceneClient
		constexpr auto LatestDeltaTime = 0x11c; // float
		constexpr auto DoubleClickStartTime = 0x120; // FDouble
		constexpr auto DoubleClickStartPosition = 0x128; // FIntPoint
		constexpr auto InitialPressedKeys = 0x130; // FMap_Mirror
		constexpr auto bUpdateInputProcessingStatus = 0x178; // uint32_t : 1
		constexpr auto bUpdateSceneViewportSizes = 0x178; // uint32_t : 1
		constexpr auto bEnableDebugInput = 0x178; // uint32_t : 1
		constexpr auto bRenderDebugInfo = 0x178; // uint32_t : 1
		constexpr auto bCaptureUnprocessedInput = 0x178; // uint32_t : 1
		constexpr auto NavAliases = 0x17c; // TArray<FName>
		constexpr auto AxisInputKeys = 0x18c; // TArray<FName>
	}

	namespace n_UTgSeqAct_BeaconExitSetRespawn { // : USequenceAction
		constexpr auto m_RespawnPoint = 0x108; // ObjectProperty
		constexpr auto m_bRespawnImmediately = 0x110; // uint32_t : 1
	}

	namespace n_AInventory { // : AActor
		constexpr auto Inventory = 0x280; // ObjectProperty
		constexpr auto InvManager = 0x288; // ObjectProperty
		constexpr auto ItemName = 0x290; // FString
		constexpr auto bDropOnDeath = 0x2a0; // uint32_t : 1
		constexpr auto bDelayedSpawn = 0x2a0; // uint32_t : 1
		constexpr auto bPredictRespawns = 0x2a0; // uint32_t : 1
		constexpr auto RespawnTime = 0x2a4; // float
		constexpr auto MaxDesireability = 0x2a8; // float
		constexpr auto PickupMessage = 0x2ac; // FString
		constexpr auto PickupSound = 0x2bc; // ObjectProperty
		constexpr auto PickupForce = 0x2c4; // FString
		constexpr auto DroppedPickupClass = 0x2d4; // ADroppedPickup*
		constexpr auto DroppedPickupMesh = 0x2dc; // ComponentProperty
		constexpr auto PickupFactoryMesh = 0x2e4; // ComponentProperty
		constexpr auto DroppedPickupParticles = 0x2ec; // ComponentProperty
	}

	namespace n_UMaterialExpressionParticleMacroUV { // : UMaterialExpression
		constexpr auto bUseViewSpace = 0xb0; // uint32_t : 1
	}

	namespace n_UTgControlModule_Dead { // : UTgControlModule
		constexpr auto m_bCachedNoDeathCamExperiment = 0x6c; // uint32_t : 1
	}

	namespace n_ATgLobbyCamera { // : ACameraActor
		constexpr auto m_ViewTarget = 0x420; // ObjectProperty
		constexpr auto m_FriendlyTargets = 0x428; // TArray<ObjectProperty>
		constexpr auto m_EnemyTargets = 0x438; // TArray<ObjectProperty>
		constexpr auto m_RenderCenterPointOffset = 0x448; // FVector
		constexpr auto m_bActive = 0x454; // uint32_t : 1
		constexpr auto m_bAdjustCameraToTarget = 0x454; // uint32_t : 1
		constexpr auto m_bAdjustZoomByTargetHeight = 0x454; // uint32_t : 1
		constexpr auto m_bFirstCameraEyeCheck = 0x454; // uint32_t : 1
		constexpr auto m_nPosition = 0x458; // int32_t
		constexpr auto m_fRemainingTweenTime = 0x45c; // float
		constexpr auto m_fTotalTweenTime = 0x460; // float
		constexpr auto m_TweenSourcePOV = 0x464; // FTPOV
		constexpr auto m_fLateralOffsetMultiplier = 0x488; // float
		constexpr auto m_fHorizontalOffsetMultiplier = 0x48c; // float
		constexpr auto m_fViewLateralOffsetMultiplier = 0x490; // float
		constexpr auto m_fViewHorizontalOffsetMultiplier = 0x494; // float
		constexpr auto m_fMaxAdjustSpeedTranslation = 0x498; // float
		constexpr auto m_fMaxAdjustSpeedRotation = 0x49c; // float
		constexpr auto m_vViewOffset = 0x4a0; // FVector
		constexpr auto m_vOriginalViewOffset = 0x4ac; // FVector
		constexpr auto m_fZoomAdjustBaseHeight = 0x4b8; // float
		constexpr auto m_fZoomAdjustMultiplier = 0x4bc; // float
		constexpr auto m_fFirstCameraEyeCheckTimestamp = 0x4c0; // float
		constexpr auto m_CameraTag = 0x4c4; // ELobbyCameraTag
	}

	namespace n_UTgAnimBlendByPercent { // : UTgAnimNodeBlendList
		constexpr auto m_fCurrentPercent = 0x168; // float
		constexpr auto m_nDeferredActiveChild = 0x16c; // int32_t
		constexpr auto m_fDeferredActiveChildBlendTime = 0x170; // int32_t
		constexpr auto m_bDeferUpdatesWhilePlaying = 0x174; // uint32_t : 1
		constexpr auto m_ChildParams = 0x178; // TArray<FBlendByPercentValues>
	}

	namespace n_USeqAct_SetMatInstVectorParam { // : USequenceAction
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto VectorValue = 0x118; // FLinearColor
	}

	namespace n_UTgGameplayCurvesSet_PositionFromPitch { // : UTgGameplayCurvesSet
		constexpr auto ForwardTranslation = 0x64; // FRawDistributionFloat
		constexpr auto UpTranslation = 0x88; // FRawDistributionFloat
	}

	namespace n_UTgAnimBlendPerBone { // : UAnimNodeBlendPerBone
		constexpr auto m_bLoopSourceChild = 0x158; // uint32_t : 1
		constexpr auto m_bLoopTargetChild = 0x158; // uint32_t : 1
		constexpr auto m_bPlaySourceChild = 0x158; // uint32_t : 1
		constexpr auto m_bPlayTargetChild = 0x158; // uint32_t : 1
		constexpr auto m_bSetStrengthFromAnimNode = 0x158; // uint32_t : 1
		constexpr auto m_bInvertStrengthFromAnimNode = 0x158; // uint32_t : 1
		constexpr auto m_bInitializedCachedNodeList = 0x158; // uint32_t : 1
		constexpr auto m_StrengthAnimNodeNameList = 0x15c; // TArray<FName>
		constexpr auto m_CachedNodeList = 0x16c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_BannerButton { // : UUIComponent_Interactable
		constexpr auto m_pGamepadKey = 0x140; // ObjectProperty
		constexpr auto m_pFrameButton = 0x148; // ObjectProperty
	}

	namespace n_ATgBombBagBombProp { // : ATgPropActor
		constexpr auto m_Owner = 0x294; // ObjectProperty
		constexpr auto m_FireMode = 0x29c; // ObjectProperty
	}

	namespace n_UNavMeshGoalFilter_NotNearOtherAI { // : UNavMeshGoal_Filter
		constexpr auto DistanceToCheck = 0x6c; // float
	}

	namespace n_AImageReflection { // : AActor
		constexpr auto bEnabled = 0x280; // uint32_t : 1
		constexpr auto ReflectionComponent = 0x284; // ComponentProperty
		constexpr auto ImageReflectionComponent = 0x28c; // ComponentProperty
	}

	namespace n_UInterpTrackSkelControlScale { // : UInterpTrackFloatBase
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_USimpleSplineNonLoopAudioComponent { // : USimpleSplineAudioComponent
		constexpr auto DelayMin = 0x31c; // float
		constexpr auto DelayMax = 0x320; // float
		constexpr auto PitchMin = 0x324; // float
		constexpr auto PitchMax = 0x328; // float
		constexpr auto VolumeMin = 0x32c; // float
		constexpr auto VolumeMax = 0x330; // float
		constexpr auto CurrentSlotIndex = 0x334; // int32_t
		constexpr auto UsedVolumeModulation = 0x338; // float
		constexpr auto UsedPitchModulation = 0x33c; // float
		constexpr auto NextSoundTime = 0x340; // float
	}

	namespace n_USVehicleSimCar { // : USVehicleSimBase
		constexpr auto ChassisTorqueScale = 0xc0; // float
		constexpr auto MaxSteerAngleCurve = 0xc4; // FInterpCurveFloat
		constexpr auto SteerSpeed = 0xd8; // float
		constexpr auto ReverseThrottle = 0xdc; // float
		constexpr auto EngineBrakeFactor = 0xe0; // float
		constexpr auto MaxBrakeTorque = 0xe4; // float
		constexpr auto StopThreshold = 0xe8; // float
		constexpr auto bIsDriving = 0xec; // uint32_t : 1
		constexpr auto ActualSteering = 0xf0; // float
		constexpr auto TimeSinceThrottle = 0xf4; // float
	}

	namespace n_AEmitterSpawnable { // : AEmitter
		constexpr auto ParticleTemplate = 0x294; // ObjectProperty
	}

	namespace n_UTgAnimBlendBy1P3P { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
	}

	namespace n_ATgAIController_Behavior { // : ATgAIController
		constexpr auto DeferredNodes = 0x644; // TArray<FDeferredNode>
		constexpr auto BlackboardType = 0x654; // int32_t
		constexpr auto BehaviorTreeAsName = 0x658; // FName
		constexpr auto SensorTree = 0x660; // FPointer
		constexpr auto SensorDynamicMemory = 0x668; // FPointer
		constexpr auto SensorStaticMemory = 0x670; // FPointer
		constexpr auto WorkerTree = 0x678; // FPointer
		constexpr auto WorkerTreeCachedStatus = 0x680; // FPointer
		constexpr auto WorkerDynamicMemory = 0x688; // FPointer
		constexpr auto WorkerStaticMemory = 0x690; // FPointer
		constexpr auto SensorNodeCount = 0x698; // int32_t
		constexpr auto WorkerNodeCount = 0x69c; // int32_t
		constexpr auto LastUpdateTime = 0x6a0; // float
		constexpr auto CachedNodeData = 0x6a4; // TArray<FBehaviorStateData>
		constexpr auto m_fCooldownModifier = 0x6b4; // float
		constexpr auto m_fLeadAccuracy = 0x6b8; // float
		constexpr auto m_fDegreeMissedMagnitude = 0x6bc; // float
		constexpr auto m_fMissLikelihood = 0x6c0; // float
		constexpr auto LocalRepulsorSolver = 0x6c4; // ObjectProperty
		constexpr auto LocalRepulsorSolverClass = 0x6cc; // UTgAILocalPositionSolver*
		constexpr auto CurrentNavigation = 0x6d4; // FNavigationQueueEntry
		constexpr auto NavigationSearchModifier = 0x700; // float
		constexpr auto NavigationSearchModifier_Max = 0x704; // float
		constexpr auto NavigationSearchModifier_Min = 0x708; // float
		constexpr auto TimeStuck = 0x70c; // float
		constexpr auto FollowLaneForwardState = 0x710; // FFollowLaneState
		constexpr auto FollowLaneReverseState = 0x718; // FFollowLaneState
		constexpr auto bIsAlive = 0x720; // uint32_t : 1
		constexpr auto m_bPaused = 0x720; // uint32_t : 1
		constexpr auto bIsStunned = 0x720; // uint32_t : 1
		constexpr auto bInHostileAbility = 0x720; // uint32_t : 1
		constexpr auto bIsSafeToRecall = 0x720; // uint32_t : 1
		constexpr auto bInEnemyTowerRadius = 0x720; // uint32_t : 1
		constexpr auto bInFriendlyTowerRadius = 0x720; // uint32_t : 1
		constexpr auto bInEnemyMinotaurRadius = 0x720; // uint32_t : 1
		constexpr auto bInFriendlyMinotaurRadius = 0x720; // uint32_t : 1
		constexpr auto bIsTargetOfEnemyTowerOrMinotaur = 0x720; // uint32_t : 1
		constexpr auto bCombatTargetInEnemyTowerRadius = 0x720; // uint32_t : 1
		constexpr auto bCombatTargetInFriendlyTowerRadius = 0x720; // uint32_t : 1
		constexpr auto bCombatTargetInEnemyMinotaurRadius = 0x720; // uint32_t : 1
		constexpr auto bCombatTargetInFriendlyMinotaurRadius = 0x720; // uint32_t : 1
		constexpr auto bCombatTargetIsTargetOfFriendlyTowerOrMinotaur = 0x720; // uint32_t : 1
		constexpr auto m_bDroppedDown = 0x720; // uint32_t : 1
		constexpr auto bIsAtFortress = 0x720; // uint32_t : 1
		constexpr auto bIsAtEnemyFortress = 0x720; // uint32_t : 1
		constexpr auto bIsAtCachedRallyPoint = 0x720; // uint32_t : 1
		constexpr auto bBtDebugSpawnPaused = 0x720; // uint32_t : 1
		constexpr auto bBtDebugPaused = 0x720; // uint32_t : 1
		constexpr auto bBtDebugStep = 0x720; // uint32_t : 1
		constexpr auto bBtDebugClientOverlay = 0x720; // uint32_t : 1
		constexpr auto NextFearDirection = 0x724; // FVector
		constexpr auto PawnCollisionHeight = 0x730; // float
		constexpr auto PawnCollisionRadius = 0x734; // float
		constexpr auto DeviceRanges = 0x738; // float [0x31]
		constexpr auto CombatTarget = 0x7fc; // ObjectProperty
		constexpr auto CombatTargetAsPawn = 0x804; // ObjectProperty
		constexpr auto EnemyMinionsInEnemyTowerRadius = 0x80c; // int32_t
		constexpr auto FriendlyMinionsInEnemyTowerRadius = 0x810; // int32_t
		constexpr auto EnemyMinionsInFriendlyTowerRadius = 0x814; // int32_t
		constexpr auto FriendlyMinionsInFriendlyTowerRadius = 0x818; // int32_t
		constexpr auto EnemyGodsInEnemyTowerRadius = 0x81c; // int32_t
		constexpr auto FriendlyGodsInEnemyTowerRadius = 0x820; // int32_t
		constexpr auto EnemyGodsInFriendlyTowerRadius = 0x824; // int32_t
		constexpr auto FriendlyGodsInFriendlyTowerRadius = 0x828; // int32_t
		constexpr auto HealthOfNearestEnemyTower = 0x82c; // float
		constexpr auto HealthOfNearestFriendlyTower = 0x830; // float
		constexpr auto LaneMoveTarget = 0x834; // ObjectProperty
		constexpr auto VisibleActorsToAvoid = 0x83c; // TArray<ObjectProperty>
		constexpr auto CachedTowers = 0x84c; // TArray<ObjectProperty>
		constexpr auto CachedGods = 0x85c; // TArray<ObjectProperty>
		constexpr auto EnemyControllersInSightRadius = 0x86c; // TArray<ObjectProperty>
		constexpr auto FriendlyControllersInSightRadius = 0x87c; // TArray<ObjectProperty>
		constexpr auto Difficulty = 0x88c; // EBotDifficultyLevel
		constexpr auto LastUseDeviceAimType = 0x88d; // EUseDeviceAimType
		constexpr auto TargetLastKnownLocation = 0x890; // FVector
		constexpr auto CurrentAssaultPoint = 0x89c; // ObjectProperty
		constexpr auto m_fUnstuckJumpFrequency = 0x8a4; // float
		constexpr auto m_fLastUnstuckJumpTime = 0x8a8; // float
		constexpr auto IncomingDamage = 0x8ac; // TArray<FIncomingDamageEntry>
		constexpr auto CachedRallyVolume = 0x8bc; // ObjectProperty
		constexpr auto RandomRallyPointIndex = 0x8c4; // int32_t
		constexpr auto FortressObjective = 0x8c8; // ObjectProperty
		constexpr auto AlliedFortressLookDir = 0x8d0; // FVector
		constexpr auto EnemyFortressLookDir = 0x8dc; // FVector
		constexpr auto AlliedFortress = 0x8e8; // ObjectProperty
		constexpr auto EnemyFortress = 0x8f0; // ObjectProperty
		constexpr auto StrafeDir = 0x8f8; // FVector
		constexpr auto LastStrafeDirUpdate = 0x904; // float
		constexpr auto StrafeDirUpdateTime = 0x908; // float
		constexpr auto UtilityHandleClass = 0x90c; // UTgAIUtilityHandle*
		constexpr auto UtilityHandle = 0x914; // ObjectProperty
		constexpr auto EscortActor = 0x91c; // ObjectProperty
		constexpr auto EscortMinDistance = 0x924; // float
		constexpr auto EscortMaxDistance = 0x928; // float
		constexpr auto m_nDevicesLockingInput = 0x92c; // int32_t
	}

	namespace n_ATgPlayerCamera { // : ACamera
		constexpr auto PlayerOwner = 0x604; // ObjectProperty
		constexpr auto CurrentCameraMod = 0x60c; // ObjectProperty
		constexpr auto DefaultCameraModuleClass = 0x614; // UTgCameraModule*
		constexpr auto CameraModuleList = 0x61c; // TArray<ObjectProperty>
		constexpr auto CamAngle = 0x62c; // FRotator
		constexpr auto m_bIsLowHealth = 0x638; // uint32_t : 1
		constexpr auto bTweening = 0x638; // uint32_t : 1
		constexpr auto m_bPlayingHeal = 0x638; // uint32_t : 1
		constexpr auto CameraLocationLocalToTarget = 0x63c; // FVector
		constexpr auto CameraRotationLocalToTarget = 0x650; // FQuat
		constexpr auto fTweenStart = 0x660; // float
		constexpr auto fTweenDuration = 0x664; // float
		constexpr auto LastCameraMod = 0x668; // ObjectProperty
		constexpr auto m_fCollisionTraceExtent = 0x670; // float
		constexpr auto m_LowHealthCameraEffect = 0x674; // ObjectProperty
		constexpr auto m_BleedCameraEffect = 0x67c; // ObjectProperty
		constexpr auto m_DazeCameraEffect = 0x684; // ObjectProperty
		constexpr auto m_FireCameraEffect = 0x68c; // ObjectProperty
		constexpr auto m_FreezeCameraEffect = 0x694; // ObjectProperty
		constexpr auto m_HealCameraEffect = 0x69c; // ObjectProperty
		constexpr auto m_KnockbackCameraEffect = 0x6a4; // ObjectProperty
		constexpr auto m_MarkCameraEffect = 0x6ac; // ObjectProperty
		constexpr auto m_PoisonCameraEffect = 0x6b4; // ObjectProperty
		constexpr auto m_VenomCameraEffect = 0x6bc; // ObjectProperty
		constexpr auto m_RootCameraEffect = 0x6c4; // ObjectProperty
		constexpr auto m_SlowCameraEffect = 0x6cc; // ObjectProperty
		constexpr auto m_StunCameraEffect = 0x6d4; // ObjectProperty
		constexpr auto m_HiddenCameraEffect = 0x6dc; // ObjectProperty
		constexpr auto m_GrassCameraEffect = 0x6e4; // ObjectProperty
		constexpr auto m_TeleportCameraEffect = 0x6ec; // ObjectProperty
		constexpr auto m_PreTeleportCameraEffect = 0x6f4; // ObjectProperty
		constexpr auto m_CCImmuneCameraEffect = 0x6fc; // ObjectProperty
		constexpr auto m_CrippleCameraEffect = 0x704; // ObjectProperty
		constexpr auto m_RevealedCameraEffect = 0x70c; // ObjectProperty
		constexpr auto m_WeatherCameraEffect = 0x714; // ObjectProperty
		constexpr auto m_CurrentWeatherVolume = 0x71c; // ObjectProperty
		constexpr auto m_CameraEffects = 0x724; // TArray<ObjectProperty>
		constexpr auto m_nCameraEffectIdCounter = 0x734; // int32_t
		constexpr auto m_HealthDamageCameraEffectClasses = 0x738; // ATgEmitter_CameraEffect_DamageBase* [0x8]
		constexpr auto m_ShieldDamageCameraEffectClasses = 0x778; // ATgEmitter_CameraEffect_DamageBase* [0x8]
		constexpr auto m_HealthDamageFXState = 0x7b8; // FPropertyDecayState [0x8]
		constexpr auto m_HealingFXState = 0x818; // FPropertyDecayState
		constexpr auto m_HealthDamageFXParams = 0x824; // FPropertyDecayParams
		constexpr auto m_HealingFXParams = 0x838; // FPropertyDecayParams
		constexpr auto m_fAccumulateHealing = 0x84c; // float
		constexpr auto m_fSecondsSinceLastHealFXUpdate = 0x850; // float
		constexpr auto m_fHealFXUpdatePeriod = 0x854; // float
		constexpr auto m_fBloodHazeIntensity = 0x858; // float
		constexpr auto m_fHealingFXHalflifeAccumulation = 0x85c; // float
		constexpr auto m_fHealingFXHalflifeImpulse = 0x860; // float
		constexpr auto m_fHealingFXReliefFactor = 0x864; // float
		constexpr auto m_fHealingFXAccumulationMix = 0x868; // float
		constexpr auto m_fHealingFXVisibleThreshold = 0x86c; // float
		constexpr auto m_fHealingCritFXThreshold = 0x870; // float
		constexpr auto m_fHealthDamageFXHalflifeAccumulation = 0x874; // float
		constexpr auto m_fHealthDamageFXHalflifeImpulse = 0x878; // float
		constexpr auto m_fHealthDamageFXPainFactor = 0x87c; // float
		constexpr auto m_fHealthDamageFXAccumulationMix = 0x880; // float
		constexpr auto m_fHealthDamageCritFXThreshold = 0x884; // float
		constexpr auto m_fHealthDamageCritFXAccumulationMix = 0x888; // float
	}

	namespace n_ATgPawn_Makoa { // : ATgPawn_Character
		constexpr auto m_fSmashSpeedModifier = 0x3164; // float
		constexpr auto m_fShellSpinZoomOverride = 0x3168; // float
		constexpr auto r_bShellShieldIsActive = 0x316c; // uint32_t : 1
		constexpr auto r_bAncientRageActive = 0x316c; // uint32_t : 1
		constexpr auto r_bAbility1CanEmote = 0x316c; // uint32_t : 1
		constexpr auto m_fShellShieldSpeedModifier = 0x3170; // float
		constexpr auto m_fShellShieldZoomOverride = 0x3174; // float
		constexpr auto m_ShellShieldMovementFX = 0x3178; // ObjectProperty
		constexpr auto m_AncientRageInHand = 0x3180; // ObjectProperty
		constexpr auto m_CachedDavyJones = 0x3188; // ObjectProperty
	}

	namespace n_UUIDataStore_Registry { // : UUIDataStore
		constexpr auto RegistryData = 0x98; // TArray<FRegistryKeyValuePair>
	}

	namespace n_UTgGamePhase_ManageCapturePoint { // : UTgGamePhase
		constexpr auto m_fTickStep = 0xb8; // float
	}

	namespace n_UUIComponent_BPReward { // : UUIComponent_Display
		constexpr auto m_mcRarity = 0x124; // ObjectProperty
		constexpr auto m_mcHighlight = 0x12c; // ObjectProperty
		constexpr auto m_mcLock = 0x134; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcIcon = 0x144; // ObjectProperty
		constexpr auto m_mcCardIcon = 0x14c; // ObjectProperty
		constexpr auto m_Avatar = 0x154; // ObjectProperty
	}

	namespace n_UUIDataProvider_OnlineFriendMessages { // : UUIDataProvider_OnlinePlayerDataBase
		constexpr auto Messages = 0x74; // TArray<FOnlineFriendMessage>
		constexpr auto SendingPlayerNameCol = 0x84; // FString
		constexpr auto bIsFriendInviteCol = 0x94; // FString
		constexpr auto bWasAcceptedCol = 0xa4; // FString
		constexpr auto bWasDeniedCol = 0xb4; // FString
		constexpr auto MessageCol = 0xc4; // FString
		constexpr auto LastInviteFrom = 0xd4; // FString
	}

	namespace n_UTgSilhouetteComponent { // : UPrimitiveComponent
		constexpr auto bEnabled = 0x24c; // uint32_t : 1
		constexpr auto bUseFadeOutAlpha = 0x24c; // uint32_t : 1
		constexpr auto bNegativeSilhouette = 0x24c; // uint32_t : 1
		constexpr auto bUseThicknessMultiplier = 0x24c; // uint32_t : 1
		constexpr auto SilhouetteColor = 0x250; // FLinearColor
		constexpr auto NearThickness = 0x260; // float
		constexpr auto FarThickness = 0x264; // float
		constexpr auto NearDistance = 0x268; // float
		constexpr auto FarDistance = 0x26c; // float
		constexpr auto MeshComponent = 0x270; // ComponentProperty
		constexpr auto NearDistanceSq = 0x278; // float
		constexpr auto FarDistanceSq = 0x27c; // float
		constexpr auto FadeOutTime = 0x280; // float
		constexpr auto RemainingFadeOutTime = 0x284; // float
		constexpr auto PrimitiveSceneInfoId = 0x288; // int32_t
		constexpr auto ThicknessMultiplier = 0x28c; // float
		constexpr auto DefaultThicknessMultiplier = 0x290; // float
		constexpr auto ReleaseResourcesFence = 0x294; // FPointer
	}

	namespace n_UInput { // : UInteraction
		constexpr auto Bindings = 0xb0; // TArray<FKeyBind>
		constexpr auto PressedKeys = 0xc0; // TArray<FKeyBind>
		constexpr auto CurrentControllerId = 0xd0; // int32_t
		constexpr auto CurrentEvent = 0xd4; // EInputEvent
		constexpr auto CurrentDelta = 0xd8; // float
		constexpr auto CurrentDeltaTime = 0xdc; // float
		constexpr auto NameToPtr = 0xe0; // TMap<None, None>
		constexpr auto AxisArray = 0x128; // TArray<FPointer>
		constexpr auto CachedInputEvents = 0x138; // TArray<ObjectProperty>
		constexpr auto CachedAnalogInputEvents = 0x148; // TArray<ObjectProperty>
		constexpr auto CachedTouchInputEvents = 0x158; // TArray<ObjectProperty>
		constexpr auto CurrentTouches = 0x168; // TArray<FTouchTracker>
	}

	namespace n_UWindowsClient { // : UClient
		constexpr auto AudioDeviceClass = 0x224; // UAudioDevice*
		constexpr auto AllowJoystickInput = 0x264; // int32_t
	}

	namespace n_UTgDeviceForm_CorrupterInhand { // : UTgDeviceForm
		constexpr auto m_Corrupter = 0x28c; // ObjectProperty
		constexpr auto m_fPreviousAppliedAmmoPerc = 0x294; // float
		constexpr auto m_fCurrentAppliedAmmoPerc = 0x298; // float
		constexpr auto m_fAnimatedReloadStartNormalizedTime = 0x29c; // float
		constexpr auto m_fAnimatedReloadEndNormalizedTime = 0x2a0; // float
		constexpr auto m_fReloadDuration = 0x2a4; // float
		constexpr auto m_fReloadTimer = 0x2a8; // float
	}

	namespace n_ATgDevice_DruidRMBTargeting { // : ATgDevice
		constexpr auto m_CachedDruid = 0xa08; // ObjectProperty
		constexpr auto m_fPreferredTargetGracePeriod = 0xa10; // float
		constexpr auto m_fUpdateTargetSamplingInterval = 0xa14; // float
		constexpr auto m_fDelayUpdateTargetSample = 0xa18; // float
		constexpr auto m_pLastPreferredTarget = 0xa1c; // ObjectProperty
		constexpr auto m_fTimeOfLastPreferredTargetValidation = 0xa24; // float
	}

	namespace n_ATgProj_Drag { // : ATgProj_Simulated
		constexpr auto m_DragForm = 0x52c; // ObjectProperty
		constexpr auto m_fCollisionHeightScale = 0x534; // float
		constexpr auto m_fInverseSpeed = 0x538; // float
	}

	namespace n_UTgAnimNotify_AkEvent { // : UAnimNotify_AkEvent
		constexpr auto m_SkinOverrideList = 0x7c; // TArray<FPSE_SkinAk>
	}

	namespace n_UTgAIBehaviorCondition_IsLookingAtCombatTarget { // : UTgAIBehaviorCondition
		constexpr auto VisibilityAngle = 0x98; // float
	}

	namespace n_ATgDevice_MarkAndRecall { // : ATgDevice
		constexpr auto m_markedLocation = 0xa08; // FVector
		constexpr auto m_markedRotation = 0xa14; // FRotator
		constexpr auto m_bMarked = 0xa20; // uint32_t : 1
	}

	namespace n_ALight { // : AActor
		constexpr auto LightComponent = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // uint32_t : 1
	}

	namespace n_APComPerformanceCaptureNode { // : AActor
		constexpr auto ExecCommand = 0x280; // FString
		constexpr auto DelayBeforeCapture = 0x290; // float
	}

	namespace n_UTgGfxFriendManagement { // : UGFxObject
		constexpr auto m_Movie = 0x104; // ObjectProperty
		constexpr auto m_LastErrorString = 0x10c; // FString
		constexpr auto m_SelectedPlayerName = 0x11c; // FString
		constexpr auto m_InvitedPlayerName = 0x12c; // FString
		constexpr auto m_tabId = 0x13c; // EFriendTabs
		constexpr auto __USC_GetFriendsData_Delegate__Delegate = 0x140; // DelegateProperty
		constexpr auto __USC_RemoveFriend_Delegate__Delegate = 0x150; // DelegateProperty
		constexpr auto __USC_MessageFriend_Delegate__Delegate = 0x160; // DelegateProperty
		constexpr auto __USC_SearchByString_Delegate__Delegate = 0x170; // DelegateProperty
		constexpr auto __USC_GetListData_Delegate__Delegate = 0x180; // DelegateProperty
		constexpr auto __USC_InviteFriend_Delegate__Delegate = 0x190; // DelegateProperty
		constexpr auto __USC_CancelInvite_Delegate__Delegate = 0x1a0; // DelegateProperty
		constexpr auto __USC_AcceptClanInvite_Delegate__Delegate = 0x1b0; // DelegateProperty
		constexpr auto __USC_CancelClanInvite_Delegate__Delegate = 0x1c0; // DelegateProperty
		constexpr auto __USC_AcceptFriendRequest_Delegate__Delegate = 0x1d0; // DelegateProperty
		constexpr auto __USC_AcceptAllFriendRequests_Delegate__Delegate = 0x1e0; // DelegateProperty
		constexpr auto __USC_CancelFriendRequest_Delegate__Delegate = 0x1f0; // DelegateProperty
		constexpr auto __USC_CancelAllFriendRequests_Delegate__Delegate = 0x200; // DelegateProperty
		constexpr auto __USC_ViewPlayerProfile_Delegate__Delegate = 0x210; // DelegateProperty
		constexpr auto __USC_ViewPlayerClan_Delegate__Delegate = 0x220; // DelegateProperty
		constexpr auto __USC_SpectatePlayer_Delegate__Delegate = 0x230; // DelegateProperty
		constexpr auto __USC_WatchFriend_Delegate__Delegate = 0x240; // DelegateProperty
		constexpr auto __USC_PartyInvite_Delegate__Delegate = 0x250; // DelegateProperty
		constexpr auto __USC_PartyKick_Delegate__Delegate = 0x260; // DelegateProperty
		constexpr auto __USC_RemoveBlocked_Delegate__Delegate = 0x270; // DelegateProperty
		constexpr auto __USC_AddPlayerNote_Delegate__Delegate = 0x280; // DelegateProperty
		constexpr auto __USC_InviteFriendByString_Delegate__Delegate = 0x290; // DelegateProperty
		constexpr auto __USC_BlockByString_Delegate__Delegate = 0x2a0; // DelegateProperty
		constexpr auto __USC_InviteToClan_Delegate__Delegate = 0x2b0; // DelegateProperty
		constexpr auto __USC_UpdateStatusMessage_Delegate__Delegate = 0x2c0; // DelegateProperty
		constexpr auto __USC_ToggleDND_Delegate__Delegate = 0x2d0; // DelegateProperty
		constexpr auto __USC_Resize_Delegate__Delegate = 0x2e0; // DelegateProperty
	}

	namespace n_UUIScene_UIBattlePassXPPurchase { // : UUIScene
		constexpr auto m_dwCurrentXP = 0x1cc; // Fdword
		constexpr auto m_dwCurrentLevel = 0x1d0; // Fdword
		constexpr auto m_dwPurchaseLevel = 0x1d4; // Fdword
		constexpr auto m_dwPurchaseQuantity = 0x1d8; // Fdword
		constexpr auto m_dwUnitQuantity = 0x1dc; // Fdword
		constexpr auto m_pPurchasePrice = 0x1e0; // ObjectProperty
		constexpr auto m_pLTI = 0x1e8; // ObjectProperty
		constexpr auto m_pLevelCouponLTI = 0x1f0; // ObjectProperty
		constexpr auto m_mcTitle = 0x1f8; // ObjectProperty
		constexpr auto m_mcPurchaseAmount = 0x200; // ObjectProperty
		constexpr auto m_mcCurrentLevel = 0x208; // ObjectProperty
		constexpr auto m_mcCurrentLevelTF = 0x210; // ObjectProperty
		constexpr auto m_mcPurchaseLevel = 0x218; // ObjectProperty
		constexpr auto m_mcPurchaseLevelTF = 0x220; // ObjectProperty
		constexpr auto m_mcUnlockedRewards = 0x228; // ObjectProperty
		constexpr auto m_pRewards = 0x230; // ObjectProperty
		constexpr auto m_pHoldPrompt = 0x238; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x240; // ObjectProperty
		constexpr auto m_pRightArrow = 0x248; // ObjectProperty
		constexpr auto m_pCancelButton = 0x250; // ObjectProperty
		constexpr auto m_pControllerPrice = 0x258; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x260; // ObjectProperty
		constexpr auto m_pLeftArrowAction = 0x268; // ObjectProperty
		constexpr auto m_pLeftArrowRepeatAction = 0x270; // ObjectProperty
		constexpr auto m_pRightArrowAction = 0x278; // ObjectProperty
		constexpr auto m_pRightArrwRepeatAction = 0x280; // ObjectProperty
		constexpr auto m_mcPSPlusIcon = 0x288; // ObjectProperty
		constexpr auto m_mcPSPlusTF = 0x290; // ObjectProperty
		constexpr auto m_mcWait = 0x298; // ObjectProperty
		constexpr auto m_mcWaitSpinner = 0x2a0; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileDeployableActive { // : UTgInventoryObject_Listen_ActiveWhileOffCooldown
		constexpr auto m_nActiveDeployableCount = 0xc8; // int32_t
	}

	namespace n_UTgDeviceForm_AtlasBarrage { // : UTgDeviceForm
		constexpr auto m_CachedActiveOverlayController = 0x28c; // ObjectProperty
	}

	namespace n_UGFxAction_SetCaptureKeys { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto CaptureKeys = 0x110; // TArray<FName>
	}

	namespace n_UUIHudSkills { // : UTgGfxScene
		constexpr auto m_bPrompt = 0x1ec; // uint32_t : 1
		constexpr auto m_bPrompt1Flagball = 0x1ec; // uint32_t : 1
		constexpr auto m_bPrompt2 = 0x1ec; // uint32_t : 1
		constexpr auto m_bPrompt3 = 0x1ec; // uint32_t : 1
		constexpr auto m_bMounting = 0x1ec; // uint32_t : 1
		constexpr auto m_bShownBurn = 0x1ec; // uint32_t : 1
		constexpr auto m_bShouldShow = 0x1ec; // uint32_t : 1
		constexpr auto m_bShownLoadout = 0x1ec; // uint32_t : 1
		constexpr auto m_MountBar = 0x1f0; // FCastingInfo
		constexpr auto m_CastBar = 0x214; // FCastingInfo [0x3]
		constexpr auto m_mcPrompt = 0x280; // ObjectProperty
		constexpr auto m_mcPrompt2 = 0x288; // ObjectProperty
		constexpr auto m_mcPrompt3 = 0x290; // ObjectProperty
		constexpr auto m_nCredits = 0x298; // int32_t
		constexpr auto m_mcSpectatorCredits = 0x29c; // ObjectProperty
		constexpr auto m_mcSpectatorItemsGroup = 0x2a4; // ObjectProperty
		constexpr auto m_mcSpectatorCardsGroup = 0x2ac; // ObjectProperty
		constexpr auto m_CardDisplayGroup = 0x2b4; // FUICardDisplayGroup
		constexpr auto m_nSpectatorMode = 0x444; // int32_t
	}

	namespace n_UTgAnimBlendByFallTransition { // : UTgAnimBlendByFall
		constexpr auto m_fPreDownVelocity = 0x19c; // float
	}

	namespace n_UUIHudDebuff { // : UTgGfxScene
		constexpr auto m_bDisableDebuffUI = 0x1ec; // uint32_t : 1
		constexpr auto m_ActiveEffects = 0x1f0; // FHudDebuffEffect [0x3]
		constexpr auto m_mcDebuff = 0x244; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTF = 0x25c; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffIcon = 0x274; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTimer = 0x28c; // ObjectProperty [0x3]
		constexpr auto m_mcDebuffTimerBar = 0x2a4; // ObjectProperty [0x3]
		constexpr auto m_EffectGroupIconMap = 0x2bc; // TMap<None, None>
		constexpr auto m_EffectGroupNameMap = 0x304; // TMap<None, None>
	}

	namespace n_UGameThirdPersonCamera { // : UGameCameraBase
		constexpr auto WorstLocBlockedPct = 0x6c; // float
		constexpr auto WorstLocPenetrationExtentScale = 0x70; // float
		constexpr auto PenetrationBlendOutTime = 0x74; // float
		constexpr auto PenetrationBlendInTime = 0x78; // float
		constexpr auto PenetrationBlockedPct = 0x7c; // float
		constexpr auto PenetrationExtentScale = 0x80; // float
		constexpr auto LastActualOriginOffset = 0x84; // FVector
		constexpr auto LastActualCameraOrigin = 0x90; // FVector
		constexpr auto LastActualCameraOriginRot = 0x9c; // FRotator
		constexpr auto OriginOffsetInterpSpeed = 0xa8; // float
		constexpr auto LastViewOffset = 0xac; // FVector
		constexpr auto LastCamFOV = 0xb8; // float
		constexpr auto LastIdealCameraOrigin = 0xbc; // FVector
		constexpr auto LastIdealCameraOriginRot = 0xc8; // FRotator
		constexpr auto ThirdPersonCamDefault = 0xd4; // ObjectProperty
		constexpr auto ThirdPersonCamDefaultClass = 0xdc; // UGameThirdPersonCameraMode*
		constexpr auto CurrentCamMode = 0xe4; // ObjectProperty
		constexpr auto LastHeightAdjustment = 0xec; // float
		constexpr auto LastPitchAdjustment = 0xf0; // float
		constexpr auto LastYawAdjustment = 0xf4; // float
		constexpr auto LeftoverPitchAdjustment = 0xf8; // float
		constexpr auto Focus_BackOffStrength = 0xfc; // float
		constexpr auto Focus_StepHeightAdjustment = 0x100; // float
		constexpr auto Focus_MaxTries = 0x104; // int32_t
		constexpr auto Focus_FastAdjustKickInTime = 0x108; // float
		constexpr auto LastFocusChangeTime = 0x10c; // float
		constexpr auto ActualFocusPointWorldLoc = 0x110; // FVector
		constexpr auto LastFocusPointLoc = 0x11c; // FVector
		constexpr auto FocusPoint = 0x128; // FCamFocusPointParams
		constexpr auto bFocusPointSet = 0x160; // uint32_t : 1
		constexpr auto bFocusPointSuccessful = 0x160; // uint32_t : 1
		constexpr auto bDoingACameraTurn = 0x160; // uint32_t : 1
		constexpr auto bTurnAlignTargetWhenFinished = 0x160; // uint32_t : 1
		constexpr auto bDrawDebug = 0x160; // uint32_t : 1
		constexpr auto bDoingDirectLook = 0x160; // uint32_t : 1
		constexpr auto bDebugChangedCameraMode = 0x160; // uint32_t : 1
		constexpr auto bDoSeamlessPivotTransition = 0x160; // uint32_t : 1
		constexpr auto TurnCurTime = 0x164; // float
		constexpr auto TurnStartAngle = 0x168; // int32_t
		constexpr auto TurnEndAngle = 0x16c; // int32_t
		constexpr auto TurnTotalTime = 0x170; // float
		constexpr auto TurnDelay = 0x174; // float
		constexpr auto LastPostCamTurnYaw = 0x178; // int32_t
		constexpr auto DirectLookYaw = 0x17c; // int32_t
		constexpr auto DirectLookInterpSpeed = 0x180; // float
		constexpr auto WorstLocInterpSpeed = 0x184; // float
		constexpr auto LastWorstLocationLocal = 0x188; // FVector
		constexpr auto LastWorstLocation = 0x194; // FVector
		constexpr auto LastPreModifierCameraLoc = 0x1a0; // FVector
		constexpr auto LastPreModifierCameraRot = 0x1ac; // FRotator
		constexpr auto PenetrationAvoidanceFeelers = 0x1b8; // TArray<FPenetrationAvoidanceFeeler>
		constexpr auto LastOffsetAdjustment = 0x1c8; // FVector
	}

	namespace n_ATgGame_Paladins_Tutorial { // : ATgGame_Paladins_Siege
		constexpr auto m_eCurrentState = 0xa64; // ETutorialState
		constexpr auto TutorialInfo = 0xa68; // ObjectProperty
		constexpr auto m_fSetupPauseTime = 0xa70; // float
		constexpr auto m_bSetupTimerPaused = 0xa74; // uint32_t : 1
		constexpr auto m_bReceivedMovementAbility = 0xa74; // uint32_t : 1
		constexpr auto m_bReachedJumpLowerArea = 0xa74; // uint32_t : 1
		constexpr auto m_bReachedJumpUpperArea = 0xa74; // uint32_t : 1
		constexpr auto m_bDamagedWithAlt = 0xa74; // uint32_t : 1
		constexpr auto m_bDamagedWithBattle = 0xa74; // uint32_t : 1
		constexpr auto m_bDamagedWithUlt = 0xa74; // uint32_t : 1
		constexpr auto m_bPointCaptured = 0xa74; // uint32_t : 1
		constexpr auto m_bWaitingForUIReady = 0xa74; // uint32_t : 1
		constexpr auto m_fReceivedMoveForwardSeconds = 0xa78; // float
		constexpr auto m_fReceivedMoveBackwardSeconds = 0xa7c; // float
		constexpr auto m_fReceivedMoveLeftSeconds = 0xa80; // float
		constexpr auto m_fReceivedMoveRightSeconds = 0xa84; // float
		constexpr auto m_fVolumeStandTime = 0xa88; // float
		constexpr auto m_fLastFrameDeltaTime = 0xa8c; // float
		constexpr auto m_EndAnnouncerAudioEvent = 0xa90; // ObjectProperty
	}

	namespace n_UUIComponent_RadialSlotEmote { // : UUIComponent_Display
		constexpr auto m_EmoteDisplay = 0x124; // ObjectProperty
		constexpr auto m_mcEmoteDisplayLock = 0x12c; // ObjectProperty
		constexpr auto m_mcEmoteDisplayText = 0x134; // ObjectProperty
		constexpr auto m_mcEmoteDisplayButton = 0x13c; // ObjectProperty
		constexpr auto m_mcEmoteDisplayButtonFade = 0x144; // ObjectProperty
		constexpr auto m_mcEmoteDisplayButtonFrame = 0x14c; // ObjectProperty
		constexpr auto m_mcEmoteDisplayButtonHighlight = 0x154; // ObjectProperty
		constexpr auto m_mcEmoteDisplayButtonColor = 0x15c; // ObjectProperty
		constexpr auto m_EmoteDisplayPurchaseButton = 0x164; // ObjectProperty
		constexpr auto m_nPadding = 0x16c; // int32_t
	}

	namespace n_UAnimNodeBlendBase { // : UAnimNode
		constexpr auto Children = 0xfc; // TArray<FAnimBlendChild>
		constexpr auto bFixNumChildren = 0x10c; // uint32_t : 1
		constexpr auto m_bForceChildToLoop = 0x10c; // uint32_t : 1
		constexpr auto BlendType = 0x110; // AlphaBlendType
	}

	namespace n_UMaterialExpressionFontSampleParameter { // : UMaterialExpressionFontSample
		constexpr auto ParameterName = 0xbc; // FName
		constexpr auto ExpressionGUID = 0xc4; // FGuid
		constexpr auto Group = 0xd4; // FName
	}

	namespace n_UUIDataProvider_SettingsArray { // : UUIDataProvider
		constexpr auto Settings = 0x70; // ObjectProperty
		constexpr auto SettingsId = 0x78; // int32_t
		constexpr auto SettingsName = 0x7c; // FName
		constexpr auto ColumnHeaderText = 0x84; // FString
		constexpr auto Values = 0x94; // TArray<FIdToStringMapping>
	}

	namespace n_UPBRuleNodeCorner { // : UPBRuleNodeBase
		constexpr auto CornerSize = 0x70; // float
		constexpr auto Angles = 0x74; // TArray<FRBCornerAngleInfo>
		constexpr auto FlatThreshold = 0x84; // float
		constexpr auto bNoMeshForConcaveCorners = 0x88; // uint32_t : 1
		constexpr auto bUseAdjacentRulesetForRightGap = 0x88; // uint32_t : 1
		constexpr auto CornerType = 0x8c; // EPBCornerType
		constexpr auto CornerShapeOffset = 0x90; // float
		constexpr auto RoundTesselation = 0x94; // int32_t
		constexpr auto RoundCurvature = 0x98; // float
	}

	namespace n_UTgInvListener_DeathAfterHit { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_fResetTimer = 0xcc; // float
		constexpr auto m_pLastTargetsHit = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_ATgRepInfo_Game_Flagball { // : ATgRepInfo_Game
		constexpr auto c_fFlagballCorrectInterval = 0x5c8; // float
		constexpr auto c_fFlagballCorrectTimer = 0x5cc; // float
		constexpr auto c_bInFarMoveState = 0x5d0; // uint32_t : 1
		constexpr auto r_bPassingEnabled = 0x5d0; // uint32_t : 1
		constexpr auto r_bBallActive = 0x5d0; // uint32_t : 1
		constexpr auto r_bBallExists = 0x5d0; // uint32_t : 1
		constexpr auto c_Flagball = 0x5d4; // ObjectProperty
		constexpr auto c_TF1Goal = 0x5dc; // ObjectProperty
		constexpr auto c_TF2Goal = 0x5e4; // ObjectProperty
		constexpr auto r_nTimeRemaining = 0x5ec; // float
		constexpr auto r_BallCarrier = 0x5f0; // ObjectProperty
		constexpr auto r_vBallPosition = 0x5f8; // FVector
		constexpr auto r_vBallVelocity = 0x604; // FVector
		constexpr auto r_vBallPositionForHUD = 0x610; // FVector
		constexpr auto r_vTF1GoalLocation = 0x61c; // FVector
		constexpr auto r_vTF2GoalLocation = 0x628; // FVector
		constexpr auto c_nFlagballDeviceFireID = 0x634; // int32_t
		constexpr auto r_GoalMarker = 0x638; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Barrage { // : UTgDeviceForm
		constexpr auto m_CachedActiveOverlayController = 0x28c; // ObjectProperty
	}

	namespace n_UUIComponent_AnimSet { // : UUIComponent
		constexpr auto m_bRecording = 0x118; // uint32_t : 1
		constexpr auto m_bPlayOnce = 0x118; // uint32_t : 1
		constexpr auto m_fAnimTime = 0x11c; // float
		constexpr auto m_fTotalAnimTime = 0x120; // float
		constexpr auto m_nTickAnimHandle = 0x124; // int32_t
		constexpr auto m_Anims = 0x128; // TArray<FUICompAnimSetAnim>
	}

	namespace n_ATgProj_AzaanHammer { // : ATgProj_Simulated
		constexpr auto m_bShouldExplode = 0x52c; // uint32_t : 1
		constexpr auto m_CachedAzaan = 0x530; // ObjectProperty
		constexpr auto m_DirectHitActor = 0x538; // ObjectProperty
		constexpr auto m_FxForChargedHammer = 0x540; // FName
		constexpr auto m_FxForHammerExplode = 0x548; // FName
	}

	namespace n_UPComPositionHistoryServerComponent { // : UActorComponent
		constexpr auto CurrentIndex = 0x88; // int32_t
		constexpr auto ServerTimeStamps = 0x8c; // float [0x1e]
		constexpr auto ClientTimeStamps = 0x104; // float [0x1e]
		constexpr auto Positions = 0x17c; // FVector [0x1e]
		constexpr auto Velocities = 0x2e4; // FVector [0x1e]
		constexpr auto Rotations = 0x44c; // FRotator [0x1e]
		constexpr auto bJustTeleported = 0x5b4; // char [0x1e]
		constexpr auto bCollideActors = 0x5d2; // char [0x1e]
		constexpr auto bBlockActors = 0x5f0; // char [0x1e]
		constexpr auto Physics = 0x60e; // EPhysics [0x1e]
	}

	namespace n_ATgDevice_ToggleModeWithLockout { // : ATgDevice_ToggleWithLockout
		constexpr auto m_CachedInhand = 0xa14; // ObjectProperty
	}

	namespace n_ATgDeploy_ShieldMakoa { // : ATgDeploy_Shield
		constexpr auto m_CachedPawnOwner = 0x470; // ObjectProperty
		constexpr auto r_nCarapaceBonusHealth = 0x478; // int32_t
		constexpr auto r_bHasBarrierReef = 0x47c; // uint32_t : 1
		constexpr auto m_nBarrierReefDamage = 0x480; // int32_t
	}

	namespace n_UTgEffectDamage { // : UTgEffect
		constexpr auto m_nSimplifiedPropertyId = 0xa0; // int32_t
		constexpr auto m_DamageTypeClass = 0xa4; // UTgDamageType*
		constexpr auto m_DefaultDamageTypeClass = 0xac; // UTgDamageType*
		constexpr auto m_fDamageInitial = 0xb4; // float
		constexpr auto m_fBonusDamageToShields = 0xb8; // float
		constexpr auto m_bAllowLifeSteal = 0xbc; // uint32_t : 1
		constexpr auto m_bCanBeBuffed = 0xbc; // uint32_t : 1
		constexpr auto m_nScalingDoTCounter = 0xc0; // int32_t
	}

	namespace n_UUIDataLoadouts { // : UUIDataObject
		constexpr auto m_Loadouts = 0x74; // TMap<None, None>
		constexpr auto m_TemplateLoadouts = 0xbc; // FMultiMap_Mirror
		constexpr auto m_EventTemplateLoadouts = 0x104; // FMultiMap_Mirror
		constexpr auto m_PendingImports = 0x14c; // TArray<FPendingImportRequest>
		constexpr auto m_bEventTemplatesActive = 0x15c; // uint32_t : 1
		constexpr auto m_nEventTemplateVendorId = 0x160; // int32_t
	}

	namespace n_UUIScene_UIChampionSelect { // : UUIScene
		constexpr auto m_nTickCallbackHandle = 0x1cc; // int32_t
		constexpr auto m_bShowChampionAd = 0x1d0; // uint32_t : 1
		constexpr auto m_fDelayedPreviewTimer = 0x1d4; // float
		constexpr auto m_ChampionPackData = 0x1d8; // ObjectProperty
		constexpr auto m_pFocusedChampion = 0x1e0; // ObjectProperty
		constexpr auto m_AvailableChampions = 0x1e8; // TArray<ObjectProperty>
		constexpr auto m_mcChampions = 0x1f8; // ObjectProperty
		constexpr auto m_mcDetailsTitle = 0x200; // ObjectProperty
		constexpr auto m_mcDetailsSubtitle = 0x208; // ObjectProperty
		constexpr auto m_mcDetailsClassIcon = 0x210; // ObjectProperty
		constexpr auto m_mcDetailsNewChamp = 0x218; // ObjectProperty
		constexpr auto m_mcRoleTabsCategoryTF = 0x220; // ObjectProperty
		constexpr auto m_ChampionPack = 0x228; // ObjectProperty
		constexpr auto m_pRoleTabs = 0x230; // ObjectProperty
		constexpr auto m_pChampionsGrid = 0x238; // ObjectProperty
		constexpr auto m_pChampionsGridLarge = 0x240; // ObjectProperty
		constexpr auto m_pSortOrderDropdown = 0x248; // ObjectProperty
		constexpr auto m_pRotator = 0x250; // ObjectProperty
		constexpr auto m_pPurchasePackAction = 0x258; // ObjectProperty
	}

	namespace n_UUIPurchase { // : UTgGfxScene
		constexpr auto m_nPurchaseItem = 0x1ec; // int32_t
		constexpr auto m_nPurchaseType = 0x1f0; // int32_t
		constexpr auto m_nPurchaseBundle = 0x1f4; // int32_t
		constexpr auto m_nPurchaseVendor = 0x1f8; // int32_t
		constexpr auto m_nPurchaseLootItem = 0x1fc; // int32_t
		constexpr auto m_nPurchaseQuantity = 0x200; // int32_t
		constexpr auto m_qwPurchaseCustomData = 0x204; // FQWord
		constexpr auto m_bHasBonusItem = 0x20c; // uint32_t : 1
		constexpr auto m_bIsMultiPurchase = 0x20c; // uint32_t : 1
		constexpr auto m_nBonusItem = 0x210; // int32_t
		constexpr auto m_nBonusType = 0x214; // int32_t
		constexpr auto m_nBonusBundle = 0x218; // int32_t
		constexpr auto m_nBonusVendor = 0x21c; // int32_t
		constexpr auto m_nBonusLootItem = 0x220; // int32_t
		constexpr auto m_eCurrencyUsed = 0x224; // int32_t
		constexpr auto m_nCurrentTab = 0x228; // int32_t
		constexpr auto m_nCurrentCoupon = 0x22c; // int32_t
		constexpr auto m_fPurchaseDelay = 0x230; // float
		constexpr auto m_fPurchaseTimeout = 0x234; // float
		constexpr auto m_lsMultiPurchaseTitle = 0x238; // FString
		constexpr auto m_lsMultiPurchaseSubTitle = 0x248; // FString
		constexpr auto m_pSelectedPrice = 0x258; // ObjectProperty
		constexpr auto m_mcWait = 0x260; // ObjectProperty
		constexpr auto m_mcTitle = 0x268; // ObjectProperty
		constexpr auto m_mcCursor = 0x270; // ObjectProperty
		constexpr auto m_mcCancel = 0x278; // ObjectProperty
		constexpr auto m_mcSpinner = 0x280; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x288; // ObjectProperty
		constexpr auto m_mcBooster = 0x290; // ObjectProperty
		constexpr auto m_mcTab = 0x298; // ObjectProperty [0x2]
		constexpr auto m_mcTabSelected = 0x2a8; // ObjectProperty [0x2]
		constexpr auto m_mcTabHighlight = 0x2b8; // ObjectProperty [0x2]
		constexpr auto m_mcDivider = 0x2c8; // ObjectProperty [0x2]
		constexpr auto m_mcCouponSelect = 0x2d8; // ObjectProperty
		constexpr auto m_mcCouponSelectArrow0 = 0x2e0; // ObjectProperty
		constexpr auto m_mcCouponSelectArrow1 = 0x2e8; // ObjectProperty
		constexpr auto m_mcCouponSelectIcon = 0x2f0; // ObjectProperty
		constexpr auto m_mcCouponSelectTF = 0x2f8; // ObjectProperty
		constexpr auto m_mcCouponSelectHighlight = 0x300; // ObjectProperty
		constexpr auto m_mcBlocker = 0x308; // ObjectProperty
		constexpr auto m_mcBoosterItem = 0x310; // ObjectProperty
		constexpr auto m_BoosterItemDisplay = 0x318; // FUIAcquiredItem
		constexpr auto m_BoosterItemInfo = 0x420; // ObjectProperty
		constexpr auto m_HoldPrompt = 0x428; // ObjectProperty
		constexpr auto m_PriceOptionList = 0x430; // ObjectProperty
		constexpr auto m_grScreen = 0x438; // ObjectProperty
		constexpr auto m_PlayerCurrency = 0x440; // ObjectProperty
		constexpr auto m_ChampionPackAd = 0x448; // ObjectProperty
		constexpr auto m_ChampionPackButton = 0x450; // ObjectProperty
		constexpr auto m_ChampionPackData = 0x458; // ObjectProperty
		constexpr auto m_ChampionPackPrompt = 0x460; // ObjectProperty
		constexpr auto m_Carousel = 0x468; // ObjectProperty
		constexpr auto m_PurchaseItems = 0x470; // TArray<FUIAcquiredItem>
		constexpr auto m_PurchaseTabPrices = 0x480; // TArray<ObjectProperty>
		constexpr auto m_RentalTabPrices = 0x490; // TArray<ObjectProperty>
		constexpr auto m_MultiPurchaseItems = 0x4a0; // TArray<ObjectProperty>
		constexpr auto m_akPurchaseItem = 0x4b0; // ObjectProperty
		constexpr auto m_nEquipByBoostingID = 0x4b8; // int32_t
	}

	namespace n_UMaterialExpressionQualitySwitch { // : UMaterialExpression
		constexpr auto High = 0xb0; // FExpressionInput
		constexpr auto Medium = 0xe4; // FExpressionInput
		constexpr auto Low = 0x118; // FExpressionInput
	}

	namespace n_ATgFlagBall { // : ATgProj_FreeGrenade
		constexpr auto m_ballFX = 0x580; // ObjectProperty
		constexpr auto m_bAvoidInstigator = 0x588; // uint32_t : 1
		constexpr auto m_bSilhouetteAllowed = 0x588; // uint32_t : 1
		constexpr auto m_bSilhouetteInitialized = 0x588; // uint32_t : 1
		constexpr auto m_fAvoidInstigatorDuration = 0x58c; // float
		constexpr auto m_Silhouette = 0x590; // ComponentProperty
		constexpr auto m_LocalSilhouetteColor = 0x598; // FLinearColor
	}

	namespace n_UUIComponent_StoreDLC { // : UUIComponent_Display
		constexpr auto m_mcDLCOwnedTF = 0x124; // ObjectProperty
		constexpr auto m_pDLCList = 0x12c; // ObjectProperty
		constexpr auto m_pDLCListHorizontal = 0x134; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x13c; // ObjectProperty
		constexpr auto m_pRightArrow = 0x144; // ObjectProperty
		constexpr auto m_pUpArrow = 0x14c; // ObjectProperty
		constexpr auto m_pDownArrow = 0x154; // ObjectProperty
		constexpr auto m_mcTaxTF = 0x15c; // ObjectProperty
		constexpr auto m_grDLC = 0x164; // ObjectProperty
		constexpr auto m_grDLCHorizontal = 0x16c; // ObjectProperty
	}

	namespace n_UUIInteractable_BattlePassBanner { // : UUIComponent_Interactable
		constexpr auto m_mcTitle = 0x140; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x148; // ObjectProperty
		constexpr auto m_mcTimeLeft = 0x150; // ObjectProperty
		constexpr auto m_mcPassTypeTF = 0x158; // ObjectProperty
		constexpr auto m_pProgress = 0x160; // ObjectProperty
		constexpr auto m_mcProgressLevel = 0x168; // ObjectProperty
		constexpr auto m_mcProgressLevelLabel = 0x170; // ObjectProperty
		constexpr auto m_mcProgressXP = 0x178; // ObjectProperty
		constexpr auto m_mcProgressLevelNext = 0x180; // ObjectProperty
		constexpr auto m_nRewardLevel = 0x188; // int32_t
		constexpr auto m_pPreviewStack = 0x18c; // ObjectProperty
	}

	namespace n_ATgSpectatorCamera { // : ATgPlayerCamera
		constexpr auto m_DefaultBlendParams = 0x88c; // FViewTargetTransitionParams
		constexpr auto m_SnapBlendParams = 0x89c; // FViewTargetTransitionParams
		constexpr auto m_CinematicAnim = 0x8ac; // ObjectProperty
		constexpr auto m_AnimInstance = 0x8b4; // ObjectProperty
	}

	namespace n_ATgDevice_ViktorInhand { // : ATgDevice
		constexpr auto m_bIsADS = 0xa08; // uint32_t : 1
		constexpr auto m_vADSProjectileSpawnOffset = 0xa0c; // FVector
		constexpr auto m_fADSRecoilMultiplier = 0xa18; // float
		constexpr auto m_CachedPawnOwner = 0xa1c; // ObjectProperty
	}

	namespace n_UUIComponent_AbilityPointsPool { // : UUIComponent_Display
		constexpr auto m_bDirty = 0x124; // uint32_t : 1
		constexpr auto m_nTickCallbackHandle = 0x128; // int32_t
		constexpr auto m_mcAbilityPointsPool = 0x12c; // ObjectProperty
		constexpr auto m_mcAbilityIcon = 0x134; // ObjectProperty [0x4]
		constexpr auto m_mcPointsFill = 0x154; // ObjectProperty [0x4]
		constexpr auto m_mcPointsText = 0x174; // ObjectProperty [0x4]
		constexpr auto m_mcTalentFocusFrame = 0x194; // ObjectProperty [0x4]
		constexpr auto m_fFillWidth = 0x1b4; // float
		constexpr auto m_nPoints = 0x1b8; // int32_t [0x4]
		constexpr auto m_eFocusedAbility = 0x1c8; // AbilityModifiedByDevice
	}

	namespace n_UDynamicLightEnvironmentComponent { // : ULightEnvironmentComponent
		constexpr auto State = 0xa8; // FPointer
		constexpr auto InvisibleUpdateTime = 0xb0; // float
		constexpr auto MinTimeBetweenFullUpdates = 0xb4; // float
		constexpr auto VelocityUpdateTimeScale = 0xb8; // float
		constexpr auto ShadowInterpolationSpeed = 0xbc; // float
		constexpr auto NumVolumeVisibilitySamples = 0xc0; // int32_t
		constexpr auto LightingBoundsScale = 0xc4; // float
		constexpr auto AmbientShadowColor = 0xc8; // FLinearColor
		constexpr auto AmbientShadowSourceDirection = 0xd8; // FVector
		constexpr auto AmbientGlow = 0xe4; // FLinearColor
		constexpr auto LightDistance = 0xf4; // float
		constexpr auto ShadowDistance = 0xf8; // float
		constexpr auto bCastShadows = 0xfc; // uint32_t : 1
		constexpr auto bCompositeShadowsFromDynamicLights = 0xfc; // uint32_t : 1
		constexpr auto bForceCompositeAllLights = 0xfc; // uint32_t : 1
		constexpr auto bAffectedBySmallDynamicLights = 0xfc; // uint32_t : 1
		constexpr auto bUseBooleanEnvironmentShadowing = 0xfc; // uint32_t : 1
		constexpr auto bShadowFromEnvironment = 0xfc; // uint32_t : 1
		constexpr auto bDynamic = 0xfc; // uint32_t : 1
		constexpr auto bSynthesizeDirectionalLight = 0xfc; // uint32_t : 1
		constexpr auto bSynthesizeSHLight = 0xfc; // uint32_t : 1
		constexpr auto bRequiresNonLatentUpdates = 0xfc; // uint32_t : 1
		constexpr auto bTraceFromClosestBoundsPoint = 0xfc; // uint32_t : 1
		constexpr auto bIsCharacterLightEnvironment = 0xfc; // uint32_t : 1
		constexpr auto bOverrideOwnerLightingChannels = 0xfc; // uint32_t : 1
		constexpr auto bAlwaysInfluencedByDominantDirectionalLight = 0xfc; // uint32_t : 1
		constexpr auto ModShadowFadeoutTime = 0x100; // float
		constexpr auto ModShadowFadeoutExponent = 0x104; // float
		constexpr auto MaxModulatedShadowColor = 0x108; // FLinearColor
		constexpr auto DominantShadowTransitionStartDistance = 0x118; // float
		constexpr auto DominantShadowTransitionEndDistance = 0x11c; // float
		constexpr auto MinShadowAngle = 0x120; // float
		constexpr auto BoundsMethod = 0x124; // EDynamicLightEnvironmentBoundsMethod
		constexpr auto OverriddenBounds = 0x128; // FBoxSphereBounds
		constexpr auto OverriddenLightingChannels = 0x144; // FLightingChannelContainer
		constexpr auto OverriddenLightComponents = 0x148; // TArray<ComponentProperty>
	}

	namespace n_UTgDeviceForm_LexInhand { // : UTgDeviceForm
		constexpr auto c_nmSocketLeft = 0x28c; // FName
		constexpr auto c_nmSocketRight = 0x294; // FName
		constexpr auto m_LexCharacterNodes1P = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_LexCharacterNodes3P = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_DualFireStanceNodes1P = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_DualFireStanceNodes3P = 0x2cc; // TArray<ObjectProperty>
		constexpr auto m_FireDurationNodes1P = 0x2dc; // TArray<ObjectProperty>
		constexpr auto m_FireDurationNodes3P = 0x2ec; // TArray<ObjectProperty>
		constexpr auto m_CachedLex = 0x2fc; // ObjectProperty
		constexpr auto m_nPursuitFireIndex = 0x304; // int32_t
		constexpr auto m_fDeathHastensDuration = 0x308; // float
	}

	namespace n_UUIHudPlayer_NPC { // : UUIHudPlayer_Base
		constexpr auto m_mcNPCIcon = 0x32c; // ObjectProperty
		constexpr auto m_mcTF = 0x334; // ObjectProperty
	}

	namespace n_UTgMiniMap_Targeting { // : UTgMiniMap
		constexpr auto m_MICWardTarget = 0x5bc; // ObjectProperty [0x6]
	}

	namespace n_UUIComponent_BPFreePassReward { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
		constexpr auto m_pFreeReward = 0x12c; // ObjectProperty
	}

	namespace n_UMcpMessageBase { // : UMcpServiceBase
		constexpr auto McpMessageManagerClassName = 0x78; // FString
		constexpr auto CompressionType = 0x88; // EMcpMessageCompressionType
		constexpr auto MessageContentsList = 0x8c; // TArray<FMcpMessageContents>
		constexpr auto MessageLists = 0x9c; // TArray<FMcpMessageList>
		constexpr auto __OnCreateMessageComplete__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnDeleteMessageComplete__Delegate = 0xbc; // DelegateProperty
		constexpr auto __OnQueryMessagesComplete__Delegate = 0xcc; // DelegateProperty
		constexpr auto __OnQueryMessageContentsComplete__Delegate = 0xdc; // DelegateProperty
	}

	namespace n_ATgDevice_AtlasBarrageFire { // : ATgDevice
		constexpr auto m_nChainedBarrageNum = 0xa08; // int32_t
		constexpr auto m_nShotsRemaining = 0xa0c; // int32_t
		constexpr auto m_BarrageDevice = 0xa10; // ObjectProperty
	}

	namespace n_ATgDevice_YagoTravel { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedYagorath = 0xa10; // ObjectProperty
		constexpr auto m_eYagoTravelState = 0xa18; // YagoTravelState
		constexpr auto m_YagoChargeUp = 0xa1c; // ObjectProperty
		constexpr auto m_fPreviousSpeedMultiplier = 0xa24; // float
		constexpr auto m_fSpeedMultiplierDuringAcceleration = 0xa28; // float
		constexpr auto m_fSpeedMultiplierDuringDeceleration = 0xa2c; // float
		constexpr auto m_fSpeedMultiplierDuringPassiveDeceleration = 0xa30; // float
		constexpr auto m_fSpeedMultiplierDuringChargeUp = 0xa34; // float
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa38; // DelegateProperty
	}

	namespace n_UPlatformInterfaceWebResponse { // : UObject
		constexpr auto OriginalURL = 0x60; // FString
		constexpr auto ResponseCode = 0x70; // int32_t
		constexpr auto Tag = 0x74; // int32_t
		constexpr auto Headers = 0x78; // FMap_Mirror
		constexpr auto StringResponse = 0xc0; // FString
		constexpr auto BinaryResponse = 0xd0; // TArray<char>
	}

	namespace n_UUIComponent_Display { // : UUIComponent
		constexpr auto m_pData = 0x118; // ObjectProperty
		constexpr auto m_bCallbacksRegistered = 0x120; // uint32_t : 1
	}

	namespace n_USeqEvent_MobileLook { // : USeqEvent_MobileZoneBase
		constexpr auto Yaw = 0x138; // float
		constexpr auto StickStrength = 0x13c; // float
		constexpr auto RotationVector = 0x140; // FVector
	}

	namespace n_UMorphNodeBase { // : UAnimObject
		constexpr auto NodeName = 0x68; // FName
		constexpr auto bDrawSlider = 0x70; // uint32_t : 1
	}

	namespace n_UParticleModuleAttractorLine { // : UParticleModuleAttractorBase
		constexpr auto EndPoint0 = 0x68; // FVector
		constexpr auto EndPoint1 = 0x74; // FVector
		constexpr auto Range = 0x80; // FRawDistributionFloat
		constexpr auto Strength = 0xa4; // FRawDistributionFloat
	}

	namespace n_UAnimNotify_CameraEffect { // : UAnimNotify
		constexpr auto CameraLensEffect = 0x68; // AEmitterCameraLensEffectBase*
	}

	namespace n_UUIComponent_MatchLobbyTeam { // : UUIComponent_List
		constexpr auto m_bIsBlueTeam = 0x260; // uint32_t : 1
		constexpr auto m_pBoostButton = 0x264; // ObjectProperty
		constexpr auto m_pBoostAction = 0x26c; // ObjectProperty
		constexpr auto m_pBackAction = 0x274; // ObjectProperty
	}

	namespace n_ATgDeploy_GeometryEffectField { // : ATgDeploy_EffectField
		constexpr auto m_OverlappingActors = 0x4a0; // TArray<ObjectProperty>
		constexpr auto m_DesiredPushDirection = 0x4b0; // TArray<FVector>
		constexpr auto m_bPushOverlappingActors = 0x4c0; // uint32_t : 1
		constexpr auto m_bAllyPassthrough = 0x4c0; // uint32_t : 1
		constexpr auto m_bEnemyPassthrough = 0x4c0; // uint32_t : 1
		constexpr auto m_fPushFactor = 0x4c4; // float
	}

	namespace n_UTgInventoryObject_Listen_LoogieHit { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_nLastFireLoopInstanceId = 0xcc; // int32_t
		constexpr auto m_nNumTimesApplied = 0xd0; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsInFortress { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
	}

	namespace n_UInterpTrackFloatParticleParam { // : UInterpTrackFloatBase
		constexpr auto ParamName = 0xb8; // FName
	}

	namespace n_UUIComponent_EventVault { // : UUIComponent_Display
		constexpr auto m_dwVaultVendor = 0x124; // Fdword
		constexpr auto m_dwRequiredBundlesVendor = 0x128; // Fdword
		constexpr auto m_nSelectedIndex = 0x12c; // int32_t
		constexpr auto m_bUseFixedCamDisance = 0x130; // uint32_t : 1
		constexpr auto m_bPlayEmoteIfSkinOwned = 0x130; // uint32_t : 1
		constexpr auto m_pPreviewLTI = 0x134; // ObjectProperty
		constexpr auto m_CardArt = 0x13c; // TMap<None, None>
		constexpr auto m_pVaultItems = 0x184; // TArray<ObjectProperty>
		constexpr auto m_mcNameTF = 0x194; // ObjectProperty
		constexpr auto m_mcDescTF = 0x19c; // ObjectProperty
		constexpr auto m_mcUnlockTF = 0x1a4; // ObjectProperty
		constexpr auto m_pRequiredBundles = 0x1ac; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x1b4; // ObjectProperty
		constexpr auto m_pPrevArrow = 0x1bc; // ObjectProperty
		constexpr auto m_pNextArrow = 0x1c4; // ObjectProperty
		constexpr auto m_pPurchaseAction = 0x1cc; // ObjectProperty
		constexpr auto m_pCardArtMesh = 0x1d4; // ObjectProperty
		constexpr auto m_CardArtMaterial = 0x1dc; // ObjectProperty
		constexpr auto m_CardArtManifestGroup = 0x1e4; // ObjectProperty
	}

	namespace n_AGameCrowdInfoVolume { // : AVolume
		constexpr auto PotentialSpawnPoints = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UHTTPDownload { // : UDownload
		constexpr auto RedirectToURL = 0x74; // FString
		constexpr auto UseCompression = 0x84; // uint32_t : 1
		constexpr auto ProxyServerHost = 0xaa4; // FString
		constexpr auto ProxyServerPort = 0xab4; // int32_t
		constexpr auto MaxRedirection = 0xab8; // uint32_t : 1
		constexpr auto ConnectionTimeout = 0xabc; // float
	}

	namespace n_UTgAnimNodeStanceTransition { // : UAnimNodeBlendList
		constexpr auto m_SourceStance = 0x144; // int32_t
		constexpr auto m_DestinationStance = 0x148; // int32_t
	}

	namespace n_UPlatformInterfaceBase { // : UObject
		constexpr auto AllDelegates = 0x60; // TArray<FDelegateArray>
		constexpr auto __PlatformInterfaceDelegate__Delegate = 0x70; // DelegateProperty
	}

	namespace n_UTgInventoryObject { // : UObject
		constexpr auto m_InventoryData = 0x60; // FInventoryData
		constexpr auto m_nRefData = 0x84; // int32_t
		constexpr auto m_InvManager = 0x88; // ObjectProperty
		constexpr auto m_bTemporary = 0x90; // uint32_t : 1
		constexpr auto s_ReplicatedState = 0x94; // EReplicatedState
		constexpr auto m_pAmItem = 0x98; // FPointer
		constexpr auto c_nNbrAcquired = 0xa0; // int32_t
		constexpr auto c_fTimeAcquired = 0xa4; // float
	}

	namespace n_UUIComponent_Accolade { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcValue = 0x134; // ObjectProperty
	}

	namespace n_UParticleModuleRotationRate_Seeded { // : UParticleModuleRotationRate
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UTgInvListener_TargetOverHealed { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto s_stacks = 0xcc; // TArray<FTOHInfo>
	}

	namespace n_UParticleModuleColorByParameter { // : UParticleModuleColorBase
		constexpr auto ColorParam = 0x68; // FName
		constexpr auto DefaultColor = 0x70; // FColor
	}

	namespace n_UTgCameraShake { // : UCameraShake
		constexpr auto m_fShakeScale = 0xf8; // float
		constexpr auto m_bDoControllerVibration = 0xfc; // uint32_t : 1
		constexpr auto m_bRadialShake = 0xfc; // uint32_t : 1
		constexpr auto m_bOrientTowardRadialEpicenter = 0xfc; // uint32_t : 1
		constexpr auto m_fRadialShake_InnerRadius = 0x100; // float
		constexpr auto m_fRadialShake_OuterRadius = 0x104; // float
		constexpr auto m_fRadialShake_Falloff = 0x108; // float
		constexpr auto m_PlaySpace = 0x10c; // ECameraAnimPlaySpace
	}

	namespace n_AGameExplosionActor { // : AActor
		constexpr auto bHasExploded = 0x280; // uint32_t : 1
		constexpr auto bExplodeMoreThanOnce = 0x280; // uint32_t : 1
		constexpr auto bTrackExplosionParticleSystemLifespan = 0x280; // uint32_t : 1
		constexpr auto bDrawDebug = 0x280; // uint32_t : 1
		constexpr auto ExplosionLight = 0x284; // ComponentProperty
		constexpr auto ExplosionRadialBlur = 0x28c; // ComponentProperty
		constexpr auto LightFadeTime = 0x294; // float
		constexpr auto LightFadeTimeRemaining = 0x298; // float
		constexpr auto LightInitialBrightness = 0x29c; // float
		constexpr auto RadialBlurFadeTime = 0x2a0; // float
		constexpr auto RadialBlurFadeTimeRemaining = 0x2a4; // float
		constexpr auto RadialBlurMaxBlurAmount = 0x2a8; // float
		constexpr auto ExplosionTemplate = 0x2ac; // ObjectProperty
		constexpr auto RadialImpulseComponent = 0x2b4; // ComponentProperty
		constexpr auto InstigatorController = 0x2bc; // ObjectProperty
		constexpr auto HitActorFromPhysMaterialTrace = 0x2c4; // ObjectProperty
		constexpr auto HitLocationFromPhysMaterialTrace = 0x2cc; // FVector
		constexpr auto Attachee = 0x2d8; // ObjectProperty
		constexpr auto AttacheeController = 0x2e0; // ObjectProperty
		constexpr auto DirectionalExplosionMinDot = 0x2e8; // float
		constexpr auto ExplosionDirection = 0x2ec; // FVector
	}

	namespace n_UGameCrowdBehavior_WaitInQueue { // : UGameCrowdAgentBehavior
		constexpr auto bStoppingBehavior = 0x9c; // uint32_t : 1
		constexpr auto QueuePosition = 0xa0; // ObjectProperty
	}

	namespace n_ATgDeploy_GeometryBarrierTank { // : ATgDeploy_Geometry
		constexpr auto m_CachedInaraPawn = 0x494; // ObjectProperty
		constexpr auto m_CenterMesh = 0x49c; // ComponentProperty
		constexpr auto m_LeftMeshes = 0x4a4; // ComponentProperty [0x2]
		constexpr auto m_RightMeshes = 0x4b4; // ComponentProperty [0x2]
		constexpr auto m_WallMeshIDCenter = 0x4c4; // int32_t
		constexpr auto m_WallMeshIDEndCap = 0x4c8; // int32_t
		constexpr auto r_bGrowthModeActivationSignal = 0x4cc; // uint32_t : 1
		constexpr auto m_bInGrowthMode = 0x4cc; // uint32_t : 1
		constexpr auto m_bDidInitialHit = 0x4cc; // uint32_t : 1
		constexpr auto r_bEarthenGuardActive = 0x4cc; // uint32_t : 1
		constexpr auto r_bHasAlpine = 0x4cc; // uint32_t : 1
		constexpr auto m_fGrowStartTime = 0x4d0; // float
	}

	namespace n_ATgDevice_DragonFang { // : ATgDevice
		constexpr auto m_CachedKoga = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceFire { // : UObject
		constexpr auto m_Owner = 0x60; // ObjectProperty
		constexpr auto m_nFireType = 0x68; // EWeaponFireType
		constexpr auto m_eTargetingMode = 0x69; // DeviceTargetMode
		constexpr auto m_eTargeterType = 0x6a; // DeviceTargeterType
		constexpr auto m_eTargetSelectionTypeOverride = 0x6b; // TargetSelectionType
		constexpr auto m_bIsAOE = 0x6c; // uint32_t : 1
		constexpr auto m_bIsCone = 0x6c; // uint32_t : 1
		constexpr auto m_bIsLinear = 0x6c; // uint32_t : 1
		constexpr auto m_bContinuousFire = 0x6c; // uint32_t : 1
		constexpr auto m_bRequireLOS = 0x6c; // uint32_t : 1
		constexpr auto m_bVerifyTargetPlacement = 0x6c; // uint32_t : 1
		constexpr auto m_bAllowMultiplePets = 0x6c; // uint32_t : 1
		constexpr auto m_bUseAccurateEncroachment = 0x6c; // uint32_t : 1
		constexpr auto m_bUseTargetingEncroachmentActor = 0x6c; // uint32_t : 1
		constexpr auto m_bScaleEncroachmentWithRangeMod = 0x6c; // uint32_t : 1
		constexpr auto m_bPassThroughShield = 0x6c; // uint32_t : 1
		constexpr auto m_bPassThroughDeployWalls = 0x6c; // uint32_t : 1
		constexpr auto m_bIgnoreDeployablesForBlocking = 0x6c; // uint32_t : 1
		constexpr auto m_bAdjustDeployHeightToExtent = 0x6c; // uint32_t : 1
		constexpr auto m_bDeployOnOwnerLocation = 0x6c; // uint32_t : 1
		constexpr auto m_bAdjustToGround = 0x6c; // uint32_t : 1
		constexpr auto m_bSpawnPetOnOwnerLocation = 0x6c; // uint32_t : 1
		constexpr auto m_bCanTriggerCounter = 0x6c; // uint32_t : 1
		constexpr auto m_bEncroachmentFireLOSCheck = 0x6c; // uint32_t : 1
		constexpr auto m_bEncroachmentIgnorePitch = 0x6c; // uint32_t : 1
		constexpr auto m_bEncroachmentDebug = 0x6c; // uint32_t : 1
		constexpr auto m_bApplyThirdPersonReticleAimOffset = 0x6c; // uint32_t : 1
		constexpr auto m_bTreatAmmoAsCharges = 0x6c; // uint32_t : 1
		constexpr auto m_bMaintainBurstTarget = 0x6c; // uint32_t : 1
		constexpr auto m_bCanTargetStealthedTargets = 0x6c; // uint32_t : 1
		constexpr auto m_EffectGroupList = 0x70; // TArray<ObjectProperty>
		constexpr auto m_Properties = 0x80; // TArray<FTgPropertyInstance>
		constexpr auto m_pAmSetup = 0x90; // FPointer
		constexpr auto m_pFireModeSetup = 0x98; // FPointer
		constexpr auto m_nId = 0xa0; // int32_t
		constexpr auto m_nAttackType = 0xa4; // int32_t
		constexpr auto m_nMovementType = 0xa8; // int32_t
		constexpr auto m_nmOffhandAnimationType = 0xac; // FName
		constexpr auto m_nTargetAffectsType = 0xb4; // int32_t
		constexpr auto m_nAllowUseWhileFlags = 0xb8; // int32_t
		constexpr auto m_nDamageType = 0xbc; // int32_t
		constexpr auto m_nArcingJumps = 0xc0; // int32_t
		constexpr auto m_PropertyIndexMap = 0xc4; // FMap_Mirror
		constexpr auto m_fHealthCost = 0x10c; // float
		constexpr auto m_fManaCost = 0x110; // float
		constexpr auto m_fEnergyCost = 0x114; // float
		constexpr auto m_fFireTime = 0x118; // float
		constexpr auto m_fBuildupTime = 0x11c; // float
		constexpr auto m_fFirePreHitDelay = 0x120; // float
		constexpr auto m_fFirePostHitDelay = 0x124; // float
		constexpr auto m_nShotsPerFire = 0x128; // int32_t
		constexpr auto m_nmDamageTypeClass = 0x12c; // FName
		constexpr auto m_DamageTypeClass = 0x134; // UTgDamageType*
		constexpr auto m_nMaxTargetCount = 0x13c; // int32_t
		constexpr auto m_fFireLockTime = 0x140; // float
		constexpr auto m_nAmmoClipSize = 0x144; // int32_t
		constexpr auto m_fAmmoClipPreReloadTime = 0x148; // float
		constexpr auto m_fAmmoClipPostReloadTime = 0x14c; // float
		constexpr auto m_nAmmoCostPerShot = 0x150; // int32_t
		constexpr auto m_nDeviceIdOverrideForDamageReports = 0x154; // int32_t
		constexpr auto m_fEncroachmentRayCastVerticalOffset = 0x158; // float
		constexpr auto m_nTargetingEncroachmentActorOverride = 0x15c; // int32_t
		constexpr auto m_TargetingEncroachmentActor = 0x160; // ObjectProperty
		constexpr auto m_vActorEncroachmentBaseScale = 0x168; // FVector
		constexpr auto m_nmWhileFiringCameraAnim = 0x174; // FName
		constexpr auto m_AdjustToGroundRotationOffset = 0x17c; // FRotator
		constexpr auto m_nCachedFireModeIndex = 0x188; // int32_t
		constexpr auto m_CachedRechargeBonusFlatAdditive = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusFlatSubtractive = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusPercentAdditive = 0x1ac; // TArray<ObjectProperty>
		constexpr auto m_CachedRechargeBonusPercentSubtractive = 0x1bc; // TArray<ObjectProperty>
		constexpr auto m_ModifiedEffects = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_BaseValues = 0x1dc; // TArray<float>
		constexpr auto m_ModifiedEGLifetimes = 0x1ec; // TArray<ObjectProperty>
		constexpr auto m_BaseLifetimes = 0x1fc; // TArray<float>
		constexpr auto m_ModifiedEGAppValues = 0x20c; // TArray<ObjectProperty>
		constexpr auto m_BaseAppValues = 0x21c; // TArray<float>
		constexpr auto m_ModifiedEGMaxStacks = 0x22c; // TArray<ObjectProperty>
		constexpr auto m_BaseMaxStacks = 0x23c; // TArray<float>
		constexpr auto m_CachedTargetList = 0x24c; // TArray<ObjectProperty>
		constexpr auto m_fSelectTargetsExtent = 0x25c; // float
		constexpr auto m_GameplayCurves = 0x260; // ObjectProperty
	}

	namespace n_UTgPlayerInput { // : UPComPlayerInput
		constexpr auto c_TgPC = 0x2f8; // ObjectProperty
		constexpr auto c_bASKeyCapture = 0x300; // uint32_t : 1
		constexpr auto c_bASSpecKeyCapture = 0x300; // uint32_t : 1
		constexpr auto c_bMiniMapPinging = 0x300; // uint32_t : 1
		constexpr auto c_bAutoRun = 0x300; // uint32_t : 1
		constexpr auto GyroAimAssist = 0x300; // uint32_t : 1
		constexpr auto bEnableAimAssist = 0x300; // uint32_t : 1
		constexpr auto GamepadSensitivityX = 0x304; // float
		constexpr auto GamepadSensitivityY = 0x308; // float
		constexpr auto GyroSensitivityX = 0x30c; // float
		constexpr auto GyroSensitivityY = 0x310; // float
		constexpr auto GyroTuningConstant = 0x314; // float
		constexpr auto fScopeSensitivity = 0x318; // float
		constexpr auto m_fMinScopeSensitivityMult = 0x31c; // float
		constexpr auto m_fMaxScopeSensitivityMult = 0x320; // float
		constexpr auto m_fSecondsBetweenMixedInputAllowed = 0x324; // float
		constexpr auto nAimAccelerationSet = 0x328; // int32_t
		constexpr auto nAimAccelerationBoost = 0x32c; // int32_t
		constexpr auto fTurnSpeedAccelAmt = 0x330; // float
		constexpr auto fLookUpSpeedAccelAmt = 0x334; // float
		constexpr auto nAimAccelerationAlgorithm = 0x338; // int32_t
		constexpr auto nInnerDeadZoneSize = 0x33c; // int32_t
		constexpr auto nOuterDeadZoneSize = 0x340; // int32_t
		constexpr auto BestAimAssistTarget = 0x344; // ObjectProperty
		constexpr auto fAimAssistMultiTargetMult = 0x34c; // float
		constexpr auto m_fStacksRequiredForMultiTarget = 0x350; // float
		constexpr auto m_fAimAssistMultiTargetMaxMult = 0x354; // float
		constexpr auto m_AimAssistCurves = 0x358; // ObjectProperty
		constexpr auto m_AimAssistTargets = 0x360; // TArray<FAimAssistTargetWeight>
		constexpr auto TargetWeightVars = 0x370; // FAimAssistTargetWeightVars
		constexpr auto __OnRawInputKey__Delegate = 0x38c; // DelegateProperty
		constexpr auto __OnInputAxis__Delegate = 0x39c; // DelegateProperty
		constexpr auto __OnInputChar__Delegate = 0x3ac; // DelegateProperty
	}

	namespace n_AWeapon { // : AInventory
		constexpr auto AIController = 0x2f4; // ObjectProperty
	}

	namespace n_ATgDeploy_DeathStamp { // : ATgDeployable
		constexpr auto m_PawnVictim = 0x46c; // ObjectProperty
	}

	namespace n_ATgDevice_RuckusInhand { // : ATgDevice_DualWield
		constexpr auto m_fSpinAmount = 0xa18; // float
		constexpr auto m_fCurrentSpinScale = 0xa1c; // float
		constexpr auto m_fStartingSpinRate = 0xa20; // float
		constexpr auto m_fMaxSpinRate = 0xa24; // float
		constexpr auto m_fDurationToMaxSpin = 0xa28; // float
		constexpr auto m_fSpinDownRate = 0xa2c; // float
		constexpr auto m_fSlowestFireDelay = 0xa30; // float
		constexpr auto m_fFiringMoveSpeedModifier = 0xa34; // float
		constexpr auto m_bLeftMouseMovePenalty = 0xa38; // uint32_t : 1
		constexpr auto m_bInFireLoop = 0xa38; // uint32_t : 1
		constexpr auto m_bAltFireSpinning = 0xa38; // uint32_t : 1
		constexpr auto m_bHexaFireSpinning = 0xa38; // uint32_t : 1
		constexpr auto m_fMoveSpeedDecreaseInterpolationDuration = 0xa3c; // float
		constexpr auto m_fMoveSpeedIncreaseInterpolationDuration = 0xa40; // float
		constexpr auto r_fRecyclerPercent = 0xa44; // float
	}

	namespace n_ATgDevice_BombQueenAltfire { // : ATgDevice
		constexpr auto m_pBombQueen = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceForm_WallBangFire { // : UTgDeviceForm
		constexpr auto s_CachedAimInfo = 0x28c; // FSaatiAimInfo
		constexpr auto m_SaatiUltNodes3p = 0x2a4; // TArray<ObjectProperty>
		constexpr auto m_SaatiUltNodes1p = 0x2b4; // TArray<ObjectProperty>
	}

	namespace n_USwfMovie { // : UGFxRawData
		constexpr auto bUsesFontlib = 0xa0; // uint32_t : 1
		constexpr auto bSetSRGBOnImportedTextures = 0xa0; // uint32_t : 1
		constexpr auto bPackTextures = 0xa0; // uint32_t : 1
		constexpr auto bForceSquarePacking = 0xa0; // uint32_t : 1
		constexpr auto bUseStreamableTextures = 0xa0; // uint32_t : 1
		constexpr auto PackTextureSize = 0xa4; // int32_t
		constexpr auto TextureRescale = 0xa8; // FlashTextureRescale
		constexpr auto TextureFormat = 0xac; // FString
		constexpr auto RTTextures = 0xbc; // int32_t
		constexpr auto RTVideoTextures = 0xc0; // int32_t
	}

	namespace n_ATgStealthGrassActor { // : AActor
		constexpr auto c_vBaseOffset = 0x280; // FVector
		constexpr auto c_vGrassOffset = 0x28c; // FVector
		constexpr auto c_fGrassOffsetInterpSpeed = 0x298; // float
		constexpr auto c_bLowerGrass = 0x29c; // uint32_t : 1
		constexpr auto m_bHasLoot = 0x29c; // uint32_t : 1
		constexpr auto r_bCanHealNow = 0x29c; // uint32_t : 1
		constexpr auto c_fLowerGrassAlpha = 0x2a0; // float
		constexpr auto c_GrassMesh = 0x2a4; // ComponentProperty
		constexpr auto c_GroundMesh = 0x2ac; // ComponentProperty
		constexpr auto m_ParticleSystemComponent = 0x2b4; // ComponentProperty
		constexpr auto m_LootParticleSystem = 0x2bc; // ObjectProperty
		constexpr auto m_NoLootParticleSystem = 0x2c4; // ObjectProperty
		constexpr auto m_SpawnedDeployable = 0x2cc; // ObjectProperty
		constexpr auto m_fDeployableSpawnTimer = 0x2d4; // float
		constexpr auto m_fDeployableSpawnChanceOnInit = 0x2d8; // float
		constexpr auto m_fDeployableSpawnChanceOnTimer = 0x2dc; // float
		constexpr auto m_nLootDeployableId = 0x2e0; // int32_t
		constexpr auto m_HealingDevice = 0x2e4; // ObjectProperty
		constexpr auto m_HealingDeviceId = 0x2ec; // int32_t
		constexpr auto m_fDisableHealingTime = 0x2f0; // float
		constexpr auto m_fEnableHealingTime = 0x2f4; // float
		constexpr auto AlwaysRelevantDistanceSquared = 0x2f8; // float
		constexpr auto MaxRelevantDistanceSquared = 0x2fc; // float
	}

	namespace n_UParticleModuleTypeDataAnimTrail { // : UParticleModuleTypeDataBase
		constexpr auto ControlEdgeName = 0x68; // FName
		constexpr auto SheetsPerTrail = 0x70; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x74; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x74; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x74; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x74; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x74; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x74; // uint32_t : 1
		constexpr auto bRenderTangents = 0x74; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x74; // uint32_t : 1
		constexpr auto TilingDistance = 0x78; // float
		constexpr auto DistanceTessellationStepSize = 0x7c; // float
		constexpr auto TangentTessellationScalar = 0x80; // float
	}

	namespace n_UInterpTrackAkRTPC { // : UInterpTrackFloatBase
		constexpr auto Param = 0xb8; // FString
	}

	namespace n_AFogVolumeDensityInfo { // : AInfo
		constexpr auto DensityComponent = 0x280; // ComponentProperty
		constexpr auto AutomaticMeshComponent = 0x288; // ComponentProperty
		constexpr auto bEnabled = 0x290; // uint32_t : 1
	}

	namespace n_ATgDevice_OwlStealth { // : ATgDevice
		constexpr auto m_CachedOwl = 0xa08; // ObjectProperty
		constexpr auto m_RoostCard = 0xa10; // ObjectProperty
		constexpr auto c_bAlreadyConsumedStealthJuice = 0xa18; // uint32_t : 1
	}

	namespace n_UMaterialExpressionCeil { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgAnimNodeJumpLeanOffset { // : UAnimNodeAimOffset
		constexpr auto JumpLeanStrength = 0x16c; // float
		constexpr auto MaxLeanChangeSpeed = 0x170; // float
		constexpr auto bMultiplyByZVelocity = 0x174; // uint32_t : 1
		constexpr auto CachedAimNode = 0x178; // ObjectProperty
		constexpr auto OldAimProfileName = 0x180; // FName
		constexpr auto PreBlendAim = 0x188; // FVector2D
		constexpr auto LeanWeight = 0x190; // float
		constexpr auto LeanWeightTarget = 0x194; // float
		constexpr auto BlendTimeToGo = 0x198; // float
	}

	namespace n_UTgDeviceFire_FlakInHand { // : UTgDeviceFire
		constexpr auto m_BaseKnockback = 0x268; // int32_t
	}

	namespace n_UInterpTrack { // : UObject
		constexpr auto VfTable_FInterpEdInputInterface = 0x60; // FPointer
		constexpr auto CurveEdVTable = 0x68; // FPointer
		constexpr auto SubTracks = 0x70; // TArray<ObjectProperty>
		constexpr auto TrackInstClass = 0x80; // UInterpTrackInst*
		constexpr auto ActiveCondition = 0x88; // ETrackActiveCondition
		constexpr auto TrackTitle = 0x8c; // FString
		constexpr auto bOnePerGroup = 0x9c; // uint32_t : 1
		constexpr auto bDirGroupOnly = 0x9c; // uint32_t : 1
		constexpr auto bDisableTrack = 0x9c; // uint32_t : 1
		constexpr auto bIsAnimControlTrack = 0x9c; // uint32_t : 1
		constexpr auto bSubTrackOnly = 0x9c; // uint32_t : 1
		constexpr auto bVisible = 0x9c; // uint32_t : 1
		constexpr auto bIsSelected = 0x9c; // uint32_t : 1
		constexpr auto bIsRecording = 0x9c; // uint32_t : 1
		constexpr auto bIsCollapsed = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_ToggleWithLockout { // : ATgDevice_Stim
		constexpr auto m_CachedTgP = 0xa08; // ObjectProperty
		constexpr auto m_fCurrentTransitionPct = 0xa10; // float
	}

	namespace n_USeqVar_ObjectVolume { // : USeqVar_Object
		constexpr auto LastUpdateTime = 0xc4; // float
		constexpr auto ContainedObjects = 0xc8; // TArray<ObjectProperty>
		constexpr auto ExcludeClassList = 0xd8; // TArray<UObject*>
		constexpr auto bCollidingOnly = 0xe8; // uint32_t : 1
	}

	namespace n_UParticleSystemComponent { // : UPrimitiveComponent
		constexpr auto Template = 0x24c; // ObjectProperty
		constexpr auto LightEnvironmentClass = 0x254; // UParticleLightEnvironmentComponent*
		constexpr auto LightEnvironmentSharedInstigator = 0x25c; // ObjectProperty
		constexpr auto MaxLightEnvironmentPooledReuses = 0x264; // int32_t
		constexpr auto EmitterInstances = 0x268; // TArray<FPointer>
		constexpr auto SMComponents = 0x278; // TArray<ComponentProperty>
		constexpr auto SMMaterialInterfaces = 0x288; // TArray<ObjectProperty>
		constexpr auto SkelMeshComponents = 0x298; // TArray<ComponentProperty>
		constexpr auto ViewMBInfoArray = 0x2a8; // TArray<FViewParticleEmitterInstanceMotionBlurInfo>
		constexpr auto bAutoActivate = 0x2b8; // uint32_t : 1
		constexpr auto bWasCompleted = 0x2b8; // uint32_t : 1
		constexpr auto bHasDurationElapsed = 0x2b8; // uint32_t : 1
		constexpr auto bSuppressSpawning = 0x2b8; // uint32_t : 1
		constexpr auto bWasDeactivated = 0x2b8; // uint32_t : 1
		constexpr auto bResetOnDetach = 0x2b8; // uint32_t : 1
		constexpr auto bUpdateOnDedicatedServer = 0x2b8; // uint32_t : 1
		constexpr auto bJustAttached = 0x2b8; // uint32_t : 1
		constexpr auto bIsActive = 0x2b8; // uint32_t : 1
		constexpr auto bHasBeenActivated = 0x2b8; // uint32_t : 1
		constexpr auto bWasRecycledSinceLastTick = 0x2b8; // uint32_t : 1
		constexpr auto bWarmingUp = 0x2b8; // uint32_t : 1
		constexpr auto bIsCachedInPool = 0x2b8; // uint32_t : 1
		constexpr auto bOverrideLODMethod = 0x2b8; // uint32_t : 1
		constexpr auto bSkipUpdateDynamicDataDuringTick = 0x2b8; // uint32_t : 1
		constexpr auto bSkipBoundsUpdate = 0x2b8; // uint32_t : 1
		constexpr auto bUpdateComponentInTick = 0x2b8; // uint32_t : 1
		constexpr auto bDeferredBeamUpdate = 0x2b8; // uint32_t : 1
		constexpr auto bForcedInActive = 0x2b8; // uint32_t : 1
		constexpr auto bIsWarmingUp = 0x2b8; // uint32_t : 1
		constexpr auto bIsViewRelevanceDirty = 0x2b8; // uint32_t : 1
		constexpr auto bRecacheViewRelevance = 0x2b8; // uint32_t : 1
		constexpr auto m_EmitBasedOnAnimNotify = 0x2b8; // uint32_t : 1
		constexpr auto bLODUpdatePending = 0x2b8; // uint32_t : 1
		constexpr auto bSkipSpawnCountCheck = 0x2b8; // uint32_t : 1
		constexpr auto m_bRealTimeTicking = 0x2b8; // uint32_t : 1
		constexpr auto bHasSavedScale3D = 0x2b8; // uint32_t : 1
		constexpr auto InstanceParameters = 0x2bc; // TArray<FParticleSysParam>
		constexpr auto OldPosition = 0x2cc; // FVector
		constexpr auto PartSysVelocity = 0x2d8; // FVector
		constexpr auto WarmupTime = 0x2e4; // float
		constexpr auto WarmupTickRate = 0x2e8; // float
		constexpr auto LODLevel = 0x2ec; // int32_t
		constexpr auto SecondsBeforeInactive = 0x2f0; // float
		constexpr auto TimeSinceLastForceUpdateTransform = 0x2f4; // float
		constexpr auto MaxTimeBeforeForceUpdateTransform = 0x2f8; // float
		constexpr auto AccumTickTime = 0x2fc; // float
		constexpr auto LODMethod = 0x300; // ParticleSystemLODMethod
		constexpr auto ReplayState = 0x301; // ParticleReplayState
		constexpr auto CachedViewRelevanceFlags = 0x304; // TArray<FMaterialViewRelevance>
		constexpr auto m_ActiveRemainingTime = 0x314; // float
		constexpr auto m_ParticleChannels = 0x318; // FParticleChannelContainer
		constexpr auto ReplayClips = 0x31c; // TArray<ObjectProperty>
		constexpr auto ReplayClipIDNumber = 0x32c; // int32_t
		constexpr auto ReplayFrameIndex = 0x330; // int32_t
		constexpr auto AccumLODDistanceCheckTime = 0x334; // float
		constexpr auto SpawnEvents = 0x338; // TArray<FParticleEventSpawnData>
		constexpr auto DeathEvents = 0x348; // TArray<FParticleEventDeathData>
		constexpr auto CollisionEvents = 0x358; // TArray<FParticleEventCollideData>
		constexpr auto KismetEvents = 0x368; // TArray<FParticleEventKismetData>
		constexpr auto AttractorCollisionEvents = 0x378; // TArray<FParticleEventAttractorCollideData>
		constexpr auto ReleaseResourcesFence = 0x388; // FPointer
		constexpr auto CustomTimeDilation = 0x390; // float
		constexpr auto EmitterDelay = 0x394; // float
		constexpr auto FOV = 0x398; // float
		constexpr auto SavedScale3D = 0x39c; // FVector
		constexpr auto __OnSystemFinished__Delegate = 0x3a8; // DelegateProperty
		constexpr auto __OnSystemDurationElapsed__Delegate = 0x3b8; // DelegateProperty
	}

	namespace n_UUIComponent_Targeter { // : UUIComponent_Display
		constexpr auto m_Target = 0x124; // ObjectProperty
		constexpr auto m_mcOwningScene = 0x12c; // ObjectProperty
		constexpr auto m_mcParent = 0x134; // ObjectProperty
		constexpr auto m_mcTargeter = 0x13c; // ObjectProperty
		constexpr auto m_mcKey = 0x144; // ObjectProperty
		constexpr auto m_mcPrompt = 0x14c; // ObjectProperty
		constexpr auto m_sKeybind = 0x154; // FString
		constexpr auto m_bVisible = 0x164; // uint32_t : 1
		constexpr auto m_bPrevVisibility = 0x164; // uint32_t : 1
		constexpr auto m_bShowKeybind = 0x164; // uint32_t : 1
		constexpr auto m_bMoveKeybindBelowTarget = 0x164; // uint32_t : 1
		constexpr auto m_bLOSCheck = 0x164; // uint32_t : 1
		constexpr auto m_bCenterTargeter = 0x164; // uint32_t : 1
		constexpr auto m_fBaseTargeterHeight = 0x168; // float
		constexpr auto m_fScaleMultiplier = 0x16c; // float
		constexpr auto m_fMinScale = 0x170; // float
		constexpr auto m_fMaxScale = 0x174; // float
		constexpr auto m_fFadeTime = 0x178; // float
		constexpr auto m_nTargeterFrame = 0x17c; // int32_t
		constexpr auto m_fHeightOffset = 0x180; // float
	}

	namespace n_UPBRuleNodeWindowWall { // : UPBRuleNodeBase
		constexpr auto CellMaxSizeX = 0x70; // float
		constexpr auto CellMaxSizeZ = 0x74; // float
		constexpr auto WindowSizeX = 0x78; // float
		constexpr auto WindowSizeZ = 0x7c; // float
		constexpr auto WindowPosX = 0x80; // float
		constexpr auto WindowPosZ = 0x84; // float
		constexpr auto bScaleWindowWithCell = 0x88; // uint32_t : 1
		constexpr auto YOffset = 0x8c; // float
		constexpr auto Material = 0x90; // ObjectProperty
	}

	namespace n_UMaterialExpressionDivide { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UTgDamageType { // : UDamageType
		constexpr auto m_bImpulseMesh = 0x90; // uint32_t : 1
		constexpr auto m_bDisableRagdoll = 0x90; // uint32_t : 1
		constexpr auto m_bEnableMotors = 0x90; // uint32_t : 1
		constexpr auto m_bShouldRagdollAfterDeathAnim = 0x90; // uint32_t : 1
		constexpr auto m_bCanPlayDeathSpecialFXOnDefaultDeath = 0x90; // uint32_t : 1
		constexpr auto m_bHarvestMaterialParameters = 0x90; // uint32_t : 1
		constexpr auto m_bFreezeAnimsOnDeath = 0x90; // uint32_t : 1
		constexpr auto m_bIgnorePersonalShields = 0x90; // uint32_t : 1
		constexpr auto m_bIsLatent = 0x90; // uint32_t : 1
		constexpr auto m_bIsAOE = 0x90; // uint32_t : 1
		constexpr auto m_bDismountVictim = 0x90; // uint32_t : 1
		constexpr auto m_bPreventHitDirectionNotify = 0x90; // uint32_t : 1
		constexpr auto m_bMinImpulse = 0x94; // float
		constexpr auto m_bMaxImpulse = 0x98; // float
		constexpr auto m_bMinUpKick = 0x9c; // float
		constexpr auto m_bMaxUpKick = 0xa0; // float
		constexpr auto m_nmDeathAnimNames = 0xa4; // TArray<FName>
		constexpr auto m_nmDeathFlailAnimNames = 0xb4; // TArray<FName>
		constexpr auto m_fMinAngularVelocity = 0xc4; // float
		constexpr auto m_fMaxAngularVelocity = 0xc8; // float
		constexpr auto m_nDeathSpecialFXId = 0xcc; // int32_t
		constexpr auto m_nmDeathSpecialFXSocket = 0xd0; // FName
		constexpr auto m_OverrideMaterial = 0xd8; // ObjectProperty
		constexpr auto m_fLifeAfterDeathSeconds = 0xe0; // float
		constexpr auto m_fHideAfterDeathSeconds = 0xe4; // float
		constexpr auto m_nFadeOutSpecialFXId = 0xe8; // int32_t
		constexpr auto ActivateSkelControlListOnDeath = 0xec; // TArray<FName>
		constexpr auto m_TakeHitAkEvent = 0xfc; // ObjectProperty
		constexpr auto m_TakeHeadShotAkEvent = 0x104; // ObjectProperty
		constexpr auto m_LatentDamageType = 0x10c; // UTgDamageType*
		constexpr auto m_LeftCameraShake = 0x114; // ObjectProperty
		constexpr auto m_RightCameraShake = 0x11c; // ObjectProperty
		constexpr auto m_ForwardCameraShake = 0x124; // ObjectProperty
		constexpr auto m_BackwardCameraShake = 0x12c; // ObjectProperty
		constexpr auto m_BackwardRightCameraShake = 0x134; // ObjectProperty
		constexpr auto m_BackwardLeftCameraShake = 0x13c; // ObjectProperty
		constexpr auto m_ForwardRightCameraShake = 0x144; // ObjectProperty
		constexpr auto m_ForwardLeftCameraShake = 0x14c; // ObjectProperty
	}

	namespace n_ATgDevice_BarrierReef { // : ATgDevice_ShellShieldMod
		constexpr auto m_nHitsNeededOnCooldown = 0xa08; // int32_t
	}

	namespace n_ATgPawn_HHGate { // : ATgPawn
		constexpr auto s_bRegistered = 0x2ea0; // uint32_t : 1
	}

	namespace n_ATgDeploy_DreadSerpent { // : ATgDeploy_EffectField
		constexpr auto m_fReCheckProxyTouchHit = 0x4a0; // float
		constexpr auto m_fReCheckProxyTouchHitInterval = 0x4a4; // float
	}

	namespace n_UMaterialExpressionLandscapeLayerBlend { // : UMaterialExpression
		constexpr auto Layers = 0xb0; // TArray<FLayerBlendInput>
		constexpr auto ExpressionGUID = 0xc0; // FGuid
	}

	namespace n_ATgDevice_AzaanDash { // : ATgDevice_Charge
		constexpr auto m_pAzaan = 0xa7c; // ObjectProperty
		constexpr auto m_fWalkableFloorZ = 0xa84; // float
		constexpr auto r_PawnTarget = 0xa88; // ObjectProperty
		constexpr auto m_bWasAboveThreshold = 0xa90; // uint32_t : 1
	}

	namespace n_ATgPawn_Viktor { // : ATgPawn_Character
		constexpr auto r_fFragGrenadeExplodeTime = 0x3164; // float
		constexpr auto r_bFragGrenadeExplodeOnTouch = 0x3168; // uint32_t : 1
		constexpr auto m_fBounceDampingVertMin = 0x316c; // float
		constexpr auto m_fBounceDampingVertMax = 0x3170; // float
		constexpr auto m_fBounceDampingHorizMin = 0x3174; // float
		constexpr auto m_fBounceDampingHorizMax = 0x3178; // float
		constexpr auto r_nGrenadeRefreshSound = 0x317c; // char
		constexpr auto r_nAmmoRefreshSound = 0x317d; // char
		constexpr auto m_CachedHustleDevice = 0x3180; // ObjectProperty
		constexpr auto c_vForced3pAdditionalOffsetADS = 0x3188; // FVector
		constexpr auto m_fUnderheadADSDistanceClampAngle = 0x3194; // float
		constexpr auto m_fUnderheadADSDistanceClampPushIn = 0x3198; // float
		constexpr auto m_fUnderheadADSDistanceClampOvershoot = 0x319c; // float
		constexpr auto m_fOverheadADSDistanceClampAngle = 0x31a0; // float
		constexpr auto m_fOverheadADSDistanceClampPushIn = 0x31a4; // float
		constexpr auto m_fOverheadADSDistanceClampOvershoot = 0x31a8; // float
	}

	namespace n_UTgInventoryObject_Listen_Combo_Ying { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_fCombo1MaxDuration = 0xcc; // float
		constexpr auto m_fCombo1BonusDamagePercent = 0xd0; // float
		constexpr auto m_fCombo2BonusDamage = 0xd4; // float
		constexpr auto m_MarkedTargets = 0xd8; // TArray<ObjectProperty>
		constexpr auto m_fMarkTimes = 0xe8; // TArray<float>
		constexpr auto m_InhandTarget = 0xf8; // ObjectProperty
		constexpr auto m_nInhandHits = 0x100; // int32_t
		constexpr auto m_nCombo1DeviceId = 0x104; // int32_t
	}

	namespace n_ATgDevice_DruidRMB { // : ATgDevice
		constexpr auto m_DelayedImpacts = 0xa08; // TArray<FDelayedImpactInfo>
		constexpr auto m_CachedDruid = 0xa18; // ObjectProperty
		constexpr auto m_fMinMoonJuiceToFire = 0xa20; // float
		constexpr auto m_fFailsafeFireloopTimeout = 0xa24; // float
	}

	namespace n_USeqEvent_AnalogInput { // : USequenceEvent
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_ATgDevice_CommanderPassive { // : ATgDevice
		constexpr auto VfTable_ITgCallbackInterface = 0xa08; // FPointer
		constexpr auto m_CallbackContainer = 0xa10; // ObjectProperty
	}

	namespace n_ATgDevice_CommanderUltFire { // : ATgDevice
		constexpr auto m_CommanderUltDevice = 0xa08; // ObjectProperty
		constexpr auto m_fTraceDownDistance = 0xa10; // float
	}

	namespace n_UTgAIBehaviorAction_MoveToShield { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // uint32_t : 1
	}

	namespace n_UUIHudMenu { // : UTgGfxScene
		constexpr auto m_bExitWarningPopup = 0x1ec; // uint32_t : 1
		constexpr auto m_mcFrame = 0x1f0; // ObjectProperty
		constexpr auto m_mcTitle = 0x1f8; // ObjectProperty
		constexpr auto m_mcBlocker = 0x200; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x208; // ObjectProperty
		constexpr auto m_mcButton = 0x210; // ObjectProperty [0x8]
		constexpr auto m_grButton = 0x250; // ObjectProperty
		constexpr auto m_mcExitWarningPopup = 0x258; // ObjectProperty
		constexpr auto m_mcExitWarningPopupTitle = 0x260; // ObjectProperty
		constexpr auto m_mcExitWarningPopupAccept = 0x268; // ObjectProperty
		constexpr auto m_mcExitWarningPopupCancel = 0x270; // ObjectProperty
		constexpr auto m_mcExitWarningPopupBlocker = 0x278; // ObjectProperty
		constexpr auto m_mcExitWarningPopupSubtitle = 0x280; // ObjectProperty
		constexpr auto m_grExitWarningPopup = 0x288; // ObjectProperty
		constexpr auto m_eOptions = 0x290; // TArray<int32_t>
	}

	namespace n_ATgWeaponMeshActor_ADS { // : ATgWeaponMeshActor
		constexpr auto m_bPlayingADSFX = 0x450; // uint32_t : 1
	}

	namespace n_UUIComponent_LeagueTierEntry { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcLegendIcons = 0x13c; // TArray<ObjectProperty>
	}

	namespace n_UObjectReferencer { // : UObject
		constexpr auto ReferencedObjects = 0x60; // TArray<ObjectProperty>
		constexpr auto bShouldFlatten = 0x70; // uint32_t : 1
	}

	namespace n_UUIComponent_HnHEventQuests { // : UUIComponent_Display
		constexpr auto m_pQuests = 0x124; // ObjectProperty
		constexpr auto m_pPlayPanel = 0x12c; // ObjectProperty
	}

	namespace n_UMcpUserCloudFileDownload { // : UMcpServiceBase
		constexpr auto EnumerateCloudFilesUrl = 0x78; // FString
		constexpr auto ReadCloudFileUrl = 0x88; // FString
		constexpr auto WriteCloudFileUrl = 0x98; // FString
		constexpr auto DeleteCloudFileUrl = 0xa8; // FString
		constexpr auto UserCloudFileRequests = 0xb8; // TArray<FMcpUserCloudFilesEntry>
		constexpr auto EnumerateUserFilesCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto ReadUserFileCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto WriteUserFileCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto DeleteUserFileCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto __OnEnumerateUserFilesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnReadUserFileComplete__Delegate = 0x118; // DelegateProperty
		constexpr auto __OnWriteUserFileComplete__Delegate = 0x128; // DelegateProperty
		constexpr auto __OnDeleteUserFileComplete__Delegate = 0x138; // DelegateProperty
	}

	namespace n_ATgGame_SinglePointCaptureAndHold { // : ATgGame_PointCapture
		constexpr auto m_nCurrentActiveCapturePointIndex = 0x79c; // int32_t
		constexpr auto m_nNumTicketsForCapturingPoint = 0x7a0; // int32_t
		constexpr auto m_nNumTicketsForHoldingPoint = 0x7a4; // int32_t
		constexpr auto m_fNewPointTime = 0x7a8; // float
		constexpr auto m_fDefendingTeamRespawnTime = 0x7ac; // float
	}

	namespace n_UUIComponent_CommendationHistoryPanel { // : UUIComponent_Display
		constexpr auto m_mcTeamworkCountTF = 0x124; // ObjectProperty
		constexpr auto m_mcLeadershipCountTF = 0x12c; // ObjectProperty
		constexpr auto m_mcSkillCountTF = 0x134; // ObjectProperty
		constexpr auto m_mcCommendationRewardsButton = 0x13c; // ObjectProperty
		constexpr auto m_ProgressBar = 0x144; // ObjectProperty
	}

	namespace n_UUIScene_UIPopupChampionLevelUp { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_mcPurchaseAmount = 0x1d4; // ObjectProperty
		constexpr auto m_mcLevelTF = 0x1dc; // ObjectProperty
		constexpr auto m_mcCancelPrompt = 0x1e4; // ObjectProperty
		constexpr auto m_mcHoldPrompt = 0x1ec; // ObjectProperty
		constexpr auto m_mcWait = 0x1f4; // ObjectProperty
		constexpr auto m_pSpinner = 0x1fc; // ObjectProperty
		constexpr auto m_pControllerPrice = 0x204; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x20c; // ObjectProperty
		constexpr auto m_pHoldPrompt = 0x214; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x21c; // ObjectProperty
		constexpr auto m_pRightArrow = 0x224; // ObjectProperty
		constexpr auto m_pCancelButton = 0x22c; // ObjectProperty
		constexpr auto m_dwChampId = 0x234; // Fdword
		constexpr auto m_dwChampXP = 0x238; // Fdword
		constexpr auto m_dwChampLevel = 0x23c; // Fdword
		constexpr auto m_dwPurchaseLevel = 0x240; // Fdword
		constexpr auto m_pLTI = 0x244; // ObjectProperty
		constexpr auto m_pPurchasePrice = 0x24c; // ObjectProperty
		constexpr auto m_dwPurchaseQuantity = 0x254; // Fdword
	}

	namespace n_UTgGameplayCurvesSet_Simple { // : UTgGameplayCurvesSet
		constexpr auto PrimaryCurve = 0x64; // FRawDistributionFloat
		constexpr auto PrimaryCurveTabName = 0x88; // FName
		constexpr auto PrimaryCurveName = 0x90; // FName
	}

	namespace n_UParticleModuleAcceleration { // : UParticleModuleAccelerationBase
		constexpr auto Acceleration = 0x6c; // FRawDistributionVector
		constexpr auto bApplyOwnerScale = 0x90; // uint32_t : 1
	}

	namespace n_USplineComponent { // : UPrimitiveComponent
		constexpr auto SplineInfo = 0x24c; // FInterpCurveVector
		constexpr auto SplineCurviness = 0x260; // float
		constexpr auto SplineColor = 0x264; // FColor
		constexpr auto SplineDrawRes = 0x268; // float
		constexpr auto SplineArrowSize = 0x26c; // float
		constexpr auto bSplineDisabled = 0x270; // uint32_t : 1
		constexpr auto SplineReparamTable = 0x274; // FInterpCurveFloat
	}

	namespace n_UUIComponent_SimulMediaRewardInfo { // : UUIComponent_Display
		constexpr auto m_mcTF0 = 0x124; // ObjectProperty
		constexpr auto m_mcTF1 = 0x12c; // ObjectProperty
		constexpr auto m_mcTF2 = 0x134; // ObjectProperty
		constexpr auto m_mcTF3 = 0x13c; // ObjectProperty
		constexpr auto m_mcRewardIcon = 0x144; // ObjectProperty
		constexpr auto m_mcRewardIcon1 = 0x14c; // ObjectProperty
		constexpr auto m_CollectionRewardTracker = 0x154; // ObjectProperty
		constexpr auto m_CollectionRewardReceived = 0x15c; // ObjectProperty
	}

	namespace n_UOnlinePlaylistProvider { // : UUIResourceDataProvider
		constexpr auto PlaylistId = 0x94; // int32_t
		constexpr auto PlaylistGameTypeNames = 0x98; // TArray<FName>
		constexpr auto DisplayName = 0xa8; // FString
		constexpr auto Priority = 0xb8; // int32_t
	}

	namespace n_UTgSeqAct_SendPlayerTrackingEvent { // : USequenceAction
		constexpr auto m_nEventId = 0x108; // int32_t
		constexpr auto m_nSubEventID = 0x10c; // int32_t
		constexpr auto m_ReferenceName = 0x110; // FString
		constexpr auto m_nReferenceValue = 0x120; // int32_t
	}

	namespace n_UUIComponent_ItemPreviewStack { // : UUIComponent_Display
		constexpr auto m_nNameTextScalingType = 0x124; // int32_t
		constexpr auto m_bHas3dPreview = 0x128; // uint32_t : 1
		constexpr auto m_bTryUpdate3dPreview = 0x128; // uint32_t : 1
		constexpr auto m_bPlayVoicePacks = 0x128; // uint32_t : 1
		constexpr auto m_bShowItemNameForTitlesOnly = 0x128; // uint32_t : 1
		constexpr auto m_mcItemName = 0x12c; // ObjectProperty
		constexpr auto m_mcItemDesc = 0x134; // ObjectProperty
		constexpr auto m_mcItemRarity = 0x13c; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x144; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x14c; // ObjectProperty
		constexpr auto m_mcDeathCardOneLiner = 0x154; // TArray<ObjectProperty>
		constexpr auto m_mcItemAvatarContainer = 0x164; // ObjectProperty
		constexpr auto m_pItemAvatar = 0x16c; // ObjectProperty
		constexpr auto m_pItemIcon = 0x174; // ObjectProperty
	}

	namespace n_UUIHudTip { // : UTgGfxScene
		constexpr auto m_nHudTipId = 0x1ec; // int32_t
		constexpr auto m_nHudSpecialTipId = 0x1f0; // int32_t
		constexpr auto m_nWorldTipId = 0x1f4; // int32_t
		constexpr auto m_fPromptAnimTimer = 0x1f8; // float
		constexpr auto m_mcHudTip = 0x1fc; // ObjectProperty
		constexpr auto m_mcHudTipIcon = 0x204; // ObjectProperty
		constexpr auto m_mcHudTipName = 0x20c; // ObjectProperty
		constexpr auto m_mcHudTipDesc = 0x214; // ObjectProperty
		constexpr auto m_mcHudSpecialTip = 0x21c; // ObjectProperty
		constexpr auto m_mcHudSpecialTipText = 0x224; // ObjectProperty
		constexpr auto m_mcHudSpecialTipAnimA = 0x22c; // ObjectProperty
		constexpr auto m_mcHudSpecialTipAnimB = 0x234; // ObjectProperty
		constexpr auto m_mcHudSpecialTipFrame = 0x23c; // ObjectProperty
		constexpr auto m_mcHudSpecialTipPrompt = 0x244; // ObjectProperty
		constexpr auto m_mcWorldTip = 0x24c; // ObjectProperty
		constexpr auto m_mcWorldTipIcon = 0x254; // ObjectProperty
		constexpr auto m_mcWorldTipName = 0x25c; // ObjectProperty
		constexpr auto m_mcWorldTipDesc = 0x264; // ObjectProperty
	}

	namespace n_APortalTeleporter { // : ASceneCapturePortalActor
		constexpr auto SisterPortal = 0x298; // ObjectProperty
		constexpr auto TextureResolutionX = 0x2a0; // int32_t
		constexpr auto TextureResolutionY = 0x2a4; // int32_t
		constexpr auto MyMarker = 0x2a8; // ObjectProperty
		constexpr auto bMovablePortal = 0x2b0; // uint32_t : 1
		constexpr auto bAlwaysTeleportNonPawns = 0x2b0; // uint32_t : 1
		constexpr auto bCanTeleportVehicles = 0x2b0; // uint32_t : 1
	}

	namespace n_UUIDataProvider_OnlinePartyChatList { // : UUIDataProvider_OnlinePlayerDataBase
		constexpr auto PartyMembersList = 0x74; // TArray<FOnlinePartyMember>
		constexpr auto NatTypes = 0x84; // TArray<FString>
		constexpr auto NickNameCol = 0x94; // FString
		constexpr auto NatTypeCol = 0xa4; // FString
		constexpr auto IsLocalCol = 0xb4; // FString
		constexpr auto IsInPartyVoiceCol = 0xc4; // FString
		constexpr auto IsTalkingCol = 0xd4; // FString
		constexpr auto IsInGameSessionCol = 0xe4; // FString
		constexpr auto IsPlayingThisGameCol = 0xf4; // FString
	}

	namespace n_UMcpClashMobManager { // : UMcpClashMobBase
		constexpr auto ChallengeListUrl = 0xe8; // FString
		constexpr auto ChallengeStatusUrl = 0xf8; // FString
		constexpr auto ChallengeMultiStatusUrl = 0x108; // FString
		constexpr auto AcceptChallengeUrl = 0x118; // FString
		constexpr auto UpdateChallengeProgressUrl = 0x128; // FString
		constexpr auto UpdateRewardProgressUrl = 0x138; // FString
		constexpr auto HTTPRequestChallengeList = 0x148; // ObjectProperty
		constexpr auto ChallengeUserRequests = 0x150; // TArray<FMcpChallengeUserRequest>
		constexpr auto ChallengeEvents = 0x160; // TArray<FMcpClashMobChallengeEvent>
		constexpr auto ChallengeUserStatus = 0x170; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto TempChallengeUserStatus = 0x180; // FMcpClashMobChallengeUserStatus
		constexpr auto TempChallengeUserStatusArray = 0x200; // TArray<FMcpClashMobChallengeUserStatus>
		constexpr auto FileCache = 0x210; // TScriptInterface<Class>
		constexpr auto FileDownloader = 0x220; // ObjectProperty
	}

	namespace n_UUIComponent_ItemPurchaseButton { // : UUIComponent_Display
		constexpr auto m_pCurrencies = 0x124; // ObjectProperty
		constexpr auto m_pButtonCurrency = 0x12c; // ObjectProperty
		constexpr auto m_pRealMoneyCurrency = 0x134; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x13c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x144; // ObjectProperty
		constexpr auto bShowPrice = 0x14c; // uint32_t : 1
	}

	namespace n_UPBRuleNodeTransform { // : UPBRuleNodeBase
		constexpr auto Translation = 0x70; // ComponentProperty
		constexpr auto Rotation = 0x78; // ComponentProperty
		constexpr auto Scale = 0x80; // ComponentProperty
	}

	namespace n_UParticleModuleLocationPrimitiveSphere { // : UParticleModuleLocationPrimitiveBase
		constexpr auto StartRadius = 0xb4; // FRawDistributionFloat
	}

	namespace n_UTgControlModule_Spectator { // : UTgControlModule
		constexpr auto RotationLimit = 0x6c; // float
		constexpr auto SpectatorStallZ = 0x70; // float
		constexpr auto SpectatorMinStallZ = 0x74; // float
	}

	namespace n_ATgPawn_Darklord { // : ATgPawn_Character
		constexpr auto m_bUseWhirlZoom = 0x3164; // uint32_t : 1
	}

	namespace n_ATgDevice_ShellShield { // : ATgDevice
		constexpr auto r_bHasHalfshell = 0xa08; // uint32_t : 1
		constexpr auto c_bHalfShellFXOn = 0xa08; // uint32_t : 1
	}

	namespace n_ATgDevice_DredgeF { // : ATgDevice
		constexpr auto r_Portals = 0xa08; // ObjectProperty [0x2]
		constexpr auto r_nNextDeployable = 0xa18; // int32_t
		constexpr auto s_vTeleportTarget = 0xa1c; // FVector
		constexpr auto m_CachedTgP = 0xa28; // ObjectProperty
	}

	namespace n_UNavigationHandle { // : UObject
		constexpr auto AnchorPylon = 0x60; // ObjectProperty
		constexpr auto AnchorPoly = 0x68; // FPointer
		constexpr auto PathCache = 0x70; // FPathStore
		constexpr auto BestUnfinishedPathPoint = 0x80; // FPointer
		constexpr auto CurrentEdge = 0x88; // FPointer
		constexpr auto SubGoal_DestPoly = 0x90; // FPointer
		constexpr auto FinalDestination = 0x98; // FBasedPosition
		constexpr auto FinalDestinationActor = 0xd0; // ObjectProperty
		constexpr auto bSkipRouteCacheUpdates = 0xd8; // uint32_t : 1
		constexpr auto bUseORforEvaluateGoal = 0xd8; // uint32_t : 1
		constexpr auto bDebugConstraintsAndGoalEvals = 0xd8; // uint32_t : 1
		constexpr auto bUltraVerbosePathDebugging = 0xd8; // uint32_t : 1
		constexpr auto bVisualPathDebugging = 0xd8; // uint32_t : 1
		constexpr auto bDebug_Breadcrumbs = 0xd8; // uint32_t : 1
		constexpr auto PathConstraintList = 0xdc; // ObjectProperty
		constexpr auto PathGoalList = 0xe4; // ObjectProperty
		constexpr auto CachedPathParams = 0xec; // FNavMeshPathParams
		constexpr auto LastPathError = 0x124; // EPathFindingError
		constexpr auto LastPathFailTime = 0x128; // float
		constexpr auto Breadcrumbs = 0x12c; // FVector [0xa]
		constexpr auto BreadCrumbMostRecentIdx = 0x1a4; // int32_t
		constexpr auto BreadCrumbDistanceInterval = 0x1a8; // float
		constexpr auto m_fLastPathLength = 0x1ac; // float
	}

	namespace n_UTgMarkComponent { // : UActorComponent
		constexpr auto s_MarkList = 0x88; // TArray<FTargetMark>
		constexpr auto s_MarkEffectGroup = 0x98; // TArray<ObjectProperty>
		constexpr auto m_nHostItemId = 0xa8; // int32_t
		constexpr auto m_bStackEffects = 0xac; // uint32_t : 1
		constexpr auto m_bRemoveMarksOnDeath = 0xac; // uint32_t : 1
		constexpr auto m_fMarkDuration = 0xb0; // float
		constexpr auto m_nMaxMarks = 0xb4; // int32_t
		constexpr auto m_nPhysicalType = 0xb8; // int32_t
	}

	namespace n_UScriptedTexture { // : UTextureRenderTarget2D
		constexpr auto bNeedsUpdate = 0x128; // uint32_t : 1
		constexpr auto bSkipNextClear = 0x128; // uint32_t : 1
		constexpr auto __Render__Delegate = 0x12c; // DelegateProperty
	}

	namespace n_UTgDeviceForm_SpinnerWhileFiring { // : UTgDeviceForm
		constexpr auto m_SpinnerName = 0x28c; // FName
		constexpr auto m_bShouldSpinOnFire = 0x294; // uint32_t : 1
		constexpr auto m_SpinnerSkelControls1p = 0x298; // TArray<ObjectProperty>
		constexpr auto m_SpinnerSkelControls3p = 0x2a8; // TArray<ObjectProperty>
	}

	namespace n_UTgAIBehaviorCondition { // : UTgAIBehaviorNode
		constexpr auto ComparisonOperator = 0x94; // EBehaviorComparison
	}

	namespace n_UTgAchievement_TravelDistanceChampion { // : UTgAchievement
		constexpr auto m_fThrowAwayDistance = 0x94; // float
		constexpr auto m_fAccumulationDuration = 0x98; // float
		constexpr auto m_vLastPosition = 0x9c; // FVector
		constexpr auto m_bStarted = 0xa8; // uint32_t : 1
		constexpr auto m_fAccumulatedTravelDistance = 0xac; // float
		constexpr auto m_fAccumulationTimer = 0xb0; // float
	}

	namespace n_UTgGameplayCurvesSet_AimAcceleration { // : UTgGameplayCurvesSet
		constexpr auto AimAccelerationCurves = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_PortraitBorder { // : UUIComponent_Display
		constexpr auto m_mcFrame = 0x124; // ObjectProperty
		constexpr auto m_mcLock = 0x12c; // ObjectProperty
		constexpr auto m_mcEquippedCheckmark = 0x134; // ObjectProperty
	}

	namespace n_USeqAct_Switch { // : USequenceAction
		constexpr auto LinkCount = 0x108; // int32_t
		constexpr auto IncrementAmount = 0x10c; // int32_t
		constexpr auto bLooping = 0x110; // uint32_t : 1
		constexpr auto bAutoDisableLinks = 0x110; // uint32_t : 1
		constexpr auto Indices = 0x114; // TArray<int32_t>
	}

	namespace n_USplineMeshComponent { // : UStaticMeshComponent
		constexpr auto SplineParams = 0x310; // FSplineMeshParams
		constexpr auto SplineXDir = 0x368; // FVector
		constexpr auto bSmoothInterpRollScale = 0x374; // uint32_t : 1
	}

	namespace n_ATgPawn_SiegeEngine_Payload { // : ATgPawn_Juggernaut
		constexpr auto s_fTotalSplineLength = 0x3060; // float
		constexpr auto s_fPreviousSplineLength = 0x3064; // float
		constexpr auto r_bEnable = 0x3068; // uint32_t : 1
		constexpr auto m_bRequireLineOfSightForNearby = 0x3068; // uint32_t : 1
		constexpr auto m_bShouldAccelerateLOSChecks = 0x3068; // uint32_t : 1
		constexpr auto r_bMovingBackwards = 0x3068; // uint32_t : 1
		constexpr auto r_bCanAutoPushForward = 0x3068; // uint32_t : 1
		constexpr auto m_fBaseSpeedScale = 0x306c; // float
		constexpr auto m_fNearbyProximityDistance = 0x3070; // float
		constexpr auto m_NearbyCollisionProxy = 0x3074; // ObjectProperty
		constexpr auto m_TouchingPlayers = 0x307c; // TArray<ObjectProperty>
		constexpr auto m_VisiblePlayers = 0x308c; // TArray<ObjectProperty>
		constexpr auto m_fSpeedScaleIncreasePerFriendly = 0x309c; // float
		constexpr auto m_fLineOfSightUpdatePeriod = 0x30a0; // float
		constexpr auto m_fLineOfSightUpdatePeriodAccelerated = 0x30a4; // float
		constexpr auto m_fNextLineOfSightUpdateTime = 0x30a8; // float
		constexpr auto s_fTimeUntilMoveBackwards = 0x30ac; // float
		constexpr auto m_fMoveBackSpeedScale = 0x30b0; // float
		constexpr auto r_eMoveWithoutAllies = 0x30b4; // EAutoMovePayload
		constexpr auto m_eControlState = 0x30b5; // EPayloadControlState
		constexpr auto r_nFriends = 0x30b6; // char
		constexpr auto r_nEnemies = 0x30b7; // char
		constexpr auto m_fAutoPushForwardDelay = 0x30b8; // float
		constexpr auto r_fAutoPushForwardSpeedScale = 0x30bc; // float
		constexpr auto m_fStopAutoPushDelay = 0x30c0; // float
	}

	namespace n_ATgAbyssalEchoSpawnPoint { // : AActor
		constexpr auto m_nTaskForceId = 0x280; // int32_t
	}

	namespace n_UPComUIManagerBase { // : UObject
		constexpr auto m_bDebugDraw = 0x60; // uint32_t : 1
		constexpr auto m_bLocalLoad = 0x60; // uint32_t : 1
		constexpr auto m_cachedImages = 0x64; // TArray<FManagerImage>
		constexpr auto m_strJson = 0x74; // FString
	}

	namespace n_UParticleModuleBeamTarget { // : UParticleModuleBeamBase
		constexpr auto TargetMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto TargetTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto TargetName = 0x6c; // FName
		constexpr auto TargetSocketName = 0x74; // FName
		constexpr auto Target = 0x7c; // FRawDistributionVector
		constexpr auto bTargetAbsolute = 0xa0; // uint32_t : 1
		constexpr auto bLockTarget = 0xa0; // uint32_t : 1
		constexpr auto bLockTargetTangent = 0xa0; // uint32_t : 1
		constexpr auto bLockTargetStength = 0xa0; // uint32_t : 1
		constexpr auto TargetTangent = 0xa4; // FRawDistributionVector
		constexpr auto TargetStrength = 0xc8; // FRawDistributionFloat
		constexpr auto LockRadius = 0xec; // float
	}

	namespace n_ATgCTFFlagBase { // : AActor
		constexpr auto m_nDefenderTaskForce = 0x280; // int32_t
		constexpr auto m_SpawnedFlag = 0x284; // ObjectProperty
		constexpr auto m_CTFGame = 0x28c; // ObjectProperty
	}

	namespace n_UUIComponent_StreetStyleEventRewards { // : UUIComponent_Display
		constexpr auto m_mcRewardTrack = 0x124; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x12c; // ObjectProperty
		constexpr auto m_pRewardItems = 0x134; // ObjectProperty
	}

	namespace n_UUIComponent_ChampionSimple { // : UUIComponent_Display
		constexpr auto m_mcText = 0x124; // ObjectProperty
		constexpr auto m_mcChampionIconWrapper = 0x12c; // ObjectProperty
		constexpr auto m_mcIconImage = 0x134; // ObjectProperty
	}

	namespace n_AHavokNavMeshActor { // : AActor
		constexpr auto bNavMeshLoaded = 0x280; // uint32_t : 1
		constexpr auto DrawTraversalAnalysis = 0x280; // uint32_t : 1
		constexpr auto DrawNavMeshEdges = 0x280; // uint32_t : 1
		constexpr auto DrawNavMeshUserEdges = 0x280; // uint32_t : 1
		constexpr auto DrawNavMeshFaces = 0x280; // uint32_t : 1
		constexpr auto DrawCluster = 0x280; // uint32_t : 1
		constexpr auto DrawFaceToClusterLines = 0x280; // uint32_t : 1
		constexpr auto FixupOverlappingTriangles = 0x280; // uint32_t : 1
		constexpr auto IncludeUserEdgesInClusters = 0x280; // uint32_t : 1
		constexpr auto ShrinkNavMeshByCharacterWidth = 0x280; // uint32_t : 1
		constexpr auto UseSimplification = 0x280; // uint32_t : 1
		constexpr auto PreserveVerticalBorderRegions = 0x280; // uint32_t : 1
		constexpr auto BorderPreservationTolerance = 0x280; // uint32_t : 1
		constexpr auto bAnalyzeDropDowns = 0x280; // uint32_t : 1
		constexpr auto bAnalyzeJumps = 0x280; // uint32_t : 1
		constexpr auto EditorSprite = 0x284; // ComponentProperty
		constexpr auto RenderingComponent = 0x28c; // ComponentProperty
		constexpr auto NavMeshData = 0x294; // FUntypedBulkData_Mirror
		constexpr auto HavokWorld = 0x2d4; // FPointer
		constexpr auto HavokGrid = 0x2dc; // ObjectProperty
		constexpr auto Version = 0x2e4; // EHavokVersion
		constexpr auto DrawClusterOffset = 0x2e8; // FVector
		constexpr auto SingleCarverAABBMin = 0x2f4; // FVector
		constexpr auto SingleCarverAABBMax = 0x300; // FVector
		constexpr auto MaxBorderDistanceError = 0x30c; // float
		constexpr auto MaxPartitionHeightError = 0x310; // float
		constexpr auto MinRegionArea = 0x314; // float
		constexpr auto MinDistanceToSeed = 0x318; // float
		constexpr auto MaxWalkableSlope = 0x31c; // float
		constexpr auto EntityHalfHeight = 0x320; // float
		constexpr auto StartingHeightOffset = 0x324; // float
		constexpr auto MaxStepHeight = 0x328; // float
		constexpr auto MaxPolyHeight = 0x32c; // float
		constexpr auto HeightMergeThreshold = 0x330; // float
		constexpr auto MinRadius = 0x334; // float
		constexpr auto MaxRadius = 0x338; // float
		constexpr auto MaxDropHeight = 0x33c; // float
		constexpr auto MaxUnderhang = 0x340; // float
		constexpr auto DropDownCost = 0x344; // float
		constexpr auto MaxJumpHeight = 0x348; // float
		constexpr auto StandardJumpHeight = 0x34c; // float
		constexpr auto StandardJumpDistance = 0x350; // float
		constexpr auto JumpCost = 0x354; // float
		constexpr auto MinTraversalEdgeLength = 0x358; // float
		constexpr auto DegenerateWidthThreshold = 0x35c; // float
		constexpr auto MaxConcaveBorderSimplifyArea = 0x360; // float
		constexpr auto RaiseEdgeHeightLimit = 0x364; // float
	}

	namespace n_UUIScene_UIHudTiberius { // : UUIScene
		constexpr auto m_bViewTargetTiberius = 0x1cc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1cc; // uint32_t : 1
		constexpr auto m_nNumUltCharges = 0x1d0; // int32_t
		constexpr auto m_nNumUltChargesMax = 0x1d4; // int32_t
		constexpr auto m_pDataActive = 0x1d8; // ObjectProperty
		constexpr auto m_pDataInactive = 0x1e0; // ObjectProperty
		constexpr auto m_pUltCharges = 0x1e8; // ObjectProperty
		constexpr auto m_CachedTiberius = 0x1f0; // ObjectProperty
	}

	namespace n_ATgPawn_Ying { // : ATgPawn_Character
		constexpr auto r_InhandTarget = 0x3164; // ObjectProperty
		constexpr auto r_InhandHitOffset = 0x316c; // FVector
		constexpr auto m_TeleportTarget = 0x3178; // ObjectProperty
		constexpr auto m_bRetrievedIllusionListThisTick = 0x3180; // uint32_t : 1
		constexpr auto m_bHasShatterableIllusionsThisTick = 0x3180; // uint32_t : 1
		constexpr auto r_bHasCompensate = 0x3180; // uint32_t : 1
		constexpr auto m_bPulledTargetFromList = 0x3180; // uint32_t : 1
		constexpr auto m_ActiveIllusions = 0x3184; // TArray<TScriptInterface<Class>>
		constexpr auto m_fFrictionMultiplier = 0x3194; // float
		constexpr auto m_fGravityMultiplier = 0x3198; // float
		constexpr auto m_fMaxFallSpeed = 0x319c; // float
	}

	namespace n_USeqAct_SetInt { // : USeqAct_SetSequenceVariable
		constexpr auto Target = 0x108; // int32_t
		constexpr auto Value = 0x10c; // TArray<int32_t>
	}

	namespace n_UNetConnection { // : UPlayer
		constexpr auto Children = 0xb0d0; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_MultiplyInt { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UUIWorldOverlay { // : UTgGfxScene
		constexpr auto ShowAllTeamAsParty = 0x1ec; // uint32_t : 1
		constexpr auto m_bDamageReturnOnScaleIn = 0x1ec; // uint32_t : 1
		constexpr auto m_bBringToFrontProcessed = 0x1ec; // uint32_t : 1
		constexpr auto m_bSpectatorShowPlayerIcons = 0x1ec; // uint32_t : 1
		constexpr auto m_nDepth = 0x1f0; // int32_t
		constexpr auto m_nCritCount = 0x1f4; // int32_t
		constexpr auto m_nLastValue = 0x1f8; // int32_t
		constexpr auto m_nLastTargetId = 0x1fc; // int32_t
		constexpr auto m_nDamageNumberType = 0x200; // int32_t
		constexpr auto m_nMaxDamageTicksPerDevice = 0x204; // int32_t
		constexpr auto m_eLastTargetType = 0x208; // char
		constexpr auto m_fDelta = 0x20c; // float
		constexpr auto m_fInterp = 0x210; // float
		constexpr auto m_fCritScaleInDuration = 0x214; // float
		constexpr auto m_fCritScaleMin = 0x218; // float
		constexpr auto m_fCritScaleMax = 0x21c; // float
		constexpr auto m_fCritMaxWorldOffset = 0x220; // float
		constexpr auto m_fCritMaxInitialSpeed = 0x224; // float
		constexpr auto m_fCritGravityCoeff = 0x228; // float
		constexpr auto m_fCritVerticalOffset = 0x22c; // float
		constexpr auto m_fCritTimer = 0x230; // float
		constexpr auto m_fDamageScaleInDuration = 0x234; // float
		constexpr auto m_fDamageSustainDuration = 0x238; // float
		constexpr auto m_fDamageInitialSpeedRandomness = 0x23c; // float
		constexpr auto m_fDamageScaleMin = 0x240; // float
		constexpr auto m_fDamageScaleMax = 0x244; // float
		constexpr auto m_fDamageMaxWorldOffset = 0x248; // float
		constexpr auto m_fDamageWorldOffsetConeAngle = 0x24c; // float
		constexpr auto m_fDamageMaxInitialSpeed = 0x250; // float
		constexpr auto m_fDamageGravityCoeff = 0x254; // float
		constexpr auto m_fDamageVerticalOffset = 0x258; // float
		constexpr auto m_fDamageTimer = 0x25c; // float
		constexpr auto m_fHealingSpeed = 0x260; // float
		constexpr auto m_fHealingBloom = 0x264; // float
		constexpr auto m_fHealingTimer = 0x268; // float
		constexpr auto m_fResolutionModX = 0x26c; // float
		constexpr auto m_fResolutionModY = 0x270; // float
		constexpr auto m_fDamageNumbersOffsetScale = 0x274; // float
		constexpr auto m_PooledCritData = 0x278; // TArray<FUIPooledOverlayData>
		constexpr auto m_PooledDamageData = 0x288; // TArray<FUIPooledOverlayData>
		constexpr auto m_PooledHealingData = 0x298; // TArray<FUIPooledOverlayData>
		constexpr auto m_CritData = 0x2a8; // TArray<FOverlayData>
		constexpr auto m_DamageData = 0x2b8; // TArray<FOverlayData>
		constexpr auto m_HealingData = 0x2c8; // TArray<FOverlayData>
		constexpr auto m_PlayerOverlays = 0x2d8; // TArray<FUIPlayerOverlay>
		constexpr auto m_DeployableOverlays = 0x2e8; // TArray<FUIDeployableOverlay>
		constexpr auto m_DeployableOverlayPool = 0x2f8; // TArray<FUIDeployableOverlay>
		constexpr auto m_nActiveDamageNumbers = 0x308; // TMap<None, None>
		constexpr auto m_QueuedDamageNumbers = 0x350; // TArray<FQueuedDamageNumber>
	}

	namespace n_UUIComponent_MatchLobbyTeamTip { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcClassIconFlash = 0x134; // ObjectProperty
	}

	namespace n_UMcpServiceBase { // : UObject
		constexpr auto McpConfigClassName = 0x60; // FString
		constexpr auto McpConfig = 0x70; // ObjectProperty
	}

	namespace n_UTgGameplayCurvesSet_AimAssistBounds { // : UTgGameplayCurvesSet
		constexpr auto BoundsScaleHorizByDistance = 0x64; // FRawDistributionFloat
		constexpr auto BoundsScaleVertByDistance = 0x88; // FRawDistributionFloat
		constexpr auto bUseHorizCurveForVert = 0xac; // uint32_t : 1
		constexpr auto fBaseHorizMultiplier = 0xb0; // float
		constexpr auto fBaseVertMultiplier = 0xb4; // float
	}

	namespace n_USeqVar_Player { // : USeqVar_Object
		constexpr auto Players = 0xc4; // TArray<ObjectProperty>
		constexpr auto bAllPlayers = 0xd4; // uint32_t : 1
		constexpr auto PlayerIdx = 0xd8; // int32_t
	}

	namespace n_UMobileMenuList { // : UMobileMenuObject
		constexpr auto bIsVerticalList = 0xdc; // uint32_t : 1
		constexpr auto bDisableScrolling = 0xdc; // uint32_t : 1
		constexpr auto bForceSelectedToLineup = 0xdc; // uint32_t : 1
		constexpr auto bTapToScrollToItem = 0xdc; // uint32_t : 1
		constexpr auto bLoops = 0xdc; // uint32_t : 1
		constexpr auto SelectedOffset = 0xe0; // float
		constexpr auto Items = 0xe4; // TArray<ObjectProperty>
		constexpr auto SelectedItem = 0xf4; // FSelectedMenuItem
		constexpr auto Drag = 0x100; // FMenuListDragInfo
		constexpr auto Movement = 0x154; // FMenuListMovementInfo
		constexpr auto Deacceleration = 0x170; // float
		constexpr auto EaseOutExp = 0x174; // float
		constexpr auto ScreenSize = 0x178; // FIntPoint
		constexpr auto FirstVisible = 0x180; // int32_t
		constexpr auto LastVisible = 0x184; // int32_t
		constexpr auto NumShowEndOfList = 0x188; // int32_t
		constexpr auto EndOfListSupression = 0x18c; // float
	}

	namespace n_UTgAIBehaviorAction_StopDevice { // : UTgAIBehaviorAction
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_ATgPawn_Princess { // : ATgPawn_Character
		constexpr auto m_CachedEnlightenment = 0x3164; // ObjectProperty
		constexpr auto m_CachedEnlightenmentGun = 0x316c; // ObjectProperty
		constexpr auto r_GraceTargets = 0x3174; // TScriptInterface<Class> [0xf]
	}

	namespace n_UUIScene_UIBattlePass { // : UUIScene
		constexpr auto m_nBattlePassSeen = 0x1cc; // int32_t
		constexpr auto m_pHome = 0x1d0; // ObjectProperty
		constexpr auto m_pChallenges = 0x1d8; // ObjectProperty
		constexpr auto m_pRotator = 0x1e0; // ObjectProperty
		constexpr auto m_vDeathStampPreviewOffset = 0x1e8; // FVector
	}

	namespace n_UTgInventoryObject_Listen_Combo_Skye { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_fLastStealthTime = 0xcc; // float
		constexpr auto m_bComboActive = 0xd0; // uint32_t : 1
		constexpr auto m_bCanTriggerCombo = 0xd0; // uint32_t : 1
		constexpr auto m_nHitStacks = 0xd4; // int32_t
	}

	namespace n_UTgSeqAct_PlayFullBodyAnim { // : USequenceAction
		constexpr auto c_AnimName = 0x108; // FName
		constexpr auto c_fRate = 0x110; // float
		constexpr auto c_fBlendInTime = 0x114; // float
		constexpr auto c_fBlendOutTime = 0x118; // float
		constexpr auto c_bLooping = 0x11c; // uint32_t : 1
		constexpr auto c_bOverride = 0x11c; // uint32_t : 1
	}

	namespace n_ULocalMessage { // : UObject
		constexpr auto bIsSpecial = 0x60; // uint32_t : 1
		constexpr auto bIsUnique = 0x60; // uint32_t : 1
		constexpr auto bIsPartiallyUnique = 0x60; // uint32_t : 1
		constexpr auto bIsConsoleMessage = 0x60; // uint32_t : 1
		constexpr auto bBeep = 0x60; // uint32_t : 1
		constexpr auto bCountInstances = 0x60; // uint32_t : 1
		constexpr auto Lifetime = 0x64; // float
		constexpr auto DrawColor = 0x68; // FColor
		constexpr auto PosY = 0x6c; // float
		constexpr auto FontSize = 0x70; // int32_t
	}

	namespace n_UTgInvListener_CrackShot { // : UTgInvListener
		constexpr auto m_Targets = 0xc4; // TArray<FCrackShotBonusDamageTarget>
	}

	namespace n_UTgSavedMove { // : USavedMove
		constexpr auto m_bJumpHeld = 0x118; // uint32_t : 1
		constexpr auto m_bUltHeld = 0x118; // uint32_t : 1
		constexpr auto m_bJustForcedVelocity = 0x118; // uint32_t : 1
		constexpr auto m_bOldWantsCharge = 0x118; // uint32_t : 1
		constexpr auto m_byMoveSpeed = 0x11c; // char
		constexpr auto m_fSimulatedModifiedMovementSpeed = 0x120; // float
		constexpr auto m_fSimulatedModifiedGravity = 0x124; // float
		constexpr auto m_nBigTeleportCount = 0x128; // int32_t
		constexpr auto m_SavedChargeState = 0x12c; // FSavedChargeState
	}

	namespace n_UUIComponent_EventDay { // : UUIComponent_Display
		constexpr auto m_mcHeader = 0x124; // ObjectProperty
		constexpr auto m_pItemIcon = 0x12c; // ObjectProperty
		constexpr auto m_pButton = 0x134; // ObjectProperty
	}

	namespace n_UTgAchievement_MaldambaSpecificChallenge { // : UTgAchievement
		constexpr auto m_nDreadSerpentID = 0x94; // int32_t
		constexpr auto m_nSlitherID = 0x98; // int32_t
		constexpr auto m_Entries = 0x9c; // TArray<FMaldambaSpecificChallengeEntry>
	}

	namespace n_UTgInvListener_RaumFullRev { // : UTgInvListener
		constexpr auto m_CachedRaum = 0xc4; // ObjectProperty
		constexpr auto m_bActiveEffects = 0xcc; // uint32_t : 1
	}

	namespace n_ATgDevice_DimensionalLink { // : ATgDevice
		constexpr auto m_CachedYingPawn = 0xa08; // ObjectProperty
		constexpr auto s_CycleTargets = 0xa10; // ObjectProperty [0xa]
		constexpr auto s_nNumCycleTargets = 0xa60; // int32_t
		constexpr auto s_nCurrentCycleTargetIndex = 0xa64; // int32_t
		constexpr auto m_TeleportTargets = 0xa68; // TArray<FDLTeleportTargets>
		constexpr auto m_DeadTeleportTargets = 0xa78; // TArray<FDLDeadTeleportTargets>
		constexpr auto m_RewindTargets = 0xa88; // FDLRewindTargets [0x1e]
		constexpr auto m_CurrentRewindIndex = 0xd58; // int32_t
		constexpr auto m_ValidRewindIndex1 = 0xd5c; // int32_t
		constexpr auto m_ValidRewindIndex2 = 0xd60; // int32_t
		constexpr auto m_nNumPrevRewindsToCheck = 0xd64; // int32_t
		constexpr auto m_fRewindMinTargetDist = 0xd68; // float
		constexpr auto m_fRewindMinNextPointDist = 0xd6c; // float
		constexpr auto m_fLastRewindTimestamp = 0xd70; // float
		constexpr auto m_bRequiresReset = 0xd74; // uint32_t : 1
		constexpr auto m_bSwappingPeriodEnded = 0xd74; // uint32_t : 1
		constexpr auto r_nCurrentCycleTarget = 0xd78; // ObjectProperty
		constexpr auto m_CachedCardRewind = 0xd80; // ObjectProperty
		constexpr auto __PawnEvent__Delegate = 0xd88; // DelegateProperty
	}

	namespace n_UMaterialExpressionVectorParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0xd0; // FLinearColor
	}

	namespace n_USVehicleWheel { // : UComponent
		constexpr auto Steer = 0x70; // float
		constexpr auto MotorTorque = 0x74; // float
		constexpr auto BrakeTorque = 0x78; // float
		constexpr auto ChassisTorque = 0x7c; // float
		constexpr auto bPoweredWheel = 0x80; // uint32_t : 1
		constexpr auto bHoverWheel = 0x80; // uint32_t : 1
		constexpr auto bCollidesVehicles = 0x80; // uint32_t : 1
		constexpr auto bCollidesPawns = 0x80; // uint32_t : 1
		constexpr auto bIsSquealing = 0x80; // uint32_t : 1
		constexpr auto bWheelOnGround = 0x80; // uint32_t : 1
		constexpr auto SteerFactor = 0x84; // float
		constexpr auto SkelControlName = 0x88; // FName
		constexpr auto WheelControl = 0x90; // ObjectProperty
		constexpr auto BoneName = 0x98; // FName
		constexpr auto BoneOffset = 0xa0; // FVector
		constexpr auto WheelRadius = 0xac; // float
		constexpr auto SuspensionTravel = 0xb0; // float
		constexpr auto SuspensionSpeed = 0xb4; // float
		constexpr auto WheelParticleSystem = 0xb8; // ObjectProperty
		constexpr auto Side = 0xc0; // EWheelSide
		constexpr auto LongSlipFactor = 0xc4; // float
		constexpr auto LatSlipFactor = 0xc8; // float
		constexpr auto HandbrakeLongSlipFactor = 0xcc; // float
		constexpr auto HandbrakeLatSlipFactor = 0xd0; // float
		constexpr auto ParkedSlipFactor = 0xd4; // float
		constexpr auto WheelPosition = 0xd8; // FVector
		constexpr auto SpinVel = 0xe4; // float
		constexpr auto LongSlipRatio = 0xe8; // float
		constexpr auto LatSlipAngle = 0xec; // float
		constexpr auto ContactNormal = 0xf0; // FVector
		constexpr auto LongDirection = 0xfc; // FVector
		constexpr auto LatDirection = 0x108; // FVector
		constexpr auto ContactForce = 0x114; // float
		constexpr auto LongImpulse = 0x118; // float
		constexpr auto LatImpulse = 0x11c; // float
		constexpr auto DesiredSuspensionPosition = 0x120; // float
		constexpr auto SuspensionPosition = 0x124; // float
		constexpr auto CurrentRotation = 0x128; // float
		constexpr auto WheelShape = 0x12c; // FPointer
		constexpr auto WheelMaterialIndex = 0x134; // int32_t
		constexpr auto WheelPSCClass = 0x138; // UParticleSystemComponent*
		constexpr auto WheelParticleComp = 0x140; // ComponentProperty
		constexpr auto SlipParticleParamName = 0x148; // FName
	}

	namespace n_UTgInvListener_KillVengeanceTarget { // : UTgInvListener
		constexpr auto m_CachedVengeance = 0xc4; // ObjectProperty
	}

	namespace n_USeqVar_Character { // : USeqVar_Object
		constexpr auto PawnClass = 0xc4; // APawn*
	}

	namespace n_ATgDeploy_DarkConvergence { // : ATgDeploy_Bomb
		constexpr auto m_PullDataList = 0x484; // TArray<FPullData>
		constexpr auto r_PulledTargets = 0x494; // ObjectProperty [0x5]
		constexpr auto r_PulledTargetLocations = 0x4bc; // FVector [0x5]
		constexpr auto c_Beams = 0x4f8; // TArray<ObjectProperty>
		constexpr auto c_fHideBeamsTimer = 0x508; // float
		constexpr auto s_fVerticalTargetLocationOffset = 0x50c; // float
	}

	namespace n_UPBRuleNodeEdgeAngle { // : UPBRuleNodeBase
		constexpr auto Edge = 0x70; // EProcBuildingEdge
		constexpr auto Angles = 0x74; // TArray<FRBEdgeAngleInfo>
	}

	namespace n_ATgDevice_SevenInhand { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_nBurstModTotalShots = 0xa10; // int32_t [0x5]
		constexpr auto m_fPerFiremodeRecoil = 0xa24; // float [0x5]
	}

	namespace n_UUIData_JsonFeatures { // : UUIData
		constexpr auto m_vFeatures = 0x64; // TArray<FJsonFeatureData>
	}

	namespace n_UUIComponent_HudSkillIcon { // : UUIComponent_Display
		constexpr auto m_mcSkill = 0x124; // ObjectProperty
		constexpr auto m_mcSkillBtn = 0x12c; // ObjectProperty
		constexpr auto m_mcSkillKey = 0x134; // ObjectProperty
		constexpr auto m_mcSkillIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcSkillIconTexture = 0x144; // ObjectProperty
		constexpr auto m_mcSkillCDBot = 0x14c; // ObjectProperty
		constexpr auto m_mcSkillCDTop = 0x154; // ObjectProperty
		constexpr auto m_mcSkillTimer = 0x15c; // ObjectProperty
		constexpr auto m_mcSkillPulse = 0x164; // ObjectProperty
		constexpr auto m_mcSkillReady = 0x16c; // ObjectProperty
		constexpr auto m_mcSkillActive = 0x174; // ObjectProperty
		constexpr auto m_mcSkillMouse = 0x17c; // ObjectProperty
		constexpr auto m_mcSkillAmmo = 0x184; // ObjectProperty
		constexpr auto m_mcSkillShadow = 0x18c; // ObjectProperty
		constexpr auto m_mcSkillRarity = 0x194; // ObjectProperty
		constexpr auto m_bThirdPerson = 0x19c; // uint32_t : 1
		constexpr auto m_bUsingIconOverride = 0x19c; // uint32_t : 1
		constexpr auto m_nSkillIconIndex = 0x1a0; // int32_t
		constexpr auto m_nSkillId = 0x1a4; // int32_t
		constexpr auto m_nSkillAmmo = 0x1a8; // int32_t
		constexpr auto m_nSkillActive = 0x1ac; // int32_t
		constexpr auto m_nSkillStatus = 0x1b0; // int32_t
		constexpr auto m_fSkillCharge = 0x1b4; // float
		constexpr auto m_fSkillChargeTime = 0x1b8; // float
		constexpr auto m_nSkillRarity = 0x1bc; // int32_t
		constexpr auto m_fReadyTimer = 0x1c0; // float
		constexpr auto m_sSkillBind = 0x1c4; // FString
		constexpr auto m_nCardAnimCallback = 0x1d4; // int32_t
	}

	namespace n_UMaterialInstance { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x254; // ObjectProperty
		constexpr auto Parent = 0x25c; // ObjectProperty
		constexpr auto PhysMaterialMask = 0x264; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x26c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x270; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x278; // ObjectProperty
		constexpr auto bHasStaticPermutationResource = 0x280; // uint32_t : 1
		constexpr auto bStaticPermutationDirty = 0x280; // uint32_t : 1
		constexpr auto ReentrantFlag = 0x280; // uint32_t : 1
		constexpr auto bNeedsMaterialFlattening = 0x280; // uint32_t : 1
		constexpr auto bCleanupUnusedTextures = 0x280; // uint32_t : 1
		constexpr auto CookedShaderCache = 0x284; // ObjectProperty
		constexpr auto StaticParameters = 0x28c; // FPointer [0x3]
		constexpr auto StaticPermutationResources = 0x2a4; // FPointer [0x3]
		constexpr auto Resources = 0x2bc; // FPointer [0x3]
		constexpr auto ReferencedTextures = 0x2d4; // TArray<ObjectProperty>
		constexpr auto ParentLightingGuid = 0x2e4; // FGuid
	}

	namespace n_AMaterialInstanceTimeVaryingActor { // : AActor
		constexpr auto MatInst = 0x280; // ObjectProperty
	}

	namespace n_ATgDevice_RendSoul { // : ATgDevice
		constexpr auto m_bApplyCooldown = 0xa08; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_InsideDeviceVolume { // : UTgAIBehaviorCondition
		constexpr auto DeviceID = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_AFluidSurfaceActor { // : AActor
		constexpr auto FluidComponent = 0x280; // ComponentProperty
		constexpr auto ProjectileEntryEffect = 0x288; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByHealth { // : UTgAnimNodeBlendList
		constexpr auto m_HealthChildren = 0x168; // TArray<float>
		constexpr auto m_TgPawn = 0x178; // ObjectProperty
	}

	namespace n_ATgGame_Arena { // : ATgGame_Battle
		constexpr auto s_fLastDespawnTime = 0x76c; // float [0x2]
		constexpr auto s_fDespawnNotificationDelay = 0x774; // float
		constexpr auto m_nKillValueHero = 0x778; // int32_t
		constexpr auto m_nKillValueMinion = 0x77c; // int32_t
		constexpr auto m_nKillValueTower = 0x780; // int32_t
		constexpr auto m_MinScoreToTrackMinionKills = 0x784; // int32_t
		constexpr auto m_nSpawnWaveTime = 0x788; // int32_t
		constexpr auto m_nSpawnWaveDominatingTime = 0x78c; // int32_t
		constexpr auto m_nMaxDominatingPoints = 0x790; // int32_t
		constexpr auto m_bIsCrowdOnFeet = 0x794; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_IsTargetTypeInLeash { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UTgAIUtilityFilter_Payload { // : UTgAIUtilityFilter
		constexpr auto DistanceCutoff = 0xc0; // float
	}

	namespace n_ATgTutorialVolume { // : AVolume
		constexpr auto m_bHasLocalPawn = 0x2bc; // uint32_t : 1
		constexpr auto m_bHasSeenLocalPawnBefore = 0x2bc; // uint32_t : 1
	}

	namespace n_UTgAnimBlendBySkin { // : UTgAnimNodeBlendList
		constexpr auto m_SkinMap = 0x168; // TArray<FSkinChildInfo>
	}

	namespace n_UTgControlModule_SpectatorLockedView { // : UTgControlModule_Spectator
		constexpr auto DirectorModeSpectatorStallZ = 0x78; // float
		constexpr auto DirectorModeSpectatorMinStallZ = 0x7c; // float
	}

	namespace n_ATgDevice_OwlInhand { // : ATgDevice
		constexpr auto m_CachedSwapDevice = 0xa08; // ObjectProperty
		constexpr auto m_CachedScopeDevice = 0xa10; // ObjectProperty
		constexpr auto bUsePerfectAccuracy = 0xa18; // uint32_t : 1
	}

	namespace n_UUIComponent_GamepadKey { // : UUIComponent_Display
		constexpr auto m_eGamepadKey = 0x124; // GamepadKeys
		constexpr auto m_bForceHidden = 0x128; // uint32_t : 1
	}

	namespace n_UTgSeqEvent_BurnCardPurchased { // : USequenceEvent
		constexpr auto nFilledSlots = 0x128; // int32_t
		constexpr auto bAllBurnSlotsFull = 0x12c; // uint32_t : 1
	}

	namespace n_AKActor { // : ADynamicSMActor
		constexpr auto bDamageAppliesImpulse = 0x2d0; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x2d0; // uint32_t : 1
		constexpr auto bCurrentSlide = 0x2d0; // uint32_t : 1
		constexpr auto bSlideActive = 0x2d0; // uint32_t : 1
		constexpr auto bEnableStayUprightSpring = 0x2d0; // uint32_t : 1
		constexpr auto bLimitMaxPhysicsVelocity = 0x2d0; // uint32_t : 1
		constexpr auto bNeedsRBStateReplication = 0x2d0; // uint32_t : 1
		constexpr auto bDisableClientSidePawnInteractions = 0x2d0; // uint32_t : 1
		constexpr auto TgApplyHitImpulse = 0x2d0; // uint32_t : 1
		constexpr auto TgApplyTouchImpulse = 0x2d0; // uint32_t : 1
		constexpr auto ImpactEffectComponent = 0x2d4; // ComponentProperty
		constexpr auto ImpactSoundComponent = 0x2dc; // ComponentProperty
		constexpr auto ImpactSoundComponent2 = 0x2e4; // ComponentProperty
		constexpr auto LastImpactTime = 0x2ec; // float
		constexpr auto ImpactEffectInfo = 0x2f0; // FPhysEffectInfo
		constexpr auto SlideEffectComponent = 0x308; // ComponentProperty
		constexpr auto SlideSoundComponent = 0x310; // ComponentProperty
		constexpr auto LastSlideTime = 0x318; // float
		constexpr auto SlideEffectInfo = 0x31c; // FPhysEffectInfo
		constexpr auto StayUprightTorqueFactor = 0x334; // float
		constexpr auto StayUprightMaxTorque = 0x338; // float
		constexpr auto MaxPhysicsVelocity = 0x33c; // float
		constexpr auto RBState = 0x340; // FRigidBodyState
		constexpr auto AngErrorAccumulator = 0x380; // float
		constexpr auto ReplicatedDrawScale3D = 0x384; // FVector
		constexpr auto InitialLocation = 0x390; // FVector
		constexpr auto InitialRotation = 0x39c; // FRotator
		constexpr auto TgTouchMagnitude = 0x3a8; // float
		constexpr auto TgTouchSound = 0x3ac; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassRewardTier { // : UUIComponent_Display
		constexpr auto m_pLayoutNormal = 0x124; // ObjectProperty
	}

	namespace n_UUIData_StoreItemFilter { // : UUIData
		constexpr auto m_eSortOrder = 0x64; // UIStoreItemSort
		constexpr auto m_eChampFilter = 0x65; // UIStoreChampFilter
		constexpr auto m_nChampId = 0x68; // int32_t
		constexpr auto m_bItemAvailable = 0x6c; // uint32_t : 1
		constexpr auto m_bItemNotOwned = 0x6c; // uint32_t : 1
		constexpr auto m_nRarityFilter = 0x70; // TArray<int32_t>
	}

	namespace n_ATgFatalityFactory { // : AActor
		constexpr auto m_FatalityMeshActor = 0x280; // ObjectProperty
		constexpr auto m_LightingChannels = 0x288; // FLightingChannelContainer
	}

	namespace n_UOnlineGameInterfaceSteamworks { // : UOnlineGameInterfaceImpl
		constexpr auto GameInviteAcceptedDelegates = 0x348; // TArray<DelegateProperty>
		constexpr auto RegisterPlayerCompleteDelegates = 0x358; // TArray<DelegateProperty>
		constexpr auto UnregisterPlayerCompleteDelegates = 0x368; // TArray<DelegateProperty>
		constexpr auto __OnGameInviteAccepted__Delegate = 0x378; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x388; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x398; // DelegateProperty
	}

	namespace n_UUIData_ReportPlayer { // : UUIData
		constexpr auto m_pPlayerData = 0x64; // ObjectProperty
		constexpr auto m_pPlayerEntry = 0x6c; // ObjectProperty
	}

	namespace n_UTgGamePhase_ChangeRespawnTime { // : UTgGamePhase
		constexpr auto m_fRespawnDuration = 0xb8; // float
	}

	namespace n_UUIComponent_ItemStats { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_ItemStatEntries = 0x12c; // ObjectProperty
	}

	namespace n_UUIComponent_HealthBar_Player { // : UUIComponent_HealthBar
		constexpr auto m_mcCurrentHealthText = 0x234; // ObjectProperty
		constexpr auto m_mcMaxHealthText = 0x23c; // ObjectProperty
		constexpr auto m_mcHealthTip = 0x244; // ObjectProperty
		constexpr auto m_mcHealthColor = 0x24c; // ObjectProperty
		constexpr auto m_DamageOverlay = 0x254; // ObjectProperty
		constexpr auto m_TorvaldShield = 0x25c; // ObjectProperty
		constexpr auto m_fHealInterpSpeed = 0x264; // float
		constexpr auto m_fDamageInterpSpeed = 0x268; // float
		constexpr auto m_fMinHealInterpSpeed = 0x26c; // float
		constexpr auto m_fMinDamageInterpSpeed = 0x270; // float
		constexpr auto m_nLastViewTargetId = 0x274; // int32_t
		constexpr auto m_LastViewedPawn = 0x278; // ObjectProperty
		constexpr auto m_nLastCurrentHealthTextValue = 0x280; // int32_t
		constexpr auto m_nLastMaxHealthTextValue = 0x284; // int32_t
	}

	namespace n_UMaterialExpressionFontSample { // : UMaterialExpression
		constexpr auto Font = 0xb0; // ObjectProperty
		constexpr auto FontTexturePage = 0xb8; // int32_t
	}

	namespace n_UTgAnimBlendByTag { // : UTgAnimNodeBlendList
		constexpr auto m_TagMap = 0x168; // TArray<FTagInfo>
	}

	namespace n_UTgEffectDamage_Execute { // : UTgEffectDamage
		constexpr auto m_bApplied = 0xc4; // uint32_t : 1
		constexpr auto m_bExecute = 0xc4; // uint32_t : 1
	}

	namespace n_UTgAchievement_BulletSponge { // : UTgAchievement
		constexpr auto m_nDamageShielded = 0x94; // int32_t
	}

	namespace n_ATgDevice_SevenMaskedFear { // : ATgDevice_HitPulse
		constexpr auto m_CachedSeven = 0xa10; // ObjectProperty
		constexpr auto previousClosestTarget = 0xa18; // ObjectProperty
		constexpr auto ULT_EYE_SOCKET = 0xa20; // int32_t
		constexpr auto m_TrackedFearedTargets = 0xa24; // TArray<FFearTarget>
		constexpr auto m_fTimeFocusedOnThreshold = 0xa34; // float
		constexpr auto m_fTimeFocusedOnThresholdExplosionTalent = 0xa38; // float
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHealthPercentAfterAttack { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto HealthPct = 0x9c; // float
	}

	namespace n_ATgProj_Seedling { // : ATgProj_FreeGrenade
		constexpr auto m_nSecondaryProjToSpawn = 0x580; // int32_t
		constexpr auto m_nSpawnsRemaining = 0x584; // int32_t
		constexpr auto m_CachedSMC = 0x588; // ComponentProperty
		constexpr auto m_GrenadeSkelControl = 0x590; // ObjectProperty
		constexpr auto m_SpikesSkelControl = 0x598; // ObjectProperty
		constexpr auto m_fCachedMIC = 0x5a0; // ObjectProperty
		constexpr auto m_rRotationalVelocity = 0x5a8; // FRotator
		constexpr auto m_Silhouette = 0x5b4; // ComponentProperty
		constexpr auto m_LocalSilhouetteColor = 0x5bc; // FLinearColor
		constexpr auto m_bSilhouetteInitialized = 0x5cc; // uint32_t : 1
		constexpr auto m_bSilhouetteAllowed = 0x5cc; // uint32_t : 1
		constexpr auto m_bBuildupSoundPlayed = 0x5cc; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_FirstShotDuringOrAfterMovementAbility { // : UTgInventoryObject_Listen_FirstShotAfterMovementAbility
		constexpr auto m_bMovementAbilityActive = 0xd4; // uint32_t : 1
	}

	namespace n_UUIData_StringList { // : UUIData
		constexpr auto sValues = 0x64; // TArray<FString>
	}

	namespace n_ATgCoverPoint { // : ATgAIAnnotation
		constexpr auto m_bLeanLeft = 0x390; // uint32_t : 1
		constexpr auto m_bLeanRight = 0x390; // uint32_t : 1
		constexpr auto m_bAllowPopup = 0x390; // uint32_t : 1
		constexpr auto m_bAllowMantle = 0x390; // uint32_t : 1
		constexpr auto m_vLeanLeft = 0x394; // FVector
		constexpr auto m_vLeanRight = 0x3a0; // FVector
		constexpr auto m_vPopUp = 0x3ac; // FVector
	}

	namespace n_ATgGame_Paladins_Conquest { // : ATgGame_Paladins
		constexpr auto m_fSetupDuration = 0x868; // float
		constexpr auto m_fGatherDuration = 0x86c; // float
		constexpr auto m_fPushDuration = 0x870; // float
		constexpr auto m_fCreditCacheGainDuration = 0x874; // float
		constexpr auto m_nLowCreditValue = 0x878; // int32_t
		constexpr auto m_nMediumCreditValue = 0x87c; // int32_t
		constexpr auto m_nHighCreditValue = 0x880; // int32_t
		constexpr auto m_nRoundNumber = 0x884; // int32_t
	}

	namespace n_UUIComponent_BoosterItemInfo { // : UUIComponent_Display
		constexpr auto m_nDisplayedItemId = 0x124; // int32_t
		constexpr auto m_bUseRentalOffset = 0x128; // uint32_t : 1
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcTitleIcon = 0x134; // ObjectProperty
		constexpr auto m_mcDesc = 0x13c; // ObjectProperty
		constexpr auto m_mcRentalText = 0x144; // ObjectProperty
		constexpr auto m_mcRentalDuration = 0x14c; // ObjectProperty
		constexpr auto m_pBenefits = 0x154; // ObjectProperty
	}

	namespace n_UUIData_PopupInput { // : UUIData
		constexpr auto VfTable_ITgCallbackInterface = 0x64; // FPointer
		constexpr auto sTitle = 0x6c; // FString [0x2]
		constexpr auto sButtonName = 0x8c; // FString [0x2]
		constexpr auto pButtonPriceData = 0xac; // ObjectProperty
		constexpr auto pButtonValidate = 0xb4; // FPointer [0x2]
		constexpr auto m_CallbackContainer = 0xc4; // ObjectProperty
	}

	namespace n_AGameCrowdAgentSkeletal { // : AGameCrowdAgent
		constexpr auto SkeletalMeshComponent = 0x500; // ComponentProperty
		constexpr auto SpeedBlendNode = 0x508; // ObjectProperty
		constexpr auto FullBodySlot = 0x510; // ObjectProperty
		constexpr auto ActionSeqNode = 0x518; // ObjectProperty
		constexpr auto WalkSeqNode = 0x520; // ObjectProperty
		constexpr auto RunSeqNode = 0x528; // ObjectProperty
		constexpr auto AgentTree = 0x530; // ObjectProperty
		constexpr auto WalkAnimNames = 0x538; // TArray<FName>
		constexpr auto RunAnimNames = 0x548; // TArray<FName>
		constexpr auto IdleAnimNames = 0x558; // TArray<FName>
		constexpr auto DeathAnimNames = 0x568; // TArray<FName>
		constexpr auto SpeedBlendStart = 0x578; // float
		constexpr auto SpeedBlendEnd = 0x57c; // float
		constexpr auto AnimVelRate = 0x580; // float
		constexpr auto MaxSpeedBlendChangeSpeed = 0x584; // float
		constexpr auto MoveSyncGroupName = 0x588; // FName
		constexpr auto Attachments = 0x590; // TArray<FGameCrowdAttachmentList>
		constexpr auto MaxTargetAcquireTime = 0x5a0; // float
		constexpr auto bUseRootMotionVelocity = 0x5a4; // uint32_t : 1
		constexpr auto bAllowSkeletonUpdateChangeBasedOnTickResult = 0x5a4; // uint32_t : 1
		constexpr auto bTickWhenNotVisible = 0x5a4; // uint32_t : 1
		constexpr auto bIsPlayingIdleAnimation = 0x5a4; // uint32_t : 1
		constexpr auto bIsPlayingDeathAnimation = 0x5a4; // uint32_t : 1
		constexpr auto bIsPlayingImportantAnimation = 0x5a4; // uint32_t : 1
		constexpr auto bAnimateThisTick = 0x5a4; // uint32_t : 1
		constexpr auto NotVisibleDisableTickTime = 0x5a8; // float
		constexpr auto MaxAnimationDistance = 0x5ac; // float
		constexpr auto MaxAnimationDistanceSq = 0x5b0; // float
	}

	namespace n_UMaterialExpressionBumpOffset { // : UMaterialExpression
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Height = 0xe4; // FExpressionInput
		constexpr auto HeightRatioInput = 0x118; // FExpressionInput
		constexpr auto HeightRatio = 0x14c; // float
		constexpr auto ReferencePlane = 0x150; // float
	}

	namespace n_USequenceEvent { // : USequenceOp
		constexpr auto DuplicateEvts = 0xec; // TArray<ObjectProperty>
		constexpr auto Originator = 0xfc; // ObjectProperty
		constexpr auto Instigator = 0x104; // ObjectProperty
		constexpr auto ActivationTime = 0x10c; // float
		constexpr auto TriggerCount = 0x110; // int32_t
		constexpr auto MaxTriggerCount = 0x114; // int32_t
		constexpr auto ReTriggerDelay = 0x118; // float
		constexpr auto bEnabled = 0x11c; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x11c; // uint32_t : 1
		constexpr auto bRegistered = 0x11c; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x11c; // uint32_t : 1
		constexpr auto bServerAndClientSide = 0x11c; // uint32_t : 1
		constexpr auto bHumanOnly = 0x11c; // uint32_t : 1
		constexpr auto Priority = 0x120; // char
		constexpr auto MaxWidth = 0x124; // int32_t
	}

	namespace n_UInterpData { // : USequenceVariable
		constexpr auto InterpLength = 0xa0; // float
		constexpr auto PathBuildTime = 0xa4; // float
		constexpr auto InterpGroups = 0xa8; // TArray<ObjectProperty>
		constexpr auto CurveEdSetup = 0xb8; // ObjectProperty
		constexpr auto EdSectionStart = 0xc0; // float
		constexpr auto EdSectionEnd = 0xc4; // float
		constexpr auto bShouldBakeAndPrune = 0xc8; // uint32_t : 1
		constexpr auto BakeAndPruneStatus = 0xcc; // TArray<FAnimSetBakeAndPruneStatus>
		constexpr auto CachedDirectorGroup = 0xdc; // ObjectProperty
	}

	namespace n_UTgDeviceFire_DeployOnTarget { // : UTgDeviceFire
		constexpr auto m_TargetHit = 0x268; // ObjectProperty
		constexpr auto m_bDeployAtFeet = 0x270; // uint32_t : 1
	}

	namespace n_UTgPhysicalMaterialProperty { // : UPhysicalMaterialPropertyBase
		constexpr auto MaterialType = 0x60; // FName
	}

	namespace n_ASkeletalMeshActor { // : AActor
		constexpr auto bDamageAppliesImpulse = 0x280; // uint32_t : 1
		constexpr auto bShouldDoAnimNotifies = 0x280; // uint32_t : 1
		constexpr auto bForceSaveInCheckpoint = 0x280; // uint32_t : 1
		constexpr auto bCollideActors_OldValue = 0x280; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x280; // uint32_t : 1
		constexpr auto SkeletalMeshComponent = 0x284; // ComponentProperty
		constexpr auto LightEnvironment = 0x28c; // ComponentProperty
		constexpr auto Silhouette = 0x294; // ComponentProperty
		constexpr auto FacialAudioComp = 0x29c; // ComponentProperty
		constexpr auto ReplicatedMesh = 0x2a4; // ObjectProperty
		constexpr auto ReplicatedMaterial0 = 0x2ac; // ObjectProperty
		constexpr auto ReplicatedMaterial1 = 0x2b4; // ObjectProperty
		constexpr auto ControlTargets = 0x2bc; // TArray<FSkelMeshActorControlTarget>
		constexpr auto InterpGroupList = 0x2cc; // TArray<ObjectProperty>
		constexpr auto SavedAnimSeqName = 0x2dc; // FName
		constexpr auto SavedCurrentTime = 0x2e4; // float
	}

	namespace n_ATgPawn_BarrierTank { // : ATgPawn_Character
		constexpr auto m_WallPlacementInfos = 0x3164; // FWallPlacementInfo [0x5]
		constexpr auto m_vSegmentExtent = 0x31b4; // FVector
		constexpr auto m_vOpenSpotExtent = 0x31c0; // FVector
		constexpr auto m_fWallTraceDownDistance = 0x31cc; // float
		constexpr auto m_fWallOpenSpotTolerance = 0x31d0; // float
		constexpr auto m_fInitialWallScaleZ = 0x31d4; // float
		constexpr auto r_bInGaeBolg = 0x31d8; // uint32_t : 1
		constexpr auto m_bUseGaeBolgRetrieve = 0x31d8; // uint32_t : 1
		constexpr auto m_fGaeBolgJumpZModifier = 0x31dc; // float
		constexpr auto r_nInhandAmmoRemaining = 0x31e0; // int32_t
	}

	namespace n_UMaterialExpressionDepthBiasedAlpha { // : UMaterialExpression
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
		constexpr auto BiasScale = 0xb4; // float
		constexpr auto Alpha = 0xb8; // FExpressionInput
		constexpr auto Bias = 0xec; // FExpressionInput
	}

	namespace n_UUIComponent_MasteryRewards { // : UUIComponent_Display
		constexpr auto m_pBack = 0x124; // ObjectProperty
		constexpr auto m_pRewards = 0x12c; // ObjectProperty
		constexpr auto m_PurchaseAction = 0x134; // ObjectProperty
	}

	namespace n_ATgDeploy_EffectField { // : ATgDeploy_MatchParentFireMode
		constexpr auto m_fEffectFieldHeight = 0x46c; // float
		constexpr auto r_fRadiusScale = 0x470; // float
		constexpr auto m_TouchingPawns = 0x474; // TArray<ObjectProperty>
		constexpr auto m_HitActors = 0x484; // TArray<ObjectProperty>
		constexpr auto m_bOnlyHitOnce = 0x494; // uint32_t : 1
		constexpr auto m_bAllowStacking = 0x494; // uint32_t : 1
		constexpr auto m_CollisionProxy = 0x498; // ObjectProperty
	}

	namespace n_UParticleModulePhysicsVolumes { // : UParticleModuleWorldForcesBase
		constexpr auto GlobalInfluence = 0x68; // FRawDistributionFloat
		constexpr auto LevelInfluenceType = 0x8c; // EParticleLevelInfluenceType
	}

	namespace n_UParticleSystemReplay { // : UObject
		constexpr auto ClipIDNumber = 0x60; // int32_t
		constexpr auto Frames = 0x64; // TArray<FParticleSystemReplayFrame>
	}

	namespace n_ATgDevice_EnlightenmentGun { // : ATgDevice
		constexpr auto m_CachedPrincess = 0xa08; // ObjectProperty
		constexpr auto m_bAutoFireAfterPostHitDelay = 0xa10; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_DistanceBase { // : UTgAIBehaviorCondition
		constexpr auto DistanceThreshold = 0x98; // float
	}

	namespace n_UUIComponent_Quest { // : UUIComponent_Display
		constexpr auto m_pQuestPanelButton = 0x124; // ObjectProperty
		constexpr auto m_pQuestDiscardButton = 0x12c; // ObjectProperty
		constexpr auto m_mcProgressFrame = 0x134; // ObjectProperty
		constexpr auto m_mcQuestProgressBar = 0x13c; // ObjectProperty
		constexpr auto m_mcQuestProgressMask = 0x144; // ObjectProperty
		constexpr auto m_mcQuestTitle = 0x14c; // ObjectProperty
		constexpr auto m_mcQuestType = 0x154; // ObjectProperty
		constexpr auto m_mcQuestIconRendered = 0x15c; // ObjectProperty
		constexpr auto m_mcQuestIcon = 0x164; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusIcon = 0x16c; // ObjectProperty
		constexpr auto m_mcQuestFrame = 0x174; // ObjectProperty
		constexpr auto m_mcGlow = 0x17c; // ObjectProperty
		constexpr auto m_mcNew = 0x184; // ObjectProperty
		constexpr auto m_mcGoalSequences = 0x18c; // ObjectProperty [0x7]
		constexpr auto m_GoalSequenceBar = 0x1c4; // ObjectProperty
		constexpr auto m_mcQuestChestIcon = 0x1cc; // ObjectProperty
		constexpr auto m_mcRewardItem = 0x1d4; // ObjectProperty
		constexpr auto m_mcRewardItemRarity = 0x1dc; // ObjectProperty
		constexpr auto m_mcRewardItemIcon = 0x1e4; // ObjectProperty
		constexpr auto m_mcRewardItemImageStack = 0x1ec; // ObjectProperty
		constexpr auto m_mcRewardItemTexture = 0x1f4; // ObjectProperty
		constexpr auto m_mcRewardItemName = 0x1fc; // ObjectProperty
		constexpr auto m_mcRewardSubtitle = 0x204; // ObjectProperty
		constexpr auto m_mcQuestProgressText = 0x20c; // ObjectProperty
		constexpr auto m_mcQuestDescription = 0x214; // ObjectProperty
		constexpr auto m_mcQuestRewardAmount = 0x21c; // ObjectProperty
		constexpr auto m_mcQuestRewardAmount1 = 0x224; // ObjectProperty
		constexpr auto m_pCurrencyRewards = 0x22c; // ObjectProperty
		constexpr auto m_fSequenceOrigX = 0x234; // float
		constexpr auto m_fSequenceOrigY = 0x238; // float
		constexpr auto m_fSequenceOrigWidth = 0x23c; // float
	}

	namespace n_USeqAct_SetVector { // : USeqAct_SetSequenceVariable
		constexpr auto DefaultValue = 0x108; // FVector
	}

	namespace n_UUIComponent_PingIndicator { // : UUIComponent_Display
		constexpr auto m_nMediumPingThreshold = 0x124; // int32_t
		constexpr auto m_nHighPingThreshold = 0x128; // int32_t
		constexpr auto m_LowPingColor = 0x12c; // FLinearColor
		constexpr auto m_MediumPingColor = 0x13c; // FLinearColor
		constexpr auto m_HighPingColor = 0x14c; // FLinearColor
		constexpr auto m_fFadeDelay = 0x15c; // float
		constexpr auto m_fFadeTimer = 0x160; // float
	}

	namespace n_UMaterialExpressionFresnel { // : UMaterialExpression
		constexpr auto Exponent = 0xb0; // float
		constexpr auto Normal = 0xb4; // FExpressionInput
	}

	namespace n_UUIComponent_PopupManager { // : UUIComponent
		constexpr auto m_PopupStack = 0x118; // TArray<FSceneData>
		constexpr auto m_nCloseCurrentPopupHandle = 0x128; // int32_t
		constexpr auto m_bAllowPopups = 0x12c; // uint32_t : 1
	}

	namespace n_UDataStoreClient { // : UUIRoot
		constexpr auto GlobalDataStoreClasses = 0x70; // TArray<FString>
		constexpr auto GlobalDataStores = 0x80; // TArray<ObjectProperty>
		constexpr auto PlayerDataStoreClassNames = 0x90; // TArray<FString>
		constexpr auto PlayerDataStoreClasses = 0xa0; // TArray<UUIDataStore*>
		constexpr auto PlayerDataStores = 0xb0; // TArray<FPlayerDataStoreGroup>
	}

	namespace n_UTerrainComponent { // : UPrimitiveComponent
		constexpr auto ShadowMaps = 0x24c; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x25c; // TArray<FGuid>
		constexpr auto TerrainObject = 0x26c; // FPointer
		constexpr auto SectionBaseX = 0x274; // int32_t
		constexpr auto SectionBaseY = 0x278; // int32_t
		constexpr auto SectionSizeX = 0x27c; // int32_t
		constexpr auto SectionSizeY = 0x280; // int32_t
		constexpr auto TrueSectionSizeX = 0x284; // int32_t
		constexpr auto TrueSectionSizeY = 0x288; // int32_t
		constexpr auto LightMap = 0x28c; // FLightMapRef
		constexpr auto PatchBounds = 0x294; // TArray<FTerrainPatchBounds>
		constexpr auto BatchMaterials = 0x2a4; // TArray<FTerrainMaterialMask>
		constexpr auto FullBatch = 0x2b4; // int32_t
		constexpr auto BVTree = 0x2b8; // FTerrainBVTree
		constexpr auto CollisionVertices = 0x2c8; // TArray<FVector>
		constexpr auto RBHeightfield = 0x2d8; // FPointer
		constexpr auto bDisplayCollisionLevel = 0x2e0; // uint32_t : 1
	}

	namespace n_ATgGame_Paladins_Flagball { // : ATgGame_Paladins
		constexpr auto m_fSetupDuration = 0x868; // float
		constexpr auto m_fRoundResetDuration = 0x86c; // float
		constexpr auto m_SpawnPoint = 0x870; // ObjectProperty
		constexpr auto m_bFlagballActive = 0x878; // uint32_t : 1
		constexpr auto m_bPlayOfTheGameOnFinalScore = 0x878; // uint32_t : 1
		constexpr auto m_bPlayedOneMinuteLeftSwitch = 0x878; // uint32_t : 1
		constexpr auto m_bAnnouncerPlayBallPlayed = 0x878; // uint32_t : 1
		constexpr auto m_bAnnouncerPlayedMatchPointTF1 = 0x878; // uint32_t : 1
		constexpr auto m_bAnnouncerPlayedMatchPointTF2 = 0x878; // uint32_t : 1
		constexpr auto m_nFlagballDeviceID = 0x87c; // int32_t
		constexpr auto m_eFlagballEquipSlot = 0x880; // TG_EQUIP_POINT
		constexpr auto m_currentLeadState = 0x881; // EFlagballLeadState
		constexpr auto m_currentPossessionState = 0x882; // EFlagballPossessionState
		constexpr auto m_fCleanUpFailSafeTimer = 0x884; // float
		constexpr auto m_fCleanUpFailSafeRate = 0x888; // float
	}

	namespace n_UTgDeviceForm_KineticBurst { // : UTgDeviceForm
		constexpr auto RampUpTime = 0x28c; // float
		constexpr auto RampDownTime = 0x290; // float
		constexpr auto GlowMIC = 0x294; // ObjectProperty
	}

	namespace n_ATgDevice_DarkBargain { // : ATgDevice
		constexpr auto m_CachedDredgeF = 0xa08; // ObjectProperty
	}

	namespace n_UUIComponent_CountdownText { // : UUIComponent_Display
		constexpr auto m_nTickHandle = 0x124; // int32_t
	}

	namespace n_ATgFlagballGoal { // : AActor
		constexpr auto s_CollisionProxy = 0x280; // ObjectProperty
		constexpr auto m_fCollisionProxyRadius = 0x288; // float
		constexpr auto m_fCollisionProxyHeight = 0x28c; // float
		constexpr auto m_nTaskForceId = 0x290; // int32_t
		constexpr auto m_Volumes = 0x294; // TArray<ObjectProperty>
	}

	namespace n_USeqEvent_MobileZoneBase { // : USeqEvent_MobileBase
		constexpr auto TargetZoneName = 0x128; // FString
	}

	namespace n_UUIComponent_ChampionLoadouts { // : UUIComponent_Display
		constexpr auto m_pLoadoutList = 0x124; // ObjectProperty
		constexpr auto m_pDeleteLoadout = 0x12c; // ObjectProperty
		constexpr auto m_nOnDataCallbackHandle = 0x134; // int32_t
	}

	namespace n_USeqAct_SetObject { // : USeqAct_SetSequenceVariable
		constexpr auto DefaultValue = 0x108; // ObjectProperty
		constexpr auto Value = 0x110; // ObjectProperty
	}

	namespace n_UUIComponent_PlayCustom { // : UUIComponent_Display
		constexpr auto m_fLastRefreshTimeSeconds = 0x124; // float
		constexpr auto m_eState = 0x128; // UICustomGameState
		constexpr auto m_FilteredCustomMapQueues = 0x12c; // TArray<ObjectProperty>
		constexpr auto m_FilteredCustomGames = 0x13c; // TArray<ObjectProperty>
		constexpr auto m_RawCustomMapQueues = 0x14c; // TArray<ObjectProperty>
		constexpr auto m_RawCustomGames = 0x15c; // TArray<ObjectProperty>
		constexpr auto m_mcGames = 0x16c; // ObjectProperty
		constexpr auto m_pGamesList = 0x174; // ObjectProperty
		constexpr auto m_pGamesCreateButton = 0x17c; // ObjectProperty
		constexpr auto m_pGamesRefreshButton = 0x184; // ObjectProperty
		constexpr auto m_pRegionDropdown = 0x18c; // ObjectProperty
		constexpr auto m_grGameList = 0x194; // ObjectProperty
		constexpr auto m_pGamesCreateAction = 0x19c; // ObjectProperty
		constexpr auto m_pGamesRefreshAction = 0x1a4; // ObjectProperty
		constexpr auto m_pGamesRegionAction = 0x1ac; // ObjectProperty
		constexpr auto m_mcCreate = 0x1b4; // ObjectProperty
		constexpr auto m_mcCreateMapMode = 0x1bc; // ObjectProperty
		constexpr auto m_pCreateMapModeTabs = 0x1c4; // ObjectProperty
		constexpr auto m_pCreateMapModeMaps = 0x1cc; // ObjectProperty
		constexpr auto m_mcCreateSettings = 0x1d4; // ObjectProperty
		constexpr auto m_pCreateSettingsMap = 0x1dc; // ObjectProperty
		constexpr auto m_pCreateSettingsDoneButton = 0x1e4; // ObjectProperty
		constexpr auto m_pCreateSettingsCancelButton = 0x1ec; // ObjectProperty
		constexpr auto m_pCreateSettingsName = 0x1f4; // ObjectProperty
		constexpr auto m_pCreateSettingsPass = 0x1fc; // ObjectProperty
		constexpr auto m_pCreateSettingsRegion = 0x204; // ObjectProperty
		constexpr auto m_pCreateSettingsTeamSize = 0x20c; // ObjectProperty
		constexpr auto m_pCreateSettingsDraftMode = 0x214; // ObjectProperty
		constexpr auto m_pCreateSettingsSpectate = 0x21c; // ObjectProperty
		constexpr auto m_pCreateSettingsSpectatePass = 0x224; // ObjectProperty
		constexpr auto m_pCreateSettingsAllow3p = 0x22c; // ObjectProperty
		constexpr auto m_grCreateSettings = 0x234; // ObjectProperty
		constexpr auto m_pCreateSettingsDoneAction = 0x23c; // ObjectProperty
		constexpr auto m_mcLobby = 0x244; // ObjectProperty
		constexpr auto m_mcLobbyName = 0x24c; // ObjectProperty
		constexpr auto m_mcLobbyTeamSize = 0x254; // ObjectProperty
		constexpr auto m_mcLobbyDraftMode = 0x25c; // ObjectProperty
		constexpr auto m_mcLobbyRegion = 0x264; // ObjectProperty
		constexpr auto m_mcLobbySpectate = 0x26c; // ObjectProperty
		constexpr auto m_mcLobbyStarting = 0x274; // ObjectProperty
		constexpr auto m_pLobbyMap = 0x27c; // ObjectProperty
		constexpr auto m_pLobbyRedPlayers = 0x284; // ObjectProperty
		constexpr auto m_pLobbyBluePlayers = 0x28c; // ObjectProperty
		constexpr auto m_pLobbyCancelButton = 0x294; // ObjectProperty
		constexpr auto m_pLobbyDoneButton = 0x29c; // ObjectProperty
		constexpr auto m_pLobbyAddBotButton = 0x2a4; // ObjectProperty
		constexpr auto m_grLobby = 0x2ac; // ObjectProperty
		constexpr auto m_pLobbyKickPlayerAction = 0x2b4; // ObjectProperty
		constexpr auto m_mcPopup = 0x2bc; // ObjectProperty
		constexpr auto m_mcPopupTitle = 0x2c4; // ObjectProperty
		constexpr auto m_mcPopupSubtitle = 0x2cc; // ObjectProperty
		constexpr auto m_pPopupInput = 0x2d4; // ObjectProperty
		constexpr auto m_pPopupDoneButton = 0x2dc; // ObjectProperty
		constexpr auto m_pPopupCancelButton = 0x2e4; // ObjectProperty
		constexpr auto m_grPopup = 0x2ec; // ObjectProperty
	}

	namespace n_UTgDeviceForm { // : UObject
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto PawnOwner = 0x68; // ObjectProperty
		constexpr auto c_EquipDeviceInfo = 0x70; // FEquipDeviceInfo
		constexpr auto m_nDeviceType = 0x7c; // int32_t
		constexpr auto m_eTargetingMode = 0x80; // DeviceTargetMode
		constexpr auto c_eTargetingModeStatus = 0x81; // ETargetingModeStatus
		constexpr auto c_bDeployed = 0x84; // uint32_t : 1
		constexpr auto c_bHandDevice = 0x84; // uint32_t : 1
		constexpr auto c_bDisableDefaultTimelapseRecovery = 0x84; // uint32_t : 1
		constexpr auto c_bIsTransitioningToNewMode = 0x84; // uint32_t : 1
		constexpr auto c_bTargetingModeEnabled = 0x84; // uint32_t : 1
		constexpr auto c_bTargeterInitializedThisTick = 0x84; // uint32_t : 1
		constexpr auto c_bTargeterIsInWorldDPG = 0x84; // uint32_t : 1
		constexpr auto c_bUseInstigatorMesh = 0x84; // uint32_t : 1
		constexpr auto c_bIsInHand = 0x84; // uint32_t : 1
		constexpr auto m_bInitializingAssets = 0x84; // uint32_t : 1
		constexpr auto m_bLoopWhileFiringCameraAnim = 0x84; // uint32_t : 1
		constexpr auto m_bUseImpactFXOverride = 0x84; // uint32_t : 1
		constexpr auto m_bRecoilTimerActive = 0x84; // uint32_t : 1
		constexpr auto m_bForce1pViewWhileFiring = 0x84; // uint32_t : 1
		constexpr auto m_bForce3PViewWhileFiring = 0x84; // uint32_t : 1
		constexpr auto m_bForce3PViewInBuildup = 0x84; // uint32_t : 1
		constexpr auto c_PawnAnimSetOverrideList = 0x88; // TArray<ObjectProperty>
		constexpr auto ModeDatas = 0x98; // TArray<FModeData>
		constexpr auto m_pAmSetup = 0xa8; // FPointer
		constexpr auto c_Mesh = 0xb0; // ComponentProperty
		constexpr auto c_AttachedMesh = 0xb8; // ComponentProperty
		constexpr auto c_ThirdPersonMesh = 0xc0; // ComponentProperty
		constexpr auto c_FirstPersonMesh = 0xc8; // ComponentProperty
		constexpr auto c_nmMountPoint = 0xd0; // FName
		constexpr auto FormState = 0xd8; // FName
		constexpr auto c_nFireMode = 0xe0; // int32_t
		constexpr auto c_nEquipSlot = 0xe4; // int32_t
		constexpr auto c_fLastReceivedRefireTime = 0xe8; // float
		constexpr auto c_fLastFireTimestamp = 0xec; // float
		constexpr auto c_nLastFxMode = 0xf0; // int32_t
		constexpr auto c_TargetingModeMeshIndicator = 0xf4; // ObjectProperty
		constexpr auto c_TargetingModeFx = 0xfc; // ObjectProperty
		constexpr auto c_TargetingAim = 0x104; // FAimData
		constexpr auto c_nTargetingModeFxId = 0x138; // int32_t
		constexpr auto c_fRemainingTransitionTime = 0x13c; // float
		constexpr auto c_fTotalTransitionTime = 0x140; // float
		constexpr auto m_LockedTarget = 0x144; // ObjectProperty
		constexpr auto m_AssetReference = 0x14c; // ObjectProperty
		constexpr auto m_OwnerActor = 0x154; // ObjectProperty
		constexpr auto m_AbilityBlendList1P = 0x15c; // TArray<ObjectProperty>
		constexpr auto m_AbilityBlendList3P = 0x16c; // TArray<ObjectProperty>
		constexpr auto m_ChannelFireBlendList1P = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_ChannelFireBlendList3P = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_TargetingBlendList1P = 0x19c; // TArray<ObjectProperty>
		constexpr auto m_TargetingBlendList3P = 0x1ac; // TArray<ObjectProperty>
		constexpr auto m_ToggleTransitionNodes1P = 0x1bc; // TArray<ObjectProperty>
		constexpr auto m_ToggleTransitionNodes3P = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_AmmoBlendList1P = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_AmmoBlendList3P = 0x1ec; // TArray<ObjectProperty>
		constexpr auto m_CooldownSyncNode1P = 0x1fc; // TArray<ObjectProperty>
		constexpr auto m_CooldownSyncNode3P = 0x20c; // TArray<ObjectProperty>
		constexpr auto m_DeviceEquippedNode1P = 0x21c; // TArray<ObjectProperty>
		constexpr auto m_DeviceEquippedNode3P = 0x22c; // TArray<ObjectProperty>
		constexpr auto m_WhileFiringCameraAnimInst = 0x23c; // ObjectProperty
		constexpr auto m_fWhileFiringCameraAnimBlendInTime = 0x244; // float
		constexpr auto m_fWhileFiringCameraAnimBlendOutTime = 0x248; // float
		constexpr auto m_RandomShotSpreadStream = 0x24c; // FPointer
		constexpr auto m_nLastSetShotSpreadSeed = 0x254; // int32_t
		constexpr auto m_nSyntheticVisualBurstRate = 0x258; // int32_t
		constexpr auto m_nSyntheticShotsRemaining = 0x25c; // int32_t
		constexpr auto m_fSyntheticShotRefireRate = 0x260; // float
		constexpr auto m_fSyntheticShotTimer = 0x264; // float
		constexpr auto m_SyntheticImpactArgs = 0x268; // FSyntheticImpactEffectArgs
		constexpr auto m_GameplayCurves = 0x280; // ObjectProperty
		constexpr auto m_fRecoilTimer = 0x288; // float
	}

	namespace n_ATgDevice_DragonsFire { // : ATgDevice
		constexpr auto m_CachedImani = 0xa08; // ObjectProperty
	}

	namespace n_UParticleModuleSizeScale { // : UParticleModuleSizeBase
		constexpr auto SizeScale = 0x68; // FRawDistributionVector
		constexpr auto EnableX = 0x8c; // uint32_t : 1
		constexpr auto EnableY = 0x8c; // uint32_t : 1
		constexpr auto EnableZ = 0x8c; // uint32_t : 1
	}

	namespace n_ATgDevice_ImaniRMB2 { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_bOverrideTargeting = 0xa10; // uint32_t : 1
		constexpr auto m_nVFXNumTrailingShots = 0xa14; // int32_t
		constexpr auto m_CachedImani = 0xa18; // ObjectProperty
		constexpr auto m_CachedLMB2 = 0xa20; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_PoisonBolts { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_PoisonBoltTargets = 0xcc; // TArray<FPoisonBoltInfo>
		constexpr auto m_EffectGroupID = 0xdc; // int32_t
	}

	namespace n_UTgSeqAct_GetLocalPlayerController { // : USequenceAction
		constexpr auto LocalPlayerController = 0x108; // ObjectProperty
	}

	namespace n_UTextureRenderTarget { // : UTexture
		constexpr auto bUpdateImmediate = 0x100; // uint32_t : 1
		constexpr auto bNeedsTwoCopies = 0x100; // uint32_t : 1
		constexpr auto bRenderOnce = 0x100; // uint32_t : 1
		constexpr auto TargetGamma = 0x104; // float
	}

	namespace n_UUIComponent_TextButton { // : UUIComponent_Display
		constexpr auto m_lsText = 0x124; // FString
		constexpr auto m_pFrameButton = 0x134; // ObjectProperty
	}

	namespace n_USoundNodeAttenuationAndGain { // : USoundNode
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto OmniRadius = 0x7c; // float
		constexpr auto GainDistanceAlgorithm = 0x80; // SoundDistanceModel
		constexpr auto AttenuateDistanceAlgorithm = 0x81; // SoundDistanceModel
		constexpr auto DistanceType = 0x82; // ESoundDistanceCalc
		constexpr auto MinimalVolume = 0x84; // float
		constexpr auto RadiusMin = 0x88; // float
		constexpr auto RadiusPeak = 0x8c; // float
		constexpr auto RadiusMax = 0x90; // float
		constexpr auto LPFMinimal = 0x94; // float
		constexpr auto LPFRadiusMin = 0x98; // float
		constexpr auto LPFRadiusPeak = 0x9c; // float
		constexpr auto LPFRadiusMax = 0xa0; // float
	}

	namespace n_UUIAcademy { // : UTgGfxScene
		constexpr auto m_Buttons = 0x1ec; // FAcademyVideoButton [0x8]
	}

	namespace n_UTgInventoryObject_Listen_FullBurstHit { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_nCurrentFireLoopInstanceId = 0xcc; // int32_t
		constexpr auto m_nCurrentHits = 0xd0; // int32_t
		constexpr auto m_nTargetHits = 0xd4; // int32_t
		constexpr auto m_bBonusActive = 0xd8; // uint32_t : 1
		constexpr auto m_pLastTargetHit = 0xdc; // ObjectProperty
	}

	namespace n_UMobileMenuInventory { // : UMobileMenuObject
		constexpr auto Slots = 0xdc; // TArray<ObjectProperty>
		constexpr auto Items = 0xec; // TArray<ObjectProperty>
		constexpr auto SideLeewayPercent = 0xfc; // float
		constexpr auto CurrentElement = 0x100; // FRenderElementInfo
		constexpr auto Drag = 0x108; // FDragElementInfo
		constexpr auto ScaleSize = 0x130; // FVector2D
		constexpr auto bRenderDragItem = 0x138; // uint32_t : 1
		constexpr auto __OnUpdateItemInSlot__Delegate = 0x13c; // DelegateProperty
		constexpr auto __DoCanPutItemInSlot__Delegate = 0x14c; // DelegateProperty
		constexpr auto __OnUpdateDrag__Delegate = 0x15c; // DelegateProperty
	}

	namespace n_UTgControlModule_SpectatorOverview { // : UTgControlModule_Spectator
		constexpr auto DirectorModeSpectatorStallZ = 0x78; // float
		constexpr auto DirectorModeSpectatorMinStallZ = 0x7c; // float
	}

	namespace n_ATgFlagballSpawnPoint { // : AActor
		constexpr auto m_nFlagBallFiremodeID = 0x280; // int32_t
		constexpr auto m_FireMode = 0x284; // ObjectProperty
		constexpr auto m_bSetupFireMode = 0x28c; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetIsInTowerRadius { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
	}

	namespace n_UPComSeqAct_PlayMusicEvent { // : USequenceAction
		constexpr auto EventName = 0x108; // FName
	}

	namespace n_ATgDevice_BarrierTankInhand { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedBarrierTankPawn = 0xa10; // ObjectProperty
		constexpr auto m_vProjectileSpawnOffset2 = 0xa18; // FVector
		constexpr auto m_vProjectileSpawnOffset3 = 0xa24; // FVector
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa30; // DelegateProperty
	}

	namespace n_UTgAnimNodeBlendByDeviceEquipped { // : UTgAnimNodeBlendList
		constexpr auto m_DeviceId = 0x168; // int32_t
	}

	namespace n_UParticleModuleTypeDataMesh { // : UParticleModuleTypeDataBase
		constexpr auto Mesh = 0x68; // ObjectProperty
		constexpr auto CastShadows = 0x70; // uint32_t : 1
		constexpr auto DoCollisions = 0x70; // uint32_t : 1
		constexpr auto bAllowMotionBlur = 0x70; // uint32_t : 1
		constexpr auto bOverrideMaterial = 0x70; // uint32_t : 1
		constexpr auto bCameraFacing = 0x70; // uint32_t : 1
		constexpr auto bApplyParticleRotationAsSpin = 0x70; // uint32_t : 1
		constexpr auto MeshAlignment = 0x74; // EMeshScreenAlignment
		constexpr auto AxisLockOption = 0x75; // EParticleAxisLock
		constexpr auto CameraFacingUpAxisOption = 0x76; // EMeshCameraFacingUpAxis
		constexpr auto CameraFacingOption = 0x77; // EMeshCameraFacingOptions
		constexpr auto Pitch = 0x78; // float
		constexpr auto Roll = 0x7c; // float
		constexpr auto Yaw = 0x80; // float
	}

	namespace n_UTexture2D { // : UTexture
		constexpr auto Mips = 0x100; // FIndirectArray_Mirror
		constexpr auto CachedPVRTCMips = 0x110; // FIndirectArray_Mirror
		constexpr auto CachedATITCMips = 0x120; // FIndirectArray_Mirror
		constexpr auto CachedETCMips = 0x130; // FIndirectArray_Mirror
		constexpr auto CachedFlashMipsMaxResolution = 0x140; // int32_t
		constexpr auto CachedFlashMips = 0x144; // FUntypedBulkData_Mirror
		constexpr auto SizeX = 0x184; // int32_t
		constexpr auto SizeY = 0x188; // int32_t
		constexpr auto OriginalSizeX = 0x18c; // int32_t
		constexpr auto OriginalSizeY = 0x190; // int32_t
		constexpr auto Format = 0x194; // EPixelFormat
		constexpr auto AddressX = 0x195; // TextureAddress
		constexpr auto AddressY = 0x196; // TextureAddress
		constexpr auto bIsEditorOnly = 0x198; // uint32_t : 1
		constexpr auto bHasBeenCooked = 0x198; // uint32_t : 1
		constexpr auto bIsStreamable = 0x198; // uint32_t : 1
		constexpr auto bHasCancelationPending = 0x198; // uint32_t : 1
		constexpr auto bHasBeenLoadedFromPersistentArchive = 0x198; // uint32_t : 1
		constexpr auto bForceMiplevelsToBeResident = 0x198; // uint32_t : 1
		constexpr auto bGlobalForceMipLevelsToBeResident = 0x198; // uint32_t : 1
		constexpr auto bIsCompositingSource = 0x198; // uint32_t : 1
		constexpr auto bHasBeenPaintedInEditor = 0x198; // uint32_t : 1
		constexpr auto ForceMipLevelsToBeResidentTimestamp = 0x19c; // float
		constexpr auto TextureFileCacheName = 0x1a0; // FName
		constexpr auto TextureFileCacheGuid = 0x1a8; // FGuid
		constexpr auto RequestedMips = 0x1b8; // int32_t
		constexpr auto ResidentMips = 0x1bc; // int32_t
		constexpr auto MipsToRemoveOnCompress = 0x1c0; // int32_t
		constexpr auto PendingMipChangeRequestStatus = 0x1c4; // FThreadSafeCounter
		constexpr auto SystemMemoryData = 0x1c8; // TArray<char>
		constexpr auto StreamableTexturesLink = 0x1d8; // FTextureLinkedListMirror
		constexpr auto StreamingIndex = 0x1f0; // int32_t
		constexpr auto MipTailBaseIdx = 0x1f4; // int32_t
		constexpr auto ResourceMem = 0x1f8; // FPointer
		constexpr auto FirstResourceMemMip = 0x200; // int32_t
		constexpr auto Timer = 0x204; // float
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipChange { // : USequenceEvent
		constexpr auto PointIndex = 0x128; // int32_t
	}

	namespace n_UConsole { // : UInteraction
		constexpr auto ConsoleTargetPlayer = 0xb0; // ObjectProperty
		constexpr auto DefaultTexture_Black = 0xb8; // ObjectProperty
		constexpr auto DefaultTexture_White = 0xc0; // ObjectProperty
		constexpr auto ConsoleKey = 0xc8; // FName
		constexpr auto TypeKey = 0xd0; // FName
		constexpr auto MaxScrollbackSize = 0xd8; // int32_t
		constexpr auto Scrollback = 0xdc; // TArray<FString>
		constexpr auto SBHead = 0xec; // int32_t
		constexpr auto SBPos = 0xf0; // int32_t
		constexpr auto HistoryTop = 0xf4; // int32_t
		constexpr auto HistoryBot = 0xf8; // int32_t
		constexpr auto HistoryCur = 0xfc; // int32_t
		constexpr auto History = 0x100; // FString [0x10]
		constexpr auto bNavigatingHistory = 0x200; // uint32_t : 1
		constexpr auto bCaptureKeyInput = 0x200; // uint32_t : 1
		constexpr auto bCtrl = 0x200; // uint32_t : 1
		constexpr auto bEnableUI = 0x200; // uint32_t : 1
		constexpr auto bAutoCompleteLocked = 0x200; // uint32_t : 1
		constexpr auto bRequireCtrlToNavigateAutoComplete = 0x200; // uint32_t : 1
		constexpr auto bIsRuntimeAutoCompleteUpToDate = 0x200; // uint32_t : 1
		constexpr auto TypedStr = 0x204; // FString
		constexpr auto TypedStrPos = 0x214; // int32_t
		constexpr auto ManualAutoCompleteList = 0x218; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteList = 0x228; // TArray<FAutoCompleteCommand>
		constexpr auto AutoCompleteIndex = 0x238; // int32_t
		constexpr auto AutoCompleteTree = 0x23c; // FAutoCompleteNode
		constexpr auto AutoCompleteIndices = 0x260; // TArray<int32_t>
	}

	namespace n_UTgGfxTeamInvite { // : UTgGfxScene
		constexpr auto m_fTimerWidth = 0x1ec; // float
		constexpr auto m_fTimeoutTime = 0x1f0; // float
		constexpr auto m_fTimeoutTimer = 0x1f4; // float
		constexpr auto m_mcTimer = 0x1f8; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x200; // ObjectProperty
		constexpr auto m_mcButton = 0x208; // ObjectProperty [0x2]
		constexpr auto m_fInviteTimestamps = 0x218; // TMap<None, None>
		constexpr auto m_AkTeamInvite = 0x260; // ObjectProperty
	}

	namespace n_UUIHudResult { // : UTgGfxScene
		constexpr auto m_bRoundEnd = 0x1ec; // uint32_t : 1
		constexpr auto m_bLoadingModel = 0x1ec; // uint32_t : 1
		constexpr auto m_bMapOutroFinished = 0x1ec; // uint32_t : 1
		constexpr auto m_bGameOver = 0x1ec; // uint32_t : 1
		constexpr auto m_bGameWon = 0x1ec; // uint32_t : 1
		constexpr auto m_bUsePlayOfTheGameIntroAnim = 0x1ec; // uint32_t : 1
		constexpr auto m_fResultDisplayTime = 0x1f0; // float
		constexpr auto m_fPlayOfTheGameTimer = 0x1f4; // float
		constexpr auto m_fHomeTimer = 0x1f8; // float
		constexpr auto m_fRoundTime = 0x1fc; // float
		constexpr auto m_fRoundTimer = 0x200; // float
		constexpr auto m_fAnimTimer = 0x204; // float
		constexpr auto m_nWinningTaskforce = 0x208; // int32_t
		constexpr auto m_fAsyncMeshLoadTimeout = 0x20c; // float
		constexpr auto m_fIntroDuration = 0x210; // float
		constexpr auto m_fPlayOfTheGameTimeoutDuration = 0x214; // float
		constexpr auto m_mcBlocker = 0x218; // ObjectProperty
		constexpr auto m_mcResult = 0x220; // ObjectProperty
		constexpr auto m_mcResultEOR = 0x228; // ObjectProperty
		constexpr auto m_mcResultTitle = 0x230; // ObjectProperty
		constexpr auto m_mcResultTitleAnim = 0x238; // ObjectProperty
		constexpr auto m_mcResultDefeat = 0x240; // ObjectProperty
		constexpr auto m_mcResultVictory = 0x248; // ObjectProperty
		constexpr auto m_mcResultVictorySpectator = 0x250; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameContainer = 0x258; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGame = 0x260; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameBackground = 0x268; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerNameGroup = 0x270; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerName = 0x278; // ObjectProperty
		constexpr auto m_pResultPlayOfTheGamePlayerName = 0x280; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerNameShadow = 0x288; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerTitle = 0x290; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerPortrait = 0x298; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerPortraitFrame = 0x2a0; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerPortraitIcon = 0x2a8; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGamePlayerPortraitIconTexture = 0x2b0; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameChampionNameGroup = 0x2b8; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameChampionName = 0x2c0; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameChampionNameTF = 0x2c8; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameText = 0x2d0; // ObjectProperty
		constexpr auto m_mcResultPlayOfTheGameTextAs = 0x2d8; // ObjectProperty
		constexpr auto m_nBasePotGXPos = 0x2e0; // int32_t
		constexpr auto m_ePlayOfTheGameState = 0x2e4; // EPlayOfTheGameState
		constexpr auto m_fPlayOfTheGameStateTime = 0x2e8; // float
	}

	namespace n_AMobileMenuGame { // : AGameInfo
		constexpr auto InitialSceneToDisplayClass = 0x4cc; // UMobileMenuScene*
	}

	namespace n_UOnlineProfileSettings { // : UOnlinePlayerStorage
		constexpr auto ProfileSettingIds = 0x94; // TArray<int32_t>
		constexpr auto DefaultSettings = 0xa4; // TArray<FOnlineProfileSetting>
		constexpr auto OwnerMappings = 0xb4; // TArray<FIdToStringMapping>
	}

	namespace n_UParticleEmitter { // : UObject
		constexpr auto EmitterName = 0x60; // FName
		constexpr auto m_nActivationMask = 0x68; // int32_t
		constexpr auto m_ParticleChannels = 0x6c; // FParticleChannelContainer
		constexpr auto SubUVDataOffset = 0x70; // int32_t
		constexpr auto EmitterRenderMode = 0x74; // EEmitterRenderMode
		constexpr auto LODLevels = 0x78; // TArray<ObjectProperty>
		constexpr auto ConvertedModules = 0x88; // uint32_t : 1
		constexpr auto bCollapsed = 0x88; // uint32_t : 1
		constexpr auto bIsSoloing = 0x88; // uint32_t : 1
		constexpr auto bCookedOut = 0x88; // uint32_t : 1
		constexpr auto PeakActiveParticles = 0x8c; // int32_t
		constexpr auto InitialAllocationCount = 0x90; // int32_t
		constexpr auto MediumDetailSpawnRateScale = 0x94; // float
	}

	namespace n_UTgDeviceForm_Latch { // : UTgDeviceForm
		constexpr auto m_nCurrentLatchAsmId = 0x28c; // int32_t
		constexpr auto m_fMaxPullDelay = 0x290; // float
		constexpr auto m_fProjSpeed = 0x294; // float
		constexpr auto m_LatchEndpoint = 0x298; // ObjectProperty
		constexpr auto m_BeamTarget = 0x2a0; // ObjectProperty
		constexpr auto m_vBeamTargetLocation = 0x2a8; // FVector
		constexpr auto m_vBeamTargetDirection = 0x2b4; // FVector
		constexpr auto m_bLatchInterrupted = 0x2c0; // uint32_t : 1
		constexpr auto m_bBeamActive = 0x2c0; // uint32_t : 1
		constexpr auto m_bBeamAttached = 0x2c0; // uint32_t : 1
	}

	namespace n_UGameCrowdAgentBehavior { // : UObject
		constexpr auto MyEventType = 0x60; // ECrowdBehaviorEvent
		constexpr auto ViralBehaviorEvent = 0x61; // ECrowdBehaviorEvent
		constexpr auto DurationOfBehavior = 0x64; // float
		constexpr auto TimeUntilStopBehavior = 0x68; // float
		constexpr auto bIdleBehavior = 0x6c; // uint32_t : 1
		constexpr auto bFaceActionTargetFirst = 0x6c; // uint32_t : 1
		constexpr auto bIsViralBehavior = 0x6c; // uint32_t : 1
		constexpr auto bPassOnIsViralBehaviorFlag = 0x6c; // uint32_t : 1
		constexpr auto ActionTarget = 0x70; // ObjectProperty
		constexpr auto MaxPlayerDistance = 0x78; // float
		constexpr auto ViralRadius = 0x7c; // float
		constexpr auto DurationBeforeBecomesViral = 0x80; // float
		constexpr auto TimeToBecomeViral = 0x84; // float
		constexpr auto DurationOfViralBehaviorPropagation = 0x88; // float
		constexpr auto TimeToStopPropagatingViralBehavior = 0x8c; // float
		constexpr auto MyAgent = 0x90; // ObjectProperty
		constexpr auto DebugBehaviorColor = 0x98; // FColor
	}

	namespace n_ATgDevice_NinjaRMB2 { // : ATgDevice_Charge
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa7c; // FPointer
		constexpr auto m_fLastStaminaPreConsumption = 0xa84; // float
		constexpr auto m_CachedKoga = 0xa88; // ObjectProperty
	}

	namespace n_UUIData_LobbySlotItem { // : UUIData
		constexpr auto eState = 0x64; // UIChampionCustomizeState
		constexpr auto pItemInfo = 0x68; // FPointer
		constexpr auto bActive = 0x70; // uint32_t : 1
	}

	namespace n_UUIData_String_Localized { // : UUIData
		constexpr auto m_sSection = 0x64; // FString
		constexpr auto m_sKey = 0x74; // FString
		constexpr auto m_bCaps = 0x84; // uint32_t : 1
	}

	namespace n_UUIComponent_VGSListEntry { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
		constexpr auto m_mcKeyboardKeyTF = 0x12c; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x134; // ObjectProperty
	}

	namespace n_UInterpTrackVectorBase { // : UInterpTrack
		constexpr auto VectorTrack = 0xa0; // FInterpCurveVector
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UPComBrowserInteraction { // : UInteraction
		constexpr auto VfTable_FCallbackEventDevice = 0xb0; // FPointer
	}

	namespace n_UUIComponent_ScrollBar { // : UUIComponent_Interactable
		constexpr auto m_nPageHeight = 0x140; // int32_t
		constexpr auto m_nPageWidth = 0x144; // int32_t
		constexpr auto m_nNumElements = 0x148; // int32_t
		constexpr auto m_fScrollPos = 0x14c; // float
		constexpr auto m_nNavScrollCBHandle1 = 0x150; // int32_t
		constexpr auto m_nNavScrollCBHandle2 = 0x154; // int32_t
		constexpr auto m_grScroll = 0x158; // ObjectProperty
		constexpr auto m_bScrollVertical = 0x160; // uint32_t : 1
	}

	namespace n_USoundCue { // : UAkBaseSoundObject
		constexpr auto SoundClass = 0x60; // FName
		constexpr auto SoundClassName = 0x68; // ESoundClassName
		constexpr auto bDebug = 0x6c; // uint32_t : 1
		constexpr auto m_bFadeOutWhenStopped = 0x6c; // uint32_t : 1
		constexpr auto FirstNode = 0x70; // ObjectProperty
		constexpr auto EditorData = 0x78; // TMap<None, None>
		constexpr auto MaxAudibleDistance = 0xc0; // float
		constexpr auto VolumeMultiplier = 0xc4; // float
		constexpr auto PitchMultiplier = 0xc8; // float
		constexpr auto Duration = 0xcc; // float
		constexpr auto FaceFXAnimSetRef = 0xd0; // ObjectProperty
		constexpr auto FaceFXGroupName = 0xd8; // FString
		constexpr auto FaceFXAnimName = 0xe8; // FString
		constexpr auto MaxConcurrentPlayCount = 0xf8; // int32_t
		constexpr auto CurrentPlayCount = 0xfc; // int32_t
		constexpr auto SoundGroup = 0x100; // FName
		constexpr auto m_fFadeOutTime = 0x108; // float
		constexpr auto m_fFadeToPct = 0x10c; // float
		constexpr auto m_fFadePitchToPct = 0x110; // float
		constexpr auto m_StereoSoundCue = 0x114; // ObjectProperty
	}

	namespace n_ATgDevice_RepulsorField { // : ATgDevice_ActiveAura
		constexpr auto r_fAtTheReadyRadius = 0xa68; // float
	}

	namespace n_USeqAct_GameCrowdPopulationManagerToggle { // : USequenceAction
		constexpr auto WarmupPopulationPct = 0x108; // float
		constexpr auto CrowdAgentList = 0x10c; // ObjectProperty
		constexpr auto bClearOldArchetypes = 0x114; // uint32_t : 1
		constexpr auto bEnableCrowdLightEnvironment = 0x114; // uint32_t : 1
		constexpr auto bCastShadows = 0x114; // uint32_t : 1
		constexpr auto bFillPotentialSpawnPoints = 0x114; // uint32_t : 1
		constexpr auto bForceObstacleChecking = 0x114; // uint32_t : 1
		constexpr auto bForceNavMeshPathing = 0x114; // uint32_t : 1
		constexpr auto bIndividualSpawner = 0x114; // uint32_t : 1
		constexpr auto MaxAgents = 0x118; // int32_t
		constexpr auto SpawnRate = 0x11c; // float
		constexpr auto AgentLightingChannel = 0x120; // FLightingChannelContainer
		constexpr auto MaxSpawnDist = 0x124; // float
		constexpr auto MinBehindSpawnDist = 0x128; // float
		constexpr auto PotentialSpawnPoints = 0x12c; // TArray<ObjectProperty>
		constexpr auto AgentWarmupTime = 0x13c; // float
		constexpr auto NumAgentsToTickPerFrame = 0x140; // int32_t
		constexpr auto LastSpawnedList = 0x144; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_Loadout { // : UUIComponent_Display
		constexpr auto m_pGems = 0x124; // ObjectProperty [0x5]
		constexpr auto m_pCardIcons = 0x14c; // ObjectProperty [0x5]
		constexpr auto m_pLock = 0x174; // ObjectProperty
		constexpr auto m_pNewLoadoutText = 0x17c; // ObjectProperty
		constexpr auto m_pTitle = 0x184; // ObjectProperty
		constexpr auto m_mcEmptyLoadoutCTA = 0x18c; // ObjectProperty
		constexpr auto m_mcFullLoadoutCTA = 0x194; // ObjectProperty
		constexpr auto m_bShowLoadoutCTA = 0x19c; // uint32_t : 1
		constexpr auto m_bShowDeleteButton = 0x19c; // uint32_t : 1
		constexpr auto m_bDisableEmptyDecks = 0x19c; // uint32_t : 1
		constexpr auto m_pCancelButton = 0x1a0; // ObjectProperty
		constexpr auto m_pSelectLoadoutButton = 0x1a8; // ObjectProperty
	}

	namespace n_UUISoundTheme { // : UObject
		constexpr auto SoundEventBindings = 0x60; // TArray<FSoundEventMapping>
	}

	namespace n_UTgAIBehaviorCondition_AmmoCostPerShot { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_UUIComponent_OracleSoulCharges { // : UUIComponent_Display
		constexpr auto m_CurrentViewPawn = 0x124; // ObjectProperty
		constexpr auto m_CurrentTargetPawn = 0x12c; // ObjectProperty
		constexpr auto m_mcText = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcAnim = 0x144; // ObjectProperty
		constexpr auto m_mcMaxStacks = 0x14c; // ObjectProperty
		constexpr auto m_bIsHiding = 0x154; // uint32_t : 1
		constexpr auto m_bEnabled = 0x154; // uint32_t : 1
		constexpr auto m_bIsSoulCollectorDisplay = 0x154; // uint32_t : 1
		constexpr auto m_nCurrentSoulCharges = 0x158; // int32_t
	}

	namespace n_UEngine { // : USubsystem
		constexpr auto TinyFont = 0x68; // ObjectProperty
		constexpr auto TinyFontName = 0x70; // FString
		constexpr auto SmallFont = 0x80; // ObjectProperty
		constexpr auto SmallFontName = 0x88; // FString
		constexpr auto MediumFont = 0x98; // ObjectProperty
		constexpr auto MediumFontName = 0xa0; // FString
		constexpr auto LargeFont = 0xb0; // ObjectProperty
		constexpr auto LargeFontName = 0xb8; // FString
		constexpr auto SubtitleFont = 0xc8; // ObjectProperty
		constexpr auto SubtitleFontName = 0xd0; // FString
		constexpr auto AdditionalFonts = 0xe0; // TArray<ObjectProperty>
		constexpr auto AdditionalFontNames = 0xf0; // TArray<FString>
		constexpr auto ConsoleClass = 0x100; // UConsole*
		constexpr auto ConsoleClassName = 0x108; // FString
		constexpr auto GameViewportClientClass = 0x118; // UGameViewportClient*
		constexpr auto GameViewportClientClassName = 0x120; // FString
		constexpr auto DataStoreClientClass = 0x130; // UDataStoreClient*
		constexpr auto DataStoreClientClassName = 0x138; // FString
		constexpr auto LocalPlayerClass = 0x148; // ULocalPlayer*
		constexpr auto LocalPlayerClassName = 0x150; // FString
		constexpr auto DefaultMaterial = 0x160; // ObjectProperty
		constexpr auto DefaultMaterialName = 0x168; // FString
		constexpr auto DefaultDecalMaterial = 0x178; // ObjectProperty
		constexpr auto DefaultDecalMaterialName = 0x180; // FString
		constexpr auto DefaultTexture = 0x190; // ObjectProperty
		constexpr auto DefaultTextureName = 0x198; // FString
		constexpr auto WireframeMaterial = 0x1a8; // ObjectProperty
		constexpr auto WireframeMaterialName = 0x1b0; // FString
		constexpr auto EmissiveTexturedMaterial = 0x1c0; // ObjectProperty
		constexpr auto EmissiveTexturedMaterialName = 0x1c8; // FString
		constexpr auto GeomMaterial = 0x1d8; // ObjectProperty
		constexpr auto GeomMaterialName = 0x1e0; // FString
		constexpr auto DefaultFogVolumeMaterial = 0x1f0; // ObjectProperty
		constexpr auto DefaultFogVolumeMaterialName = 0x1f8; // FString
		constexpr auto TickMaterial = 0x208; // ObjectProperty
		constexpr auto TickMaterialName = 0x210; // FString
		constexpr auto CrossMaterial = 0x220; // ObjectProperty
		constexpr auto CrossMaterialName = 0x228; // FString
		constexpr auto LevelColorationLitMaterial = 0x238; // ObjectProperty
		constexpr auto LevelColorationLitMaterialName = 0x240; // FString
		constexpr auto LevelColorationUnlitMaterial = 0x250; // ObjectProperty
		constexpr auto LevelColorationUnlitMaterialName = 0x258; // FString
		constexpr auto LightingTexelDensityMaterial = 0x268; // ObjectProperty
		constexpr auto LightingTexelDensityName = 0x270; // FString
		constexpr auto ShadedLevelColorationLitMaterial = 0x280; // ObjectProperty
		constexpr auto ShadedLevelColorationLitMaterialName = 0x288; // FString
		constexpr auto ShadedLevelColorationUnlitMaterial = 0x298; // ObjectProperty
		constexpr auto ShadedLevelColorationUnlitMaterialName = 0x2a0; // FString
		constexpr auto RemoveSurfaceMaterial = 0x2b0; // ObjectProperty
		constexpr auto RemoveSurfaceMaterialName = 0x2b8; // FString
		constexpr auto VertexColorMaterial = 0x2c8; // ObjectProperty
		constexpr auto VertexColorMaterialName = 0x2d0; // FString
		constexpr auto VertexColorViewModeMaterial_ColorOnly = 0x2e0; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_ColorOnly = 0x2e8; // FString
		constexpr auto VertexColorViewModeMaterial_AlphaAsColor = 0x2f8; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_AlphaAsColor = 0x300; // FString
		constexpr auto VertexColorViewModeMaterial_RedOnly = 0x310; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_RedOnly = 0x318; // FString
		constexpr auto VertexColorViewModeMaterial_GreenOnly = 0x328; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_GreenOnly = 0x330; // FString
		constexpr auto VertexColorViewModeMaterial_BlueOnly = 0x340; // ObjectProperty
		constexpr auto VertexColorViewModeMaterialName_BlueOnly = 0x348; // FString
		constexpr auto HeatmapMaterial = 0x358; // ObjectProperty
		constexpr auto HeatmapMaterialName = 0x360; // FString
		constexpr auto BoneWeightMaterial = 0x370; // ObjectProperty
		constexpr auto BoneWeightMaterialName = 0x378; // FString
		constexpr auto TangentColorMaterial = 0x388; // ObjectProperty
		constexpr auto TangentColorMaterialName = 0x390; // FString
		constexpr auto MobileEmulationMasterMaterial = 0x3a0; // ObjectProperty
		constexpr auto MobileEmulationMasterMaterialName = 0x3a8; // FString
		constexpr auto ProcBuildingSimpleMaterial = 0x3b8; // ObjectProperty
		constexpr auto ProcBuildingSimpleMaterialName = 0x3c0; // FString
		constexpr auto BuildingQuadStaticMesh = 0x3d0; // ObjectProperty
		constexpr auto BuildingQuadStaticMeshName = 0x3d8; // FString
		constexpr auto ProcBuildingLODColorTexelsPerWorldUnit = 0x3e8; // float
		constexpr auto ProcBuildingLODLightingTexelsPerWorldUnit = 0x3ec; // float
		constexpr auto MaxProcBuildingLODColorTextureSize = 0x3f0; // int32_t
		constexpr auto MaxProcBuildingLODLightingTextureSize = 0x3f4; // int32_t
		constexpr auto UseProcBuildingLODTextureCropping = 0x3f8; // uint32_t : 1
		constexpr auto ForcePowerOfTwoProcBuildingLODTextures = 0x3f8; // uint32_t : 1
		constexpr auto bCombineSimilarMappings = 0x3f8; // uint32_t : 1
		constexpr auto bRenderLightMapDensityGrayscale = 0x3f8; // uint32_t : 1
		constexpr auto bScreenshotRequested = 0x3f8; // uint32_t : 1
		constexpr auto bUseSound = 0x3f8; // uint32_t : 1
		constexpr auto bUseBackgroundLevelStreaming = 0x3f8; // uint32_t : 1
		constexpr auto bSubtitlesEnabled = 0x3f8; // uint32_t : 1
		constexpr auto bSubtitlesForcedOff = 0x3f8; // uint32_t : 1
		constexpr auto bSmoothFrameRate = 0x3f8; // uint32_t : 1
		constexpr auto bCheckForMultiplePawnsSpawnedInAFrame = 0x3f8; // uint32_t : 1
		constexpr auto bShouldGenerateSimpleLightmaps = 0x3f8; // uint32_t : 1
		constexpr auto bForceStaticTerrain = 0x3f8; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x3f8; // uint32_t : 1
		constexpr auto bUsePostProcessEffects = 0x3f8; // uint32_t : 1
		constexpr auto bOnScreenKismetWarnings = 0x3f8; // uint32_t : 1
		constexpr auto bEnableKismetLogging = 0x3f8; // uint32_t : 1
		constexpr auto bAllowMatureLanguage = 0x3f8; // uint32_t : 1
		constexpr auto bDisablePhysXHardwareSupport = 0x3f8; // uint32_t : 1
		constexpr auto bPauseOnLossOfFocus = 0x3f8; // uint32_t : 1
		constexpr auto bCheckParticleRenderSize = 0x3f8; // uint32_t : 1
		constexpr auto bEnableColorClear = 0x3f8; // uint32_t : 1
		constexpr auto bAreConstraintsDirty = 0x3f8; // uint32_t : 1
		constexpr auto bHasPendingGlobalReattach = 0x3f8; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessages = 0x3f8; // uint32_t : 1
		constexpr auto bEnableOnScreenDebugMessagesDisplay = 0x3f8; // uint32_t : 1
		constexpr auto bSuppressMapWarnings = 0x3f8; // uint32_t : 1
		constexpr auto bCookSeparateSharedMPGameContent = 0x3f8; // uint32_t : 1
		constexpr auto bUseRecastNavMesh = 0x3f8; // uint32_t : 1
		constexpr auto bDisableAILogging = 0x3f8; // uint32_t : 1
		constexpr auto bUseNormalMapsForSimpleLightMaps = 0x3f8; // uint32_t : 1
		constexpr auto bStartWithMatineeCapture = 0x3f8; // uint32_t : 1
		constexpr auto bCompressMatineeCapture = 0x3fc; // uint32_t : 1
		constexpr auto bLockReadOnlyLevels = 0x3fc; // uint32_t : 1
		constexpr auto MaxRMSDForCombiningMappings = 0x400; // float
		constexpr auto ImageReflectionTextureSize = 0x404; // int32_t
		constexpr auto LightingOnlyBrightness = 0x408; // FLinearColor
		constexpr auto LightComplexityColors = 0x418; // TArray<FColor>
		constexpr auto ShaderComplexityColors = 0x428; // TArray<FLinearColor>
		constexpr auto MaxPixelShaderAdditiveComplexityCount = 0x438; // float
		constexpr auto MinTextureDensity = 0x43c; // float
		constexpr auto IdealTextureDensity = 0x440; // float
		constexpr auto MaxTextureDensity = 0x444; // float
		constexpr auto MinLightMapDensity = 0x448; // float
		constexpr auto IdealLightMapDensity = 0x44c; // float
		constexpr auto MaxLightMapDensity = 0x450; // float
		constexpr auto RenderLightMapDensityGrayscaleScale = 0x454; // float
		constexpr auto RenderLightMapDensityColorScale = 0x458; // float
		constexpr auto LightMapDensityVertexMappedColor = 0x45c; // FLinearColor
		constexpr auto LightMapDensitySelectedColor = 0x46c; // FLinearColor
		constexpr auto StatColorMappings = 0x47c; // TArray<FStatColorMapping>
		constexpr auto EditorBrushMaterial = 0x48c; // ObjectProperty
		constexpr auto EditorBrushMaterialName = 0x494; // FString
		constexpr auto DefaultPhysMaterial = 0x4a4; // ObjectProperty
		constexpr auto DefaultPhysMaterialName = 0x4ac; // FString
		constexpr auto LandscapeHolePhysMaterial = 0x4bc; // ObjectProperty
		constexpr auto LandscapeHolePhysMaterialName = 0x4c4; // FString
		constexpr auto ApexDamageParams = 0x4d4; // ObjectProperty
		constexpr auto ApexDamageParamsName = 0x4dc; // FString
		constexpr auto TerrainErrorMaterial = 0x4ec; // ObjectProperty
		constexpr auto TerrainErrorMaterialName = 0x4f4; // FString
		constexpr auto TerrainMaterialMaxTextureCount = 0x504; // int32_t
		constexpr auto TerrainTessellationCheckCount = 0x508; // int32_t
		constexpr auto TerrainTessellationCheckDistance = 0x50c; // float
		constexpr auto OnlineSubsystemClass = 0x510; // UOnlineSubsystem*
		constexpr auto DefaultOnlineSubsystemName = 0x518; // FString
		constexpr auto DefaultPostProcess = 0x528; // ObjectProperty
		constexpr auto DefaultPostProcessName = 0x530; // FString
		constexpr auto ThumbnailSkeletalMeshPostProcess = 0x540; // ObjectProperty
		constexpr auto ThumbnailSkeletalMeshPostProcessName = 0x548; // FString
		constexpr auto ThumbnailParticleSystemPostProcess = 0x558; // ObjectProperty
		constexpr auto ThumbnailParticleSystemPostProcessName = 0x560; // FString
		constexpr auto ThumbnailMaterialPostProcess = 0x570; // ObjectProperty
		constexpr auto ThumbnailMaterialPostProcessName = 0x578; // FString
		constexpr auto DefaultUIScenePostProcess = 0x588; // ObjectProperty
		constexpr auto DefaultUIScenePostProcessName = 0x590; // FString
		constexpr auto DefaultUICaretMaterial = 0x5a0; // ObjectProperty
		constexpr auto DefaultUICaretMaterialName = 0x5a8; // FString
		constexpr auto SceneCaptureReflectActorMaterial = 0x5b8; // ObjectProperty
		constexpr auto SceneCaptureReflectActorMaterialName = 0x5c0; // FString
		constexpr auto SceneCaptureCubeActorMaterial = 0x5d0; // ObjectProperty
		constexpr auto SceneCaptureCubeActorMaterialName = 0x5d8; // FString
		constexpr auto ScreenDoorNoiseTexture = 0x5e8; // ObjectProperty
		constexpr auto ScreenDoorNoiseTextureName = 0x5f0; // FString
		constexpr auto ImageGrainNoiseTexture = 0x600; // ObjectProperty
		constexpr auto ImageGrainNoiseTextureName = 0x608; // FString
		constexpr auto RandomAngleTexture = 0x618; // ObjectProperty
		constexpr auto RandomAngleTextureName = 0x620; // FString
		constexpr auto RandomNormalTexture = 0x630; // ObjectProperty
		constexpr auto RandomNormalTextureName = 0x638; // FString
		constexpr auto RandomMirrorDiscTexture = 0x648; // ObjectProperty
		constexpr auto RandomMirrorDiscTextureName = 0x650; // FString
		constexpr auto WeightMapPlaceholderTexture = 0x660; // ObjectProperty
		constexpr auto WeightMapPlaceholderTextureName = 0x668; // FString
		constexpr auto LightMapDensityTexture = 0x678; // ObjectProperty
		constexpr auto LightMapDensityTextureName = 0x680; // FString
		constexpr auto LightMapDensityNormal = 0x690; // ObjectProperty
		constexpr auto LightMapDensityNormalName = 0x698; // FString
		constexpr auto DefaultSound = 0x6a8; // ObjectProperty
		constexpr auto DefaultSoundName = 0x6b0; // FString
		constexpr auto TimeBetweenPurgingPendingKillObjects = 0x6c0; // float
		constexpr auto TimeAsyncLoadingBlocksGarbageCollection = 0x6c4; // float
		constexpr auto MaxTimeBetweenPurgingPendingKillObjects = 0x6c8; // float
		constexpr auto GarbageCollectionDelayMinimumMemoryMB = 0x6cc; // int32_t
		constexpr auto Client = 0x6d0; // ObjectProperty
		constexpr auto GamePlayers = 0x6d8; // TArray<ObjectProperty>
		constexpr auto GameViewport = 0x6e8; // ObjectProperty
		constexpr auto DeferredCommands = 0x6f0; // TArray<FString>
		constexpr auto TickCycles = 0x700; // int32_t
		constexpr auto GameCycles = 0x704; // int32_t
		constexpr auto ClientCycles = 0x708; // int32_t
		constexpr auto MaxSmoothedFrameRate = 0x70c; // float
		constexpr auto MinSmoothedFrameRate = 0x710; // float
		constexpr auto NumPawnsAllowedToBeSpawnedInAFrame = 0x714; // int32_t
		constexpr auto RemoteControlExec = 0x718; // FPointer
		constexpr auto MobileMaterialEmulator = 0x720; // FPointer
		constexpr auto C_WorldBox = 0x728; // FColor
		constexpr auto C_BrushWire = 0x72c; // FColor
		constexpr auto C_AddWire = 0x730; // FColor
		constexpr auto C_SubtractWire = 0x734; // FColor
		constexpr auto C_SemiSolidWire = 0x738; // FColor
		constexpr auto C_NonSolidWire = 0x73c; // FColor
		constexpr auto C_WireBackground = 0x740; // FColor
		constexpr auto C_ScaleBoxHi = 0x744; // FColor
		constexpr auto C_VolumeCollision = 0x748; // FColor
		constexpr auto C_BSPCollision = 0x74c; // FColor
		constexpr auto C_OrthoBackground = 0x750; // FColor
		constexpr auto C_Volume = 0x754; // FColor
		constexpr auto C_BrushShape = 0x758; // FColor
		constexpr auto StreamingDistanceFactor = 0x75c; // float
		constexpr auto ScoutClassName = 0x760; // FString
		constexpr auto TransitionType = 0x770; // ETransitionType
		constexpr auto TransitionDescription = 0x774; // FString
		constexpr auto TransitionGameType = 0x784; // FString
		constexpr auto MeshLODRange = 0x794; // float
		constexpr auto CameraRotationThreshold = 0x798; // float
		constexpr auto CameraTranslationThreshold = 0x79c; // float
		constexpr auto PrimitiveProbablyVisibleTime = 0x7a0; // float
		constexpr auto PercentUnoccludedRequeries = 0x7a4; // float
		constexpr auto MaxOcclusionPixelsFraction = 0x7a8; // float
		constexpr auto MaxFluidNumVerts = 0x7ac; // int32_t
		constexpr auto FluidSimulationTimeLimit = 0x7b0; // float
		constexpr auto MaxParticleResize = 0x7b4; // int32_t
		constexpr auto MaxParticleResizeWarn = 0x7b8; // int32_t
		constexpr auto MaxParticleVertexMemory = 0x7bc; // int32_t
		constexpr auto MaxParticleSpriteCount = 0x7c0; // int32_t
		constexpr auto MaxParticleSubUVCount = 0x7c4; // int32_t
		constexpr auto BeginUPTryCount = 0x7c8; // int32_t
		constexpr auto PendingDroppedNotes = 0x7cc; // TArray<FDropNoteInfo>
		constexpr auto DynamicCoverMeshComponentName = 0x7dc; // FString
		constexpr auto NetClientTicksPerSecond = 0x7ec; // float
		constexpr auto MaxTrackedOcclusionIncrement = 0x7f0; // float
		constexpr auto TrackedOcclusionStepSize = 0x7f4; // float
		constexpr auto DefaultSelectedMaterialColor = 0x7f8; // FLinearColor
		constexpr auto DefaultHoveredMaterialColor = 0x808; // FLinearColor
		constexpr auto SelectedMaterialColor = 0x818; // FLinearColor
		constexpr auto UnselectedMaterialColor = 0x828; // FLinearColor
		constexpr auto IgnoreSimulatedFuncWarnings = 0x838; // TArray<FName>
		constexpr auto ScreenSaverInhibitorSemaphore = 0x848; // int32_t
		constexpr auto ScreenSaverInhibitor = 0x84c; // FPointer
		constexpr auto GlobalTranslationContext = 0x854; // ObjectProperty
		constexpr auto LoadingMovieStartTime = 0x85c; // FDouble
		constexpr auto MatineeCaptureName = 0x864; // FString
		constexpr auto MatineePackageCaptureName = 0x874; // FString
		constexpr auto VisibleLevelsForMatineeCapture = 0x884; // FString
		constexpr auto MatineeCaptureFPS = 0x894; // int32_t
		constexpr auto MatineeCaptureType = 0x898; // int32_t
		constexpr auto PeerNetDriver = 0x89c; // ObjectProperty
	}

	namespace n_UUIDataSocial { // : UUIDataObject
		constexpr auto m_nPartyMembersInGame = 0x74; // uint32_t : 1
		constexpr auto m_bSearchActive = 0x74; // uint32_t : 1
		constexpr auto m_nOnlineFriendCount = 0x78; // int32_t
		constexpr auto m_nConnectedFriendCount = 0x7c; // int32_t
		constexpr auto m_nPendingFriendInvites = 0x80; // int32_t
		constexpr auto m_dwLastUpdatePartyActiveCount = 0x84; // Fdword
		constexpr auto m_nReferralPeriodSeconds = 0x88; // int32_t
		constexpr auto m_dwReferredHighestLevel = 0x8c; // Fdword
		constexpr auto m_dwReferredLongestPlayedMinutes = 0x90; // Fdword
		constexpr auto m_dwReferredReachedTier2 = 0x94; // Fdword
		constexpr auto m_dwLastSentGiftId = 0x98; // Fdword
		constexpr auto m_AllFriends = 0x9c; // TArray<ObjectProperty>
		constexpr auto m_CrossPlatformFriends = 0xac; // TArray<ObjectProperty>
		constexpr auto m_PortalFriends = 0xbc; // TArray<ObjectProperty>
		constexpr auto m_Party = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_Search = 0xdc; // TArray<ObjectProperty>
		constexpr auto m_ReferredPlayers = 0xec; // TArray<ObjectProperty>
		constexpr auto m_Referrers = 0xfc; // TArray<ObjectProperty>
		constexpr auto m_CheckLeaguePlayers = 0x10c; // TArray<ObjectProperty>
		constexpr auto m_Players = 0x11c; // TMap<None, None>
		constexpr auto m_PlayerByPortalId = 0x164; // TMap<None, None>
		constexpr auto m_sSearchName = 0x1ac; // FString
		constexpr auto m_eSearchAction = 0x1bc; // SAACT_ACTION
		constexpr auto m_sSearchTitle = 0x1c0; // TArray<FString>
		constexpr auto m_sSearchData = 0x1d0; // TArray<FString>
		constexpr auto m_fCheckLeaguePlayersTimer = 0x1e0; // float
	}

	namespace n_ADecalActorBase { // : AActor
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x280; // FPointer
		constexpr auto Decal = 0x288; // ComponentProperty
	}

	namespace n_ATgSplineActor { // : ASplineActor
		constexpr auto m_ActionPoint = 0x2e8; // ELanePusherActionPoint
		constexpr auto m_bPreview = 0x2ec; // uint32_t : 1
	}

	namespace n_ATgPawn_Vanguard { // : ATgPawn_Character
		constexpr auto r_ActiveShield = 0x3164; // ObjectProperty
		constexpr auto r_bShieldWasDestroyed = 0x316c; // uint32_t : 1
		constexpr auto c_UltTarget = 0x3170; // ObjectProperty
		constexpr auto r_UltTargetForKillCam = 0x3178; // ObjectProperty
		constexpr auto m_CachedDevices = 0x3180; // FMap_Mirror
	}

	namespace n_UUIComponent_MatchLobbySoundCues { // : UUIComponent_Display
		constexpr auto m_akSelect = 0x124; // ObjectProperty
		constexpr auto m_akRollover = 0x12c; // ObjectProperty
		constexpr auto m_akTabChange = 0x134; // ObjectProperty
		constexpr auto m_akCountdown = 0x13c; // ObjectProperty
		constexpr auto m_akLockInSelf = 0x144; // ObjectProperty
		constexpr auto m_akLockInEnemy = 0x14c; // ObjectProperty
		constexpr auto m_akLockInTeam = 0x154; // ObjectProperty
		constexpr auto m_nChampMatchStartTickHandle = 0x15c; // int32_t
		constexpr auto m_nChampSelectTickHandle = 0x160; // int32_t
		constexpr auto m_dwLastPlayedDraftAnnouncer = 0x164; // Fdword
		constexpr auto m_nChampSelectHandle = 0x168; // int32_t
	}

	namespace n_AGameInfo { // : AInfo
		constexpr auto bRestartLevel = 0x280; // uint32_t : 1
		constexpr auto bPauseable = 0x280; // uint32_t : 1
		constexpr auto bTeamGame = 0x280; // uint32_t : 1
		constexpr auto bGameEnded = 0x280; // uint32_t : 1
		constexpr auto bOverTime = 0x280; // uint32_t : 1
		constexpr auto bDelayedStart = 0x280; // uint32_t : 1
		constexpr auto bWaitingToStartMatch = 0x280; // uint32_t : 1
		constexpr auto bChangeLevels = 0x280; // uint32_t : 1
		constexpr auto bAlreadyChanged = 0x280; // uint32_t : 1
		constexpr auto bAdminCanPause = 0x280; // uint32_t : 1
		constexpr auto bGameRestarted = 0x280; // uint32_t : 1
		constexpr auto bLevelChange = 0x280; // uint32_t : 1
		constexpr auto bKickLiveIdlers = 0x280; // uint32_t : 1
		constexpr auto bUsingArbitration = 0x280; // uint32_t : 1
		constexpr auto bHasArbitratedHandshakeBegun = 0x280; // uint32_t : 1
		constexpr auto bNeedsEndGameHandshake = 0x280; // uint32_t : 1
		constexpr auto bIsEndGameHandshakeComplete = 0x280; // uint32_t : 1
		constexpr auto bHasEndGameHandshakeBegun = 0x280; // uint32_t : 1
		constexpr auto bFixedPlayerStart = 0x280; // uint32_t : 1
		constexpr auto bDoFearCostFallOff = 0x280; // uint32_t : 1
		constexpr auto bUseSeamlessTravel = 0x280; // uint32_t : 1
		constexpr auto bHasNetworkError = 0x280; // uint32_t : 1
		constexpr auto bRequiresPushToTalk = 0x280; // uint32_t : 1
		constexpr auto bIsStandbyCheckingEnabled = 0x280; // uint32_t : 1
		constexpr auto bIsStandbyCheckingOn = 0x280; // uint32_t : 1
		constexpr auto bHasStandbyCheatTriggered = 0x280; // uint32_t : 1
		constexpr auto CauseEventCommand = 0x284; // FString
		constexpr auto BugLocString = 0x294; // FString
		constexpr auto BugRotString = 0x2a4; // FString
		constexpr auto PendingArbitrationPCs = 0x2b4; // TArray<ObjectProperty>
		constexpr auto ArbitrationPCs = 0x2c4; // TArray<ObjectProperty>
		constexpr auto ArbitrationHandshakeTimeout = 0x2d4; // float
		constexpr auto GameDifficulty = 0x2d8; // float
		constexpr auto GoreLevel = 0x2dc; // int32_t
		constexpr auto GameSpeed = 0x2e0; // float
		constexpr auto DefaultPawnClass = 0x2e4; // APawn*
		constexpr auto HUDType = 0x2ec; // AHUD*
		constexpr auto SecondaryHUDType = 0x2f4; // AHUD*
		constexpr auto MaxSpectators = 0x2fc; // int32_t
		constexpr auto MaxSpectatorsAllowed = 0x300; // int32_t
		constexpr auto NumSpectators = 0x304; // int32_t
		constexpr auto MaxPlayers = 0x308; // int32_t
		constexpr auto MaxPlayersAllowed = 0x30c; // int32_t
		constexpr auto NumPlayers = 0x310; // int32_t
		constexpr auto NumBots = 0x314; // int32_t
		constexpr auto NumTravellingPlayers = 0x318; // int32_t
		constexpr auto CurrentID = 0x31c; // int32_t
		constexpr auto DefaultPlayerName = 0x320; // FString
		constexpr auto GameName = 0x330; // FString
		constexpr auto FearCostFallOff = 0x340; // float
		constexpr auto GoalScore = 0x344; // int32_t
		constexpr auto MaxLives = 0x348; // int32_t
		constexpr auto TimeLimit = 0x34c; // int32_t
		constexpr auto DeathMessageClass = 0x350; // ULocalMessage*
		constexpr auto GameMessageClass = 0x358; // UGameMessage*
		constexpr auto BaseMutator = 0x360; // ObjectProperty
		constexpr auto AccessControlClass = 0x368; // AAccessControl*
		constexpr auto AccessControl = 0x370; // ObjectProperty
		constexpr auto BroadcastHandlerClass = 0x378; // ABroadcastHandler*
		constexpr auto BroadcastHandler = 0x380; // ObjectProperty
		constexpr auto AutoTestManagerClass = 0x388; // AAutoTestManager*
		constexpr auto MyAutoTestManager = 0x390; // ObjectProperty
		constexpr auto PlayerControllerClass = 0x398; // APlayerController*
		constexpr auto PlayerReplicationInfoClass = 0x3a0; // APlayerReplicationInfo*
		constexpr auto GameReplicationInfoClass = 0x3a8; // AGameReplicationInfo*
		constexpr auto GameReplicationInfo = 0x3b0; // ObjectProperty
		constexpr auto PopulationManager = 0x3b8; // ObjectProperty
		constexpr auto PopulationManagerClass = 0x3c0; // ACrowdPopulationManagerBase*
		constexpr auto MaxIdleTime = 0x3c8; // float
		constexpr auto MaxTimeMargin = 0x3cc; // float
		constexpr auto TimeMarginSlack = 0x3d0; // float
		constexpr auto MinTimeMargin = 0x3d4; // float
		constexpr auto InactivePRIArray = 0x3d8; // TArray<ObjectProperty>
		constexpr auto Pausers = 0x3e8; // TArray<DelegateProperty>
		constexpr auto OnlineSub = 0x3f8; // ObjectProperty
		constexpr auto GameInterface = 0x400; // TScriptInterface<Class>
		constexpr auto OnlineStatsWriteClass = 0x410; // UOnlineStatsWrite*
		constexpr auto LeaderboardId = 0x418; // int32_t
		constexpr auto ArbitratedLeaderboardId = 0x41c; // int32_t
		constexpr auto CoverReplicatorBase = 0x420; // ObjectProperty
		constexpr auto OnlineGameSettingsClass = 0x428; // UOnlineGameSettings*
		constexpr auto ServerOptions = 0x430; // FString
		constexpr auto AdjustedNetSpeed = 0x440; // int32_t
		constexpr auto LastNetSpeedUpdateTime = 0x444; // float
		constexpr auto TotalNetBandwidth = 0x448; // int32_t
		constexpr auto MinDynamicBandwidth = 0x44c; // int32_t
		constexpr auto MaxDynamicBandwidth = 0x450; // int32_t
		constexpr auto StandbyRxCheatTime = 0x454; // float
		constexpr auto StandbyTxCheatTime = 0x458; // float
		constexpr auto BadPingThreshold = 0x45c; // int32_t
		constexpr auto PercentMissingForRxStandby = 0x460; // float
		constexpr auto PercentMissingForTxStandby = 0x464; // float
		constexpr auto PercentForBadPing = 0x468; // float
		constexpr auto JoinInProgressStandbyWaitTime = 0x46c; // float
		constexpr auto StreamingPauseIcon = 0x470; // ObjectProperty
		constexpr auto GameInfoClassAliases = 0x478; // TArray<FGameClassShortName>
		constexpr auto DefaultGameType = 0x488; // FString
		constexpr auto DefaultMapPrefixes = 0x498; // TArray<FGameTypePrefix>
		constexpr auto CustomMapPrefixes = 0x4a8; // TArray<FGameTypePrefix>
		constexpr auto AnimTreePoolSize = 0x4b8; // int32_t
		constexpr auto __CanUnpause__Delegate = 0x4bc; // DelegateProperty
	}

	namespace n_UMaterialExpressionTerrainLayerSwitch { // : UMaterialExpression
		constexpr auto InstanceOverride = 0xb0; // FPointer
		constexpr auto LayerUsed = 0xb8; // FExpressionInput
		constexpr auto LayerNotUsed = 0xec; // FExpressionInput
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto PreviewUsed = 0x128; // uint32_t : 1
		constexpr auto ExpressionGUID = 0x12c; // FGuid
	}

	namespace n_ATgRepInfo_Portal { // : ATgRepInfo_Deployable
		constexpr auto r_TwinDRI = 0x2e0; // ObjectProperty
		constexpr auto c_bMasterEntity = 0x2e8; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_Combo_Makoa { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_MarkedTargets = 0xcc; // TArray<FMarkedTargetHook>
	}

	namespace n_ABlockingVolume { // : AVolume
		constexpr auto bBlockCamera = 0x2bc; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_AuraMod { // : UTgInvListener
		constexpr auto m_AffectedActors = 0xc4; // TArray<ObjectProperty>
		constexpr auto m_bAuraIsActive = 0xd4; // uint32_t : 1
		constexpr auto m_CachedAuraDevice = 0xd8; // ObjectProperty
	}

	namespace n_ATgPawn { // : AGamePawn
		constexpr auto VfTable_ITgSkinnableInterface = 0x5ac; // FPointer
		constexpr auto VfTable_ITgCombatActor = 0x5b4; // FPointer
		constexpr auto VfTable_ITgGrabSource = 0x5bc; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x5c4; // FPointer
		constexpr auto VfTable_ITgInteractiveAudio = 0x5cc; // FPointer
		constexpr auto VfTable_ITgSoundNotifyActorInterface = 0x5d4; // FPointer
		constexpr auto VfTable_ITgCallbackInterface = 0x5dc; // FPointer
		constexpr auto r_vPhysTweenTarget = 0x5e4; // FVector
		constexpr auto r_eTweenState = 0x5f0; // ETweenState
		constexpr auto m_eLocalTweenState = 0x5f1; // ETweenState
		constexpr auto r_eGrabState = 0x5f2; // EGrabState
		constexpr auto m_eLocalGrabState = 0x5f3; // EGrabState
		constexpr auto r_eChargeState = 0x5f4; // EChargeState
		constexpr auto r_eDeathReason = 0x5f5; // TG_DEATH_REASON
		constexpr auto c_PreviousMeshVisibilityState = 0x5f6; // TgMeshVisibilityState
		constexpr auto r_ReplicatedDeviceState = 0x5f7; // TG_REP_DEVICE_STATE [0x31]
		constexpr auto r_eDesiredInHand = 0x628; // TG_EQUIP_POINT
		constexpr auto m_eEquippedInHand = 0x629; // TG_EQUIP_POINT
		constexpr auto r_nPackedFireMultiRanges = 0x62a; // char [0x14]
		constexpr auto r_eDesiredAIDevice = 0x63e; // TG_EQUIP_POINT
		constexpr auto r_eIsStealthed = 0x63f; // STEALTH_TYPE
		constexpr auto c_eIsStealthed = 0x640; // STEALTH_TYPE
		constexpr auto r_nInCombatNonce = 0x641; // char
		constexpr auto c_nInCombatNonceAck = 0x642; // char
		constexpr auto m_InitHUDOverlayIcon = 0x643; // DeployableOverlayIcon
		constexpr auto m_InitHUDOverlayState = 0x644; // DeployableOverlayState
		constexpr auto m_ePosture = 0x645; // TG_POSTURE
		constexpr auto m_MarkedType = 0x646; // TG_MARKED_TYPES
		constexpr auto r_eCurrentStunType = 0x647; // EStunType
		constexpr auto c_nLocalRespawnBeaconHUDState = 0x648; // char
		constexpr auto m_OverlayCurrentTypeBody = 0x649; // OverlayMICType
		constexpr auto m_OverlayCurrentTypeWeapon = 0x64a; // OverlayMICType
		constexpr auto m_eCharacterCustom1OverlayDepthGroup = 0x64b; // ESceneDepthPriorityGroup
		constexpr auto m_eForcedSilhouetteVisibility = 0x64c; // EForcedSilhouetteVisibility
		constexpr auto r_eMountState = 0x64d; // EMountState
		constexpr auto c_UITargetingType = 0x64e; // EUITargetingType
		constexpr auto m_eMetaGameState = 0x64f; // EMetaGameState
		constexpr auto m_eBotBehaviorState = 0x650; // EBotBehaviorState
		constexpr auto m_nIsInIntroState = 0x651; // char
		constexpr auto c_LocalPolymorph = 0x652; // EPolymorphType
		constexpr auto r_CurrentPolymorph = 0x653; // EPolymorphType
		constexpr auto c_ThreatLevel = 0x654; // EThreatLevel
		constexpr auto c_LastThreatLevel = 0x655; // EThreatLevel
		constexpr auto m_RangeStateFromLocalViewer = 0x656; // LocalViewerRangeState
		constexpr auto c_eCurrentAudioEmotePlaying = 0x657; // EEmote
		constexpr auto m_fPhysTweenDist = 0x658; // float
		constexpr auto r_fPhysTweenDuration = 0x65c; // float
		constexpr auto m_nPhysTweenPostureId = 0x660; // int32_t
		constexpr auto r_bPhysTweenInterrupted = 0x664; // uint32_t : 1
		constexpr auto s_bIsInGrass = 0x664; // uint32_t : 1
		constexpr auto r_bIsInItemShop = 0x664; // uint32_t : 1
		constexpr auto r_bHasLeftItemShop = 0x664; // uint32_t : 1
		constexpr auto r_bGrabInterrupted = 0x664; // uint32_t : 1
		constexpr auto r_bCanShootWhileGrabbed = 0x664; // uint32_t : 1
		constexpr auto m_PreGrabCollideActors = 0x664; // uint32_t : 1
		constexpr auto m_PreGrabBlockActors = 0x664; // uint32_t : 1
		constexpr auto r_bUsePhysFlyingForCharge = 0x664; // uint32_t : 1
		constexpr auto r_bChargeIgnoreHumanoidBlocking = 0x664; // uint32_t : 1
		constexpr auto m_bWantsCharge = 0x664; // uint32_t : 1
		constexpr auto m_bCanJumpWhileCharging = 0x664; // uint32_t : 1
		constexpr auto m_bPostChargeUseWalkSpeed = 0x664; // uint32_t : 1
		constexpr auto m_bChargeRespectsMoveSpeedMultipliers = 0x664; // uint32_t : 1
		constexpr auto c_bShouldUpdateSavedChargeState = 0x664; // uint32_t : 1
		constexpr auto m_bIgnoreFriendlyBlocking = 0x664; // uint32_t : 1
		constexpr auto m_bIgnoreEnemyBlocking = 0x664; // uint32_t : 1
		constexpr auto m_bHasDestroyedMesh = 0x664; // uint32_t : 1
		constexpr auto m_bDefaultPropsInitialized = 0x664; // uint32_t : 1
		constexpr auto m_bReconnectedWhileDead = 0x664; // uint32_t : 1
		constexpr auto m_bAffectedByVortices = 0x664; // uint32_t : 1
		constexpr auto s_LoadMeshServerSide = 0x664; // uint32_t : 1
		constexpr auto c_bDeviceHiddenDueToFullBodyAnim = 0x664; // uint32_t : 1
		constexpr auto c_bMeshHiddenDueToDeath = 0x664; // uint32_t : 1
		constexpr auto c_bHideMeshFromCameraPenetration = 0x664; // uint32_t : 1
		constexpr auto c_bHideMeshFromKismet = 0x664; // uint32_t : 1
		constexpr auto r_bInGlobalOffhandCooldown = 0x664; // uint32_t : 1
		constexpr auto bInGlobalOffhandCooldownClient = 0x664; // uint32_t : 1
		constexpr auto m_bInFireLock = 0x664; // uint32_t : 1
		constexpr auto c_bUpdatesWeaponMesh = 0x664; // uint32_t : 1
		constexpr auto c_bIsStealthMaterialOn = 0x664; // uint32_t : 1
		constexpr auto c_bShow1PWeaponAsStealthed = 0x664; // uint32_t : 1
		constexpr auto r_bIsVolumeStealthed = 0x668; // uint32_t : 1
		constexpr auto r_bIsVolumeStealthFading = 0x668; // uint32_t : 1
		constexpr auto m_bDisableVolumeStealth = 0x668; // uint32_t : 1
		constexpr auto r_bDisableVolumeStealth = 0x668; // uint32_t : 1
		constexpr auto m_bCannotBeVolumeStealthed = 0x668; // uint32_t : 1
		constexpr auto m_bPlayingStealth = 0x668; // uint32_t : 1
		constexpr auto m_bPlayingDetected = 0x668; // uint32_t : 1
		constexpr auto c_bHiddenDueToStealth = 0x668; // uint32_t : 1
		constexpr auto c_bHiddenDueToObscuringDeployable = 0x668; // uint32_t : 1
		constexpr auto r_bCanStartStealthInCombat = 0x668; // uint32_t : 1
		constexpr auto m_bIsVisionBlocker = 0x668; // uint32_t : 1
		constexpr auto m_bIsAIVisionBlocker = 0x668; // uint32_t : 1
		constexpr auto m_bApplyDistanceFade = 0x668; // uint32_t : 1
		constexpr auto r_bIsBot = 0x668; // uint32_t : 1
		constexpr auto c_bIsFrametestZombie = 0x668; // uint32_t : 1
		constexpr auto r_bIsAnimInStrafeMode = 0x668; // uint32_t : 1
		constexpr auto m_ReachedTargetSoKillRootMotion = 0x668; // uint32_t : 1
		constexpr auto s_bCanApplyEffects = 0x668; // uint32_t : 1
		constexpr auto m_bInitialized = 0x668; // uint32_t : 1
		constexpr auto m_bUseInterrupted = 0x668; // uint32_t : 1
		constexpr auto c_bIgnoreInterruption = 0x668; // uint32_t : 1
		constexpr auto r_bNoEnergyCost = 0x668; // uint32_t : 1
		constexpr auto m_bCheatUseNoEnergy = 0x668; // uint32_t : 1
		constexpr auto m_bCheatNoRecharge = 0x668; // uint32_t : 1
		constexpr auto m_bIsInvisibleToAI = 0x668; // uint32_t : 1
		constexpr auto r_bInCombatFlag = 0x668; // uint32_t : 1
		constexpr auto s_bIsStill = 0x668; // uint32_t : 1
		constexpr auto m_bHitWallThisTick = 0x668; // uint32_t : 1
		constexpr auto r_bIsAFK = 0x668; // uint32_t : 1
		constexpr auto c_bHandIKEnabledFromAnimSet = 0x668; // uint32_t : 1
		constexpr auto c_bCanDoTurnInPlaceAnim = 0x668; // uint32_t : 1
		constexpr auto c_bIsPlayingTurnInPlaceAnim = 0x668; // uint32_t : 1
		constexpr auto m_bShouldApplyCCImmuneOverlay = 0x66c; // uint32_t : 1
		constexpr auto m_bApplyAltEffects = 0x66c; // uint32_t : 1
		constexpr auto m_bCanBeMarked = 0x66c; // uint32_t : 1
		constexpr auto m_bCanBeKnockedBack = 0x66c; // uint32_t : 1
		constexpr auto m_bCausesPushblock = 0x66c; // uint32_t : 1
		constexpr auto m_bPushblockAffectsFriendlies = 0x66c; // uint32_t : 1
		constexpr auto m_bPushblockAffectsEnemies = 0x66c; // uint32_t : 1
		constexpr auto m_bIsCrowdControlImmuneKismet = 0x66c; // uint32_t : 1
		constexpr auto m_bUseSmoothNetReceiveRotation = 0x66c; // uint32_t : 1
		constexpr auto m_bForceSmoothCorrection = 0x66c; // uint32_t : 1
		constexpr auto r_bIsRotationLockedForSpectate = 0x66c; // uint32_t : 1
		constexpr auto m_bAlwaysUseAccurateRotation = 0x66c; // uint32_t : 1
		constexpr auto r_bHasAccurateRotation = 0x66c; // uint32_t : 1
		constexpr auto c_bUpdateSkelMeshWhenNotRendered = 0x66c; // uint32_t : 1
		constexpr auto c_bUpdateSkelMeshWhenNotRenderedServer = 0x66c; // uint32_t : 1
		constexpr auto r_bSilenced = 0x66c; // uint32_t : 1
		constexpr auto r_bDisarmed = 0x66c; // uint32_t : 1
		constexpr auto r_bCrippled = 0x66c; // uint32_t : 1
		constexpr auto r_bIsInStasis = 0x66c; // uint32_t : 1
		constexpr auto r_bCanBePulled = 0x66c; // uint32_t : 1
		constexpr auto s_bHasCrippleEffect = 0x66c; // uint32_t : 1
		constexpr auto c_bEnemyMatLoaded = 0x66c; // uint32_t : 1
		constexpr auto r_bIsFlashBang = 0x66c; // uint32_t : 1
		constexpr auto r_bIsBanished = 0x66c; // uint32_t : 1
		constexpr auto m_bIsRewinding = 0x66c; // uint32_t : 1
		constexpr auto r_bIsJumping = 0x66c; // uint32_t : 1
		constexpr auto r_bIsShortJump = 0x66c; // uint32_t : 1
		constexpr auto m_bIsLanding = 0x66c; // uint32_t : 1
		constexpr auto m_bAllowHigherWallJumping = 0x66c; // uint32_t : 1
		constexpr auto m_bIgnorePhysCheckForJump = 0x66c; // uint32_t : 1
		constexpr auto m_bHasPlayedDeathAnimation = 0x66c; // uint32_t : 1
		constexpr auto m_bForceDeathAnim = 0x66c; // uint32_t : 1
		constexpr auto m_bDeathFreezeVelocity = 0x670; // uint32_t : 1
		constexpr auto r_bHasRespawnBeacon = 0x670; // uint32_t : 1
		constexpr auto m_bDestroyOnOwnerDeathFlag = 0x670; // uint32_t : 1
		constexpr auto r_bNeedPlaySpawnFx = 0x670; // uint32_t : 1
		constexpr auto c_bSpawnFxPlayed = 0x670; // uint32_t : 1
		constexpr auto c_bTargeted = 0x670; // uint32_t : 1
		constexpr auto c_bTargetedLightup = 0x670; // uint32_t : 1
		constexpr auto c_bApplyDropShadow = 0x670; // uint32_t : 1
		constexpr auto m_bShowNameplate = 0x670; // uint32_t : 1
		constexpr auto c_bShowSpecialHealth = 0x670; // uint32_t : 1
		constexpr auto r_bInitialIsEnemy = 0x670; // uint32_t : 1
		constexpr auto c_bNeedsAssetLoad = 0x670; // uint32_t : 1
		constexpr auto r_bDebugShowAIDebug = 0x670; // uint32_t : 1
		constexpr auto m_SwapToDestroyedMeshOnTick = 0x670; // uint32_t : 1
		constexpr auto m_bBlockCamera = 0x670; // uint32_t : 1
		constexpr auto m_bOverlaysEnabled = 0x670; // uint32_t : 1
		constexpr auto m_b1POverlaysEnabled = 0x670; // uint32_t : 1
		constexpr auto m_b1POverlaysActive = 0x670; // uint32_t : 1
		constexpr auto m_bSilhouettesVisible = 0x670; // uint32_t : 1
		constexpr auto m_bUseSilhouettes = 0x670; // uint32_t : 1
		constexpr auto m_bIgnoreTearOffMomentum = 0x670; // uint32_t : 1
		constexpr auto m_bIsFadingOut = 0x670; // uint32_t : 1
		constexpr auto m_bUseDamageTypeForDeathAnim = 0x670; // uint32_t : 1
		constexpr auto r_bDemoCanPurchaseItems = 0x670; // uint32_t : 1
		constexpr auto m_bCanPurchaseNimble = 0x670; // uint32_t : 1
		constexpr auto s_bHasInteractedWithStore = 0x670; // uint32_t : 1
		constexpr auto s_bAlwaysRelevantExceptRoyale = 0x670; // uint32_t : 1
		constexpr auto s_bPetOwnerIsRelevant = 0x670; // uint32_t : 1
		constexpr auto m_bDoSmoothCorrectionThisTick = 0x670; // uint32_t : 1
		constexpr auto m_bOnlyTakeHeadshotDamage = 0x670; // uint32_t : 1
		constexpr auto r_bIsMounted = 0x670; // uint32_t : 1
		constexpr auto m_bIsEnteringMount = 0x670; // uint32_t : 1
		constexpr auto m_bCreateMountMeshDeferred = 0x674; // uint32_t : 1
		constexpr auto m_bUpdateEyeHeight = 0x674; // uint32_t : 1
		constexpr auto r_bJustJumped = 0x674; // uint32_t : 1
		constexpr auto m_bStunEnergyRegen = 0x674; // uint32_t : 1
		constexpr auto c_bHealAkEventPlaying = 0x674; // uint32_t : 1
		constexpr auto m_bPainAkEventPlaying = 0x674; // uint32_t : 1
		constexpr auto r_bIsDazed = 0x674; // uint32_t : 1
		constexpr auto r_bIsMarked = 0x674; // uint32_t : 1
		constexpr auto r_bIsBleeding = 0x674; // uint32_t : 1
		constexpr auto r_bIsOnFire = 0x674; // uint32_t : 1
		constexpr auto r_bIsRooted = 0x674; // uint32_t : 1
		constexpr auto r_bIsKnockedBack = 0x674; // uint32_t : 1
		constexpr auto r_bIsPoisoned = 0x674; // uint32_t : 1
		constexpr auto r_bIsSlowed = 0x674; // uint32_t : 1
		constexpr auto r_bIsFrozen = 0x674; // uint32_t : 1
		constexpr auto r_bIsCCImmune = 0x674; // uint32_t : 1
		constexpr auto r_bIsRevealed = 0x674; // uint32_t : 1
		constexpr auto r_bIsWallHacking = 0x674; // uint32_t : 1
		constexpr auto r_bIsMarkedByDruid = 0x674; // uint32_t : 1
		constexpr auto r_bIsMarkedByCorvus = 0x674; // uint32_t : 1
		constexpr auto r_bIsInSelfKnockBack = 0x674; // uint32_t : 1
		constexpr auto s_bApplyKnockbackHitEffects = 0x674; // uint32_t : 1
		constexpr auto s_bApplyGrabbedHitEffects = 0x674; // uint32_t : 1
		constexpr auto m_bUseOutlines = 0x674; // uint32_t : 1
		constexpr auto m_bIsLeaping = 0x674; // uint32_t : 1
		constexpr auto m_bCanSpawnHealthNuggetsOnDeath = 0x674; // uint32_t : 1
		constexpr auto m_bCanAutoMountOnRespawn = 0x674; // uint32_t : 1
		constexpr auto c_bShowingDisarm = 0x674; // uint32_t : 1
		constexpr auto r_bFirstSpawnWave = 0x674; // uint32_t : 1
		constexpr auto m_bWaitForIntroAnimToEnd = 0x674; // uint32_t : 1
		constexpr auto m_bIntroAnimFinished = 0x674; // uint32_t : 1
		constexpr auto m_bAllowIntroWhiteOut = 0x674; // uint32_t : 1
		constexpr auto m_bIntroWhiteOutActive = 0x678; // uint32_t : 1
		constexpr auto m_bAirAccuracyPenalty = 0x678; // uint32_t : 1
		constexpr auto c_bInLocalLineOfSightRecently = 0x678; // uint32_t : 1
		constexpr auto m_bCanBeHeadShot = 0x678; // uint32_t : 1
		constexpr auto c_bHide3PWeaponMeshWhileMounted = 0x678; // uint32_t : 1
		constexpr auto m_bShouldBeFirstPersonLastFrame = 0x678; // uint32_t : 1
		constexpr auto m_bFadeOutOnLifeAfterDeathTimerExpired = 0x678; // uint32_t : 1
		constexpr auto m_bUsesRecoil = 0x678; // uint32_t : 1
		constexpr auto m_bUsingSecondaryPhysicsAsset = 0x678; // uint32_t : 1
		constexpr auto m_bWasKilledByEnvironment = 0x678; // uint32_t : 1
		constexpr auto m_bShouldSmoothEyeHeight = 0x678; // uint32_t : 1
		constexpr auto m_bHasAstroBuff = 0x678; // uint32_t : 1
		constexpr auto m_bHasCorvusBeacon = 0x678; // uint32_t : 1
		constexpr auto r_bIsLifted = 0x678; // uint32_t : 1
		constexpr auto m_bCameraOverrideLocation = 0x678; // uint32_t : 1
		constexpr auto c_bSaveModMoveSpeed = 0x678; // uint32_t : 1
		constexpr auto c_bSaveModGravity = 0x678; // uint32_t : 1
		constexpr auto m_bBehindView = 0x678; // uint32_t : 1
		constexpr auto r_bClientUsingForced3pOption = 0x678; // uint32_t : 1
		constexpr auto c_bHasRequestedFiremodePropModSync = 0x678; // uint32_t : 1
		constexpr auto m_bJustForcedVelocity = 0x678; // uint32_t : 1
		constexpr auto c_bQueueDeviceStateRecovery = 0x678; // uint32_t : 1
		constexpr auto r_nPhysTweenFlags = 0x67c; // int32_t
		constexpr auto r_fPhysTweenSpeed = 0x680; // float
		constexpr auto m_sGameplayPackage = 0x684; // FString
		constexpr auto m_AsInteractiveAudio = 0x694; // TScriptInterface<Class>
		constexpr auto m_PawnDialogue = 0x6a4; // ObjectProperty
		constexpr auto c_fLastAttackAudioCueTimestamp = 0x6ac; // float
		constexpr auto c_fLastAttackFromBehindAudioCueTimestamp = 0x6b0; // float
		constexpr auto c_fLastAttackFromAboveAudioCueTimestamp = 0x6b4; // float
		constexpr auto c_fLastAttackFromSniperAudioCueTimestamp = 0x6b8; // float
		constexpr auto c_fRequestCooldownEmotePause = 0x6bc; // float
		constexpr auto m_vGrabDesiredRelativeLocation = 0x6c0; // FVector
		constexpr auto r_GrabSource = 0x6cc; // ObjectProperty
		constexpr auto r_fGrabDuration = 0x6d4; // float
		constexpr auto r_fGrabInitialYaw = 0x6d8; // float
		constexpr auto r_GrabAttachSocket = 0x6dc; // FName
		constexpr auto r_vGrabLocationOffset = 0x6e4; // FVector
		constexpr auto r_rGrabRotationOffset = 0x6f0; // FRotator
		constexpr auto m_vGrabDestRelLocation = 0x6fc; // FVector
		constexpr auto m_rGrabDestRelRotation = 0x708; // FRotator
		constexpr auto m_nPhysGrabPostureId = 0x714; // int32_t
		constexpr auto s_GrabbedTargets = 0x718; // TArray<ObjectProperty>
		constexpr auto r_nCannotBeGrabSource = 0x728; // int32_t
		constexpr auto s_vGrabOffsetDedicatedServer = 0x72c; // FVector
		constexpr auto m_TeleportNotifyList = 0x738; // TArray<ObjectProperty>
		constexpr auto r_fChargeInitialYaw = 0x748; // float
		constexpr auto r_fChargeInitialPitch = 0x74c; // float
		constexpr auto r_vChargeInitialLocation = 0x750; // FVector
		constexpr auto r_fChargeSpeed = 0x75c; // float
		constexpr auto r_fChargeTime = 0x760; // float
		constexpr auto r_fChargeTurnRate = 0x764; // float
		constexpr auto m_fCurrentTimeInCharge = 0x768; // float
		constexpr auto m_fPostChargeVelocityMult = 0x76c; // float
		constexpr auto m_fPostChargeVelocityCap = 0x770; // float
		constexpr auto m_SavedChargeState = 0x774; // FSavedChargeState
		constexpr auto m_nCoreMeshAsmId = 0x7a0; // int32_t
		constexpr auto m_CoreMeshAssembly = 0x7a4; // FPointer
		constexpr auto m_nBodyMeshAsmId = 0x7ac; // int32_t
		constexpr auto m_BodyMeshAssembly = 0x7b0; // FPointer
		constexpr auto m_DestroyedMeshAssembly = 0x7b8; // FPointer
		constexpr auto m_n1PHeadMeshId = 0x7c0; // int32_t
		constexpr auto r_nPawnId = 0x7c4; // int32_t
		constexpr auto c_fLastUpdateTime = 0x7c8; // float
		constexpr auto m_fSimPawnMoveSafetyTime = 0x7cc; // float
		constexpr auto m_fNetReceiveLocationTime = 0x7d0; // float
		constexpr auto m_NetReceiveLocation = 0x7d4; // FVector
		constexpr auto m_nArchetype = 0x7e0; // int32_t
		constexpr auto r_EffectManager = 0x7e4; // ObjectProperty
		constexpr auto m_Properties = 0x7ec; // TArray<FTgPropertyInstance>
		constexpr auto r_CurrentPropValues = 0x7fc; // float [0x92]
		constexpr auto m_LocalPropValues = 0xa44; // float [0x92]
		constexpr auto s_PropValuesRepResolution = 0xc8c; // float [0x92]
		constexpr auto s_DefaultPropValues = 0xed4; // float [0x92]
		constexpr auto r_fCachedMaxHealth = 0x111c; // float
		constexpr auto m_fCachedGroundProximity = 0x1120; // float
		constexpr auto m_fCachedGroundProximityTimestamp = 0x1124; // float
		constexpr auto s_DebugPropertyMods = 0x1128; // TArray<FDebugPropertyMod>
		constexpr auto m_AkActorUnoccluded = 0x1138; // ObjectProperty
		constexpr auto m_EmoteChances = 0x1140; // FEEmoteCategoryChance
		constexpr auto m_EmoteChancesAbility = 0x116c; // FEEmoteAbilityChance
		constexpr auto m_fLastEmoteTime = 0x1180; // float
		constexpr auto m_fEmoteGlobalCooldown = 0x1184; // float
		constexpr auto m_fLastEmoteCatTimes = 0x1188; // TArray<float>
		constexpr auto m_fLastPlayerVGSEmoteTimes = 0x1198; // TArray<float>
		constexpr auto m_fEmoteNonLocalCooldown = 0x11a8; // float
		constexpr auto m_fLastNonLocalEmoteTime = 0x11ac; // float
		constexpr auto m_fSoftLandVelocityCutoff = 0x11b0; // float
		constexpr auto m_fHardLandVelocityCutoff = 0x11b4; // float
		constexpr auto s_nSpawnTime = 0x11b8; // float
		constexpr auto r_nPhysicalType = 0x11bc; // int32_t
		constexpr auto r_fReconnectTime = 0x11c0; // float
		constexpr auto m_CurrentVortexList = 0x11c4; // TArray<ObjectProperty>
		constexpr auto m_CurrentBlackHoleList = 0x11d4; // TArray<ObjectProperty>
		constexpr auto m_DeathDamageType = 0x11e4; // UTgDamageType*
		constexpr auto m_DeathHitLocation = 0x11ec; // FVector
		constexpr auto m_nDeathFXMaterialHandle = 0x11f8; // int32_t
		constexpr auto r_EquipDeviceInfo = 0x11fc; // FEquipDeviceInfo [0x31]
		constexpr auto m_EquippedDevices = 0x1448; // ObjectProperty [0x31]
		constexpr auto c_EquipForm = 0x15d0; // ObjectProperty [0x31]
		constexpr auto c_EquipFormState = 0x1758; // FName [0x31]
		constexpr auto c_nmInHandSocket = 0x18e0; // FName
		constexpr auto c_CurrentTargetingDevice = 0x18e8; // ObjectProperty
		constexpr auto c_CurrentStartActionDevice = 0x18f0; // ObjectProperty
		constexpr auto c_fShouldStartActionTimeStamp = 0x18f8; // float
		constexpr auto m_CurrentInHandDevice = 0x18fc; // ObjectProperty
		constexpr auto c_nLockInHandToTargetingDevice = 0x1904; // int32_t
		constexpr auto c_WorldBracketFX = 0x1908; // ObjectProperty
		constexpr auto c_nLastProcessedFlashEventIdx = 0x1910; // int32_t
		constexpr auto r_nFirstValidFlashEventIdx = 0x1914; // int32_t
		constexpr auto r_nFlashQueIndex = 0x1918; // int32_t
		constexpr auto r_nFlashEvent = 0x191c; // int32_t [0x20]
		constexpr auto r_vFlashLocation = 0x199c; // FVector [0x20]
		constexpr auto r_vFlashRayDir = 0x1b1c; // FVector [0x20]
		constexpr auto r_vFlashRefireTime = 0x1c9c; // float [0x20]
		constexpr auto r_pFlashTarget = 0x1d1c; // ObjectProperty [0x20]
		constexpr auto r_pFlashDamageType = 0x1e1c; // UDamageType* [0x20]
		constexpr auto r_nFlashFireInfo = 0x1f1c; // int32_t [0x20]
		constexpr auto r_fFireMultiMaxRange = 0x1f9c; // float
		constexpr auto r_nFireMultiSeed = 0x1fa0; // int32_t
		constexpr auto r_fFireMultiSpreadAngle = 0x1fa4; // float
		constexpr auto s_fTauntAmount = 0x1fa8; // float
		constexpr auto m_fLastPainSound = 0x1fac; // float
		constexpr auto LightEnvironment = 0x1fb0; // ComponentProperty
		constexpr auto FireLocationOffsets = 0x1fb8; // FVector [0x31]
		constexpr auto BotTurnAcceleration = 0x2204; // float
		constexpr auto BotTurnSpeed = 0x2208; // float
		constexpr auto m_fMaxAimAssistStacks = 0x220c; // float
		constexpr auto c_fStealthStateFxSpamWindow = 0x2210; // float
		constexpr auto c_nmLastStealthFxGroup = 0x2214; // FName
		constexpr auto r_fStealthFadeRate = 0x221c; // float
		constexpr auto r_CurrentVisibilityVolumes = 0x2220; // ObjectProperty [0x2]
		constexpr auto r_ObscuringDeployables = 0x2230; // ObjectProperty [0xa]
		constexpr auto r_BlindingDeployables = 0x2280; // ObjectProperty [0xa]
		constexpr auto r_VisibleThroughWallsInstigators = 0x22d0; // ObjectProperty [0xc]
		constexpr auto r_VisibleThroughStealthInstigators = 0x2330; // ObjectProperty [0xc]
		constexpr auto m_fVolumeStealthDisableTime = 0x2390; // float
		constexpr auto c_fVolumeFadeValue = 0x2394; // float
		constexpr auto c_fDistanceFadeValue = 0x2398; // float
		constexpr auto c_fStealthFadeValue = 0x239c; // float
		constexpr auto c_fObscuringDeployableFadeValue = 0x23a0; // float
		constexpr auto c_fBlindingDeployableFadeValue = 0x23a4; // float
		constexpr auto c_fCurrentFadeValue = 0x23a8; // float
		constexpr auto c_fDistanceLastCollidingVisionRange = 0x23ac; // float
		constexpr auto c_fLocalStealthFadeRate = 0x23b0; // float
		constexpr auto c_TeleporterEnterFX = 0x23b4; // ObjectProperty
		constexpr auto c_TeleporterExitFX = 0x23bc; // ObjectProperty
		constexpr auto c_BlinkEnterFX = 0x23c4; // ObjectProperty
		constexpr auto c_BlinkExitFX = 0x23cc; // ObjectProperty
		constexpr auto c_DetectedFx = 0x23d4; // ObjectProperty
		constexpr auto c_PetSuccessfulHitFx = 0x23dc; // ObjectProperty
		constexpr auto c_fFxScaleSize = 0x23e4; // float
		constexpr auto m_fLifeAfterDeathSecs = 0x23e8; // float
		constexpr auto r_aDebugTarget = 0x23ec; // ObjectProperty
		constexpr auto r_aDebugDestination = 0x23f4; // ObjectProperty
		constexpr auto r_aDebugNextNav = 0x23fc; // ObjectProperty
		constexpr auto r_vDebugNextNavMeshPoint = 0x2404; // FVector
		constexpr auto r_vDebugSpreadoutLocation = 0x2410; // FVector
		constexpr auto r_nDebugHearingRange = 0x241c; // int32_t
		constexpr auto r_nDebugSightRange = 0x2420; // int32_t
		constexpr auto r_nDebugFOV = 0x2424; // int32_t
		constexpr auto r_sDebugAction = 0x2428; // FString
		constexpr auto r_sDebugName = 0x2438; // FString
		constexpr auto r_sDebugFactory = 0x2448; // FString
		constexpr auto s_vOneWayMovement = 0x2458; // FVector
		constexpr auto r_vDown = 0x2464; // FVector
		constexpr auto m_fMountFrictionMultiplier = 0x2470; // float
		constexpr auto m_fBackpedalPct = 0x2474; // float
		constexpr auto m_fMountBackpedalPct = 0x2478; // float
		constexpr auto r_TargetActor = 0x247c; // ObjectProperty
		constexpr auto r_LockedTarget = 0x2484; // ObjectProperty
		constexpr auto c_TargetMethod = 0x248c; // int32_t
		constexpr auto s_Pets = 0x2490; // ObjectProperty [0x8]
		constexpr auto m_PetOwner = 0x24d0; // ObjectProperty
		constexpr auto c_ActivePets = 0x24d8; // int32_t
		constexpr auto s_LastAttacker = 0x24dc; // ObjectProperty
		constexpr auto s_LastAttacked = 0x24e4; // ObjectProperty
		constexpr auto m_CurrentMeleeTarget = 0x24ec; // ObjectProperty
		constexpr auto r_Owner = 0x24f4; // ObjectProperty
		constexpr auto s_nSpawnerDeviceInstId = 0x24fc; // int32_t
		constexpr auto s_nSpawnerDeviceModeId = 0x2500; // int32_t
		constexpr auto r_DeathInfo = 0x2504; // FDeathInfo
		constexpr auto r_nResetCharacter = 0x2528; // int32_t
		constexpr auto r_nLiveRespawn = 0x252c; // int32_t
		constexpr auto DyingStateName = 0x2530; // FName
		constexpr auto m_nSpawnLocationId = 0x2538; // int32_t
		constexpr auto m_nSpawnTableId = 0x253c; // int32_t
		constexpr auto m_nSpawnTableDetailId = 0x2540; // int32_t
		constexpr auto m_LastPlayerStart = 0x2544; // ObjectProperty
		constexpr auto m_fStandingHeight = 0x254c; // float
		constexpr auto m_fStandingRadius = 0x2550; // float
		constexpr auto m_fTargetCylinderHeight = 0x2554; // float
		constexpr auto m_fTargetCylinderRadius = 0x2558; // float
		constexpr auto r_nPacingType = 0x255c; // int32_t
		constexpr auto m_CurrentUseActor = 0x2560; // ObjectProperty
		constexpr auto m_fBaseTranslationOffset = 0x2568; // float
		constexpr auto m_fCrouchTranslationOffset = 0x256c; // float
		constexpr auto r_fInCombatTime = 0x2570; // float
		constexpr auto m_fInCombatTime = 0x2574; // float
		constexpr auto m_fBaseCombatTime = 0x2578; // float
		constexpr auto m_fPhaseChangeTime = 0x257c; // float
		constexpr auto m_fPhaseChangedTimeStamp = 0x2580; // float
		constexpr auto m_PhaseChangeRemainingTime = 0x2584; // float
		constexpr auto r_nPhase = 0x2588; // int32_t
		constexpr auto c_PreviousPhase = 0x258c; // int32_t
		constexpr auto m_nInitHUDOverlayDisplayMask = 0x2590; // int32_t
		constexpr auto m_InitHUDOverlayEnemyViewDist = 0x2594; // float
		constexpr auto m_SimpleTransitionerNodes = 0x2598; // TArray<ObjectProperty>
		constexpr auto m_FireBlendNodes = 0x25a8; // TArray<ObjectProperty>
		constexpr auto m_CombatWarinessBlendNodes = 0x25b8; // TArray<ObjectProperty>
		constexpr auto m_PostureBlendNodes = 0x25c8; // TArray<ObjectProperty>
		constexpr auto m_AnimNodeBlendByIntroductions = 0x25d8; // TArray<ObjectProperty>
		constexpr auto m_DeviceModeBlendNodes = 0x25e8; // TArray<ObjectProperty>
		constexpr auto m_SkelControlLocks = 0x25f8; // TArray<ObjectProperty>
		constexpr auto m_HitReactionAnimNode = 0x2608; // TArray<ObjectProperty>
		constexpr auto m_AimOffSetChargeAnimNode = 0x2618; // TArray<ObjectProperty>
		constexpr auto m_MirroredSkelControls = 0x2628; // TArray<ObjectProperty>
		constexpr auto m_SkelControlLockNames = 0x2638; // TArray<FName>
		constexpr auto m_UpperBodyAnimNode = 0x2648; // ObjectProperty
		constexpr auto m_UpperBodyAnimNodeSequence = 0x2650; // ObjectProperty
		constexpr auto m_FullBodyAnimNode = 0x2658; // ObjectProperty
		constexpr auto m_nYawOffset = 0x2660; // int32_t
		constexpr auto m_PostureStack = 0x2664; // FPostureStack
		constexpr auto m_nTotalMarkTypes = 0x2688; // int32_t
		constexpr auto m_fKnockbackMultiplier = 0x268c; // float
		constexpr auto m_fRBPushStrengthMultiplier = 0x2690; // float
		constexpr auto m_fRBPushStrengthRange = 0x2694; // FVector2D
		constexpr auto m_PreviousNetReceiveRotation = 0x269c; // FRotator
		constexpr auto m_TargetNetReceiveRotation = 0x26a8; // FRotator
		constexpr auto m_RotationInterpRate = 0x26b4; // float
		constexpr auto m_nNetRotationCount = 0x26b8; // int32_t
		constexpr auto m_nSmoothedRemoteViewPitch = 0x26bc; // int32_t
		constexpr auto m_nPreviousReceivedRemoteViewPitch = 0x26c0; // int32_t
		constexpr auto m_nTargetRemoteViewPitch = 0x26c4; // int32_t
		constexpr auto m_PitchInterpRate = 0x26c8; // float
		constexpr auto m_nNetViewPitchCount = 0x26cc; // int32_t
		constexpr auto m_fSmoothCorrectionRate = 0x26d0; // float
		constexpr auto r_nViewYawWhenRotationLocked = 0x26d4; // int32_t
		constexpr auto m_UnpackedRemoteViewPitch = 0x26d8; // int32_t
		constexpr auto r_nPackedPitchYawForSpectate = 0x26dc; // int32_t
		constexpr auto m_pStatsTracker = 0x26e0; // FPointer
		constexpr auto m_fRewindEndFailsafeTTL = 0x26e8; // float
		constexpr auto m_LastDamager = 0x26ec; // ObjectProperty
		constexpr auto m_LastDamagerTimeStamp = 0x26f4; // int32_t
		constexpr auto s_Damagers = 0x26f8; // TArray<FPawnDamagerStruct>
		constexpr auto m_LastKnockbacker = 0x2708; // ObjectProperty
		constexpr auto m_fJumpLandingTime = 0x2710; // float
		constexpr auto m_fCeilingTraceDistForWallJumping = 0x2714; // float
		constexpr auto m_fHorseJumpHeightIncrease = 0x2718; // float
		constexpr auto r_StunTauntTarget = 0x271c; // ObjectProperty
		constexpr auto m_LocalTouchingRespawnBeacons = 0x2724; // TArray<ObjectProperty>
		constexpr auto c_LocalPC = 0x2734; // ObjectProperty
		constexpr auto c_PlayerDropShadow = 0x273c; // ComponentProperty
		constexpr auto c_PlayerDropShadowTemplate = 0x2744; // ObjectProperty
		constexpr auto c_PlayerDropShadowMIC = 0x274c; // ObjectProperty
		constexpr auto c_fPlayerDropShadowFade = 0x2754; // float
		constexpr auto c_PlayerDropShadowSocketName = 0x2758; // FName
		constexpr auto DefaultControlModuleClass = 0x2760; // UTgControlModule*
		constexpr auto m_fFaceRotationInterpTime = 0x2768; // float
		constexpr auto m_fRemainingFaceRotationInterpTime = 0x276c; // float
		constexpr auto r_nBigTeleportCount = 0x2770; // int32_t
		constexpr auto c_nTickCheckingState = 0x2774; // int32_t
		constexpr auto c_AssetManifestGroup = 0x2778; // ObjectProperty
		constexpr auto c_LevelUpFX = 0x2780; // ObjectProperty
		constexpr auto c_nLevelUpFxId = 0x2788; // int32_t
		constexpr auto s_nKillCombo = 0x278c; // int32_t
		constexpr auto s_nKillStreak = 0x2790; // int32_t
		constexpr auto r_nProfileId = 0x2794; // int32_t
		constexpr auto r_nSettingsOverrideId = 0x2798; // int32_t
		constexpr auto r_nSkinId = 0x279c; // int32_t
		constexpr auto r_nWeaponSkinId = 0x27a0; // int32_t
		constexpr auto r_nMountSkinId = 0x27a4; // int32_t
		constexpr auto r_nWardSkinId = 0x27a8; // int32_t
		constexpr auto r_nDeathStampSkinId = 0x27ac; // int32_t
		constexpr auto r_nDeathCardId = 0x27b0; // int32_t
		constexpr auto s_nInitialPlayerId = 0x27b4; // int32_t
		constexpr auto c_nHeadSkinId = 0x27b8; // int32_t
		constexpr auto m_pAmBot = 0x27bc; // FPointer
		constexpr auto m_pAmSkin = 0x27c4; // FPointer
		constexpr auto m_pAmWeaponSkin = 0x27cc; // FPointer
		constexpr auto m_pAmMountSkin = 0x27d4; // FPointer
		constexpr auto m_pAmAllSkins = 0x27dc; // TArray<FPointer>
		constexpr auto c_StunnedPostureID = 0x27ec; // int32_t
		constexpr auto c_FearedPostureID = 0x27f0; // int32_t
		constexpr auto c_DisarmedPostureID = 0x27f4; // int32_t
		constexpr auto s_Viewers = 0x27f8; // TArray<ObjectProperty>
		constexpr auto m_CurrentFlag = 0x2808; // ObjectProperty
		constexpr auto m_fLastCTFVolumeTimestamp = 0x2810; // float
		constexpr auto m_fDamageTakenRTPC = 0x2814; // float
		constexpr auto m_fDamageTakenMax = 0x2818; // float
		constexpr auto m_fDamageTakenMaxSustainDuration = 0x281c; // float
		constexpr auto m_fDamageTakenRTPCSustainDuration = 0x2820; // float
		constexpr auto s_PawnDamageMitigators = 0x2824; // TArray<FPawnDamageMitigator>
		constexpr auto m_OverlayInfosBody = 0x2834; // TArray<FOverlayInfo>
		constexpr auto m_OverlayInfosWeapon = 0x2844; // TArray<FOverlayInfo>
		constexpr auto m_ExecuteOverlayMaterialFriend = 0x2854; // ObjectProperty
		constexpr auto m_ExecuteOverlayMaterialEnemy = 0x285c; // ObjectProperty
		constexpr auto m_ShieldOverlayMaterialFriend = 0x2864; // ObjectProperty
		constexpr auto m_ShieldOverlayMaterialEnemy = 0x286c; // ObjectProperty
		constexpr auto m_ImmortalOverlayMaterialFriend = 0x2874; // ObjectProperty
		constexpr auto m_ImmortalOverlayMaterialEnemy = 0x287c; // ObjectProperty
		constexpr auto m_CharacterCustom1OverlayMaterial = 0x2884; // ObjectProperty
		constexpr auto m_FreezeOverlayMaterial = 0x288c; // ObjectProperty
		constexpr auto m_SilhouetteInfos = 0x2894; // TArray<FSilhouetteInfo>
		constexpr auto m_SilhouetteClass = 0x28a4; // UTgSilhouetteComponent*
		constexpr auto m_IgnoredHitPulseIndicies = 0x28ac; // TArray<int32_t>
		constexpr auto m_fFadeOutTime = 0x28bc; // float
		constexpr auto m_fFadeOutSpeed = 0x28c0; // float
		constexpr auto m_DeathAnimFX = 0x28c4; // ObjectProperty
		constexpr auto m_fRemainingHitReactionPulseTime = 0x28cc; // float
		constexpr auto m_fHitReactionPulseTime = 0x28d0; // float
		constexpr auto m_fDisorientSpinRate = 0x28d4; // float
		constexpr auto s_fMaxRelevancyDistanceSquared = 0x28d8; // float
		constexpr auto m_fMaxSmoothNetUpdateDist = 0x28dc; // float
		constexpr auto m_fNoSmoothNetUpdateDist = 0x28e0; // float
		constexpr auto m_fSmoothNetUpdateTime = 0x28e4; // float
		constexpr auto m_vMeshTranslationOffset = 0x28e8; // FVector
		constexpr auto m_fInitialHealthPercent = 0x28f4; // float
		constexpr auto c_fHUDHealthPercent = 0x28f8; // float
		constexpr auto m_fDamageDealtPercentAI = 0x28fc; // float
		constexpr auto m_fDamageTakenPercentAI = 0x2900; // float
		constexpr auto s_RecentHealList = 0x2904; // TArray<FHealingInfo>
		constexpr auto m_fRecentHealExpireTime = 0x2914; // float
		constexpr auto m_nCloneExpirationAttacksCount = 0x2918; // int32_t
		constexpr auto m_fCloneLeashRange = 0x291c; // float
		constexpr auto m_fCloneExpirationTime = 0x2920; // float
		constexpr auto r_CloneParentPRI = 0x2924; // ObjectProperty
		constexpr auto m_WeaponMesh = 0x292c; // ObjectProperty
		constexpr auto m_BodyMesh = 0x2934; // ComponentProperty
		constexpr auto m_HeadMesh = 0x293c; // ComponentProperty
		constexpr auto m_HeadSilhouetteIndex = 0x2944; // int32_t
		constexpr auto m_HeadOverlayIndex = 0x2948; // int32_t
		constexpr auto r_nBodyMeshOverride = 0x294c; // int32_t
		constexpr auto r_nHeadMeshOverride = 0x2950; // int32_t
		constexpr auto c_nCurrentHeadMeshID = 0x2954; // int32_t
		constexpr auto m_BobFootstepFactor = 0x2958; // float
		constexpr auto Bob = 0x295c; // float
		constexpr auto m_fVerticalBob = 0x2960; // float
		constexpr auto m_fBobRate = 0x2964; // float
		constexpr auto LandBob = 0x2968; // float
		constexpr auto JumpBob = 0x296c; // float
		constexpr auto AppliedBob = 0x2970; // float
		constexpr auto BobTime = 0x2974; // float
		constexpr auto WalkBob = 0x2978; // FVector
		constexpr auto m_fOldZ = 0x2984; // float
		constexpr auto AimSpot = 0x2988; // FVector
		constexpr auto AimNoise = 0x2994; // FVector
		constexpr auto m_fAimSpotsetLastRefresh = 0x29a0; // float
		constexpr auto m_fAimNoiseLastRefresh = 0x29a4; // float
		constexpr auto m_fAimPitch = 0x29a8; // float
		constexpr auto m_TakeHitAudioComponent = 0x29ac; // ComponentProperty
		constexpr auto m_PainAudioComponent = 0x29b4; // ComponentProperty
		constexpr auto m_TakeHitAkEvent = 0x29bc; // ObjectProperty
		constexpr auto m_TakeHeadShotAkEvent = 0x29c4; // ObjectProperty
		constexpr auto c_HealPlayAkEvent = 0x29cc; // ObjectProperty
		constexpr auto c_HealStopAkEvent = 0x29d4; // ObjectProperty
		constexpr auto m_PainAkEvent = 0x29dc; // ObjectProperty
		constexpr auto m_fLastPainEvent = 0x29e4; // float
		constexpr auto m_fPainEventCooldown = 0x29e8; // float
		constexpr auto m_FireAnimNode = 0x29ec; // ObjectProperty
		constexpr auto m_StealthPulseEffectGroup = 0x29f4; // ObjectProperty
		constexpr auto m_fStealthPulseTime = 0x29fc; // float
		constexpr auto r_fKnockedBackFrictionOverride = 0x2a00; // float
		constexpr auto r_vKnockedBackVelocityOverride = 0x2a04; // FVector
		constexpr auto m_fExtraLifestealOneTime = 0x2a10; // float
		constexpr auto r_nIncomingImpactCount = 0x2a14; // int32_t
		constexpr auto r_fReloadScale = 0x2a18; // float
		constexpr auto r_HealTarget = 0x2a1c; // ObjectProperty
		constexpr auto c_HealingBeamPSC = 0x2a24; // ComponentProperty
		constexpr auto m_OutlineMesh = 0x2a2c; // ComponentProperty
		constexpr auto m_OutlineMaterial = 0x2a34; // ObjectProperty
		constexpr auto m_NearObjectiveVolume = 0x2a3c; // ObjectProperty
		constexpr auto r_fLeapAirControl = 0x2a44; // float
		constexpr auto m_fBaseLeapAirControl = 0x2a48; // float
		constexpr auto m_fKnockAirControl = 0x2a4c; // float
		constexpr auto m_HomeguardVolumes = 0x2a50; // TArray<ObjectProperty>
		constexpr auto m_LastHomeguardTime = 0x2a60; // float
		constexpr auto m_MountMesh = 0x2a64; // ComponentProperty
		constexpr auto m_nMountPostureId = 0x2a6c; // int32_t
		constexpr auto s_fEndStealthDamage = 0x2a70; // float
		constexpr auto s_fDamageTakenDuringStealth = 0x2a74; // float
		constexpr auto m_fHUDOverlayZOffset = 0x2a78; // float
		constexpr auto m_fHUDOverlayMorphMountedZOffset = 0x2a7c; // float
		constexpr auto m_lastDamageSourceSlot = 0x2a80; // int32_t
		constexpr auto m_fLastMoveTime = 0x2a84; // float
		constexpr auto s_AttachedProjBlocker = 0x2a88; // ObjectProperty
		constexpr auto m_fScaleMesh = 0x2a90; // float
		constexpr auto m_fScaleMeshChangePerSecond = 0x2a94; // float
		constexpr auto m_fScaleCollisionHeight = 0x2a98; // float
		constexpr auto m_fScaleCollisionHeightChangePerSecond = 0x2a9c; // float
		constexpr auto m_fScaleCollisionRadius = 0x2aa0; // float
		constexpr auto m_fScaleCollisionRadiusChangePerSecond = 0x2aa4; // float
		constexpr auto m_IntroPostureID = 0x2aa8; // int32_t
		constexpr auto r_fIntroTime = 0x2aac; // float
		constexpr auto r_fIntroOffset = 0x2ab0; // float
		constexpr auto s_fIntroStartTime = 0x2ab4; // float
		constexpr auto m_fIntroProgress = 0x2ab8; // float
		constexpr auto r_ReplicatedState = 0x2abc; // FName
		constexpr auto m_RespawnNodes = 0x2ac4; // TArray<ObjectProperty>
		constexpr auto m_BuffCampIntroNodes = 0x2ad4; // TArray<ObjectProperty>
		constexpr auto m_IntialIntroState = 0x2ae4; // FName
		constexpr auto m_nmIntroWhiteOutParamName = 0x2aec; // FName
		constexpr auto m_fIntroWhiteOutScale = 0x2af4; // float
		constexpr auto m_fIntroWhiteOutUpTime = 0x2af8; // float
		constexpr auto m_fIntroWhiteOutDownTime = 0x2afc; // float
		constexpr auto r_nInsideTaskForceBase = 0x2b00; // int32_t
		constexpr auto m_HealFX3P = 0x2b04; // ObjectProperty
		constexpr auto m_ShieldFX3P = 0x2b0c; // ObjectProperty
		constexpr auto c_fNextTakeHitDisplayGroupTimestamp = 0x2b14; // float
		constexpr auto c_fNextTakeHitDisplayDelay = 0x2b18; // float
		constexpr auto r_PolymorphInstigator = 0x2b1c; // ObjectProperty
		constexpr auto m_PrePolymorphHealth = 0x2b24; // int32_t
		constexpr auto m_PolymorphMaxHealth = 0x2b28; // int32_t
		constexpr auto m_RigidBodyImpacts = 0x2b2c; // TArray<FRigidBodyImpactInfo>
		constexpr auto c_fServerTimeStamp = 0x2b3c; // float
		constexpr auto m_fZoomDistOverride = 0x2b40; // float
		constexpr auto m_fZoomDurationOverride = 0x2b44; // float
		constexpr auto r_fLastReplicatedInhandAccuracy = 0x2b48; // float
		constexpr auto c_fLastUnoccludedWeaponSoundTimestamp = 0x2b4c; // FDouble
		constexpr auto c_fThreatBehind = 0x2b54; // float
		constexpr auto c_fThreatInEffectiveRange = 0x2b58; // float
		constexpr auto c_fThreatDistanceSquared = 0x2b5c; // float
		constexpr auto c_fThreatDistance = 0x2b60; // float
		constexpr auto c_fThreatFocused = 0x2b64; // float
		constexpr auto c_fThreatFocusTarget = 0x2b68; // float
		constexpr auto c_fThreatSeenBy = 0x2b6c; // float
		constexpr auto c_fThreatDamaged = 0x2b70; // float
		constexpr auto c_fThreatOcclusion = 0x2b74; // float
		constexpr auto c_fThreatBinnedOcclusion = 0x2b78; // float
		constexpr auto c_fThreatShotAt = 0x2b7c; // float
		constexpr auto c_fThreatUlt = 0x2b80; // float
		constexpr auto c_fThreatLevelValue = 0x2b84; // float
		constexpr auto c_fThreatDecayResidual = 0x2b88; // float
		constexpr auto c_fLastThreatLevelValue = 0x2b8c; // float
		constexpr auto c_fDBGThreatDistanceFeet = 0x2b90; // float
		constexpr auto m_GameplayCurves = 0x2b94; // ObjectProperty
		constexpr auto m_nSuccessfulHitSpecialFXId = 0x2b9c; // int32_t
		constexpr auto LLegBoneNames = 0x2ba0; // TArray<FName>
		constexpr auto RLegBoneNames = 0x2bb0; // TArray<FName>
		constexpr auto LArmBoneNames = 0x2bc0; // TArray<FName>
		constexpr auto RArmBoneNames = 0x2bd0; // TArray<FName>
		constexpr auto HeadBoneNames = 0x2be0; // TArray<FName>
		constexpr auto m_HeadShotBoneName = 0x2bf0; // FName
		constexpr auto m_fMountScaleOverride = 0x2bf8; // float
		constexpr auto m_LandCameraShake = 0x2bfc; // ObjectProperty
		constexpr auto m_JumpCameraShake = 0x2c04; // ObjectProperty
		constexpr auto m_f1PTransitionFireDelay = 0x2c0c; // float
		constexpr auto m_f1PTransitionFireDelayRemaining = 0x2c10; // float
		constexpr auto m_fEnergyChargeMultiplier = 0x2c14; // float
		constexpr auto c_fRecreateTrackedProjectilesTimer = 0x2c18; // float
		constexpr auto m_fRecoilSmoothRate = 0x2c1c; // float
		constexpr auto m_rCurrentRecoil = 0x2c20; // FRotator
		constexpr auto m_rSmoothedRecoil = 0x2c2c; // FRotator
		constexpr auto m_rLastAppliedRecoil = 0x2c38; // FRotator
		constexpr auto m_fSettleDelay = 0x2c44; // float
		constexpr auto m_fSettleSpeed = 0x2c48; // float
		constexpr auto m_fRecoilSettleDeltaTimeOverflow = 0x2c4c; // float
		constexpr auto m_fRecoilSmoothDeltaTimeOverflow = 0x2c50; // float
		constexpr auto m_rVisualRecoil = 0x2c54; // FRotator
		constexpr auto m_fVisualRecoilApplicationTime = 0x2c60; // float
		constexpr auto m_fVisualRecoilDuration = 0x2c64; // float
		constexpr auto m_VisualRecoilApplied = 0x2c68; // ObjectProperty
		constexpr auto r_nmVoicePkg = 0x2c70; // FName
		constexpr auto r_eVoicePref = 0x2c78; // Fdword
		constexpr auto m_vPendingWallKnockbackHits = 0x2c7c; // TArray<FKnockbackHit>
		constexpr auto m_nPendingPlayerKnockbackHitPawnIds = 0x2c8c; // TArray<int32_t>
		constexpr auto m_fTimeOnNonBaseableSurface = 0x2c9c; // float
		constexpr auto m_fNonBaseableSurfaceAirControlDuration = 0x2ca0; // float
		constexpr auto m_fNonBaseableSurfaceLerpTime = 0x2ca4; // float
		constexpr auto m_fNonBaseableSurfaceRampUpMult = 0x2ca8; // float
		constexpr auto m_fNonBaseableSurfaceMaxMoveAmount = 0x2cac; // float
		constexpr auto m_fNonBaseableSurfaceGraceTime = 0x2cb0; // float
		constexpr auto m_fNonBaseableSurfaceExitMaxVelocity = 0x2cb4; // float
		constexpr auto m_fNonBaseableSurfaceControlPercent = 0x2cb8; // float
		constexpr auto m_OriginalMaterialsBody = 0x2cbc; // TArray<ObjectProperty>
		constexpr auto m_OriginalMaterialsHead = 0x2ccc; // TArray<ObjectProperty>
		constexpr auto m_OriginalMaterialsWeapon = 0x2cdc; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsBody = 0x2cec; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsHead = 0x2cfc; // TArray<ObjectProperty>
		constexpr auto m_ReplacementMICsWeapon = 0x2d0c; // TArray<ObjectProperty>
		constexpr auto m_fEyeHeightSmoothFactor = 0x2d1c; // float
		constexpr auto m_DeathFFWaveform = 0x2d20; // ObjectProperty
		constexpr auto m_BuffDevice = 0x2d28; // ObjectProperty
		constexpr auto m_PrincessPresenceDebuffDevice = 0x2d30; // ObjectProperty
		constexpr auto m_PrincessPresenceBuffDevice = 0x2d38; // ObjectProperty
		constexpr auto m_fFlourishTimeout = 0x2d40; // float
		constexpr auto c_nCurrentVGSPlaying = 0x2d44; // int32_t
		constexpr auto m_SingleUseOn3pTransitionDelegates = 0x2d48; // TArray<DelegateProperty>
		constexpr auto m_SingleUseOnPhysTweenEndedDelegates = 0x2d58; // TArray<DelegateProperty>
		constexpr auto m_SingleUseOnJumpDelegates = 0x2d68; // TArray<DelegateProperty>
		constexpr auto m_MountCastFX3P = 0x2d78; // ObjectProperty
		constexpr auto m_MountSummonFX3P = 0x2d80; // ObjectProperty
		constexpr auto c_vForced3pAdditionalOffset = 0x2d88; // FVector
		constexpr auto c_v3pOffsetTest = 0x2d94; // FVector
		constexpr auto c_v3pOffsetTestMounted = 0x2da0; // FVector
		constexpr auto c_vMountCameraOffset = 0x2dac; // FVector [0x3]
		constexpr auto m_vCameraOverrideLocation = 0x2dd0; // FVector
		constexpr auto m_sBotCodeNameOverride = 0x2ddc; // FString
		constexpr auto m_fHazardDistance = 0x2dec; // float
		constexpr auto m_fHazardRating = 0x2df0; // float
		constexpr auto c_fSimModMoveSpeedToSave = 0x2df4; // float
		constexpr auto c_fSavedSimModMoveSpeed = 0x2df8; // float
		constexpr auto c_fSimModGravityToSave = 0x2dfc; // float
		constexpr auto c_fSavedSimModGravity = 0x2e00; // float
		constexpr auto m_fSteepTerrainWalkableFloorZ = 0x2e04; // float
		constexpr auto m_fSteepTerrainSlowMultiplierSmall = 0x2e08; // float
		constexpr auto m_fSteepTerrainSlowMultiplierMid = 0x2e0c; // float
		constexpr auto m_fSteepTerrainSlowMultiplierLarge = 0x2e10; // float
		constexpr auto m_fSteepTerrainSlopeZMidBreakpoint = 0x2e14; // float
		constexpr auto m_CameraInvisFX3P = 0x2e18; // ObjectProperty
		constexpr auto m_TouchingIndoorVolumes = 0x2e20; // TArray<ObjectProperty>
		constexpr auto s_nMctsPlayerId = 0x2e30; // int32_t
		constexpr auto m_fHitBoneValidation = 0x2e34; // float
		constexpr auto m_nExtraTimerBarEqpSlots = 0x2e38; // TArray<int32_t>
		constexpr auto m_CachedPositionHistoryServerComponent = 0x2e48; // ComponentProperty
		constexpr auto m_CallbackContainer = 0x2e50; // ObjectProperty
		constexpr auto m_PawnMods = 0x2e58; // TArray<ObjectProperty>
		constexpr auto m_nmAppliedBlindPostProcess = 0x2e68; // FName
		constexpr auto __On3pTransitionEvent__Delegate = 0x2e70; // DelegateProperty
		constexpr auto __OnPhysTweenEndEvent__Delegate = 0x2e80; // DelegateProperty
		constexpr auto __OnJumpEvent__Delegate = 0x2e90; // DelegateProperty
	}

	namespace n_UUIComponent_ItemUIBooster { // : UUIComponent_Display
		constexpr auto m_pIcon = 0x124; // ObjectProperty
		constexpr auto m_mcBoosterName = 0x12c; // ObjectProperty
		constexpr auto m_mcBoosterAmountOwned = 0x134; // ObjectProperty
	}

	namespace n_UParticleModuleLocationSkelVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x68; // ELocationSkelVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x78; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x78; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x7c; // FName
		constexpr auto ValidAssociatedBones = 0x84; // TArray<FName>
		constexpr auto NormalToCompare = 0x94; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0xa0; // float
		constexpr auto NormalCheckTolerance = 0xa4; // float
		constexpr auto ValidMaterialIndices = 0xa8; // TArray<int32_t>
	}

	namespace n_UPath_WithinTraversalDist { // : UPathConstraint
		constexpr auto MaxTraversalDist = 0x6c; // float
		constexpr auto bSoft = 0x70; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x74; // float
	}

	namespace n_UTgDeviceForm_LongbowInhand { // : UTgDeviceForm
		constexpr auto m_bImpalerArrowFXIsActive = 0x28c; // uint32_t : 1
		constexpr auto m_bBowDrawing = 0x28c; // uint32_t : 1
		constexpr auto m_fBowDrawPercentage = 0x290; // float
		constexpr auto m_fBowDrawStartPercentage = 0x294; // float
		constexpr auto m_fBowDrawTime = 0x298; // float
		constexpr auto m_fBowDrawTotalDuration = 0x29c; // float
		constexpr auto m_LongbowOwner = 0x2a0; // ObjectProperty
		constexpr auto m_BlendByPct1P = 0x2a8; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct3P = 0x2b8; // TArray<ObjectProperty>
		constexpr auto m_ArrowSkelControl1P = 0x2c8; // ObjectProperty
		constexpr auto m_ImpalerSkelControl1P = 0x2d0; // ObjectProperty
	}

	namespace n_ATgDevice_YagoNeedler { // : ATgDevice
		constexpr auto m_CachedYagorath = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget_Jungle { // : UTgAIBehaviorAction
		constexpr auto TargetType = 0x94; // EJungleTargetType
	}

	namespace n_UTgAIBehaviorCondition_IsBotBehaviorState { // : UTgAIBehaviorCondition
		constexpr auto TestBehaviorState = 0x98; // EBotBehaviorState
	}

	namespace n_UTgDeviceFire_SnakeToss { // : UTgDeviceFire
		constexpr auto m_RecentStunnedTargets = 0x268; // TArray<FRecentStunnedTarget>
	}

	namespace n_UUIComponent_HeaderTab { // : UUIComponent_Display
		constexpr auto m_pCTA = 0x124; // ObjectProperty
		constexpr auto m_mcTwitchCTA = 0x12c; // ObjectProperty
	}

	namespace n_UMcpServiceConfig { // : UObject
		constexpr auto Protocol = 0x60; // FString
		constexpr auto Domain = 0x70; // FString
		constexpr auto TitleId = 0x80; // FString
		constexpr auto AppKey = 0x90; // FString
		constexpr auto AppSecret = 0xa0; // FString
	}

	namespace n_ATgPointOfInterest { // : ATgNavigationPoint
		constexpr auto m_nNameMsgId = 0x37c; // int32_t
		constexpr auto m_sDebugName = 0x380; // FString
	}

	namespace n_UGFxAction_OpenMovie { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MoviePlayerClass = 0x110; // UGFxMoviePlayer*
		constexpr auto MoviePlayer = 0x118; // ObjectProperty
		constexpr auto bTakeFocus = 0x120; // uint32_t : 1
		constexpr auto bCaptureInput = 0x120; // uint32_t : 1
		constexpr auto bStartPaused = 0x120; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x120; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x120; // uint32_t : 1
		constexpr auto RenderTextureMode = 0x124; // GFxRenderTextureMode
		constexpr auto RenderTexture = 0x128; // ObjectProperty
		constexpr auto CaptureKeys = 0x130; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x140; // TArray<FName>
	}

	namespace n_ATgDevice_CommanderInhand { // : ATgDevice
		constexpr auto m_fQueueFireTime = 0xa08; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xa0c; // float
	}

	namespace n_ATgDevice_DrogozInhand { // : ATgDevice
		constexpr auto m_CachedDrogozPawn = 0xa08; // ObjectProperty
		constexpr auto m_DrogozLeg2 = 0xa10; // ObjectProperty
		constexpr auto m_vSalvoProjectileSpawnOffset = 0xa18; // FVector
		constexpr auto m_bStartedSalvo = 0xa24; // uint32_t : 1
		constexpr auto m_SalvoDevice = 0xa28; // ObjectProperty
		constexpr auto m_nSalvoRockets = 0xa30; // int32_t
	}

	namespace n_UTgDeviceForm_TiberiusLeap { // : UTgDeviceForm
		constexpr auto m_CachedTiberius = 0x28c; // ObjectProperty
	}

	namespace n_UOnlineGameSearch { // : USettings
		constexpr auto MaxSearchResults = 0xa0; // int32_t
		constexpr auto Query = 0xa4; // FLocalizedStringSetting
		constexpr auto bIsLanQuery = 0xb0; // uint32_t : 1
		constexpr auto bUsesArbitration = 0xb0; // uint32_t : 1
		constexpr auto bIsSearchInProgress = 0xb0; // uint32_t : 1
		constexpr auto GameSettingsClass = 0xb4; // UOnlineGameSettings*
		constexpr auto Results = 0xbc; // TArray<FOnlineGameSearchResult>
		constexpr auto ManualSkillOverride = 0xcc; // FOverrideSkill
		constexpr auto NamedProperties = 0x100; // TArray<FNamedObjectProperty>
		constexpr auto FilterQuery = 0x110; // FOnlineGameSearchQuery
		constexpr auto AdditionalSearchCriteria = 0x130; // FString
		constexpr auto PingBucketSize = 0x140; // int32_t
		constexpr auto NumPingProbes = 0x144; // int32_t
		constexpr auto MaxPingBytes = 0x148; // int32_t
		constexpr auto SessionTemplateName = 0x14c; // FString
	}

	namespace n_ATgAIController_BehaviorLaneNpc { // : ATgAIController_Behavior
		constexpr auto GoalTarget = 0x930; // ObjectProperty
		constexpr auto bDespawnOnLoseCombatTarget = 0x938; // uint32_t : 1
		constexpr auto bIsBehindSquad = 0x938; // uint32_t : 1
		constexpr auto bTooFarFromLane = 0x938; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_IsTooFarFromLane { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UParticleModuleTrailSource { // : UParticleModuleTrailBase
		constexpr auto SourceMethod = 0x68; // ETrail2SourceMethod
		constexpr auto SelectionMethod = 0x69; // EParticleSourceSelectionMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto SourceStrength = 0x74; // FRawDistributionFloat
		constexpr auto bLockSourceStength = 0x98; // uint32_t : 1
		constexpr auto bInheritRotation = 0x98; // uint32_t : 1
		constexpr auto SourceOffsetCount = 0x9c; // int32_t
		constexpr auto SourceOffsetDefaults = 0xa0; // TArray<FVector>
	}

	namespace n_UTgInvListener_NearVengeanceTarget { // : UTgInvListener
		constexpr auto m_bIsActive = 0xc4; // uint32_t : 1
		constexpr auto m_CachedVengeance = 0xc8; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_SiegeScore { // : UTgAIBehaviorCondition
		constexpr auto ScoreThreshold = 0x98; // int32_t
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_ATgDevice_VanguardGrab { // : ATgDevice_Charge
		constexpr auto m_CachedVanguard = 0xa7c; // ObjectProperty
		constexpr auto m_GrabTarget = 0xa84; // ObjectProperty
		constexpr auto c_bServerChargeEnded = 0xa8c; // uint32_t : 1
	}

	namespace n_ATgDevice_Aura { // : ATgDevice
		constexpr auto r_fRadiusScale = 0xa08; // float
		constexpr auto m_TouchingActors = 0xa0c; // TArray<ObjectProperty>
		constexpr auto m_PreviouslyTouchedActors = 0xa1c; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0xa2c; // TArray<ObjectProperty>
		constexpr auto m_bIsAuraActive = 0xa3c; // uint32_t : 1
		constexpr auto m_fLastBlockedByBlockersTime = 0xa40; // float
		constexpr auto m_fMinBlockedByBlockersTime = 0xa44; // float
		constexpr auto m_fDelayPreviouslyTouchedActorsCheck = 0xa48; // float
		constexpr auto m_fUpdatePreviouslyTouchedActorsCheckInterval = 0xa4c; // float
		constexpr auto m_BlockedActors = 0xa50; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0xa60; // ObjectProperty
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder_Seeded { // : UParticleModuleLocationPrimitiveCylinder
		constexpr auto RandomSeedInfo = 0x104; // FParticleRandomSeedInfo
	}

	namespace n_UTgSeqEvent_EnergyUpdated { // : USequenceEvent
		constexpr auto ResultEnergy = 0x128; // int32_t
	}

	namespace n_UInterpTrackInstVisibility { // : UInterpTrackInst
		constexpr auto Action = 0x60; // EVisibilityTrackAction
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UParticleModuleUberLTISIVCLIL { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
	}

	namespace n_ATgDevice_CommanderLeap { // : ATgDevice_Leap
		constexpr auto m_Commander = 0xa10; // ObjectProperty
		constexpr auto m_Scope = 0xa18; // ObjectProperty
	}

	namespace n_ATgProj_RaumStomp { // : ATgProj_Simulated
		constexpr auto m_StompDev = 0x52c; // ObjectProperty
		constexpr auto m_StompFire = 0x534; // ObjectProperty
		constexpr auto m_fNextDamageTickIn = 0x53c; // float
		constexpr auto m_fDamageTickPeriod = 0x540; // float
		constexpr auto m_fScaleIncreasePerFoot = 0x544; // float
		constexpr auto c_AlwaysOnFx = 0x548; // TArray<ObjectProperty>
		constexpr auto m_vCollideExtent = 0x558; // FVector
		constexpr auto m_fCollisionHeightOffset = 0x564; // float
		constexpr auto m_fProjectileElementFanAngle = 0x568; // float
		constexpr auto m_fMaxStepUpAngle = 0x56c; // float
		constexpr auto m_fTanMaxStepUpAngle = 0x570; // float
		constexpr auto m_fStepUpCollisionDiagonal = 0x574; // float
		constexpr auto m_StompElements = 0x578; // TArray<FStompElement>
	}

	namespace n_UTgAIBehaviorCondition_NearbyGodDelta { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto GodThreshold = 0x9c; // int32_t
		constexpr auto bMustBeInForwardCone = 0xa0; // uint32_t : 1
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UInterpTrackInstVectorMaterialParam { // : UInterpTrackInst
		constexpr auto MICInfos = 0x60; // TArray<FVectorMaterialParamMICData>
		constexpr auto InstancedTrack = 0x70; // ObjectProperty
	}

	namespace n_ASceneCaptureActor { // : AActor
		constexpr auto SceneCapture = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_EmitterMod { // : ATgDevice
		constexpr auto m_bIsOnOthers = 0xa08; // uint32_t : 1
		constexpr auto m_bIsOnOwner = 0xa08; // uint32_t : 1
	}

	namespace n_UOnlineNewsInterfaceMcp { // : UMCPBase
		constexpr auto NewsItems = 0x80; // TArray<FNewsCacheEntry>
		constexpr auto ReadNewsDelegates = 0x90; // TArray<DelegateProperty>
		constexpr auto bNeedsTicking = 0xa0; // uint32_t : 1
		constexpr auto __OnReadNewsCompleted__Delegate = 0xa4; // DelegateProperty
	}

	namespace n_UAnimationCompressionAlgorithm_PerTrackCompression { // : UAnimationCompressionAlgorithm_RemoveLinearKeys
		constexpr auto MaxZeroingThreshold = 0x94; // float
		constexpr auto MaxPosDiffBitwise = 0x98; // float
		constexpr auto MaxAngleDiffBitwise = 0x9c; // float
		constexpr auto AllowedRotationFormats = 0xa0; // TArray<AnimationCompressionFormat>
		constexpr auto AllowedTranslationFormats = 0xb0; // TArray<AnimationCompressionFormat>
		constexpr auto bResampleAnimation = 0xc0; // uint32_t : 1
		constexpr auto bUseAdaptiveError = 0xc0; // uint32_t : 1
		constexpr auto bUseOverrideForEndEffectors = 0xc0; // uint32_t : 1
		constexpr auto bUseAdaptiveError2 = 0xc0; // uint32_t : 1
		constexpr auto ResampledFramerate = 0xc4; // float
		constexpr auto MinKeysForResampling = 0xc8; // int32_t
		constexpr auto TrackHeightBias = 0xcc; // int32_t
		constexpr auto ParentingDivisor = 0xd0; // float
		constexpr auto ParentingDivisorExponent = 0xd4; // float
		constexpr auto RotationErrorSourceRatio = 0xd8; // float
		constexpr auto TranslationErrorSourceRatio = 0xdc; // float
		constexpr auto MaxErrorPerTrackRatio = 0xe0; // float
		constexpr auto PerturbationProbeSize = 0xe4; // float
		constexpr auto PerReductionCachedData = 0xe8; // FPointer
	}

	namespace n_ATgDeploy_HealthNugget_TeamOnly { // : ATgDeploy_HealthNugget
		constexpr auto r_nTaskForceAlignment = 0x490; // int32_t
		constexpr auto m_fNuggetSpawnTime = 0x494; // float
		constexpr auto m_fNuggetGracePeriod = 0x498; // float
	}

	namespace n_ATgRespawnBeaconBase { // : ATgDestructible
		constexpr auto m_nMeshAssemblyId = 0x308; // int32_t
		constexpr auto m_ActualMeshComponent = 0x30c; // ComponentProperty
		constexpr auto m_BeaconNodes = 0x314; // TArray<ObjectProperty>
		constexpr auto c_bEnemyMatLoaded = 0x324; // uint32_t : 1
		constexpr auto m_bShouldShowSilhouetteToFriends = 0x324; // uint32_t : 1
		constexpr auto m_fDeployTime = 0x328; // float
	}

	namespace n_ATgDeploy_Shield { // : ATgDeployable
		constexpr auto bBasedOnPawn = 0x46c; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDistance { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UParticleModuleTypeDataTrail { // : UParticleModuleTypeDataBase
		constexpr auto RenderGeometry = 0x68; // uint32_t : 1
		constexpr auto RenderLines = 0x68; // uint32_t : 1
		constexpr auto RenderTessellation = 0x68; // uint32_t : 1
		constexpr auto Tapered = 0x68; // uint32_t : 1
		constexpr auto SpawnByDistance = 0x68; // uint32_t : 1
		constexpr auto TessellationFactor = 0x6c; // int32_t
		constexpr auto Tension = 0x70; // FRawDistributionFloat
		constexpr auto SpawnDistance = 0x94; // FVector
	}

	namespace n_ATgGame_Paladins_Siege { // : ATgGame_PaladinsExtended
		constexpr auto m_nPointsForCapturing = 0xa1c; // int32_t
		constexpr auto m_nPointsForPayload = 0xa20; // int32_t
		constexpr auto m_nPointsForDefending = 0xa24; // int32_t
		constexpr auto m_nPointsForPayloadCheckpoint = 0xa28; // int32_t
		constexpr auto m_nCreditsForWinningARound = 0xa2c; // int32_t
		constexpr auto m_nCreditsForCapturingPoint = 0xa30; // int32_t
		constexpr auto m_nCreditsForSuccessfulDefend = 0xa34; // int32_t
		constexpr auto m_nCreditsForSuccessfulPush = 0xa38; // int32_t
		constexpr auto m_bRespawnDeadPlayersAfterRound = 0xa3c; // uint32_t : 1
		constexpr auto m_bRespawnLivePlayersAfterRound = 0xa3c; // uint32_t : 1
		constexpr auto m_bRoundTreatment = 0xa3c; // uint32_t : 1
		constexpr auto m_bCanWinOnDefense = 0xa3c; // uint32_t : 1
		constexpr auto m_bInCapturePointOvertime = 0xa3c; // uint32_t : 1
		constexpr auto m_bInPayloadOvertime = 0xa3c; // uint32_t : 1
		constexpr auto m_bDestroyPayloadCartAfterPayloadPhase = 0xa3c; // uint32_t : 1
		constexpr auto m_bDoNotSwitchPoints = 0xa3c; // uint32_t : 1
		constexpr auto m_bHasHitCheckpoint = 0xa3c; // uint32_t : 1
		constexpr auto m_bFadeOutAtRoundEnd = 0xa3c; // uint32_t : 1
		constexpr auto m_fLosingCaptureRateModifier = 0xa40; // float
		constexpr auto m_fDurationUntilCaptureOvertime = 0xa44; // float
		constexpr auto m_fCaptureOvertimeWarningDuration = 0xa48; // float
		constexpr auto m_fPayloadDuration = 0xa4c; // float
		constexpr auto m_fPayloadOvertimeDuration = 0xa50; // float
		constexpr auto m_fPayloadDurationCheckpoint = 0xa54; // float
		constexpr auto m_fRoundEndRespawnDelay = 0xa58; // float
		constexpr auto m_fPayloadIncreaseLOSTimeTrigger = 0xa5c; // float
		constexpr auto s_nCurrentRound = 0xa60; // int32_t
	}

	namespace n_UParticleModuleLocationPrimitiveCylinder { // : UParticleModuleLocationPrimitiveBase
		constexpr auto RadialVelocity = 0xb4; // uint32_t : 1
		constexpr auto bAdjustForWorldSpace = 0xb4; // uint32_t : 1
		constexpr auto StartRadius = 0xb8; // FRawDistributionFloat
		constexpr auto StartHeight = 0xdc; // FRawDistributionFloat
		constexpr auto HeightAxis = 0x100; // CylinderHeightAxis
	}

	namespace n_UAnimNodeSequence { // : UAnimNode
		constexpr auto AnimSeqName = 0xfc; // FName
		constexpr auto Rate = 0x104; // float
		constexpr auto bPlaying = 0x108; // uint32_t : 1
		constexpr auto bLooping = 0x108; // uint32_t : 1
		constexpr auto bCauseActorAnimEnd = 0x108; // uint32_t : 1
		constexpr auto bCauseActorAnimPlay = 0x108; // uint32_t : 1
		constexpr auto bCeaseRelevantOnAnimTreeReset = 0x108; // uint32_t : 1
		constexpr auto bZeroRootRotation = 0x108; // uint32_t : 1
		constexpr auto bZeroRootTranslation = 0x108; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x108; // uint32_t : 1
		constexpr auto bNoNotifies = 0x108; // uint32_t : 1
		constexpr auto bForceRefposeWhenNotPlaying = 0x108; // uint32_t : 1
		constexpr auto bIsIssuingNotifies = 0x108; // uint32_t : 1
		constexpr auto bForceAlwaysSlave = 0x108; // uint32_t : 1
		constexpr auto bSynchronize = 0x108; // uint32_t : 1
		constexpr auto bReverseSync = 0x108; // uint32_t : 1
		constexpr auto bShowTimeLineSlider = 0x108; // uint32_t : 1
		constexpr auto bLoopCameraAnim = 0x108; // uint32_t : 1
		constexpr auto bRandomizeCameraAnimLoopStartTime = 0x108; // uint32_t : 1
		constexpr auto bCameraAnimRelativeToBase = 0x108; // uint32_t : 1
		constexpr auto m_bIgnoreFootSkelControls = 0x108; // uint32_t : 1
		constexpr auto m_bIgnoreBlendBySpeedScaling = 0x108; // uint32_t : 1
		constexpr auto bDoNotResetIfPlaying = 0x108; // uint32_t : 1
		constexpr auto bOnlyResetSynchGroupOnReplayAnim = 0x108; // uint32_t : 1
		constexpr auto bEditorOnlyAddRefPoseToAdditiveAnimation = 0x108; // uint32_t : 1
		constexpr auto bCheckForFinishAnimEarly = 0x108; // uint32_t : 1
		constexpr auto bBlendingOut = 0x108; // uint32_t : 1
		constexpr auto CurrentTime = 0x10c; // float
		constexpr auto PreviousTime = 0x110; // float
		constexpr auto EndTime = 0x114; // float
		constexpr auto AnimSeq = 0x118; // ObjectProperty
		constexpr auto AnimLinkupIndex = 0x120; // int32_t
		constexpr auto NotifyWeightThreshold = 0x124; // float
		constexpr auto SynchGroupName = 0x128; // FName
		constexpr auto SynchPosOffset = 0x130; // float
		constexpr auto CameraAnim = 0x134; // ObjectProperty
		constexpr auto ActiveCameraAnimInstance = 0x13c; // ObjectProperty
		constexpr auto CameraAnimScale = 0x144; // float
		constexpr auto CameraAnimPlayRate = 0x148; // float
		constexpr auto CameraAnimBlendInTime = 0x14c; // float
		constexpr auto CameraAnimBlendOutTime = 0x150; // float
		constexpr auto RootBoneOption = 0x154; // ERootBoneAxis [0x3]
		constexpr auto RootRotationOption = 0x157; // ERootRotationOption [0x3]
		constexpr auto DebugTrack = 0x15c; // ObjectProperty
		constexpr auto DebugCarat = 0x164; // ObjectProperty
		constexpr auto DeferredNotifies = 0x16c; // TArray<ObjectProperty>
		constexpr auto DeferredNotifyTicks = 0x17c; // TArray<FDeferredAnimNotifyTickInformation>
		constexpr auto DeferredNotifyEnds = 0x18c; // TArray<FDeferredAnimNotifyEndInformation>
		constexpr auto MetaDataSkelControlList = 0x19c; // TArray<ObjectProperty>
	}

	namespace n_UUIHudMap { // : UTgGfxScene
		constexpr auto m_nDepth = 0x1ec; // int32_t
		constexpr auto m_bInit = 0x1f0; // uint32_t : 1
		constexpr auto m_bScroll = 0x1f0; // uint32_t : 1
		constexpr auto m_bHovering = 0x1f0; // uint32_t : 1
		constexpr auto m_fSize = 0x1f4; // float
		constexpr auto m_fZoom = 0x1f8; // float
		constexpr auto m_fZoomMax = 0x1fc; // float
		constexpr auto m_fZoomRate = 0x200; // float
		constexpr auto m_fCursorRate = 0x204; // float
		constexpr auto m_fCursorSafeBound = 0x208; // float
		constexpr auto m_fCursorPanBound = 0x20c; // float
		constexpr auto m_fRadius = 0x210; // float
		constexpr auto m_fMouseX = 0x214; // float
		constexpr auto m_fMouseY = 0x218; // float
		constexpr auto m_fScrollX = 0x21c; // float
		constexpr auto m_fScrollY = 0x220; // float
		constexpr auto m_fOffsetX = 0x224; // float
		constexpr auto m_fOffsetY = 0x228; // float
		constexpr auto m_fGamepadX = 0x22c; // float
		constexpr auto m_fGamepadY = 0x230; // float
		constexpr auto m_fGamepadCursorX = 0x234; // float
		constexpr auto m_fGamepadCursorY = 0x238; // float
		constexpr auto m_fLocalPulseTimer = 0x23c; // float
		constexpr auto m_sPingName = 0x240; // FString
		constexpr auto m_sNamedAreaName = 0x250; // FString
		constexpr auto m_vBoundsCenter = 0x260; // FVector
		constexpr auto m_vBoundsExtents = 0x26c; // FVector
		constexpr auto m_fZoomAnimTimer = 0x278; // float
		constexpr auto m_fZoomAnimDuration = 0x27c; // float
		constexpr auto m_v2ZoomAnimScrollStart = 0x280; // FVector2D
		constexpr auto m_v2ZoomAnimScrollEnd = 0x288; // FVector2D
		constexpr auto m_fZoomAnimStart = 0x290; // float
		constexpr auto m_fZoomAnimEnd = 0x294; // float
		constexpr auto m_Pings = 0x298; // TArray<FUIPING_DATA>
		constexpr auto m_NamedAreas = 0x2a8; // TArray<FUIPING_DATA>
		constexpr auto m_mcMap = 0x2b8; // ObjectProperty
		constexpr auto m_mcMapZoom = 0x2c0; // ObjectProperty
		constexpr auto m_mcMapGroup = 0x2c8; // ObjectProperty
		constexpr auto m_mcMapScroll = 0x2d0; // ObjectProperty
		constexpr auto m_mcMapImage = 0x2d8; // ObjectProperty [0x2]
		constexpr auto m_mcMapCursor = 0x2e8; // ObjectProperty
		constexpr auto m_mcMapCursorLineX = 0x2f0; // ObjectProperty
		constexpr auto m_mcMapCursorLineY = 0x2f8; // ObjectProperty
		constexpr auto m_mcMapNamedAreas = 0x300; // ObjectProperty
		constexpr auto m_mcLegend = 0x308; // ObjectProperty
		constexpr auto m_mcLegendItem = 0x310; // ObjectProperty [0x2]
		constexpr auto m_mcChampions = 0x320; // ObjectProperty
		constexpr auto m_mcChampion = 0x328; // ObjectProperty [0x8]
		constexpr auto m_mcChampionIcon = 0x368; // ObjectProperty [0x8]
		constexpr auto m_mcChampionCount = 0x3a8; // ObjectProperty [0x8]
		constexpr auto m_mcScoreboard = 0x3e8; // ObjectProperty
		constexpr auto m_mcLocalPulse = 0x3f0; // ObjectProperty
		constexpr auto m_mcLocalPlayer = 0x3f8; // ObjectProperty
		constexpr auto m_mcCoordinates = 0x400; // ObjectProperty
		constexpr auto m_mcWaypoint = 0x408; // ObjectProperty [0x4]
		constexpr auto m_mcCoordXA = 0x428; // ObjectProperty [0x8]
		constexpr auto m_mcCoordXB = 0x468; // ObjectProperty [0x8]
		constexpr auto m_mcCoordYA = 0x4a8; // ObjectProperty [0x8]
		constexpr auto m_mcCoordYB = 0x4e8; // ObjectProperty [0x8]
		constexpr auto m_mcTeam = 0x528; // ObjectProperty [0x4]
		constexpr auto m_mcPlayer = 0x548; // FBGTEAM_PLAYER [0x4]
		constexpr auto m_mcPlayerMute = 0x688; // ObjectProperty [0x4]
		constexpr auto m_mcPlayerVoice = 0x6a8; // ObjectProperty [0x4]
	}

	namespace n_UTgSeqAct_AIFreeze { // : USequenceAction
		constexpr auto TaskForceNumber = 0x108; // int32_t
	}

	namespace n_ULightComponent { // : UActorComponent
		constexpr auto SceneInfo = 0x88; // FPointer
		constexpr auto WorldToLight = 0x90; // FMatrix
		constexpr auto LightToWorld = 0xd0; // FMatrix
		constexpr auto LightGuid = 0x110; // FGuid
		constexpr auto LightmapGuid = 0x120; // FGuid
		constexpr auto Brightness = 0x130; // float
		constexpr auto LightColor = 0x134; // FColor
		constexpr auto Function = 0x138; // ObjectProperty
		constexpr auto bEnabled = 0x140; // uint32_t : 1
		constexpr auto CastShadows = 0x140; // uint32_t : 1
		constexpr auto CastStaticShadows = 0x140; // uint32_t : 1
		constexpr auto CastDynamicShadows = 0x140; // uint32_t : 1
		constexpr auto bCastCompositeShadow = 0x140; // uint32_t : 1
		constexpr auto bAffectCompositeShadowDirection = 0x140; // uint32_t : 1
		constexpr auto bNonModulatedSelfShadowing = 0x140; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x140; // uint32_t : 1
		constexpr auto bAllowPreShadow = 0x140; // uint32_t : 1
		constexpr auto bForceDynamicLight = 0x140; // uint32_t : 1
		constexpr auto UseDirectLightMap = 0x140; // uint32_t : 1
		constexpr auto bHasLightEverBeenBuiltIntoLightMap = 0x140; // uint32_t : 1
		constexpr auto bCanAffectDynamicPrimitivesOutsideDynamicChannel = 0x140; // uint32_t : 1
		constexpr auto bRenderLightShafts = 0x140; // uint32_t : 1
		constexpr auto bUseImageReflectionSpecular = 0x140; // uint32_t : 1
		constexpr auto bPrecomputedLightingIsValid = 0x140; // uint32_t : 1
		constexpr auto bExplicitlyAssignedLight = 0x140; // uint32_t : 1
		constexpr auto bAllowCompositingIntoDLE = 0x140; // uint32_t : 1
		constexpr auto LightEnvironment = 0x144; // ComponentProperty
		constexpr auto LightingChannels = 0x14c; // FLightingChannelContainer
		constexpr auto LightAffectsClassification = 0x150; // ELightAffectsClassification
		constexpr auto LightShadowMode = 0x151; // ELightShadowMode
		constexpr auto ModShadowColor = 0x154; // FLinearColor
		constexpr auto ModShadowFadeoutTime = 0x164; // float
		constexpr auto ModShadowFadeoutExponent = 0x168; // float
		constexpr auto LightListIndex = 0x16c; // int32_t
		constexpr auto ShadowProjectionTechnique = 0x170; // EShadowProjectionTechnique
		constexpr auto ShadowFilterQuality = 0x171; // EShadowFilterQuality
		constexpr auto MinShadowResolution = 0x174; // int32_t
		constexpr auto MaxShadowResolution = 0x178; // int32_t
		constexpr auto ShadowFadeResolution = 0x17c; // int32_t
		constexpr auto OcclusionDepthRange = 0x180; // float
		constexpr auto BloomScale = 0x184; // float
		constexpr auto BloomThreshold = 0x188; // float
		constexpr auto BloomScreenBlendThreshold = 0x18c; // float
		constexpr auto BloomTint = 0x190; // FColor
		constexpr auto RadialBlurPercent = 0x194; // float
		constexpr auto OcclusionMaskDarkness = 0x198; // float
		constexpr auto ReflectionSpecularBrightness = 0x19c; // float
		constexpr auto DetailMode = 0x1a0; // EDetailMode
	}

	namespace n_UUIComponent_HealthBar { // : UUIComponent_Display
		constexpr auto m_mcHealthBarTicks = 0x124; // TArray<ObjectProperty>
		constexpr auto m_mcHealthBarTickPool = 0x134; // TArray<ObjectProperty>
		constexpr auto m_mcHealthBarContainer = 0x144; // ObjectProperty
		constexpr auto m_BarTickTypes = 0x14c; // TArray<FBarTickTypes>
		constexpr auto m_ArmorBarTickInfo = 0x15c; // FBarTickTypes
		constexpr auto m_nLastUsedHealthTickColorFrame = 0x19c; // int32_t
		constexpr auto m_fDisplayedMaxHealth = 0x1a0; // float
		constexpr auto m_fDisplayedHealthPct = 0x1a4; // float
		constexpr auto m_fActualHealthPct = 0x1a8; // float
		constexpr auto m_fLastDisplayedHealthPct = 0x1ac; // float
		constexpr auto m_fDisplayedHealthNoArmorPct = 0x1b0; // float
		constexpr auto m_fActualHealthNoArmorPct = 0x1b4; // float
		constexpr auto m_fLastDisplayedHealthNoArmorPct = 0x1b8; // float
		constexpr auto m_fDisplayedMaxArmor = 0x1bc; // float
		constexpr auto m_mcArmorBarTicks = 0x1c0; // TArray<ObjectProperty>
		constexpr auto m_mcArmorBarTickPool = 0x1d0; // TArray<ObjectProperty>
		constexpr auto m_mcArmorBarContainer = 0x1e0; // ObjectProperty
		constexpr auto m_mcArmorBarFrame = 0x1e8; // ObjectProperty
		constexpr auto m_fDisplayedArmorPct = 0x1f0; // float
		constexpr auto m_fActualArmorPct = 0x1f4; // float
		constexpr auto m_fLastDisplayedArmorPct = 0x1f8; // float
		constexpr auto m_nMaxArmorTicks = 0x1fc; // int32_t
		constexpr auto m_nCurrentArmorTicks = 0x200; // int32_t
		constexpr auto m_fArmorBarWidth = 0x204; // float
		constexpr auto m_fArmorTickPadding = 0x208; // float
		constexpr auto m_fDisplayedShieldPct = 0x20c; // float
		constexpr auto m_fActualShieldPct = 0x210; // float
		constexpr auto m_fLastDisplayedShieldPct = 0x214; // float
		constexpr auto m_fHealthPerTick = 0x218; // float
		constexpr auto m_nMaxHealthTicks = 0x21c; // int32_t
		constexpr auto m_nCurrentHealthTicks = 0x220; // int32_t
		constexpr auto m_fBarWidth = 0x224; // float
		constexpr auto m_fTickPadding = 0x228; // float
		constexpr auto m_fLowHealthThreshold = 0x22c; // float
		constexpr auto m_bUseAbyssalEchoTickColor = 0x230; // uint32_t : 1
	}

	namespace n_UMeshComponentFactory { // : UPrimitiveComponentFactory
		constexpr auto Materials = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_SummerEventOverview { // : UUIComponent_Display
		constexpr auto m_grOverview = 0x124; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_FirstShotDuringOrAfterStealth { // : UTgInvListener
		constexpr auto m_bWasStealthed = 0xc4; // uint32_t : 1
		constexpr auto m_fLastStealthTime = 0xc8; // float
	}

	namespace n_USeqAct_SetApexClothingParam { // : USequenceAction
		constexpr auto bEnableApexClothingSimulation = 0x108; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_ActiveDuringDimensionalLink { // : UTgInvListener
		constexpr auto m_CachedLinkDevice = 0xc4; // ObjectProperty
		constexpr auto m_bCardIsActive = 0xcc; // uint32_t : 1
	}

	namespace n_UTgAchievement_HealInOneMatch { // : UTgAchievement
		constexpr auto m_nHealingDealt = 0x94; // int32_t
	}

	namespace n_ANavMeshObstacle { // : AActor
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x280; // FPointer
		constexpr auto bEnabled = 0x288; // uint32_t : 1
		constexpr auto bPreserveInternalGeo = 0x288; // uint32_t : 1
	}

	namespace n_ARB_RadialImpulseActor { // : ARigidBodyBase
		constexpr auto RenderComponent = 0x280; // ComponentProperty
		constexpr auto ImpulseComponent = 0x288; // ComponentProperty
		constexpr auto ImpulseCount = 0x290; // char
	}

	namespace n_USeqAct_ConsoleCommand { // : USequenceAction
		constexpr auto Command = 0x108; // FString
		constexpr auto Commands = 0x118; // TArray<FString>
	}

	namespace n_UTgStaticMeshComponent { // : UStaticMeshComponent
		constexpr auto VfTable_ITgMeshCompInterface_MaterialStack = 0x310; // FPointer
		constexpr auto c_bFxApplied = 0x318; // uint32_t : 1
		constexpr auto c_FxList = 0x31c; // TArray<ObjectProperty>
		constexpr auto c_DatabaseFxList = 0x32c; // TArray<ObjectProperty>
		constexpr auto c_FxAssemblyData = 0x33c; // TArray<FFx_AssemblyData>
		constexpr auto m_nAssemblyId = 0x34c; // int32_t
		constexpr auto m_MaterialStackManager = 0x350; // ObjectProperty
	}

	namespace n_UUIComponent_FuriaHolyWrathBar { // : UUIComponent_Display
		constexpr auto m_mcChargePctMask = 0x124; // ObjectProperty
		constexpr auto m_mcChargingFlash = 0x12c; // ObjectProperty
		constexpr auto m_mcChargePctTip = 0x134; // ObjectProperty
		constexpr auto m_mcWrathTierBackground = 0x13c; // ObjectProperty
		constexpr auto m_CurrentViewFuria = 0x144; // ObjectProperty
		constexpr auto m_fPrevWrathAmt = 0x14c; // float
		constexpr auto m_fPrevWrathTier = 0x150; // float
		constexpr auto m_nWrathChangeDir = 0x154; // int32_t
		constexpr auto m_bHideOnGamepad = 0x158; // uint32_t : 1
		constexpr auto m_bHideOnKeyboard = 0x158; // uint32_t : 1
		constexpr auto m_bIsActive = 0x158; // uint32_t : 1
		constexpr auto m_fKeyboardTranslation = 0x15c; // float
	}

	namespace n_AInterpActor { // : ADynamicSMActor
		constexpr auto bShouldSaveForCheckpoint = 0x2d0; // uint32_t : 1
		constexpr auto bMonitorMover = 0x2d0; // uint32_t : 1
		constexpr auto bMonitorZVelocity = 0x2d0; // uint32_t : 1
		constexpr auto bDestroyProjectilesOnEncroach = 0x2d0; // uint32_t : 1
		constexpr auto bContinueOnEncroachPhysicsObject = 0x2d0; // uint32_t : 1
		constexpr auto bStopOnEncroach = 0x2d0; // uint32_t : 1
		constexpr auto bContinueOnEncroachNonPawn = 0x2d0; // uint32_t : 1
		constexpr auto bShouldShadowParentAllAttachedActors = 0x2d0; // uint32_t : 1
		constexpr auto bIsLift = 0x2d0; // uint32_t : 1
		constexpr auto MyMarker = 0x2d4; // ObjectProperty
		constexpr auto MaxZVelocity = 0x2dc; // float
		constexpr auto StayOpenTime = 0x2e0; // float
		constexpr auto OpenSound = 0x2e4; // ObjectProperty
		constexpr auto OpeningAmbientSound = 0x2ec; // ObjectProperty
		constexpr auto OpenedSound = 0x2f4; // ObjectProperty
		constexpr auto CloseSound = 0x2fc; // ObjectProperty
		constexpr auto ClosingAmbientSound = 0x304; // ObjectProperty
		constexpr auto ClosedSound = 0x30c; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x314; // ComponentProperty
	}

	namespace n_UUIComponent_Item { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcType = 0x12c; // ObjectProperty
		constexpr auto m_mcDescription = 0x134; // ObjectProperty
		constexpr auto m_mcArtIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcFrame = 0x144; // ObjectProperty
		constexpr auto m_Item = 0x14c; // ObjectProperty
		constexpr auto m_bCacheDirty = 0x154; // uint32_t : 1
		constexpr auto m_bDataDirty = 0x154; // uint32_t : 1
		constexpr auto m_bUseBaseName = 0x154; // uint32_t : 1
		constexpr auto m_sDescription = 0x158; // FString
		constexpr auto m_sType = 0x168; // FString
		constexpr auto m_sName = 0x178; // FString
		constexpr auto m_fDescriptionCenterOffset = 0x188; // float
		constexpr auto m_nTickCallback = 0x18c; // int32_t
	}

	namespace n_UTgRecoilKeyframe { // : UObject
		constexpr auto firingTime = 0x60; // float
		constexpr auto RecoilPerShot = 0x64; // FRawDistributionFloat
	}

	namespace n_UUIEOMLAcquisition { // : UTgGfxScene
		constexpr auto VfTable_IAcquisitionHandler = 0x1ec; // FPointer
	}

	namespace n_UAnimNotify_AkEvent { // : UAnimNotify
		constexpr auto AkEvent = 0x68; // ObjectProperty
		constexpr auto bFollowActor = 0x70; // uint32_t : 1
		constexpr auto m_bIgnoreIfMeshHidden = 0x70; // uint32_t : 1
		constexpr auto m_bIgnoreIfActorHidden = 0x70; // uint32_t : 1
		constexpr auto BoneName = 0x74; // FName
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_BarrierTank { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_AmmoSkelControlNames = 0x544; // TArray<FName>
		constexpr auto m_AmmoSkelControls = 0x554; // TArray<ObjectProperty>
		constexpr auto m_CachedBarrierTankPawn = 0x564; // ObjectProperty
	}

	namespace n_UUIComponent_RatingInteractable { // : UUIComponent_Interactable
		constexpr auto m_mcRatingIcon = 0x140; // ObjectProperty
	}

	namespace n_UUIComponent_NotificationEntry { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcDesc = 0x12c; // ObjectProperty
		constexpr auto m_mcTimestamp = 0x134; // ObjectProperty
		constexpr auto m_mcCategory = 0x13c; // ObjectProperty
		constexpr auto m_mcItemIconTexture = 0x144; // ObjectProperty
		constexpr auto m_mcGFxImageStack = 0x14c; // ObjectProperty
		constexpr auto m_mcChestImageStack = 0x154; // ObjectProperty
		constexpr auto m_mcDefaultIcon = 0x15c; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x164; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x16c; // ObjectProperty
		constexpr auto m_pAvatar = 0x174; // ObjectProperty
		constexpr auto m_pCTA = 0x17c; // ObjectProperty
		constexpr auto m_pGoToButton = 0x184; // ObjectProperty
		constexpr auto m_pClearButton = 0x18c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x194; // ObjectProperty
	}

	namespace n_UUIComponent_OwnershipProgress { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcOwnedAmt = 0x12c; // ObjectProperty
		constexpr auto m_mcTotalAmt = 0x134; // ObjectProperty
		constexpr auto m_mcProgress = 0x13c; // ObjectProperty
	}

	namespace n_UCloudStorageBaseCloudSaveSystemKVS { // : UObject
		constexpr auto CloudStorage = 0x60; // ObjectProperty
	}

	namespace n_UUIProfileMini { // : UTgGfxScene
		constexpr auto m_bSearching = 0x1ec; // uint32_t : 1
		constexpr auto m_bShowMinimize = 0x1ec; // uint32_t : 1
		constexpr auto m_mcExit = 0x1f0; // ObjectProperty
		constexpr auto m_mcSpinner = 0x1f8; // ObjectProperty
		constexpr auto m_mcMinimize = 0x200; // ObjectProperty
		constexpr auto m_mcSearching = 0x208; // ObjectProperty
		constexpr auto m_mcSearchingTitle = 0x210; // ObjectProperty
		constexpr auto m_mcSearchingSubtitle = 0x218; // ObjectProperty
		constexpr auto m_SearchingCancel = 0x220; // ObjectProperty
		constexpr auto m_pSearchingGamepadKey = 0x228; // ObjectProperty
		constexpr auto m_mcPlayer = 0x230; // ObjectProperty
		constexpr auto m_mcPlayerLevel = 0x238; // ObjectProperty
		constexpr auto m_mcPlayerEquipableTitle = 0x240; // ObjectProperty
		constexpr auto m_mcBoostAccount = 0x248; // ObjectProperty
		constexpr auto m_mcBoostAccountIcon = 0x250; // ObjectProperty
		constexpr auto m_mcBoostAccountFrame = 0x258; // ObjectProperty
		constexpr auto m_mcBoostAccountTooltip = 0x260; // ObjectProperty
		constexpr auto m_mcBoostAccountTooltipTitle = 0x268; // ObjectProperty
		constexpr auto m_mcBoostAccountTooltipTimer = 0x270; // ObjectProperty
		constexpr auto m_mcBoostAccountTooltipEntry = 0x278; // ObjectProperty [0x4]
		constexpr auto m_mcBoostVIP = 0x298; // ObjectProperty
		constexpr auto m_mcBoostVIPCount = 0x2a0; // ObjectProperty
		constexpr auto m_mcBoostVIPIcon = 0x2a8; // ObjectProperty
		constexpr auto m_mcBoostVIPFrame = 0x2b0; // ObjectProperty
		constexpr auto m_mcBoostVIPTooltip = 0x2b8; // ObjectProperty
		constexpr auto m_mcBoostVIPTooltipTitle = 0x2c0; // ObjectProperty
		constexpr auto m_mcBoostVIPTooltipTimer = 0x2c8; // ObjectProperty
		constexpr auto m_mcBoostVIPTooltipEntry = 0x2d0; // ObjectProperty [0x4]
		constexpr auto m_mcParty = 0x2f0; // ObjectProperty
		constexpr auto m_mcPartyCount = 0x2f8; // ObjectProperty
		constexpr auto m_mcPartyIcon = 0x300; // ObjectProperty
		constexpr auto m_mcPartyFrame = 0x308; // ObjectProperty
		constexpr auto m_mcPartyTooltip = 0x310; // ObjectProperty
		constexpr auto m_mcPartyTooltipTitle = 0x318; // ObjectProperty
		constexpr auto m_mcPartyTooltipDesc = 0x320; // ObjectProperty
		constexpr auto m_mcPartyTooltipIcon = 0x328; // ObjectProperty
		constexpr auto m_mcPartyTooltipEntry0 = 0x330; // ObjectProperty
		constexpr auto m_mcPartyTooltipEntry1 = 0x338; // ObjectProperty
		constexpr auto m_mcPartyTooltipEntry2 = 0x340; // ObjectProperty
		constexpr auto m_mcTencentNetcafeStatus = 0x348; // ObjectProperty
		constexpr auto m_mcTencentNetcafeTooltip = 0x350; // ObjectProperty
		constexpr auto m_mcTencentNetcafeTooltipTitle = 0x358; // ObjectProperty
		constexpr auto m_mcTencentNetcafeTooltipDesc = 0x360; // ObjectProperty
		constexpr auto m_mcTencentNetcafeTooltipEntry0 = 0x368; // ObjectProperty
		constexpr auto m_PlayerLevelProgress = 0x370; // ObjectProperty
		constexpr auto m_PlayerCurrency = 0x378; // ObjectProperty
		constexpr auto m_PlayerName = 0x380; // ObjectProperty
		constexpr auto m_Avatar = 0x388; // ObjectProperty
		constexpr auto m_MatchInvite = 0x390; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByCombat { // : UTgAnimNodeBlendList
		constexpr auto m_TgP = 0x168; // ObjectProperty
	}

	namespace n_UTgAnimNotify_ViewShake { // : UAnimNotify_ViewShake
		constexpr auto m_fShakeRadius = 0xbc; // float
		constexpr auto m_fDuration = 0xc0; // float
		constexpr auto m_fAmplitude = 0xc4; // float
		constexpr auto m_bUseLocationRadiusBasedShake = 0xc8; // uint32_t : 1
	}

	namespace n_UGameCheatManager { // : UCheatManager
		constexpr auto DebugCameraControllerRef = 0x80; // ObjectProperty
		constexpr auto DebugCameraControllerClass = 0x88; // ADebugCameraController*
		constexpr auto DebugCameraControllerClassName = 0x90; // FString
	}

	namespace n_UUIScene_UILobbyBoosterSelect { // : UUIScene
		constexpr auto m_pBoosts = 0x1cc; // ObjectProperty
		constexpr auto m_pAcceptButton = 0x1d4; // ObjectProperty
		constexpr auto m_pCancelButton = 0x1dc; // ObjectProperty
		constexpr auto m_pActivateAction = 0x1e4; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x1ec; // ObjectProperty
	}

	namespace n_UTgSkeletalMeshComponent_Weapon { // : UTgSkeletalMeshComponent
		constexpr auto m_nmFire = 0x868; // FName
		constexpr auto m_nmFireLoop = 0x870; // FName
		constexpr auto m_nmFireLoopTailSound = 0x878; // FName
		constexpr auto m_bDoNotPlayFireParticlesIfHidden = 0x880; // uint32_t : 1
		constexpr auto m_bKillFiringLoopParticlesOnHidden = 0x880; // uint32_t : 1
		constexpr auto m_bCanPlayFireParticles = 0x880; // uint32_t : 1
		constexpr auto m_bCanPlayFireLoopParticles = 0x880; // uint32_t : 1
		constexpr auto m_bCanPlayFireSounds = 0x880; // uint32_t : 1
		constexpr auto m_bCanPlayFireLoopSounds = 0x880; // uint32_t : 1
		constexpr auto m_nFireLoopActiveBitMask = 0x884; // int32_t [0x5]
	}

	namespace n_UTgAISquad_Minion { // : UTgAISquad
		constexpr auto s_fNextClusterTime = 0xa8; // float
		constexpr auto s_fNextMergeTime = 0xac; // float
	}

	namespace n_UParticleLightEnvironmentComponent { // : UDynamicLightEnvironmentComponent
		constexpr auto ReferenceCount = 0x158; // int32_t
		constexpr auto NumPooledReuses = 0x15c; // int32_t
		constexpr auto SharedInstigator = 0x160; // ObjectProperty
		constexpr auto SharedParticleSystem = 0x168; // ObjectProperty
		constexpr auto bAllowDLESharing = 0x170; // uint32_t : 1
	}

	namespace n_ATgDevice_HealingStation { // : ATgDevice_TurretMod
		constexpr auto m_fFireTimer = 0xa08; // float
		constexpr auto m_CachedPawnOwner = 0xa0c; // ObjectProperty
	}

	namespace n_UUIComponent_RolledItem { // : UUIComponent_Display
		constexpr auto m_pCard = 0x124; // ObjectProperty
		constexpr auto m_pLegendaryCard = 0x12c; // ObjectProperty
		constexpr auto m_pItem = 0x134; // ObjectProperty
		constexpr auto m_mcItemDuplicateLabel = 0x13c; // ObjectProperty
		constexpr auto m_pReplacementItem = 0x144; // ObjectProperty
		constexpr auto m_pFrameButton = 0x14c; // ObjectProperty
		constexpr auto m_SubItems = 0x154; // ObjectProperty
		constexpr auto m_pEquipButton = 0x15c; // ObjectProperty
		constexpr auto m_pEquippedText = 0x164; // ObjectProperty
		constexpr auto bRollover = 0x16c; // uint32_t : 1
		constexpr auto m_akItemAnimCurrency = 0x170; // ObjectProperty
	}

	namespace n_UCloudSaveSystem { // : UObject
		constexpr auto KeyValueStore = 0x60; // TScriptInterface<Class>
		constexpr auto DataBlobStore = 0x70; // TScriptInterface<Class>
		constexpr auto OnGetSaveDataCallbacks = 0x80; // TArray<FGetSaveDataCallbackStruct>
		constexpr auto OnSetSaveDataCallbacks = 0x90; // TArray<FSetSaveDataCallbackStruct>
		constexpr auto DeleteSaveDataCallback = 0xa0; // DelegateProperty
		constexpr auto ActiveSlotForDelete = 0xb0; // int32_t
		constexpr auto ActiveSaveSlotOperations = 0xb4; // TArray<FSaveSlotOperation>
		constexpr auto __OnGetSaveDataCallback__Delegate = 0xc4; // DelegateProperty
		constexpr auto __SaveSystemCallback__Delegate = 0xd4; // DelegateProperty
	}

	namespace n_USeqAct_DrawText { // : USequenceAction
		constexpr auto DisplayTimeSeconds = 0x108; // float
		constexpr auto bDisplayOnObject = 0x10c; // uint32_t : 1
		constexpr auto DrawTextInfo = 0x110; // FKismetDrawTextInfo
	}

	namespace n_ATgMapBoundsVolume { // : AVolume
		constexpr auto MinimapImage = 0x2bc; // ObjectProperty
	}

	namespace n_ATgGame_PaladinsExtended { // : ATgGame_Paladins
		constexpr auto m_fWinningTickets = 0x868; // float
		constexpr auto m_bTicketsPersist = 0x86c; // uint32_t : 1
		constexpr auto m_bKillLanePusherOnWallDestroyed = 0x86c; // uint32_t : 1
		constexpr auto m_bKeepThisPointForNextRound = 0x86c; // uint32_t : 1
		constexpr auto m_bConvergeCompletely = 0x86c; // uint32_t : 1
		constexpr auto m_bCanCaptureDuringSurvival = 0x86c; // uint32_t : 1
		constexpr auto m_bCanAutoPushForward = 0x86c; // uint32_t : 1
		constexpr auto m_bConvergeCompletelyAfterDelay = 0x86c; // uint32_t : 1
		constexpr auto m_bOverrideSpawnTableID = 0x86c; // uint32_t : 1
		constexpr auto m_bActivateSpawnGatesAtStart = 0x86c; // uint32_t : 1
		constexpr auto m_bRevivePlayersWhenSiegeEngineDies = 0x86c; // uint32_t : 1
		constexpr auto m_bStasisTimerOn = 0x86c; // uint32_t : 1
		constexpr auto m_bActivateAllCapturePoints = 0x86c; // uint32_t : 1
		constexpr auto m_bPointContested = 0x86c; // uint32_t : 1
		constexpr auto m_bPointCaptureOvertimeTF1 = 0x86c; // uint32_t : 1
		constexpr auto m_bPointCaptureOvertimeTF2 = 0x86c; // uint32_t : 1
		constexpr auto m_bSimpleOvertime = 0x86c; // uint32_t : 1
		constexpr auto m_bSimpleOvertimeEnabled = 0x86c; // uint32_t : 1
		constexpr auto m_bCapturePointContestDurationEnabled = 0x86c; // uint32_t : 1
		constexpr auto m_bTF1Backsliding = 0x86c; // uint32_t : 1
		constexpr auto m_bTF2Backsliding = 0x86c; // uint32_t : 1
		constexpr auto m_bEndRoundWhenPointCaptured = 0x86c; // uint32_t : 1
		constexpr auto m_bSpawnLanePusherWhenPointCaptured = 0x86c; // uint32_t : 1
		constexpr auto m_bCaptureSpawnAlerts = 0x86c; // uint32_t : 1
		constexpr auto m_bResetPlayersNotInSpawnRoomDisabled = 0x86c; // uint32_t : 1
		constexpr auto m_fTicketsForKill = 0x870; // float
		constexpr auto m_fTicketsPerCaptureTick = 0x874; // float
		constexpr auto m_fTicketsBonusPerMultiCapture = 0x878; // float
		constexpr auto m_fTicketsPerPointCapture = 0x87c; // float
		constexpr auto m_fTF1Tickets = 0x880; // float
		constexpr auto m_fTF2Tickets = 0x884; // float
		constexpr auto m_fTicketsPerTicketDisparity = 0x888; // float
		constexpr auto m_fSecondsPerTicketDisparity = 0x88c; // float
		constexpr auto m_fMaximumDisparitySeconds = 0x890; // float
		constexpr auto m_fObjectiveRepickTickets = 0x894; // float
		constexpr auto m_fLastObjectiveRepickTickets = 0x898; // float
		constexpr auto m_fRoundLimitDuration = 0x89c; // float
		constexpr auto s_fRoundLimitElapsed = 0x8a0; // float
		constexpr auto m_nPointsForReachingTicketMax = 0x8a4; // int32_t
		constexpr auto m_nPointsForReachingRoundTimeLimit = 0x8a8; // int32_t
		constexpr auto m_fSecondaryGoalScore = 0x8ac; // float
		constexpr auto m_fSecondaryScoreAmount = 0x8b0; // float
		constexpr auto m_fObjectivePickTime = 0x8b4; // float
		constexpr auto m_fSetupObjectivePickTime = 0x8b8; // float
		constexpr auto m_fSpawnGateOpenTime = 0x8bc; // float
		constexpr auto m_fAttackersSpawnGateOpenTime = 0x8c0; // float
		constexpr auto m_fDefendersSpawnGateOpenTime = 0x8c4; // float
		constexpr auto m_fSetupSpawnGateOpenTime = 0x8c8; // float
		constexpr auto m_fObjectiveActivationTime = 0x8cc; // float
		constexpr auto m_SpawnTableIndex = 0x8d0; // int32_t
		constexpr auto m_CapturedPoint = 0x8d4; // ObjectProperty
		constexpr auto m_LastActiveCapturePoint = 0x8dc; // ObjectProperty
		constexpr auto m_CapturePointQueue = 0x8e4; // TArray<ObjectProperty>
		constexpr auto s_nCurrentCapturePointQueueIndex = 0x8f4; // int32_t
		constexpr auto m_CardVendor = 0x8f8; // TArray<FCardInfo>
		constexpr auto m_nRegLanePusherHPScaling = 0x908; // int32_t
		constexpr auto m_nRegLanePusherPowerScaling = 0x90c; // int32_t
		constexpr auto m_nGuardianHPScaling = 0x910; // int32_t
		constexpr auto m_nGuardianPowerScaling = 0x914; // int32_t
		constexpr auto m_nOuterGateHPScaling = 0x918; // int32_t
		constexpr auto m_nInnerGateHPScaling = 0x91c; // int32_t
		constexpr auto m_nBaseObjectiveHPScaling = 0x920; // int32_t
		constexpr auto m_TF1InnerWall = 0x924; // ObjectProperty
		constexpr auto m_TF1OuterWall = 0x92c; // ObjectProperty
		constexpr auto m_TF1BaseObjective = 0x934; // ObjectProperty
		constexpr auto m_TF2InnerWall = 0x93c; // ObjectProperty
		constexpr auto m_TF2OuterWall = 0x944; // ObjectProperty
		constexpr auto m_TF2BaseObjective = 0x94c; // ObjectProperty
		constexpr auto m_nForcedObjectiveIndex = 0x954; // int32_t
		constexpr auto m_nCountdown = 0x958; // int32_t
		constexpr auto m_fSpeedScale = 0x95c; // float
		constexpr auto m_fRespawnOffset = 0x960; // float
		constexpr auto m_fRespawnIncreaseOverTime = 0x964; // float
		constexpr auto m_fTimeDeltaRespawnIncrease = 0x968; // float
		constexpr auto m_fDefenseRespawnIncrease = 0x96c; // float
		constexpr auto m_fAttackRespawnIncrease = 0x970; // float
		constexpr auto m_fRespawnTimeCap = 0x974; // float
		constexpr auto m_fNoSiegeEngineRespawnModification = 0x978; // float
		constexpr auto m_AttackDefendState = 0x97c; // FName
		constexpr auto m_DefaultGameMode = 0x984; // EGameMode
		constexpr auto m_fConvergeStartDistance = 0x988; // float
		constexpr auto m_fConvergeRate = 0x98c; // float
		constexpr auto m_fStartConvergeTime = 0x990; // float
		constexpr auto m_fConvergeSafeDistance = 0x994; // float
		constexpr auto ConvergeDevice = 0x998; // ObjectProperty
		constexpr auto m_fAutoPushForwardDelay = 0x9a0; // float
		constexpr auto m_fAutoPushForwardSpeedScale = 0x9a4; // float
		constexpr auto m_fStopAutoPushDelay = 0x9a8; // float
		constexpr auto m_nCreditsForHoldingObjective = 0x9ac; // int32_t
		constexpr auto m_nCreditsBonusPerContested = 0x9b0; // int32_t
		constexpr auto m_nCreditsForHoldingPayload = 0x9b4; // int32_t
		constexpr auto m_fFogCompleteConvergeDelay = 0x9b8; // float
		constexpr auto m_fCapturePointsPerSecond1 = 0x9bc; // float
		constexpr auto m_fCapturePointsPerSecond2 = 0x9c0; // float
		constexpr auto m_fCapturePointsPerSecond3 = 0x9c4; // float
		constexpr auto m_fCapturePointsPerSecond4 = 0x9c8; // float
		constexpr auto m_fCapturePointsPerSecond5 = 0x9cc; // float
		constexpr auto m_fPointContestDuration = 0x9d0; // float
		constexpr auto m_fPointOvertimeDuration = 0x9d4; // float
		constexpr auto m_fPointOvertimeDrainPercPerSec = 0x9d8; // float
		constexpr auto m_fPointClaimDuration = 0x9dc; // float
		constexpr auto m_fOvertimeActiveTime = 0x9e0; // float
		constexpr auto m_fOvertimeActiveTimeMemory = 0x9e4; // float [0x3]
		constexpr auto m_nOvertimeActiveTimeEntry = 0x9f0; // int32_t
		constexpr auto m_fOvertimeLeft = 0x9f4; // float
		constexpr auto m_fBackslidePercent = 0x9f8; // float
		constexpr auto m_fBackslideDelay = 0x9fc; // float
		constexpr auto m_fBackslideRate = 0xa00; // float
		constexpr auto s_nCurrentActivePointIndex = 0xa04; // int32_t
		constexpr auto m_nAttackingTaskforce = 0xa08; // int32_t
		constexpr auto m_SnappedWaypointIndicatorOffset = 0xa0c; // FVector
		constexpr auto m_fGamePauseDelay = 0xa18; // float
	}

	namespace n_UUIComponent_EventChallengeMapRegion { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcUnlockTime = 0x12c; // ObjectProperty
		constexpr auto m_mcUnlockTimeText = 0x134; // ObjectProperty
		constexpr auto m_mcActive = 0x13c; // ObjectProperty
		constexpr auto m_mcStates = 0x144; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_ReloadCard { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_nPendingHitCounter = 0xcc; // int32_t
	}

	namespace n_UUIScene_UICredits { // : UUIScene
		constexpr auto m_nCurrentPage = 0x1cc; // int32_t
		constexpr auto m_pPages = 0x1d0; // TArray<ObjectProperty>
		constexpr auto m_pUpArrow = 0x1e0; // ObjectProperty
		constexpr auto m_pDownArrow = 0x1e8; // ObjectProperty
	}

	namespace n_UApexDynamicComponent { // : UApexComponentBase
		constexpr auto ComponentDynamicResources = 0x2b0; // FPointer
	}

	namespace n_USeqAct_ConvertToString { // : USequenceAction
		constexpr auto bIncludeVarComment = 0x108; // uint32_t : 1
		constexpr auto VarSeparator = 0x10c; // FString
		constexpr auto NumberOfInputs = 0x11c; // int32_t
	}

	namespace n_UTgClientSettings { // : UObject
		constexpr auto MinimapScaling = 0x60; // float
		constexpr auto UIScaling = 0x64; // float
		constexpr auto HUDScaling = 0x68; // float
		constexpr auto CombatTextScaling = 0x6c; // float
		constexpr auto ChatScaling = 0x70; // float
		constexpr auto ChatFadeout = 0x74; // float
		constexpr auto OverlayGodName = 0x78; // ENamePlateName
		constexpr auto ShowFriendStateNotifications = 0x79; // EFriendStateNotifications
		constexpr auto TargetingLineStyle = 0x7a; // ETargetingLineStyle
		constexpr auto TargetingPreviewStyle = 0x7b; // ETargetingPreviewStyle
		constexpr auto TargetingReticleStyle = 0x7c; // ETargetingReticleStyle
		constexpr auto TargetingHighlightStyle = 0x7d; // ETargetingHighlightStyle
		constexpr auto CastMode = 0x7e; // ECastMode
		constexpr auto MapPlacement = 0x7f; // EMapPlacement
		constexpr auto ControlIconStyle = 0x80; // EControlIconStyle
		constexpr auto SelectedColorBlindOption = 0x81; // EColorBlindOption
		constexpr auto CombinedCrossplayOption = 0x82; // ECrossplayCombinedSetting
		constexpr auto CrossInputMethod = 0x83; // ECrossInputMethod
		constexpr auto DesiredAspectRatio = 0x84; // EAspectRatio
		constexpr auto OverlayShowLocalPlayer = 0x88; // uint32_t : 1
		constexpr auto DisableHelpMessages = 0x88; // uint32_t : 1
		constexpr auto ShowInHandTargeting = 0x88; // uint32_t : 1
		constexpr auto DisableTargetingAid = 0x88; // uint32_t : 1
		constexpr auto VerticalTargetingPreviews = 0x88; // uint32_t : 1
		constexpr auto DisableProfanityFilter = 0x88; // uint32_t : 1
		constexpr auto ShowTeamTags = 0x88; // uint32_t : 1
		constexpr auto SpectateDamage = 0x88; // uint32_t : 1
		constexpr auto SpectateHeals = 0x88; // uint32_t : 1
		constexpr auto SpectateCrits = 0x88; // uint32_t : 1
		constexpr auto SpectateGold = 0x88; // uint32_t : 1
		constexpr auto SpectateXP = 0x88; // uint32_t : 1
		constexpr auto SpectateOutlines = 0x88; // uint32_t : 1
		constexpr auto ShowRentNotification = 0x88; // uint32_t : 1
		constexpr auto ShowHUDScore = 0x88; // uint32_t : 1
		constexpr auto ShowHUDEnemy = 0x88; // uint32_t : 1
		constexpr auto ShowHUDStats = 0x88; // uint32_t : 1
		constexpr auto ShowHUDItems = 0x88; // uint32_t : 1
		constexpr auto ShowWardPings = 0x88; // uint32_t : 1
		constexpr auto ShowCauterizeHealthBar = 0x88; // uint32_t : 1
		constexpr auto bShowCardCooldowns = 0x88; // uint32_t : 1
		constexpr auto DoNotDisturb = 0x88; // uint32_t : 1
		constexpr auto LoadAssistModeSubLevel = 0x88; // uint32_t : 1
		constexpr auto bTargetingAlwaysShowPreview = 0x88; // uint32_t : 1
		constexpr auto bUseCastQueueing = 0x88; // uint32_t : 1
		constexpr auto bUseFixedPitchMode = 0x88; // uint32_t : 1
		constexpr auto NewUserPromptTutorialMatch = 0x88; // uint32_t : 1
		constexpr auto NewUserFinished = 0x88; // uint32_t : 1
		constexpr auto VendorStoreTopTier = 0x88; // uint32_t : 1
		constexpr auto bEnableHelpPopups = 0x88; // uint32_t : 1
		constexpr auto ColorBlindMode = 0x88; // uint32_t : 1
		constexpr auto ColorBlindModeShader = 0x88; // uint32_t : 1
		constexpr auto bCharacterVolume = 0x8c; // uint32_t : 1
		constexpr auto MasterMute = 0x8c; // uint32_t : 1
		constexpr auto SFXMute = 0x8c; // uint32_t : 1
		constexpr auto MusicMute = 0x8c; // uint32_t : 1
		constexpr auto VoiceMute = 0x8c; // uint32_t : 1
		constexpr auto MatchNotifierMute = 0x8c; // uint32_t : 1
		constexpr auto AllPlayerMute = 0x8c; // uint32_t : 1
		constexpr auto bEnableVoiceChat = 0x8c; // uint32_t : 1
		constexpr auto bUsePushToTalkForVoiceChat = 0x8c; // uint32_t : 1
		constexpr auto QueueWaitRegion = 0x8c; // uint32_t : 1
		constexpr auto QueueWaitSolo = 0x8c; // uint32_t : 1
		constexpr auto DisableCrossplay = 0x8c; // uint32_t : 1
		constexpr auto AutoPurchase = 0x8c; // uint32_t : 1
		constexpr auto AutoSkill = 0x8c; // uint32_t : 1
		constexpr auto bToggleZoom = 0x8c; // uint32_t : 1
		constexpr auto DisableJoystickInput = 0x8c; // uint32_t : 1
		constexpr auto EnableControllerFeedback = 0x8c; // uint32_t : 1
		constexpr auto EnableGyroInput = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudTeams = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudCombat = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudHealth = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudSkills = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudTeamUI = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudTeamDeathMarkers = 0x8c; // uint32_t : 1
		constexpr auto bEnableHudMinimap = 0x8c; // uint32_t : 1
		constexpr auto bReticleBloom = 0x8c; // uint32_t : 1
		constexpr auto bChangeReticleOverEnemy = 0x8c; // uint32_t : 1
		constexpr auto bEnableSpecatorPlayerIcons = 0x8c; // uint32_t : 1
		constexpr auto bShowSpectatorItems = 0x8c; // uint32_t : 1
		constexpr auto bPublicParty = 0x8c; // uint32_t : 1
		constexpr auto bShownVaultTutorial = 0x8c; // uint32_t : 1
		constexpr auto bEnableSpectate = 0x8c; // uint32_t : 1
		constexpr auto blockNonFriendChat = 0x90; // uint32_t : 1
		constexpr auto newUserFinishedTutorial = 0x90; // uint32_t : 1
		constexpr auto bShowLiveVideo = 0x90; // uint32_t : 1
		constexpr auto ShownBountyCoinLinkPrompt = 0x90; // uint32_t : 1
		constexpr auto TeamTagFormat = 0x94; // int32_t
		constexpr auto FogOfWarDimness = 0x98; // float
		constexpr auto MinimapOpacity = 0x9c; // float
		constexpr auto DemoBotId = 0xa0; // int32_t
		constexpr auto CastQueueTime = 0xa4; // float
		constexpr auto FixedPitchLowerBoundDegrees = 0xa8; // float
		constexpr auto FixedPitchUpperBoundDegrees = 0xac; // float
		constexpr auto PlayNowTabId = 0xb0; // int32_t
		constexpr auto VendorStoreTabId = 0xb4; // int32_t
		constexpr auto VendorStoreTypeId = 0xb8; // int32_t
		constexpr auto VendorStoreTypeRecId = 0xbc; // int32_t
		constexpr auto LeagueSelection = 0xc0; // int32_t
		constexpr auto VPSelection = 0xc4; // int32_t
		constexpr auto ColorBlindModeShaderType = 0xc8; // int32_t
		constexpr auto ColorBlindModeIntensity = 0xcc; // float
		constexpr auto MasterVolume = 0xd0; // float
		constexpr auto SFXVolume = 0xd4; // float
		constexpr auto MusicVolume = 0xd8; // float
		constexpr auto VoiceVolume = 0xdc; // float
		constexpr auto MatchNotifierVolume = 0xe0; // float
		constexpr auto VoiceChatVolume = 0xe4; // float
		constexpr auto VoiceChatMicVolume = 0xe8; // float
		constexpr auto nAudioPanning = 0xec; // int32_t
		constexpr auto DesiredFOV = 0xf0; // float
		constexpr auto fGamma = 0xf4; // float
		constexpr auto fControllerFeedbackStrength = 0xf8; // float
		constexpr auto nEnableHudDamage = 0xfc; // int32_t
		constexpr auto nReticleColor = 0x100; // int32_t
		constexpr auto nReticleType = 0x104; // int32_t
		constexpr auto nHealFeedMode = 0x108; // int32_t
		constexpr auto nVGSType = 0x10c; // int32_t
		constexpr auto nScoreboardType = 0x110; // int32_t
		constexpr auto nSpectatorBlueTeamSeriesScore = 0x114; // int32_t
		constexpr auto nSpectatorRedTeamSeriesScore = 0x118; // int32_t
		constexpr auto TwitchServer = 0x11c; // int32_t
		constexpr auto TwitchBitrate = 0x120; // int32_t
		constexpr auto TwitchFramerate = 0x124; // int32_t
		constexpr auto TwitchMicVolume = 0x128; // int32_t
		constexpr auto TwitchGameVolume = 0x12c; // int32_t
		constexpr auto TwitchResolution = 0x130; // int32_t
		constexpr auto TwitchMicMute = 0x134; // int32_t
		constexpr auto TwitchGameMute = 0x138; // int32_t
		constexpr auto TwitchSaveUsername = 0x13c; // int32_t
		constexpr auto TwitchTitle = 0x140; // FString
		constexpr auto TwitchUsername = 0x150; // FString
		constexpr auto DemoVideo = 0x160; // FString
		constexpr auto DemoResults = 0x170; // TArray<FString>
		constexpr auto CustomGameQueueIndex = 0x180; // int32_t
		constexpr auto CurrentMultiQueues = 0x184; // TArray<int32_t>
		constexpr auto OptOutMultiQueues = 0x194; // TArray<int32_t>
		constexpr auto loadingPortraitBanner = 0x1a4; // int32_t
		constexpr auto newUserWatchedVideos = 0x1a8; // TArray<int32_t>
		constexpr auto ChosenSkinId = 0x1b8; // int32_t
		constexpr auto ChosenClassId = 0x1bc; // int32_t
		constexpr auto ChosenWeaponId = 0x1c0; // int32_t
		constexpr auto ChosenWeaponSkinId = 0x1c4; // int32_t
		constexpr auto ChosenPedestalId = 0x1c8; // int32_t
		constexpr auto SelectedChampionSortIndex = 0x1cc; // int32_t
		constexpr auto m_CTAItemIds = 0x1d0; // TArray<int32_t>
		constexpr auto m_PlayerCTAName = 0x1e0; // FString
		constexpr auto m_TransientItemsAcquired = 0x1f0; // TArray<int32_t>
		constexpr auto m_SavedLoginVersion = 0x200; // FString
		constexpr auto m_LastLoginVersion = 0x210; // FString
		constexpr auto m_SavedBattlePassLevel = 0x220; // int32_t
		constexpr auto m_LastLoginBattlePassLevel = 0x224; // int32_t
	}

	namespace n_UTgAnimNotify_SetMICParam { // : UAnimNotify
		constexpr auto m_nmParamName = 0x68; // FName
		constexpr auto m_fTargetValue = 0x70; // float
	}

	namespace n_UTgAchievement_SprayAfterKilling { // : UTgAchievement
		constexpr auto m_fKillTime = 0x94; // float
	}

	namespace n_UUIScene_UICouponAcquisition { // : UUIScene
		constexpr auto m_CouponAcquisitionInput = 0x1cc; // ObjectProperty
	}

	namespace n_ATgProj_BunnyHeal { // : ATgProj_Simulated
		constexpr auto m_fRetargetingTimer = 0x52c; // float
		constexpr auto m_fRetargetTime = 0x530; // float
		constexpr auto m_pBouncedFrom = 0x534; // ObjectProperty
		constexpr auto m_CachedBunnyHeal = 0x53c; // ObjectProperty
	}

	namespace n_UTgSkelCon_LookAt { // : USkelControlLookAt
		constexpr auto m_Owner = 0x16c; // ObjectProperty
		constexpr auto m_DeployOwner = 0x174; // ObjectProperty
		constexpr auto m_bAimAtEnemyTarget = 0x17c; // uint32_t : 1
		constexpr auto m_AlwaysInterpolateTarget = 0x17c; // uint32_t : 1
		constexpr auto m_bHadTargetLastTick = 0x17c; // uint32_t : 1
	}

	namespace n_UTgGameplayCurvesSet_DamageFalloff { // : UTgGameplayCurvesSet
		constexpr auto DamageFalloff = 0x64; // FRawDistributionFloat
		constexpr auto bIsRangeNormalized = 0x88; // uint32_t : 1
		constexpr auto bExcludeEffectiveRange = 0x88; // uint32_t : 1
	}

	namespace n_ATgCollisionProxy_Vortex { // : ATgCollisionProxy
		constexpr auto m_fGroundSpeedStrafePct = 0x2b4; // float
		constexpr auto m_fGroundSpeedToVortex = 0x2b8; // float
		constexpr auto m_fGroundSpeedPctRetained = 0x2bc; // float
		constexpr auto m_fInnerRadius = 0x2c0; // float
		constexpr auto m_bEnabled = 0x2c4; // uint32_t : 1
		constexpr auto m_bOnlyAffectCurrentTarget = 0x2c4; // uint32_t : 1
		constexpr auto m_LastInstigator = 0x2c8; // ObjectProperty
	}

	namespace n_ATgSkeletalMeshActor_Pedestal { // : ATgSkeletalMeshActor_Lobby
		constexpr auto m_DefaultBot = 0x568; // FPointer
		constexpr auto m_DefaultPedestalActors = 0x570; // TArray<ObjectProperty>
		constexpr auto m_bUsingDefaultPedestal = 0x580; // uint32_t : 1
		constexpr auto m_PedestalType = 0x584; // EPedestalType
	}

	namespace n_UUIData_StreamSettings { // : UUIData
		constexpr auto m_bIsStreaming = 0x64; // uint32_t : 1
		constexpr auto m_Settings = 0x68; // FPComOpenBroadcasterSettings
	}

	namespace n_USpeechRecognition { // : UObject
		constexpr auto Language = 0x60; // FString
		constexpr auto ConfidenceThreshhold = 0x70; // float
		constexpr auto Vocabularies = 0x74; // TArray<FRecogVocabulary>
		constexpr auto VoiceData = 0x84; // TArray<char>
		constexpr auto WorkingVoiceData = 0x94; // TArray<char>
		constexpr auto UserData = 0xa4; // TArray<char>
		constexpr auto InstanceData = 0xb4; // FRecogUserData [0x4]
		constexpr auto bDirty = 0x104; // uint32_t : 1
		constexpr auto bInitialised = 0x104; // uint32_t : 1
		constexpr auto FnxVoiceData = 0x108; // FPointer
	}

	namespace n_UTgDeviceFire_CommanderUlt { // : UTgDeviceFire
		constexpr auto m_fMaxZTrace = 0x268; // float
		constexpr auto m_fZOffSet = 0x26c; // float
		constexpr auto m_fXYOffset = 0x270; // float
	}

	namespace n_ATgProj_Reversal { // : ATgProj_Simulated
		constexpr auto m_fDamageOverride = 0x52c; // float
	}

	namespace n_UTgInventoryObject_Listen_BigGame { // : UTgInvListener
		constexpr auto m_fDisengageHitTime = 0xc4; // float
		constexpr auto m_DisengageHitTarget = 0xc8; // ObjectProperty
	}

	namespace n_UMotionBlurEffect { // : UPostProcessEffect
		constexpr auto MaxVelocity = 0x88; // float
		constexpr auto MotionBlurAmount = 0x8c; // float
		constexpr auto FullMotionBlur = 0x90; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0x94; // float
		constexpr auto CameraTranslationThreshold = 0x98; // float
	}

	namespace n_UUIComponent_NotificationTab { // : UUIComponent_Display
		constexpr auto m_pCTA = 0x124; // ObjectProperty
	}

	namespace n_UUILogin { // : UTgGfxScene
		constexpr auto m_eState = 0x1ec; // UILoginState
		constexpr auto m_bAlreadyPlaysPaladins = 0x1f0; // uint32_t : 1
		constexpr auto m_nLoginAttempts = 0x1f4; // int32_t
		constexpr auto m_fAnimTimer = 0x1f8; // float
		constexpr auto m_fLoadingTimer = 0x1fc; // float
		constexpr auto m_mcFade = 0x200; // ObjectProperty
		constexpr auto m_mcLogo = 0x208; // ObjectProperty
		constexpr auto m_mcLoginInputCredentials = 0x210; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsHeader = 0x218; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsUsername = 0x220; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsUsernameLabel = 0x228; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsPassword = 0x230; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsPasswordLabel = 0x238; // ObjectProperty
		constexpr auto m_mcLoginInputCredentialsMessage = 0x240; // ObjectProperty
		constexpr auto m_LoginInputCredentialsSubmit = 0x248; // ObjectProperty
		constexpr auto m_LoginInputCredentialsCreateNewAccount = 0x250; // ObjectProperty
		constexpr auto m_LoginInputCredentialsGoogleLogin = 0x258; // ObjectProperty
		constexpr auto m_LoginInputCredentialsFacebookLogin = 0x260; // ObjectProperty
		constexpr auto m_mcLoginWithQRCode = 0x268; // ObjectProperty
		constexpr auto m_LoginInputCredentialsQRCodeLogin = 0x270; // ObjectProperty
		constexpr auto m_LoginInputCredentialsBack = 0x278; // ObjectProperty
		constexpr auto m_LoginInputCredentialsGroup = 0x280; // ObjectProperty
		constexpr auto m_mcLoginInputAnononymous = 0x288; // ObjectProperty
		constexpr auto m_mcLoginInputAnononymousPrompt = 0x290; // ObjectProperty
		constexpr auto m_mcLoginInputAnononymousChangeUser = 0x298; // ObjectProperty
		constexpr auto m_mcLoginInputAnononymousFeedback = 0x2a0; // ObjectProperty
		constexpr auto m_LoginInputAnonymousSubmit = 0x2a8; // ObjectProperty
		constexpr auto m_pChangeUserInput = 0x2b0; // ObjectProperty
		constexpr auto m_mcCreateAccountInput = 0x2b8; // ObjectProperty
		constexpr auto m_mcCreateAccountInputHeader = 0x2c0; // ObjectProperty
		constexpr auto m_mcCreateAccountInputUsername = 0x2c8; // ObjectProperty
		constexpr auto m_mcCreateAccountInputUsernameLabel = 0x2d0; // ObjectProperty
		constexpr auto m_mcCreateAccountInputPassword1 = 0x2d8; // ObjectProperty
		constexpr auto m_mcCreateAccountInputPassword1Label = 0x2e0; // ObjectProperty
		constexpr auto m_mcCreateAccountInputPassword2 = 0x2e8; // ObjectProperty
		constexpr auto m_mcCreateAccountInputPassword2Label = 0x2f0; // ObjectProperty
		constexpr auto m_mcCreateAccountInputEmail = 0x2f8; // ObjectProperty
		constexpr auto m_mcCreateAccountInputEmailLabel = 0x300; // ObjectProperty
		constexpr auto m_mcCreateAccountAgeRequirement = 0x308; // ObjectProperty
		constexpr auto m_CreateAccountAgeRequirementToggle = 0x310; // ObjectProperty
		constexpr auto m_CreateAccountInputSubmit = 0x318; // ObjectProperty
		constexpr auto m_mcCreateAccountInputMessage = 0x320; // ObjectProperty
		constexpr auto m_CreateAccountBack = 0x328; // ObjectProperty
		constexpr auto m_CreateAccountInputGroup = 0x330; // ObjectProperty
		constexpr auto m_mcQueuePosition = 0x338; // ObjectProperty
		constexpr auto m_mcQueueWait = 0x340; // ObjectProperty
		constexpr auto m_CancelButton = 0x348; // ObjectProperty
		constexpr auto m_mcQueue = 0x350; // ObjectProperty
		constexpr auto m_mcLoginMsg = 0x358; // ObjectProperty
		constexpr auto m_mcCreatePlayerName = 0x360; // ObjectProperty
		constexpr auto m_mcCreatePlayerNameError = 0x368; // ObjectProperty
		constexpr auto m_mcCreatePlayerNameInput = 0x370; // ObjectProperty
		constexpr auto m_CreatePlayerNameSubmit = 0x378; // ObjectProperty
		constexpr auto m_CreatePlayerNameCancel = 0x380; // ObjectProperty
		constexpr auto m_mcLoading = 0x388; // ObjectProperty
		constexpr auto m_mcLoadingTF = 0x390; // ObjectProperty
		constexpr auto m_mcLoadingAnimA = 0x398; // ObjectProperty
		constexpr auto m_mcLoadingAnimB = 0x3a0; // ObjectProperty
		constexpr auto m_mcEULA = 0x3a8; // ObjectProperty
		constexpr auto m_EULAAccept = 0x3b0; // ObjectProperty
		constexpr auto m_EULADecline = 0x3b8; // ObjectProperty
		constexpr auto m_mcEULAGamepadBtns = 0x3c0; // ObjectProperty [0x2]
		constexpr auto m_fDiscoveryTimer = 0x3d0; // float
		constexpr auto m_fDiscoveryDelay = 0x3d4; // float
		constexpr auto m_mcQRCodePanel = 0x3d8; // ObjectProperty
		constexpr auto m_mcQRCodeIcons = 0x3e0; // ObjectProperty
		constexpr auto m_mcQRCodePanelLoginButton = 0x3e8; // ObjectProperty
		constexpr auto m_QRCodePanelInputGroup = 0x3f0; // ObjectProperty
	}

	namespace n_UFaceFXAsset { // : UObject
		constexpr auto FaceFXActor = 0x60; // FPointer
		constexpr auto RawFaceFXActorBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXSessionBytes = 0x78; // TArray<char>
		constexpr auto MountedFaceFXAnimSets = 0x88; // TArray<ObjectProperty>
		constexpr auto NumLoadErrors = 0x98; // int32_t
	}

	namespace n_UMaterialExpressionDestDepth { // : UMaterialExpression
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
	}

	namespace n_AWorldInfo { // : AZoneInfo
		constexpr auto DefaultPostProcessSettings = 0x294; // FPostProcessSettings
		constexpr auto WorldPostProcessChain = 0x414; // ObjectProperty
		constexpr auto bPersistPostProcessToNextLevel = 0x41c; // uint32_t : 1
		constexpr auto bFogEnabled = 0x41c; // uint32_t : 1
		constexpr auto bBumpOffsetEnabled = 0x41c; // uint32_t : 1
		constexpr auto bUseGammaCorrection = 0x41c; // uint32_t : 1
		constexpr auto bMapNeedsLightingFullyRebuilt = 0x41c; // uint32_t : 1
		constexpr auto bMapHasMultipleDominantLightsAffectingOnePrimitive = 0x41c; // uint32_t : 1
		constexpr auto bMapHasPathingErrors = 0x41c; // uint32_t : 1
		constexpr auto bRequestedBlockOnAsyncLoading = 0x41c; // uint32_t : 1
		constexpr auto bBegunPlay = 0x41c; // uint32_t : 1
		constexpr auto bPlayersOnly = 0x41c; // uint32_t : 1
		constexpr auto bPlayersOnlyPending = 0x41c; // uint32_t : 1
		constexpr auto bSuspendAI = 0x41c; // uint32_t : 1
		constexpr auto bDropDetail = 0x41c; // uint32_t : 1
		constexpr auto bAggressiveLOD = 0x41c; // uint32_t : 1
		constexpr auto bStartup = 0x41c; // uint32_t : 1
		constexpr auto bPathsRebuilt = 0x41c; // uint32_t : 1
		constexpr auto bHasPathNodes = 0x41c; // uint32_t : 1
		constexpr auto bIsMenuLevel = 0x41c; // uint32_t : 1
		constexpr auto bDebugPauseExecution = 0x41c; // uint32_t : 1
		constexpr auto bDebugStepExecution = 0x41c; // uint32_t : 1
		constexpr auto bUseConsoleInput = 0x41c; // uint32_t : 1
		constexpr auto bMinimizeBSPSections = 0x41c; // uint32_t : 1
		constexpr auto bNoDefaultInventoryForPlayer = 0x41c; // uint32_t : 1
		constexpr auto bNoPathWarnings = 0x41c; // uint32_t : 1
		constexpr auto bNoMobileMapWarnings = 0x41c; // uint32_t : 1
		constexpr auto bHighPriorityLoading = 0x41c; // uint32_t : 1
		constexpr auto bHighPriorityLoadingLocal = 0x41c; // uint32_t : 1
		constexpr auto bUseProcBuildingRulesetOverride = 0x41c; // uint32_t : 1
		constexpr auto bInteractiveMode = 0x41c; // uint32_t : 1
		constexpr auto bSupportDoubleBufferedPhysics = 0x41c; // uint32_t : 1
		constexpr auto bPhysicsIgnoreDeltaTime = 0x41c; // uint32_t : 1
		constexpr auto bEnableChanceOfPhysicsChunkOverride = 0x41c; // uint32_t : 1
		constexpr auto bLimitExplosionChunkSize = 0x420; // uint32_t : 1
		constexpr auto bLimitDamageChunkSize = 0x420; // uint32_t : 1
		constexpr auto bPrecomputeVisibility = 0x420; // uint32_t : 1
		constexpr auto bPlaceCellsOnSurfaces = 0x420; // uint32_t : 1
		constexpr auto bAllowTemporalAA = 0x420; // uint32_t : 1
		constexpr auto bUseGlobalIllumination = 0x420; // uint32_t : 1
		constexpr auto bForceNoPrecomputedLighting = 0x420; // uint32_t : 1
		constexpr auto bHaveActiveCrowd = 0x420; // uint32_t : 1
		constexpr auto bAllowHostMigration = 0x420; // uint32_t : 1
		constexpr auto bGameplayFramePause = 0x420; // uint32_t : 1
		constexpr auto SquintModeKernelSize = 0x424; // float
		constexpr auto ZPrepassOverride = 0x428; // EZPrepassOverride
		constexpr auto NetMode = 0x429; // ENetMode
		constexpr auto NextTravelType = 0x42a; // ETravelType
		constexpr auto VisibilityAggressiveness = 0x42b; // EVisibilityAggressiveness
		constexpr auto PreferredLightmapType = 0x42c; // EPreferredLightmapType
		constexpr auto LevelLightingQuality = 0x42d; // ELightingBuildQuality
		constexpr auto ContributionCullOverrideHigh = 0x430; // float
		constexpr auto ContributionCullOverrideMedium = 0x434; // float
		constexpr auto ContributionCullOverrideLow = 0x438; // float
		constexpr auto HighestPriorityPostProcessVolume = 0x43c; // ObjectProperty
		constexpr auto DefaultReverbSettings = 0x444; // FReverbSettings
		constexpr auto DefaultAmbientZoneSettings = 0x454; // FInteriorSettings
		constexpr auto FogStart = 0x484; // float
		constexpr auto FogEnd = 0x488; // float
		constexpr auto FogColor = 0x48c; // FColor
		constexpr auto BumpEnd = 0x490; // float
		constexpr auto HighestPriorityReverbVolume = 0x494; // ObjectProperty
		constexpr auto MassiveLODOverrideVolumes = 0x49c; // TArray<ObjectProperty>
		constexpr auto PortalVolumes = 0x4ac; // TArray<ObjectProperty>
		constexpr auto EnvironmentVolumes = 0x4bc; // TArray<ObjectProperty>
		constexpr auto StreamingLevels = 0x4cc; // TArray<ObjectProperty>
		constexpr auto LastTimeUnbuiltLightingWasEncountered = 0x4dc; // FDouble
		constexpr auto TimeDilation = 0x4e4; // float
		constexpr auto DemoPlayTimeDilation = 0x4e8; // float
		constexpr auto TimeSeconds = 0x4ec; // float
		constexpr auto RealTimeSeconds = 0x4f0; // float
		constexpr auto AudioTimeSeconds = 0x4f4; // float
		constexpr auto DeltaSeconds = 0x4f8; // float
		constexpr auto PauseDelay = 0x4fc; // float
		constexpr auto RealTimeToUnPause = 0x500; // float
		constexpr auto m_fRealDeltaSeconds = 0x504; // float
		constexpr auto Pauser = 0x508; // ObjectProperty
		constexpr auto DefaultTexture = 0x510; // ObjectProperty
		constexpr auto WireframeTexture = 0x518; // ObjectProperty
		constexpr auto WhiteSquareTexture = 0x520; // ObjectProperty
		constexpr auto LargeVertex = 0x528; // ObjectProperty
		constexpr auto BSPVertex = 0x530; // ObjectProperty
		constexpr auto DeferredExecs = 0x538; // TArray<FString>
		constexpr auto GRI = 0x548; // ObjectProperty
		constexpr auto ComputerName = 0x550; // FString
		constexpr auto EngineVersion = 0x560; // FString
		constexpr auto MinNetVersion = 0x570; // FString
		constexpr auto Game = 0x580; // ObjectProperty
		constexpr auto StallZ = 0x588; // float
		constexpr auto WorldGravityZ = 0x58c; // float
		constexpr auto DefaultGravityZ = 0x590; // float
		constexpr auto GlobalGravityZ = 0x594; // float
		constexpr auto RBPhysicsGravityScaling = 0x598; // float
		constexpr auto m_fAudioAltitudeCeiling = 0x59c; // float
		constexpr auto m_fAudioAltitudeFloor = 0x5a0; // float
		constexpr auto NavigationPointList = 0x5a4; // ObjectProperty
		constexpr auto ControllerList = 0x5ac; // ObjectProperty
		constexpr auto PawnList = 0x5b4; // ObjectProperty
		constexpr auto CoverList = 0x5bc; // ObjectProperty
		constexpr auto PylonList = 0x5c4; // ObjectProperty
		constexpr auto MoveRepSize = 0x5cc; // float
		constexpr auto ReplicationViewers = 0x5d0; // TArray<FNetViewer>
		constexpr auto NextURL = 0x5e0; // FString
		constexpr auto NextSwitchCountdown = 0x5f0; // float
		constexpr auto PackedLightAndShadowMapTextureSize = 0x5f4; // int32_t
		constexpr auto DefaultColorScale = 0x5f8; // FVector
		constexpr auto DefaultGameType = 0x604; // AGameInfo*
		constexpr auto GameTypesSupportedOnThisMap = 0x60c; // TArray<AGameInfo*>
		constexpr auto ClientDestroyedActorContent = 0x61c; // TArray<ObjectProperty>
		constexpr auto PreparingLevelNames = 0x62c; // TArray<FName>
		constexpr auto CommittedPersistentLevelName = 0x63c; // FName
		constexpr auto PersistentMapForcedObjects = 0x644; // ObjectProperty
		constexpr auto MusicComp = 0x64c; // ComponentProperty
		constexpr auto CurrentMusicTrack = 0x654; // FMusicTrackStruct
		constexpr auto ReplicatedMusicTrack = 0x680; // FMusicTrackStruct
		constexpr auto Title = 0x6ac; // FString
		constexpr auto Author = 0x6bc; // FString
		constexpr auto MyMapInfo = 0x6cc; // ObjectProperty
		constexpr auto EmitterPoolClassPath = 0x6d4; // FString
		constexpr auto MyEmitterPool = 0x6e4; // ObjectProperty
		constexpr auto DecalManagerClassPath = 0x6ec; // FString
		constexpr auto MyDecalManager = 0x6fc; // ObjectProperty
		constexpr auto FractureManagerClassPath = 0x704; // FString
		constexpr auto MyFractureManager = 0x714; // ObjectProperty
		constexpr auto ParticleEventManagerClassPath = 0x71c; // FString
		constexpr auto MyParticleEventManager = 0x72c; // ObjectProperty
		constexpr auto MySoundComponentPool = 0x734; // ObjectProperty
		constexpr auto ProcBuildingRulesetOverride = 0x73c; // ObjectProperty
		constexpr auto SkelMeshCompTickTagCount = 0x744; // int32_t
		constexpr auto MaxPhysicsDeltaTime = 0x748; // float
		constexpr auto MaxPhysicsSubsteps = 0x74c; // int32_t
		constexpr auto PhysicsProperties = 0x750; // FPhysXSceneProperties
		constexpr auto CompartmentRunFrames = 0x78c; // TArray<FCompartmentRunList>
		constexpr auto DefaultSkinWidth = 0x79c; // float
		constexpr auto ApexLODResourceBudget = 0x7a0; // float
		constexpr auto ApexDestructionLODResourceValue = 0x7a4; // float
		constexpr auto ApexClothingLODResourceValue = 0x7a8; // float
		constexpr auto DestructibleSettings = 0x7ac; // FApexModuleDestructibleSettings
		constexpr auto EmitterVertical = 0x7c0; // ObjectProperty
		constexpr auto VerticalProperties = 0x7c8; // FPhysXVerticalProperties
		constexpr auto WorldAttractors = 0x7e0; // TArray<FPointer>
		constexpr auto ChanceOfPhysicsChunkOverride = 0x7f0; // float
		constexpr auto MaxExplosionChunkSize = 0x7f4; // float
		constexpr auto MaxDamageChunkSize = 0x7f8; // float
		constexpr auto FractureExplosionVelScale = 0x7fc; // float
		constexpr auto MaxNumFacturedChunksToSpawnInAFrame = 0x800; // int32_t
		constexpr auto NumFacturedChunksSpawnedThisFrame = 0x804; // int32_t
		constexpr auto FracturedMeshWeaponDamage = 0x808; // float
		constexpr auto VisibilityCellSize = 0x80c; // int32_t
		constexpr auto CharacterLitIndirectBrightness = 0x810; // float
		constexpr auto CharacterLitIndirectContrastFactor = 0x814; // float
		constexpr auto CharacterShadowedIndirectBrightness = 0x818; // float
		constexpr auto CharacterShadowedIndirectContrastFactor = 0x81c; // float
		constexpr auto CharacterLightingContrastFactor = 0x820; // float
		constexpr auto ImageReflectionEnvironmentTexture = 0x824; // ObjectProperty
		constexpr auto ImageReflectionEnvironmentColor = 0x82c; // FLinearColor
		constexpr auto ImageReflectionEnvironmentRotation = 0x83c; // float
		constexpr auto ScreenMessages = 0x840; // FMap_Mirror
		constexpr auto PriorityScreenMessages = 0x888; // TArray<FScreenMessageString>
		constexpr auto LightmassSettings = 0x898; // FLightmassWorldInfoSettings
		constexpr auto NavMeshPathConstraintCache = 0x8f0; // TMap<None, None>
		constexpr auto NavMeshPathGoalEvaluatorCache = 0x938; // TMap<None, None>
		constexpr auto PopulationManager = 0x980; // ObjectProperty
		constexpr auto PeerHostMigration = 0x988; // FHostMigrationState
		constexpr auto HostMigrationTimeout = 0x9a8; // float
		constexpr auto m_fPerfParticleScale = 0x9ac; // float
		constexpr auto m_MiniMapTexture = 0x9b0; // ObjectProperty
		constexpr auto m_fMiniMapSizeValue = 0x9b8; // float
		constexpr auto m_fMinimumPayloadTravelTime = 0x9bc; // float
		constexpr auto FirstPhysicsVolume = 0x9c0; // ObjectProperty
	}

	namespace n_UTgPawnMod_FxAudio_DjMaeve { // : UTgPawnMod_FxAudio
		constexpr auto m_fGlowMultBass = 0xac; // float
		constexpr auto m_fGlowMult = 0xb0; // float
	}

	namespace n_UTgInvListener_GuerillaTactics { // : UTgInvListener
		constexpr auto m_CachedOwlPawn = 0xc4; // ObjectProperty
	}

	namespace n_ATgDevice_TigronUlt { // : ATgDevice
		constexpr auto m_CachedTiberius = 0xa08; // ObjectProperty
		constexpr auto m_nNumCharges = 0xa10; // int32_t
		constexpr auto m_fPerChargeEnergyCost = 0xa14; // float
		constexpr auto m_bPreventRMBSpam = 0xa18; // uint32_t : 1
		constexpr auto m_fAnimationTail = 0xa1c; // float
	}

	namespace n_UTgInvListener_RiderShield { // : UTgInvListener
		constexpr auto s_PerTargetLockout = 0xc4; // TArray<FRiderShieldPerTargetHistory>
	}

	namespace n_ATgDevice_VanguardShield { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa10; // DelegateProperty
	}

	namespace n_ATgGame_Paladins_AscendedAssault { // : ATgGame_Paladins_Onslaught
		constexpr auto m_fSetupDuration = 0xa64; // float
	}

	namespace n_UTgDeviceForm_Pounce { // : UTgDeviceForm
		constexpr auto m_PounceNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_PounceNodes1p = 0x29c; // TArray<ObjectProperty>
		constexpr auto bFOVZoomActive = 0x2ac; // uint32_t : 1
		constexpr auto m_fCameraFOVInterpolationTime = 0x2b0; // float
		constexpr auto m_fFOVModifier = 0x2b4; // float
	}

	namespace n_UTgSeqAct_TriggerInterpActor { // : USequenceAction
		constexpr auto m_sStateName = 0x108; // FString
	}

	namespace n_UUIComponent_ItemGeneric { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcDesc = 0x12c; // TArray<ObjectProperty>
		constexpr auto m_mcRarityOnly = 0x13c; // ObjectProperty
		constexpr auto m_mcRarityCategory = 0x144; // ObjectProperty
		constexpr auto m_mcSlotIcon = 0x14c; // ObjectProperty
		constexpr auto m_mcNew = 0x154; // ObjectProperty
		constexpr auto m_mcDiscountBanner = 0x15c; // ObjectProperty
		constexpr auto m_pExclusiveBanner = 0x164; // ObjectProperty
		constexpr auto m_mcLock = 0x16c; // ObjectProperty
		constexpr auto m_mcEquipped = 0x174; // ObjectProperty
		constexpr auto m_mcRarity = 0x17c; // ObjectProperty
		constexpr auto m_mcGlow = 0x184; // ObjectProperty
		constexpr auto m_mcAudio = 0x18c; // ObjectProperty
		constexpr auto m_mcItemOwnedText = 0x194; // ObjectProperty
		constexpr auto m_mcRented = 0x19c; // ObjectProperty
		constexpr auto m_mcCardIcon = 0x1a4; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x1ac; // ObjectProperty
		constexpr auto m_pCurrency = 0x1b4; // ObjectProperty
		constexpr auto m_mcOwnedQuantity = 0x1bc; // ObjectProperty
		constexpr auto m_mcChampion = 0x1c4; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x1cc; // ObjectProperty
		constexpr auto m_mcLimitedOffer = 0x1d4; // ObjectProperty
		constexpr auto m_mcBoosterWeapon = 0x1dc; // ObjectProperty
		constexpr auto m_pAvatarIcon = 0x1e4; // ObjectProperty
		constexpr auto m_pCTA = 0x1ec; // ObjectProperty
		constexpr auto m_mcBoosterSkin = 0x1f4; // ObjectProperty
		constexpr auto m_mcLoadingFrame = 0x1fc; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x204; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticBool { // : UMaterialExpression
		constexpr auto Value = 0xb0; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_NearOwnTurret { // : UTgInvListener
		constexpr auto m_bIsActive = 0xc4; // uint32_t : 1
	}

	namespace n_UMobileMenuLabel { // : UMobileMenuObject
		constexpr auto Caption = 0xdc; // FString
		constexpr auto TextFont = 0xec; // ObjectProperty
		constexpr auto TextColor = 0xf4; // FColor
		constexpr auto TouchedColor = 0xf8; // FColor
		constexpr auto TextXScale = 0xfc; // float
		constexpr auto TextYScale = 0x100; // float
		constexpr auto bAutoSize = 0x104; // uint32_t : 1
	}

	namespace n_UTgSeqAct_MarkSpawnReturn { // : USequenceAction
		constexpr auto m_Teleporter = 0x108; // ObjectProperty
	}

	namespace n_ATgDevice_Enlightenment { // : ATgDevice
		constexpr auto m_CachedPrincess = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLeashCombatTarget { // : UTgAIBehaviorAction
		constexpr auto bMustBeEnemy = 0x94; // uint32_t : 1
		constexpr auto bMustBeWeakest = 0x94; // uint32_t : 1
		constexpr auto bMustHaveLineOfSight = 0x94; // uint32_t : 1
		constexpr auto bMustHaveDamagedGod = 0x94; // uint32_t : 1
		constexpr auto bMustNotBeImmune = 0x94; // uint32_t : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // uint32_t : 1
		constexpr auto bMustBeHittable = 0x94; // uint32_t : 1
		constexpr auto TargetType = 0x98; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
	}

	namespace n_UTgSkelControlSingleBone_Skinned { // : UTgSkelControlSingleBone
		constexpr auto DefaultStrength = 0x124; // float
		constexpr auto SkinOverrides = 0x128; // TArray<FSkinStrengthOverride>
		constexpr auto bInitializedStrength = 0x138; // uint32_t : 1
		constexpr auto fSkinStrength = 0x13c; // float
	}

	namespace n_UTgInventoryObject_Listen_UseWhileCCed { // : UTgInventoryObject_Listen_Ability
		constexpr auto m_bIsActive = 0xcc; // uint32_t : 1
	}

	namespace n_UTgNavMeshPath_AlongLane { // : UNavMeshPathConstraint
		constexpr auto m_nLane = 0x78; // int32_t
	}

	namespace n_UUIHudTeam { // : UTgGfxScene
		constexpr auto m_bShowPlayers = 0x1ec; // uint32_t : 1
		constexpr auto m_sSpectatingText = 0x1f0; // FString
		constexpr auto m_mcSpectating = 0x200; // ObjectProperty
		constexpr auto m_mcSpectatingTF = 0x208; // ObjectProperty
		constexpr auto m_mcPlayers = 0x210; // ObjectProperty
		constexpr auto m_mcPlayerRed = 0x218; // FTEAMPLAYER_INFO [0x5]
		constexpr auto m_mcPlayerBlue = 0x5d8; // FTEAMPLAYER_INFO [0x5]
		constexpr auto m_mcTeamBlueName = 0x998; // ObjectProperty
		constexpr auto m_mcTeamBlueScore = 0x9a0; // ObjectProperty
		constexpr auto m_mcTeamRedName = 0x9a8; // ObjectProperty
		constexpr auto m_mcTeamRedScore = 0x9b0; // ObjectProperty
		constexpr auto m_mcTeamBlueTopBG = 0x9b8; // ObjectProperty
		constexpr auto m_mcTeamRedTopBG = 0x9c0; // ObjectProperty
		constexpr auto m_mcPlayersSide = 0x9c8; // ObjectProperty
		constexpr auto m_mcPlayersSideBlueBG = 0x9d0; // ObjectProperty
		constexpr auto m_mcPlayersSideRedBG = 0x9d8; // ObjectProperty
		constexpr auto m_mcPlayerSideRed = 0x9e0; // FTEAMPLAYER_INFO_EXTENDED [0x5]
		constexpr auto m_mcPlayerSideBlue = 0x169c; // FTEAMPLAYER_INFO_EXTENDED [0x5]
		constexpr auto m_mcStats = 0x2358; // ObjectProperty
		constexpr auto m_mcStatsTitle = 0x2360; // ObjectProperty
		constexpr auto m_mcStatsEntry = 0x2368; // FTEAMSTAT_INFO [0xa]
		constexpr auto m_mcRespawn = 0x2660; // ObjectProperty
		constexpr auto m_mcRespawnRed = 0x2668; // FTEAMPLAYER_INFO [0x5]
		constexpr auto m_mcRespawnBlue = 0x2a28; // FTEAMPLAYER_INFO [0x5]
		constexpr auto m_nSpectatorMode = 0x2de8; // int32_t
		constexpr auto m_nStatsMode = 0x2dec; // int32_t
		constexpr auto m_fStatsUpdateTimer = 0x2df0; // float
	}

	namespace n_ATgDevice_WallBangFire { // : ATgDevice
		constexpr auto m_nShotsRemaining = 0xa08; // int32_t
		constexpr auto m_CachedSaati = 0xa0c; // ObjectProperty
		constexpr auto m_SaatiUltDevice = 0xa14; // ObjectProperty
	}

	namespace n_ATgDevice_ExplosiveJumps { // : ATgDevice_Leap
		constexpr auto m_nTotalNumShots = 0xa10; // int32_t
		constexpr auto m_nShotsFired = 0xa14; // int32_t
	}

	namespace n_UUIComponent_EndOfMatchLobbyInactiveTrial { // : UUIComponent_Display
		constexpr auto m_mcInactiveText = 0x124; // ObjectProperty
	}

	namespace n_UUIScene_UISummerEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pHome = 0x1dc; // ObjectProperty
		constexpr auto m_pVault = 0x1e4; // ObjectProperty
		constexpr auto m_pRewards = 0x1ec; // ObjectProperty
		constexpr auto m_pOverview = 0x1f4; // ObjectProperty
		constexpr auto m_pRotator = 0x1fc; // ObjectProperty
	}

	namespace n_ACullDistanceVolume { // : AVolume
		constexpr auto CullDistances = 0x2bc; // TArray<FCullDistanceSizePair>
		constexpr auto bEnabled = 0x2cc; // uint32_t : 1
	}

	namespace n_UPBRuleNodeAlternate { // : UPBRuleNodeBase
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto ASize = 0x74; // float
		constexpr auto BMaxSize = 0x78; // float
		constexpr auto bInvertPatternOrder = 0x7c; // uint32_t : 1
		constexpr auto bEqualSizeAB = 0x7c; // uint32_t : 1
	}

	namespace n_UParticleModuleUberRainDrops { // : UParticleModuleUberBase
		constexpr auto LifetimeMin = 0x78; // float
		constexpr auto LifetimeMax = 0x7c; // float
		constexpr auto StartSizeMin = 0x80; // FVector
		constexpr auto StartSizeMax = 0x8c; // FVector
		constexpr auto StartVelocityMin = 0x98; // FVector
		constexpr auto StartVelocityMax = 0xa4; // FVector
		constexpr auto StartVelocityRadialMin = 0xb0; // float
		constexpr auto StartVelocityRadialMax = 0xb4; // float
		constexpr auto ColorOverLife = 0xb8; // FVector
		constexpr auto AlphaOverLife = 0xc4; // float
		constexpr auto bIsUsingCylinder = 0xc8; // uint32_t : 1
		constexpr auto bPositive_X = 0xc8; // uint32_t : 1
		constexpr auto bPositive_Y = 0xc8; // uint32_t : 1
		constexpr auto bPositive_Z = 0xc8; // uint32_t : 1
		constexpr auto bNegative_X = 0xc8; // uint32_t : 1
		constexpr auto bNegative_Y = 0xc8; // uint32_t : 1
		constexpr auto bNegative_Z = 0xc8; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xc8; // uint32_t : 1
		constexpr auto bVelocity = 0xc8; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xc8; // uint32_t : 1
		constexpr auto PC_VelocityScale = 0xcc; // float
		constexpr auto PC_StartLocation = 0xd0; // FVector
		constexpr auto PC_StartRadius = 0xdc; // float
		constexpr auto PC_StartHeight = 0xe0; // float
		constexpr auto PC_HeightAxis = 0xe4; // CylinderHeightAxis
		constexpr auto StartLocationMin = 0xe8; // FVector
		constexpr auto StartLocationMax = 0xf4; // FVector
	}

	namespace n_AInventoryManager { // : AActor
		constexpr auto InventoryChain = 0x280; // ObjectProperty
		constexpr auto PendingWeapon = 0x288; // ObjectProperty
		constexpr auto LastAttemptedSwitchToWeapon = 0x290; // ObjectProperty
		constexpr auto bMustHoldWeapon = 0x298; // uint32_t : 1
		constexpr auto PendingFire = 0x29c; // TArray<int32_t>
	}

	namespace n_UUIData_DLCItem { // : UUIData
		constexpr auto m_dwPrice = 0x64; // Fdword
		constexpr auto m_bIsHidden = 0x68; // uint32_t : 1
		constexpr auto m_pLootTableItem = 0x6c; // ObjectProperty
	}

	namespace n_USeqAct_SetDamageInstigator { // : USequenceAction
		constexpr auto DamageInstigator = 0x108; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_AmmoAfterShot { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_HealthByPercent { // : UTgInvListener
		constexpr auto m_iAppliedStacks = 0xc4; // int32_t
	}

	namespace n_UUIAcquisition { // : UTgGfxScene
		constexpr auto VfTable_IAcquisitionHandler = 0x1ec; // FPointer
		constexpr auto m_nMultiItemIndex = 0x1f4; // int32_t
		constexpr auto m_nMultiItemNumDisplayed = 0x1f8; // int32_t
		constexpr auto m_nMultiItemMaxDisplayed = 0x1fc; // int32_t
		constexpr auto m_fMultiItemDelayTimer = 0x200; // float
		constexpr auto m_fMultiItemDelay = 0x204; // float
		constexpr auto m_fMultiItemSpacing = 0x208; // float
		constexpr auto m_nCurrentItemId = 0x20c; // int32_t
		constexpr auto m_bDisplayCard = 0x210; // uint32_t : 1
		constexpr auto m_bUseMultiItemDisplay = 0x210; // uint32_t : 1
		constexpr auto m_bAcquiredCard = 0x210; // uint32_t : 1
		constexpr auto m_bHasPushedTierUp = 0x210; // uint32_t : 1
		constexpr auto m_fAnimTimer = 0x214; // float
		constexpr auto m_fLineTimer = 0x218; // float
		constexpr auto m_fLockTimer = 0x21c; // float
		constexpr auto m_mcFrame = 0x220; // ObjectProperty
		constexpr auto m_mcFrameLine = 0x228; // ObjectProperty
		constexpr auto m_mcFrameGlow = 0x230; // ObjectProperty
		constexpr auto m_mcAcquired = 0x238; // ObjectProperty
		constexpr auto m_mcAcquiredGlow = 0x240; // ObjectProperty
		constexpr auto m_mcAcquiredItem = 0x248; // ObjectProperty
		constexpr auto m_mcAcquiredTitle = 0x250; // ObjectProperty
		constexpr auto m_mcAcquiredTitleTF = 0x258; // ObjectProperty
		constexpr auto m_mcAcquiredAnimTitle = 0x260; // ObjectProperty
		constexpr auto m_mcAcquiredAnimTitleTF = 0x268; // ObjectProperty
		constexpr auto m_mcAcquiredButtonOk = 0x270; // ObjectProperty
		constexpr auto m_mcAcquiredButtonMultiOk = 0x278; // ObjectProperty
		constexpr auto m_mcAcquiredButtonDismiss = 0x280; // ObjectProperty
		constexpr auto m_mcAcquiredPrompt = 0x288; // ObjectProperty
		constexpr auto m_mcAcquiredPromptEquipAll = 0x290; // ObjectProperty
		constexpr auto m_mcAcquiredPromptDismiss = 0x298; // ObjectProperty
		constexpr auto m_mcAcquiredSubtitle = 0x2a0; // ObjectProperty
		constexpr auto m_mcAcquiredSubtitleTF = 0x2a8; // ObjectProperty
		constexpr auto m_mcAcquiredCountTF = 0x2b0; // ObjectProperty
		constexpr auto m_mcAcquiredRentalText = 0x2b8; // ObjectProperty
		constexpr auto m_mcAcquiredButtonEquipAll = 0x2c0; // ObjectProperty
		constexpr auto m_nAcquisitionCallbackHandle = 0x2c8; // int32_t
		constexpr auto m_Items = 0x2cc; // TArray<FAcquiredItem>
		constexpr auto m_AcquiredItem = 0x2dc; // FUIAcquiredItem [0x5]
	}

	namespace n_UParticleModuleBeamNoise { // : UParticleModuleBeamBase
		constexpr auto bLowFreq_Enabled = 0x68; // uint32_t : 1
		constexpr auto bNRScaleEmitterTime = 0x68; // uint32_t : 1
		constexpr auto bSmooth = 0x68; // uint32_t : 1
		constexpr auto bNoiseLock = 0x68; // uint32_t : 1
		constexpr auto bOscillate = 0x68; // uint32_t : 1
		constexpr auto bUseNoiseTangents = 0x68; // uint32_t : 1
		constexpr auto bTargetNoise = 0x68; // uint32_t : 1
		constexpr auto bApplyNoiseScale = 0x68; // uint32_t : 1
		constexpr auto Frequency = 0x6c; // int32_t
		constexpr auto Frequency_LowRange = 0x70; // int32_t
		constexpr auto NoiseRange = 0x74; // FRawDistributionVector
		constexpr auto NoiseRangeScale = 0x98; // FRawDistributionFloat
		constexpr auto NoiseSpeed = 0xbc; // FRawDistributionVector
		constexpr auto NoiseLockRadius = 0xe0; // float
		constexpr auto NoiseLockTime = 0xe4; // float
		constexpr auto NoiseTension = 0xe8; // float
		constexpr auto NoiseTangentStrength = 0xec; // FRawDistributionFloat
		constexpr auto NoiseTessellation = 0x110; // int32_t
		constexpr auto FrequencyDistance = 0x114; // float
		constexpr auto NoiseScale = 0x118; // FRawDistributionFloat
	}

	namespace n_ATgPawn_Cassie { // : ATgPawn_Character
		constexpr auto r_fRadiusForBlastShotFX = 0x3164; // float
		constexpr auto r_bRollBonusActive = 0x3168; // uint32_t : 1
		constexpr auto m_CachedScoutDevice = 0x316c; // ObjectProperty
	}

	namespace n_UParticleModuleLocationBoneSocket { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x68; // ELocationBoneSocketSource
		constexpr auto SelectionMethod = 0x69; // ELocationBoneSocketSelectionMethod
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto SourceLocations = 0x78; // TArray<FLocationBoneSocketInfo>
		constexpr auto bUpdatePositionEachFrame = 0x88; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x88; // uint32_t : 1
		constexpr auto bInheritVelocityAtSpawn = 0x88; // uint32_t : 1
		constexpr auto SkelMeshActorParamName = 0x8c; // FName
		constexpr auto LastUpdateTime = 0x94; // float
	}

	namespace n_UUIComponent_LobbyEquipSlotItem { // : UUIComponent_Display
		constexpr auto m_mcTypeIcon = 0x124; // ObjectProperty
		constexpr auto m_pCTA = 0x12c; // ObjectProperty
		constexpr auto m_pInteractable = 0x134; // ObjectProperty
	}

	namespace n_UPath_AvoidInEscapableNodes { // : UPathConstraint
		constexpr auto Radius = 0x6c; // int32_t
		constexpr auto Height = 0x70; // int32_t
		constexpr auto MaxFallSpeed = 0x74; // int32_t
		constexpr auto MoveFlags = 0x78; // int32_t
	}

	namespace n_USkelControlWheel { // : USkelControlSingleBone
		constexpr auto WheelDisplacement = 0x100; // float
		constexpr auto WheelMaxRenderDisplacement = 0x104; // float
		constexpr auto WheelRoll = 0x108; // float
		constexpr auto WheelRollAxis = 0x10c; // EAxis
		constexpr auto WheelSteeringAxis = 0x10d; // EAxis
		constexpr auto WheelSteering = 0x110; // float
		constexpr auto bInvertWheelRoll = 0x114; // uint32_t : 1
		constexpr auto bInvertWheelSteering = 0x114; // uint32_t : 1
	}

	namespace n_ATgVolumePathNode { // : AVolumePathNode
		constexpr auto m_bIsAboveGround = 0x380; // uint32_t : 1
		constexpr auto m_vGroundHitLocation = 0x384; // FVector
		constexpr auto m_fGroundTraceDistance = 0x390; // float
		constexpr auto m_GroundSprite = 0x394; // ComponentProperty
	}

	namespace n_UTgAnimBlendByNodeName { // : UTgAnimNodeBlendList
		constexpr auto m_NodeNameToChildIndex = 0x168; // TArray<FNodeNameToChildIndex>
		constexpr auto m_CachedNodes = 0x178; // TArray<FRelevantNodeNameNodes>
		constexpr auto m_LastSuccessfulAnimNode = 0x188; // ObjectProperty
		constexpr auto m_bHasCachedNodes = 0x190; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_CorrupterUlt { // : UTgDeviceForm
		constexpr auto m_CachedCorrupter = 0x28c; // ObjectProperty
		constexpr auto m_bPoolActive = 0x294; // uint32_t : 1
		constexpr auto m_VoraAnimNodes = 0x298; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_ChargeBurst { // : ATgDevice
		constexpr auto m_CachedLazarus = 0xa08; // ObjectProperty
	}

	namespace n_ATgPawn_SaatiDecoy { // : ATgPawn_Pet
		constexpr auto m_CachedSpawningDevice = 0x2efc; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_Strafe { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto StrafeUpdateTime = 0x9c; // float
		constexpr auto DistanceMultiplier = 0xa0; // float
	}

	namespace n_UTgAnimNodeSelfDestruct { // : UTgAnimNodeSequence
		constexpr auto NumberOfLoopsBeforeDestruct = 0x1bc; // int32_t
		constexpr auto LoopsCompleted = 0x1c0; // int32_t
		constexpr auto ScaleOutSkelControlNames = 0x1c4; // TArray<FName>
		constexpr auto TimeRemaingForScaleOut = 0x1d4; // float
		constexpr auto ScaleOutSkelControls = 0x1d8; // TArray<ObjectProperty>
		constexpr auto ScaleOutStartScales = 0x1e8; // TArray<float>
		constexpr auto ScaleOutStartTime = 0x1f8; // float
	}

	namespace n_UPartyBeacon { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto PartyBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // uint32_t : 1
		constexpr auto bShouldTick = 0x74; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto __OnDestroyComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UTgDeviceForm_KingBomb { // : UTgDeviceForm
		constexpr auto m_bKingBombActive = 0x28c; // uint32_t : 1
	}

	namespace n_USeqCond_CompareInt { // : USequenceCondition
		constexpr auto ValueA = 0xec; // int32_t
		constexpr auto ValueB = 0xf0; // int32_t
	}

	namespace n_ATgCollisionProxy_Mesh { // : ATgCollisionProxy
		constexpr auto m_MeshComponent = 0x2b4; // ComponentProperty
	}

	namespace n_UUIComponent_RankedProgress { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcRank = 0x12c; // ObjectProperty
		constexpr auto m_mcWins = 0x134; // ObjectProperty
		constexpr auto m_mcLosses = 0x13c; // ObjectProperty
		constexpr auto m_mcTier = 0x144; // ObjectProperty
		constexpr auto m_mcTPLabel = 0x14c; // ObjectProperty
		constexpr auto m_mcTP = 0x154; // ObjectProperty
		constexpr auto m_pProgress = 0x15c; // ObjectProperty
	}

	namespace n_USplineAudioComponent { // : UAudioComponent
		constexpr auto ListenerScopeRadius = 0x2cc; // float
		constexpr auto ClosestPointOnSplineIndex = 0x2d0; // int32_t
		constexpr auto Points = 0x2d4; // TArray<FInterpPointOnSpline>
	}

	namespace n_UUIComponent_EndTimesEventRewardItem { // : UUIComponent_ItemGeneric
		constexpr auto m_mcOwnedIcon = 0x20c; // ObjectProperty
		constexpr auto m_mcSortOrderText = 0x214; // ObjectProperty
	}

	namespace n_ATgDeploy_Transporter { // : ATgDeployable
		constexpr auto m_StartLocation = 0x46c; // FVector
		constexpr auto m_ProjectileEndLocation = 0x478; // FVector
		constexpr auto m_fProjectileHeight = 0x484; // float
		constexpr auto m_DeploymentFX = 0x488; // ObjectProperty
		constexpr auto r_TeleportLocation = 0x490; // FVector
	}

	namespace n_UUIHudVoiceChat { // : UTgGfxScene
		constexpr auto m_fAlphaSpeaking = 0x1ec; // float
		constexpr auto m_fAlphaNotSpeaking = 0x1f0; // float
		constexpr auto m_fAlphaMuted = 0x1f4; // float
		constexpr auto m_fFadeTime = 0x1f8; // float
		constexpr auto m_mcAllyPlayers = 0x1fc; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerLabels = 0x224; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerSpeakIcons = 0x24c; // ObjectProperty [0x5]
		constexpr auto m_mcAllyPlayerIcons = 0x274; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayers = 0x29c; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerLabels = 0x2c4; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerSpeakIcons = 0x2ec; // ObjectProperty [0x5]
		constexpr auto m_mcEnemyPlayerIcons = 0x314; // ObjectProperty [0x5]
		constexpr auto m_sAllyPlayerIcons = 0x33c; // FString [0x5]
		constexpr auto m_sEnemyPlayerIcons = 0x38c; // FString [0x5]
		constexpr auto m_LocalPlayerNetId = 0x3dc; // FUniqueNetId
	}

	namespace n_AHUD { // : AActor
		constexpr auto WhiteColor = 0x280; // FColor
		constexpr auto GreenColor = 0x284; // FColor
		constexpr auto RedColor = 0x288; // FColor
		constexpr auto PlayerOwner = 0x28c; // ObjectProperty
		constexpr auto bLostFocusPaused = 0x294; // uint32_t : 1
		constexpr auto bShowHUD = 0x294; // uint32_t : 1
		constexpr auto bShowScores = 0x294; // uint32_t : 1
		constexpr auto bShowDebugInfo = 0x294; // uint32_t : 1
		constexpr auto bShowBadConnectionAlert = 0x294; // uint32_t : 1
		constexpr auto bShowDirectorInfoDebug = 0x294; // uint32_t : 1
		constexpr auto bShowDirectorInfoHUD = 0x294; // uint32_t : 1
		constexpr auto bMessageBeep = 0x294; // uint32_t : 1
		constexpr auto bRenderFullScreen = 0x294; // uint32_t : 1
		constexpr auto bScaleCanvasForCinematicMode = 0x294; // uint32_t : 1
		constexpr auto bShowOverlays = 0x294; // uint32_t : 1
		constexpr auto HudCanvasScale = 0x298; // float
		constexpr auto PostRenderedActors = 0x29c; // TArray<ObjectProperty>
		constexpr auto ConsoleMessages = 0x2ac; // TArray<FConsoleMessage>
		constexpr auto ConsoleColor = 0x2bc; // FColor
		constexpr auto ConsoleMessageCount = 0x2c0; // int32_t
		constexpr auto ConsoleFontSize = 0x2c4; // int32_t
		constexpr auto MessageFontOffset = 0x2c8; // int32_t
		constexpr auto MaxHUDAreaMessageCount = 0x2cc; // int32_t
		constexpr auto LocalMessages = 0x2d0; // FHudLocalizedMessage [0x8]
		constexpr auto ConsoleMessagePosX = 0x550; // float
		constexpr auto ConsoleMessagePosY = 0x554; // float
		constexpr auto Canvas = 0x558; // ObjectProperty
		constexpr auto LastHUDRenderTime = 0x560; // float
		constexpr auto RenderDelta = 0x564; // float
		constexpr auto SizeX = 0x568; // float
		constexpr auto SizeY = 0x56c; // float
		constexpr auto CenterX = 0x570; // float
		constexpr auto CenterY = 0x574; // float
		constexpr auto RatioX = 0x578; // float
		constexpr auto RatioY = 0x57c; // float
		constexpr auto DebugDisplay = 0x580; // TArray<FName>
		constexpr auto KismetTextInfo = 0x590; // TArray<FKismetDrawTextInfo>
	}

	namespace n_UTgAnimNodeChannelFire_VatuUlt { // : UTgAnimNodeChannelFire
		constexpr auto m_eAnimState = 0x180; // VatuUltAnimState
	}

	namespace n_UTgAnimNodeAdditiveBlending { // : UAnimNodeAdditiveBlending
		constexpr auto m_bSetStrengthFromAnimNode = 0x128; // uint32_t : 1
		constexpr auto m_bInvertStrengthFromAnimNode = 0x128; // uint32_t : 1
		constexpr auto m_bInitializedCachedNodeList = 0x128; // uint32_t : 1
		constexpr auto m_StrengthAnimNodeNameList = 0x12c; // TArray<FName>
		constexpr auto m_CachedNodeList = 0x13c; // TArray<ObjectProperty>
	}

	namespace n_UTgAIBehaviorAction_PurchaseBurnCards { // : UTgAIBehaviorAction
		constexpr auto BurnCardId = 0x94; // int32_t
		constexpr auto DesiredRank = 0x98; // int32_t
		constexpr auto bDontPay = 0x9c; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_SquadTargetHealthPercent { // : UTgAIBehaviorCondition
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UUIComponent_RaumSoulCharges { // : UUIComponent_Display
		constexpr auto m_CachedRaum = 0x124; // ObjectProperty
		constexpr auto m_mcText = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcAnim = 0x13c; // ObjectProperty
		constexpr auto m_mcMaxStacks = 0x144; // ObjectProperty
		constexpr auto m_bIsHiding = 0x14c; // uint32_t : 1
		constexpr auto m_bEnabled = 0x14c; // uint32_t : 1
		constexpr auto m_nCurrentSoulCharges = 0x150; // int32_t
	}

	namespace n_UTgDeviceForm_DemonTeleport { // : UTgDeviceForm
		constexpr auto m_DemonNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_DemonNodes1p = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackMorphWeight { // : UInterpTrackFloatBase
		constexpr auto MorphNodeName = 0xb8; // FName
	}

	namespace n_UMaterialInstanceConstant { // : UMaterialInstance
		constexpr auto FontParameterValues = 0x2f4; // TArray<FFontParameterValue>
		constexpr auto ScalarParameterValues = 0x304; // TArray<FScalarParameterValue>
		constexpr auto TextureParameterValues = 0x314; // TArray<FTextureParameterValue>
		constexpr auto VectorParameterValues = 0x324; // TArray<FVectorParameterValue>
		constexpr auto StateParameters = 0x334; // TArray<FMICStateParams>
	}

	namespace n_AFractureManager { // : AActor
		constexpr auto FSMPartPoolSize = 0x280; // int32_t
		constexpr auto bEnableAntiVibration = 0x284; // uint32_t : 1
		constexpr auto bEnableSpawnChunkEffectForRadialDamage = 0x284; // uint32_t : 1
		constexpr auto DestroyVibrationLevel = 0x288; // float
		constexpr auto DestroyMinAngVel = 0x28c; // float
		constexpr auto ExplosionVelScale = 0x290; // float
		constexpr auto PartPool = 0x294; // TArray<ObjectProperty>
		constexpr auto FreeParts = 0x2a4; // TArray<int32_t>
		constexpr auto ActorsWithDeferredPartsToSpawn = 0x2b4; // TArray<ObjectProperty>
	}

	namespace n_UUIDataStore_GameState { // : UUIDataStore
		constexpr auto __OnRefreshDataFieldValue__Delegate = 0x98; // DelegateProperty
	}

	namespace n_ATgObjective { // : AActor
		constexpr auto r_nDefenderTaskForceIndex = 0x280; // char
		constexpr auto r_nControllingTaskForceIndex = 0x281; // char
		constexpr auto r_nContestingTaskForceIndex = 0x282; // char
		constexpr auto r_eStatus = 0x283; // EObjectiveStatus
		constexpr auto r_nControllingTaskForceCount = 0x284; // int32_t
		constexpr auto m_InWordIndicatorFX = 0x288; // ObjectProperty
		constexpr auto m_ForegroundIndicatorFX = 0x290; // ObjectProperty
		constexpr auto m_nActiveAlertId = 0x298; // int32_t
		constexpr auto m_nPendingActiveAlertId = 0x29c; // int32_t
		constexpr auto m_nInactiveAlertId = 0x2a0; // int32_t
		constexpr auto m_nWaypointMessageOverride = 0x2a4; // int32_t
		constexpr auto m_bTriggerEventsOnClientAsWell = 0x2a8; // uint32_t : 1
	}

	namespace n_UUIComponent_AccountLinkIcon { // : UUIComponent_Display
		constexpr auto m_mcIconFacebook = 0x124; // ObjectProperty
		constexpr auto m_mcIconTwitch = 0x12c; // ObjectProperty
	}

	namespace n_UParticleModuleAccelerationBase { // : UParticleModule
		constexpr auto bAlwaysInWorldSpace = 0x68; // uint32_t : 1
	}

	namespace n_ANxCylindricalForceFieldCapsule { // : ANxCylindricalForceField
		constexpr auto RenderComponent = 0x304; // ComponentProperty
	}

	namespace n_ATgDeploy_YagoHardenPoison { // : ATgDeploy_EffectField
		constexpr auto m_fRadiusIncPerSec = 0x4a0; // float
		constexpr auto m_fMaxRadiusScale = 0x4a4; // float
	}

	namespace n_UTgAIBehaviorCondition_HealthPercent { // : UTgAIBehaviorCondition
		constexpr auto HealthPct = 0x98; // float
	}

	namespace n_UGFxEngine { // : UObject
		constexpr auto GCReferences = 0x60; // TArray<FGCReference>
		constexpr auto RefCount = 0x70; // int32_t
		constexpr auto ForceGarbageCollectUponReleaseTextures = 0x74; // TArray<FName>
	}

	namespace n_UUIComponent_EventChallengeSystem { // : UUIComponent_Display
		constexpr auto m_pRegionInfo = 0x124; // ObjectProperty
		constexpr auto m_pRegionDisplay = 0x12c; // ObjectProperty
		constexpr auto m_pMap = 0x134; // ObjectProperty
		constexpr auto m_bShowingHubs = 0x13c; // uint32_t : 1
	}

	namespace n_UGFxObject { // : UObject
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto Value = 0x68; // int32_t [0xc]
		constexpr auto m_nIndex = 0x98; // int32_t
		constexpr auto m_nFunction = 0x9c; // int32_t
		constexpr auto m_bMuteSound = 0xa0; // uint32_t : 1
		constexpr auto m_bUseCachedDisplayInfo = 0xa0; // uint32_t : 1
		constexpr auto m_bForceHidden = 0xa0; // uint32_t : 1
		constexpr auto m_bWantsVisible = 0xa0; // uint32_t : 1
		constexpr auto m_bHasCallbacksBound = 0xa0; // uint32_t : 1
		constexpr auto m_fAnimSize = 0xa4; // float
		constexpr auto m_fOrigX = 0xa8; // float
		constexpr auto m_fOrigY = 0xac; // float
		constexpr auto m_fOrigWidth = 0xb0; // float
		constexpr auto m_fOrigHeight = 0xb4; // float
		constexpr auto m_fOrigScaleX = 0xb8; // float
		constexpr auto m_fOrigScaleY = 0xbc; // float
		constexpr auto m_DebugName = 0xc0; // FName
		constexpr auto m_CachedDisplayInfo = 0xc8; // FASDisplayInfo
		constexpr auto SubWidgetBindings = 0xf4; // TArray<FGFxWidgetBinding>
	}

	namespace n_UTgSeqAct_SetUITextBox { // : USequenceAction
		constexpr auto TextBox_MessageID = 0x108; // int32_t
		constexpr auto TextBox_TargetSecondary = 0x10c; // uint32_t : 1
		constexpr auto TextBox_UseDuration = 0x10c; // uint32_t : 1
		constexpr auto TextBox_AllowEscape = 0x10c; // uint32_t : 1
		constexpr auto TextBox_MessageType = 0x110; // AlertType
	}

	namespace n_USeqAct_WaitForLevelsVisible { // : USeqAct_Latent
		constexpr auto LevelNames = 0x120; // TArray<FName>
		constexpr auto bShouldBlockOnLoad = 0x130; // uint32_t : 1
	}

	namespace n_ANxGenericForceField { // : ANxForceField
		constexpr auto Coordinates = 0x2d4; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2d8; // FVector
		constexpr auto PositionMultiplierX = 0x2e4; // FVector
		constexpr auto PositionMultiplierY = 0x2f0; // FVector
		constexpr auto PositionMultiplierZ = 0x2fc; // FVector
		constexpr auto PositionTarget = 0x308; // FVector
		constexpr auto VelocityMultiplierX = 0x314; // FVector
		constexpr auto VelocityMultiplierY = 0x320; // FVector
		constexpr auto VelocityMultiplierZ = 0x32c; // FVector
		constexpr auto VelocityTarget = 0x338; // FVector
		constexpr auto Noise = 0x344; // FVector
		constexpr auto FalloffLinear = 0x350; // FVector
		constexpr auto FalloffQuadratic = 0x35c; // FVector
		constexpr auto TorusRadius = 0x368; // float
		constexpr auto LinearKernel = 0x36c; // FPointer
	}

	namespace n_UMobileMenuBar { // : UMobileMenuObject
		constexpr auto bIsVertical = 0xdc; // uint32_t : 1
		constexpr auto bDirty = 0xdc; // uint32_t : 1
		constexpr auto SelectedIndex = 0xe0; // int32_t
		constexpr auto FirstItem = 0xe4; // int32_t
		constexpr auto Items = 0xe8; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleAccelerationOverLifetime { // : UParticleModuleAccelerationBase
		constexpr auto AccelOverLife = 0x6c; // FRawDistributionVector
	}

	namespace n_UUIDataLeagueManager { // : UUIDataObject
		constexpr auto m_LeagueArray = 0x74; // TArray<ObjectProperty>
		constexpr auto m_Leagues = 0x84; // TMap<None, None>
		constexpr auto m_EOM = 0xcc; // ObjectProperty
		constexpr auto m_TierChange = 0xd4; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Telepunch { // : UTgDeviceForm
		constexpr auto m_TelepunchNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_TelepunchNodes1p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_bUltFxActive = 0x2ac; // uint32_t : 1
	}

	namespace n_UAnimNodeBlendByBase { // : UAnimNodeBlendList
		constexpr auto Type = 0x144; // EBaseBlendType
		constexpr auto ActorTag = 0x148; // FName
		constexpr auto ActorClass = 0x150; // AActor*
		constexpr auto BlendTime = 0x158; // float
		constexpr auto CachedBase = 0x15c; // ObjectProperty
	}

	namespace n_UMorphNodeMultiPose { // : UMorphNodeBase
		constexpr auto Targets = 0x74; // TArray<ObjectProperty>
		constexpr auto MorphNames = 0x84; // TArray<FName>
		constexpr auto Weights = 0x94; // TArray<float>
	}

	namespace n_APrefabInstance { // : AActor
		constexpr auto TemplatePrefab = 0x280; // ObjectProperty
		constexpr auto TemplateVersion = 0x288; // int32_t
		constexpr auto ArchetypeToInstanceMap = 0x28c; // TMap<None, None>
		constexpr auto SequenceInstance = 0x2d4; // ObjectProperty
		constexpr auto PI_PackageVersion = 0x2dc; // int32_t
		constexpr auto PI_LicenseePackageVersion = 0x2e0; // int32_t
		constexpr auto PI_Bytes = 0x2e4; // TArray<char>
		constexpr auto PI_CompleteObjects = 0x2f4; // TArray<ObjectProperty>
		constexpr auto PI_ReferencedObjects = 0x304; // TArray<ObjectProperty>
		constexpr auto PI_SavedNames = 0x314; // TArray<FString>
		constexpr auto PI_ObjectMap = 0x324; // TMap<None, None>
		constexpr auto m_bIgnoreVersionUpdates = 0x36c; // uint32_t : 1
	}

	namespace n_USeqAct_LevelStreamingBase { // : USeqAct_Latent
		constexpr auto bMakeVisibleAfterLoad = 0x120; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0x120; // uint32_t : 1
	}

	namespace n_USeqVar_Bool { // : USequenceVariable
		constexpr auto bValue = 0xa0; // int32_t
	}

	namespace n_UUICouponAcquisition { // : UTgGfxScene
		constexpr auto VfTable_IAcquisitionHandler = 0x1ec; // FPointer
		constexpr auto m_nCouponItem = 0x1f4; // int32_t
		constexpr auto m_nCouponType = 0x1f8; // int32_t
		constexpr auto m_nCouponBundle = 0x1fc; // int32_t
		constexpr auto m_nCouponVendor = 0x200; // int32_t
		constexpr auto m_nMultiItemIndex = 0x204; // int32_t
		constexpr auto m_mcAnimTitle = 0x208; // ObjectProperty
		constexpr auto m_mcTitle = 0x210; // ObjectProperty
		constexpr auto m_mcCouponDescrition = 0x218; // ObjectProperty
		constexpr auto m_mcCostPrev = 0x220; // ObjectProperty
		constexpr auto m_mcCostPrevIcon = 0x228; // ObjectProperty
		constexpr auto m_mcCostPrevStrikethrough = 0x230; // ObjectProperty
		constexpr auto m_mcCostCurrent = 0x238; // ObjectProperty
		constexpr auto m_mcCostCurrentIcon = 0x240; // ObjectProperty
		constexpr auto m_mcCouponExpires = 0x248; // ObjectProperty
		constexpr auto m_mcButton0 = 0x250; // ObjectProperty
		constexpr auto m_mcButton1 = 0x258; // ObjectProperty
		constexpr auto m_mcPrompt0 = 0x260; // ObjectProperty
		constexpr auto m_mcPrompt1 = 0x268; // ObjectProperty
		constexpr auto m_mcFrame = 0x270; // ObjectProperty
		constexpr auto m_mcFrameLine = 0x278; // ObjectProperty
		constexpr auto m_mcRarityFrame = 0x280; // ObjectProperty
		constexpr auto m_mcItemImageStack = 0x288; // ObjectProperty
		constexpr auto m_mcCardImageStack = 0x290; // ObjectProperty
		constexpr auto m_mcChestImageStack = 0x298; // ObjectProperty
		constexpr auto m_mcTexture = 0x2a0; // ObjectProperty
		constexpr auto m_Items = 0x2a8; // TArray<FAcquiredItem>
		constexpr auto m_scUnlocked = 0x2b8; // ObjectProperty
	}

	namespace n_ATgDevice_QuadWield { // : ATgDevice_DualWield
		constexpr auto m_vProjectileSpawnOffset3 = 0xa18; // FVector
		constexpr auto m_vProjectileSpawnOffset4 = 0xa24; // FVector
		constexpr auto m_nWeaponFireNumber = 0xa30; // int32_t
	}

	namespace n_UCylinderComponent { // : UPrimitiveComponent
		constexpr auto CollisionHeight = 0x24c; // float
		constexpr auto CollisionRadius = 0x250; // float
		constexpr auto CylinderColor = 0x254; // FColor
		constexpr auto bDrawBoundingBox = 0x258; // uint32_t : 1
		constexpr auto bDrawNonColliding = 0x258; // uint32_t : 1
		constexpr auto bAlwaysRenderIfSelected = 0x258; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_HitWithPetDevice { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bSkipActiveCheck = 0xcc; // uint32_t : 1
		constexpr auto m_bSkipStartCooldown = 0xcc; // uint32_t : 1
	}

	namespace n_UInterpTrackSound { // : UInterpTrackVectorBase
		constexpr auto Sounds = 0xb8; // TArray<FSoundTrackKey>
		constexpr auto bPlayOnReverse = 0xc8; // uint32_t : 1
		constexpr auto bContinueSoundOnMatineeEnd = 0xc8; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0xc8; // uint32_t : 1
		constexpr auto bTreatAsDialogue = 0xc8; // uint32_t : 1
	}

	namespace n_UMaterialExpressionConstant2Vector { // : UMaterialExpression
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
	}

	namespace n_ATgGame_Battle { // : ATgGame_Mission
		constexpr auto m_MultiLaneXpBonus = 0x744; // float
		constexpr auto m_bRespawnInhibitors = 0x748; // uint32_t : 1
		constexpr auto m_bEnableCrowdEvents = 0x748; // uint32_t : 1
		constexpr auto m_bRestrictStoreInteractions = 0x748; // uint32_t : 1
		constexpr auto m_bWinGameOnNexusDestroyed = 0x748; // uint32_t : 1
		constexpr auto m_nBumbasMaskId = 0x74c; // int32_t
		constexpr auto m_nSupportStarterId = 0x750; // int32_t
		constexpr auto m_MercsToSpawn = 0x754; // TArray<FTgAIBotPlayersToSpawn>
		constexpr auto m_nPIESpawnTable = 0x764; // int32_t
		constexpr auto m_nTargetPlayerCountForMercs = 0x768; // int32_t
	}

	namespace n_USeqEvent_PlayerSpawned { // : USequenceEvent
		constexpr auto SpawnPoint = 0x128; // ObjectProperty
	}

	namespace n_UTgScreenCapturePostEffect { // : UMaterialEffect
		constexpr auto ScreenCapture = 0x90; // ObjectProperty
		constexpr auto bIsScreenCaptureReady = 0x98; // uint32_t : 1
	}

	namespace n_UTgAchievement_KillAfterDevice { // : UTgAchievement
		constexpr auto m_mlastHits = 0x94; // FMap_Mirror
	}

	namespace n_UUIComponent_GenericTitleInputButtons { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty [0x2]
		constexpr auto m_mcError = 0x134; // ObjectProperty
		constexpr auto m_Buttons = 0x13c; // ObjectProperty [0x2]
		constexpr auto m_pPurchaseButton = 0x14c; // ObjectProperty
		constexpr auto m_ButtonClickHandles = 0x154; // int32_t [0x2]
		constexpr auto m_mcInputTF = 0x15c; // ObjectProperty
		constexpr auto m_mcInputFrame = 0x164; // ObjectProperty
		constexpr auto m_mcInputFrameHighlight = 0x16c; // ObjectProperty
		constexpr auto m_grButtons = 0x174; // ObjectProperty
	}

	namespace n_UTgAnimMetaData_MICScalarParameterExtended { // : UTgAnimMetaData_MICScalarParameter
		constexpr auto bSearchSelf = 0x8c; // uint32_t : 1
		constexpr auto bSearchSiblings = 0x8c; // uint32_t : 1
		constexpr auto bSearchChildren = 0x8c; // uint32_t : 1
		constexpr auto bIncludeSearchParticles = 0x8c; // uint32_t : 1
		constexpr auto bIncludeSearchMeshes = 0x8c; // uint32_t : 1
		constexpr auto bForceAllMaterials = 0x8c; // uint32_t : 1
		constexpr auto bFindAllMatchingMaterials = 0x8c; // uint32_t : 1
		constexpr auto MaterialToFind = 0x90; // ObjectProperty
		constexpr auto MaterialToReplace = 0x98; // ObjectProperty
		constexpr auto nmExclusiveChannel = 0xa0; // FName
		constexpr auto AlternateMaterialList = 0xa8; // TArray<FAlternateMaterialOverride>
		constexpr auto TexturesToHarvest = 0xb8; // TArray<FName>
	}

	namespace n_ATgDeploy_Bomb { // : ATgDeployable
		constexpr auto r_fPersistTime = 0x46c; // float
		constexpr auto m_CountdownIndicator = 0x470; // ComponentProperty
		constexpr auto m_CountdownIndicatorMIC = 0x478; // ObjectProperty
		constexpr auto r_fRadiusScale = 0x480; // float
	}

	namespace n_UUIComponent_CollectToUnlock { // : UUIComponent_Display
		constexpr auto m_mcContainter = 0x124; // ObjectProperty
		constexpr auto m_mcTF0 = 0x12c; // ObjectProperty
		constexpr auto m_mcIcon = 0x134; // ObjectProperty
		constexpr auto m_mcTF1 = 0x13c; // ObjectProperty
	}

	namespace n_UNavMeshPath_WithinTraversalDist { // : UNavMeshPathConstraint
		constexpr auto MaxTraversalDist = 0x78; // float
		constexpr auto bSoft = 0x7c; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x80; // float
	}

	namespace n_UImageBasedReflectionComponent { // : UStaticMeshComponent
		constexpr auto bEnabled = 0x310; // uint32_t : 1
		constexpr auto bTwoSided = 0x310; // uint32_t : 1
		constexpr auto ReflectionTexture = 0x314; // ObjectProperty
		constexpr auto ReflectionColor = 0x31c; // FLinearColor
	}

	namespace n_UUIDataStore_MenuItems { // : UUIDataStore_GameResource
		constexpr auto CurrentGameSettingsTag = 0xf0; // FName
		constexpr auto OptionProviders = 0xf8; // FMultiMap_Mirror
		constexpr auto DynamicProviders = 0x140; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionFluidNormal { // : UMaterialExpression
		constexpr auto Coordinates = 0xb0; // FExpressionInput
	}

	namespace n_ATgSpawnGate { // : ADynamicBlockingVolume
		constexpr auto m_eSpawnGateType = 0x2c4; // ESpawnGateType
		constexpr auto m_StandardEmitter = 0x2c8; // ObjectProperty
		constexpr auto m_TeamColoredEmitter = 0x2d0; // ObjectProperty
		constexpr auto m_bStartActive = 0x2d8; // uint32_t : 1
		constexpr auto m_bGateOpen = 0x2d8; // uint32_t : 1
		constexpr auto m_bCollisionActive = 0x2d8; // uint32_t : 1
		constexpr auto m_nCurrentTaskforce = 0x2dc; // int32_t
	}

	namespace n_UUIComponent_ChestItemButton { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcNameTF = 0x12c; // ObjectProperty
		constexpr auto m_mcRarity = 0x134; // ObjectProperty
		constexpr auto m_mcBackground = 0x13c; // ObjectProperty
		constexpr auto m_mcOwnedItemsTF = 0x144; // ObjectProperty
		constexpr auto m_pCTA = 0x14c; // ObjectProperty
		constexpr auto m_pChestDisplay = 0x154; // ObjectProperty
		constexpr auto m_pItemPreview = 0x15c; // ObjectProperty
		constexpr auto m_pItemHint = 0x164; // ObjectProperty
	}

	namespace n_UTgTargetAimTrackingCurves { // : UObject
		constexpr auto SettingsName = 0x60; // FName
		constexpr auto StrengthByAccuracyX = 0x68; // FRawDistributionFloat
		constexpr auto StrengthByDesiredAngleX = 0x8c; // FRawDistributionFloat
		constexpr auto StrengthByAccuracyY = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDesiredAngleY = 0xd4; // FRawDistributionFloat
	}

	namespace n_UReachSpec { // : UObject
		constexpr auto NavOctreeObject = 0x60; // FPointer
		constexpr auto Distance = 0x68; // int32_t
		constexpr auto Direction = 0x6c; // FVector
		constexpr auto Start = 0x78; // ObjectProperty
		constexpr auto End = 0x80; // FActorReference
		constexpr auto CollisionRadius = 0x98; // int32_t
		constexpr auto CollisionHeight = 0x9c; // int32_t
		constexpr auto reachFlags = 0xa0; // int32_t
		constexpr auto MaxLandingVelocity = 0xa4; // int32_t
		constexpr auto bPruned = 0xa8; // char
		constexpr auto PathColorIndex = 0xa9; // char
		constexpr auto bAddToNavigationOctree = 0xac; // uint32_t : 1
		constexpr auto bCanCutCorners = 0xac; // uint32_t : 1
		constexpr auto bCheckForObstructions = 0xac; // uint32_t : 1
		constexpr auto bSkipPrune = 0xac; // uint32_t : 1
		constexpr auto bDisabled = 0xac; // uint32_t : 1
		constexpr auto PruneSpecList = 0xb0; // TArray<UReachSpec*>
		constexpr auto BlockedBy = 0xc0; // ObjectProperty
	}

	namespace n_UTgSeqAct_SpawnProjectile { // : USequenceAction
		constexpr auto m_nFireModeID = 0x108; // int32_t
		constexpr auto m_FireMode = 0x10c; // ObjectProperty
		constexpr auto m_bSetupFireMode = 0x114; // uint32_t : 1
	}

	namespace n_ATgGameLaunch { // : AGameInfo
		constexpr auto LoginName = 0x4cc; // FString
		constexpr auto LoginPwd = 0x4dc; // FString
		constexpr auto SaveLoginName = 0x4ec; // uint32_t : 1
	}

	namespace n_UTgDevMenuMoviePlayer { // : UUIMoviePlayer
		constexpr auto m_DevMenu = 0x2a0; // ObjectProperty
	}

	namespace n_UUIHudScoreboard { // : UTgGfxScene
		constexpr auto m_nFirstRowIconHeight = 0x1ec; // int32_t
		constexpr auto m_nRowSpacing = 0x1f0; // int32_t
		constexpr auto m_nTalentXOffset = 0x1f4; // int32_t
		constexpr auto m_nPassiveXOffset = 0x1f8; // int32_t
		constexpr auto m_nFirstItemXOffset = 0x1fc; // int32_t
		constexpr auto m_nItemSpacing = 0x200; // int32_t
		constexpr auto m_nBestStreak = 0x204; // int32_t
		constexpr auto m_RedScore = 0x208; // FScoreInfo [0x5]
		constexpr auto m_BlueScore = 0xb7c; // FScoreInfo [0x5]
		constexpr auto m_ItemTooltip = 0x14f0; // ObjectProperty
		constexpr auto m_mcStats = 0x14f8; // ObjectProperty
		constexpr auto m_mcTitle = 0x1500; // ObjectProperty
		constexpr auto m_mcTitles = 0x1508; // ObjectProperty
		constexpr auto m_mcMuteVoiceGamepadPrompt = 0x1510; // ObjectProperty
		constexpr auto m_mcViewProfilePrompt = 0x1518; // ObjectProperty
		constexpr auto m_mcHighlight = 0x1520; // ObjectProperty
		constexpr auto m_mcStat = 0x1528; // ObjectProperty [0x5]
		constexpr auto m_grPlayers = 0x1550; // ObjectProperty
		constexpr auto m_grItems = 0x1558; // ObjectProperty
		constexpr auto m_grCards = 0x1560; // ObjectProperty
		constexpr auto m_mcTabs = 0x1568; // ObjectProperty [0x2]
		constexpr auto m_mcTabKey = 0x1578; // ObjectProperty [0x2]
		constexpr auto m_mcTabTitles = 0x1588; // ObjectProperty [0x2]
		constexpr auto m_eCurrentTab = 0x1598; // ScoreboardTabs
		constexpr auto m_bMuteStateDirty = 0x159c; // uint32_t : 1
	}

	namespace n_UGenericParamListStatEntry { // : UObject
		constexpr auto StatEvent = 0x60; // FPointer
		constexpr auto Writer = 0x68; // ObjectProperty
	}

	namespace n_UUIComponent_ItemMini { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_nLevelOverride = 0x12c; // int32_t
	}

	namespace n_UTgDeviceFire_EncroachmentFireCone { // : UTgDeviceFire
		constexpr auto m_vBaseDimensions = 0x268; // FVector
		constexpr auto m_bBlockedByWorldOnly = 0x274; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_HasEffectCategory { // : UTgAIBehaviorCondition
		constexpr auto EffectCategoryId = 0x98; // int32_t
		constexpr auto EffectGroupId = 0x9c; // int32_t
	}

	namespace n_ATgOverviewCameraActor { // : ACameraActor
		constexpr auto m_bFlipped = 0x420; // uint32_t : 1
	}

	namespace n_ATgDeploy_TurretLinked { // : ATgDeploy_MatchParentFireMode
		constexpr auto m_ParentTurret = 0x46c; // ObjectProperty
	}

	namespace n_ATgDevice_SleightOfHand { // : ATgDevice
		constexpr auto m_InhandWeapon = 0xa08; // ObjectProperty
	}

	namespace n_ASkeletalMeshActorBasedOnExtremeContent { // : ASkeletalMeshActor
		constexpr auto ExtremeContent = 0x2e8; // TArray<FSkelMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x2f8; // TArray<FSkelMaterialSetterDatum>
	}

	namespace n_ATgPawn_Grover { // : ATgPawn_Character
		constexpr auto r_fRadiusForFXBlossom = 0x3164; // float
		constexpr auto m_CachedVine = 0x3168; // ObjectProperty
		constexpr auto m_CachedUlt = 0x3170; // ObjectProperty
	}

	namespace n_ATgProj_DredgeInhand { // : ATgProj_FreeGrenade
		constexpr auto m_fMaxUndampenedZBounce = 0x580; // float
		constexpr auto m_fBounceGravityZMultiplier = 0x584; // float
	}

	namespace n_ATgDevice_AtlasUlt { // : ATgDevice
		constexpr auto m_fTimeDilation = 0xa08; // float
		constexpr auto m_fRampUpTime = 0xa0c; // float
		constexpr auto s_nTimeDilationWindowId = 0xa10; // int32_t
	}

	namespace n_ATgPawn_Saati { // : ATgPawn_Character
		constexpr auto m_bUltimateReadyDisplayGroupOn = 0x3164; // uint32_t : 1
		constexpr auto m_bHasDecoyTalent = 0x3164; // uint32_t : 1
	}

	namespace n_UUIComponent_TargeterManager { // : UUIComponent_Display
		constexpr auto m_mcOwningScene = 0x124; // ObjectProperty
		constexpr auto pTargeterClass = 0x12c; // UObject*
		constexpr auto m_TargeterID = 0x134; // char
		constexpr auto m_Targeters = 0x138; // TArray<ObjectProperty>
	}

	namespace n_UAnimNodeMirror { // : UAnimNodeBlendBase
		constexpr auto bEnableMirroring = 0x114; // uint32_t : 1
	}

	namespace n_UFogVolumeConstantDensityComponent { // : UFogVolumeDensityComponent
		constexpr auto Density = 0xe0; // float
	}

	namespace n_UTgInventoryObject_Listen_HitWithDeviceSpecial { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bSkipActiveCheck = 0xcc; // uint32_t : 1
		constexpr auto m_bSkipStartCooldown = 0xcc; // uint32_t : 1
	}

	namespace n_USeqAct_GetDistance { // : USequenceAction
		constexpr auto Distance = 0x108; // float
	}

	namespace n_ATgSkeletalMeshActor_Leash { // : ATgSkeletalMeshActorSpawnable
		constexpr auto m_StartMesh = 0x32c; // ComponentProperty
		constexpr auto m_StartBoneName = 0x334; // FName
		constexpr auto m_EndMesh = 0x33c; // ComponentProperty
		constexpr auto m_EndBoneName = 0x344; // FName
		constexpr auto m_StartControl = 0x34c; // ObjectProperty
		constexpr auto m_EndControl = 0x354; // ObjectProperty
	}

	namespace n_UTgDeviceFire_Salvo { // : UTgDeviceFire
		constexpr auto m_CachedDrogozInhand = 0x268; // ObjectProperty
	}

	namespace n_ATgProj_Loogie { // : ATgProj_Simulated
		constexpr auto m_bWasExplodedByRocket = 0x52c; // uint32_t : 1
		constexpr auto m_bIgnoreRocketOwner = 0x52c; // uint32_t : 1
	}

	namespace n_UUIComponent_ProgressBarRadial { // : UUIComponent_Display
		constexpr auto m_nZeroPercentFrame = 0x124; // int32_t
		constexpr auto m_nHundredPercentFrame = 0x128; // int32_t
		constexpr auto m_fAnimTime = 0x12c; // float
		constexpr auto m_fAnimDelay = 0x130; // float
		constexpr auto m_fCurrentPercent = 0x134; // float
		constexpr auto m_fTargetPercent = 0x138; // float
		constexpr auto m_fDeltaPercent = 0x13c; // float
		constexpr auto m_mcMask = 0x140; // ObjectProperty
	}

	namespace n_UTgGameDC_Team { // : UTgDataChunk
		constexpr auto m_nTaskForce = 0x158; // int32_t
		constexpr auto m_Members = 0x15c; // ObjectProperty [0x5]
		constexpr auto m_nMaxMemberCount = 0x184; // int32_t
		constexpr auto m_Guardian = 0x188; // ObjectProperty
		constexpr auto m_Towers = 0x190; // ObjectProperty [0x9]
		constexpr auto m_SurrenderTimer = 0x1d8; // ObjectProperty
	}

	namespace n_UUIComponent_ScrollableText { // : UUIComponent_Display
		constexpr auto m_fScrollY = 0x124; // float
		constexpr auto m_fTextLineHeight = 0x128; // float
		constexpr auto m_fTextTotalHeight = 0x12c; // float
		constexpr auto m_mcTF = 0x130; // ObjectProperty
		constexpr auto m_pScrollbar = 0x138; // ObjectProperty
		constexpr auto m_grInput = 0x140; // ObjectProperty
	}

	namespace n_UUIComponent_TelepunchTarget { // : UUIComponent_Display
		constexpr auto m_CurrentViewPawn = 0x124; // ObjectProperty
		constexpr auto m_CurrentTargetPawn = 0x12c; // ObjectProperty
		constexpr auto m_bIsHiding = 0x134; // uint32_t : 1
		constexpr auto m_bEnabled = 0x134; // uint32_t : 1
		constexpr auto m_bIsTarget = 0x134; // uint32_t : 1
		constexpr auto m_bIsLocked = 0x134; // uint32_t : 1
		constexpr auto m_nLastDisplayedProfileId = 0x138; // int32_t
		constexpr auto m_mcActive1 = 0x13c; // ObjectProperty
		constexpr auto m_mcActive2 = 0x144; // ObjectProperty
		constexpr auto m_mcFrame = 0x14c; // ObjectProperty
		constexpr auto m_mcIconSelectedParent = 0x154; // ObjectProperty
		constexpr auto m_mcIconUnselectedParent = 0x15c; // ObjectProperty
		constexpr auto m_mcIconSelected = 0x164; // ObjectProperty
		constexpr auto m_mcIconUnselected = 0x16c; // ObjectProperty
		constexpr auto m_mcLocked = 0x174; // ObjectProperty
	}

	namespace n_UTgInvListener_Enlightenment { // : UTgInvListener
		constexpr auto m_bCanRefundEnergy = 0xc4; // uint32_t : 1
	}

	namespace n_ATgDevice_ChurchillInhand { // : ATgDevice
		constexpr auto m_bIsADS = 0xa08; // uint32_t : 1
		constexpr auto m_vADSProjectileSpawnOffset = 0xa0c; // FVector
		constexpr auto m_fADSRecoilMultiplier = 0xa18; // float
		constexpr auto m_fAmmoRefundChanceADS = 0xa1c; // float
		constexpr auto m_fAmmoRefundPercOnHit = 0xa20; // float
		constexpr auto m_CachedPawnOwner = 0xa24; // ObjectProperty
	}

	namespace n_UFogVolumeConeDensityComponent { // : UFogVolumeDensityComponent
		constexpr auto MaxDensity = 0xe0; // float
		constexpr auto ConeVertex = 0xe4; // FVector
		constexpr auto ConeRadius = 0xf0; // float
		constexpr auto ConeAxis = 0xf4; // FVector
		constexpr auto ConeMaxAngle = 0x100; // float
		constexpr auto PreviewCone = 0x104; // ComponentProperty
	}

	namespace n_UUIComponent_HomeGoToChest { // : UUIComponent_HomeGoToItem
		constexpr auto m_mcChestIcon = 0x160; // ObjectProperty
	}

	namespace n_USeqAct_Trace { // : USequenceAction
		constexpr auto bTraceActors = 0x108; // uint32_t : 1
		constexpr auto bTraceWorld = 0x108; // uint32_t : 1
		constexpr auto TraceExtent = 0x10c; // FVector
		constexpr auto StartOffset = 0x118; // FVector
		constexpr auto EndOffset = 0x124; // FVector
		constexpr auto HitObject = 0x130; // ObjectProperty
		constexpr auto Distance = 0x138; // float
		constexpr auto HitLocation = 0x13c; // FVector
	}

	namespace n_ATgDevice_HammerSlam { // : ATgDevice
		constexpr auto m_vFireLoc = 0xa08; // FVector
		constexpr auto m_vFireAim = 0xa14; // FVector
		constexpr auto m_ProjectileHits = 0xa20; // TArray<ObjectProperty>
		constexpr auto m_pAzaan = 0xa30; // ObjectProperty
		constexpr auto m_bWasAboveThreshold = 0xa38; // uint32_t : 1
	}

	namespace n_ATgDevice_DropAndRoll { // : ATgDevice_Charge
		constexpr auto m_CachedSeven = 0xa7c; // ObjectProperty
	}

	namespace n_ATgCarriedFlag { // : AActor
		constexpr auto r_nDefenderTaskForce = 0x280; // int32_t
		constexpr auto s_FlagBase = 0x284; // ObjectProperty
		constexpr auto r_bIsHome = 0x28c; // uint32_t : 1
		constexpr auto m_Holder = 0x290; // ObjectProperty
		constexpr auto r_HolderPRI = 0x298; // ObjectProperty
		constexpr auto m_OldHolder = 0x2a0; // ObjectProperty
		constexpr auto m_FirstTouch = 0x2a8; // ObjectProperty
		constexpr auto m_Assists = 0x2b0; // TArray<ObjectProperty>
		constexpr auto m_fMaxDropTime = 0x2c0; // float
		constexpr auto m_fDefaultRadius = 0x2c4; // float
		constexpr auto m_fDefaultHeight = 0x2c8; // float
	}

	namespace n_UUIScene_UIAccountLink { // : UUIScene
		constexpr auto m_grButtons = 0x1cc; // ObjectProperty
		constexpr auto m_EmailOptInToggle = 0x1d4; // ObjectProperty
		constexpr auto m_ChangeEmailButton = 0x1dc; // ObjectProperty
		constexpr auto m_AcceptButton = 0x1e4; // ObjectProperty
		constexpr auto m_DeclineButton = 0x1ec; // ObjectProperty
	}

	namespace n_ATgDevice_FlamethrowerTurret { // : ATgDevice
		constexpr auto m_CachedBarik = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_RiderUlt { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto r_nEatingCookie = 0xa10; // char
	}

	namespace n_ATgDevice_NinjaAltInhand { // : ATgDevice
		constexpr auto c_bAlreadyConsumedStamina = 0xa08; // uint32_t : 1
		constexpr auto m_CachedKoga = 0xa0c; // ObjectProperty
	}

	namespace n_UTgSeqEvent_PhaseNotify { // : USequenceEvent
		constexpr auto m_PhaseName = 0x128; // FString
	}

	namespace n_UAlienFXManager { // : UObject
		constexpr auto m_bGood = 0x60; // uint32_t : 1
		constexpr auto m_bLoaded = 0x60; // uint32_t : 1
		constexpr auto m_nChestRevealRarity = 0x64; // int32_t
		constexpr auto m_fTransitionTimestamp = 0x68; // float
		constexpr auto m_fTimespan = 0x6c; // float
		constexpr auto m_fFrequency = 0x70; // float
		constexpr auto m_dwPrimaryColor = 0x74; // Fdword
		constexpr auto m_fDecayLambda = 0x78; // float
		constexpr auto c_fUltHalflife = 0x7c; // float
		constexpr auto ePrevOverlay = 0x80; // FXOverlay
		constexpr auto eCurrOverlay = 0x81; // FXOverlay
	}

	namespace n_UParticleModuleOrbitBase { // : UParticleModule
		constexpr auto bUseEmitterTime = 0x68; // uint32_t : 1
	}

	namespace n_UTgControlModule_Feared { // : UTgControlModule_ThirdPerson
		constexpr auto c_fLastSwitchTime = 0xcc; // float
		constexpr auto c_fNextSwitchTime = 0xd0; // float
		constexpr auto c_vCurrentDirection = 0xd4; // FVector
	}

	namespace n_UDistributionVectorUniformRange { // : UDistributionVector
		constexpr auto MaxHigh = 0x7c; // FVector
		constexpr auto MaxLow = 0x88; // FVector
		constexpr auto MinHigh = 0x94; // FVector
		constexpr auto MinLow = 0xa0; // FVector
	}

	namespace n_UUIComponent_LobbyBoosterActivation { // : UUIComponent_Display
		constexpr auto m_mcBoosterIcon = 0x124; // ObjectProperty
		constexpr auto m_pNameVIP = 0x12c; // ObjectProperty
	}

	namespace n_UUIData_BattlePassLevel { // : UUIData
		constexpr auto m_nLevel = 0x64; // int32_t
		constexpr auto m_pLTI = 0x68; // ObjectProperty
		constexpr auto m_bUnlocked = 0x70; // uint32_t : 1
		constexpr auto m_bPremium = 0x70; // uint32_t : 1
	}

	namespace n_UUIData_MatchMember { // : UUIData
		constexpr auto VfTable_ITgCallbackInterface = 0x64; // FPointer
		constexpr auto VfTable_IUIDataInterface_Name = 0x6c; // FPointer
		constexpr auto m_sName = 0x74; // FString
		constexpr auto m_bNameHidden = 0x84; // uint32_t : 1
		constexpr auto m_bUsingBoosterSkinItem = 0x84; // uint32_t : 1
		constexpr auto m_bTradePossible = 0x84; // uint32_t : 1
		constexpr auto m_bTradeInitiated = 0x84; // uint32_t : 1
		constexpr auto m_bWantsTradePossible = 0x84; // uint32_t : 1
		constexpr auto m_bPendingFilterRequest = 0x84; // uint32_t : 1
		constexpr auto m_dwPlayerId = 0x88; // Fdword
		constexpr auto m_dwBotId = 0x8c; // Fdword
		constexpr auto m_nMctsMatchIndex = 0x90; // int32_t
		constexpr auto pPlayerData = 0x94; // ObjectProperty
		constexpr auto m_pSelectedChamp = 0x9c; // ObjectProperty
		constexpr auto m_CurrentAllyCustomizeState = 0xa4; // FMatchLobbyPlayerCustomize
		constexpr auto m_pTradeTarget = 0xc4; // ObjectProperty
		constexpr auto m_pRequestedTradeWith = 0xcc; // ObjectProperty
		constexpr auto m_CallbackContainer = 0xd4; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlineGameSearch { // : UUIDataStore_Remote
		constexpr auto SearchResultsName = 0x98; // FName
		constexpr auto OnlineSub = 0xa0; // ObjectProperty
		constexpr auto GameInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameSearchCfgList = 0xb8; // TArray<FGameSearchCfg>
		constexpr auto SelectedIndex = 0xc8; // int32_t
		constexpr auto ActiveSearchIndex = 0xcc; // int32_t
	}

	namespace n_UTgAnimBlendBySpeed { // : UAnimNodeBlendBySpeed
		constexpr auto m_TgPawn = 0x178; // ObjectProperty
		constexpr auto m_SpeedType = 0x180; // ESpeedType
		constexpr auto ResetSynchGroups = 0x184; // TArray<FResetSynchGroup>
		constexpr auto m_bIgnoreRootMotion = 0x194; // uint32_t : 1
		constexpr auto m_bIgnoreZVelocity = 0x194; // uint32_t : 1
		constexpr auto m_bNotifyOwnerOnChildChange = 0x194; // uint32_t : 1
		constexpr auto m_bEnableClassOverrides = 0x194; // uint32_t : 1
		constexpr auto m_WalkChildren = 0x198; // TArray<int32_t>
		constexpr auto m_SprintChildren = 0x1a8; // TArray<int32_t>
		constexpr auto m_BaseSpeed = 0x1b8; // TArray<float>
		constexpr auto m_IgnoredPhysics = 0x1c8; // TArray<EPhysics>
		constexpr auto m_nIndexToOverride = 0x1d8; // int32_t
		constexpr auto m_fBaseSpeedRecon = 0x1dc; // float
		constexpr auto m_fBaseSpeedRobotics = 0x1e0; // float
		constexpr auto m_fBaseSpeedAssault = 0x1e4; // float
		constexpr auto m_fBaseSpeedMedic = 0x1e8; // float
		constexpr auto m_fBaseSpeedReconFemale = 0x1ec; // float
		constexpr auto m_fBaseSpeedRoboticsFemale = 0x1f0; // float
		constexpr auto m_fBaseSpeedAssaultFemale = 0x1f4; // float
		constexpr auto m_fBaseSpeedMedicFemale = 0x1f8; // float
		constexpr auto m_fBaseSpeedReconCity = 0x1fc; // float
		constexpr auto m_fBaseSpeedRoboticsCity = 0x200; // float
		constexpr auto m_fBaseSpeedAssaultCity = 0x204; // float
		constexpr auto m_fBaseSpeedMedicCity = 0x208; // float
		constexpr auto m_fBaseSpeedReconFemaleCity = 0x20c; // float
		constexpr auto m_fBaseSpeedRoboticsFemaleCity = 0x210; // float
		constexpr auto m_fBaseSpeedAssaultFemaleCity = 0x214; // float
		constexpr auto m_fBaseSpeedMedicFemaleCity = 0x218; // float
	}

	namespace n_UTgCameraModule_TopDown { // : UTgCameraModule_Spectator
		constexpr auto WorldViewRotation = 0x9c; // FRotator
	}

	namespace n_UTgSkelCon_ClockworkSpinner { // : USkelControlSingleBone
		constexpr auto m_fInterpTime = 0x100; // float
		constexpr auto m_fRemainingInterpTime = 0x104; // float
		constexpr auto m_fPauseTime = 0x108; // float
		constexpr auto m_fRemainingPauseTime = 0x10c; // float
		constexpr auto RotationAxis = 0x110; // EAxis
		constexpr auto DeltaRotation = 0x114; // int32_t
		constexpr auto m_fInterpRotation = 0x118; // float
		constexpr auto bLimitedRotation = 0x11c; // uint32_t : 1
		constexpr auto bForward = 0x11c; // uint32_t : 1
		constexpr auto m_bResetRotationOnZeroStrength = 0x11c; // uint32_t : 1
		constexpr auto m_fRotationMin = 0x120; // float
		constexpr auto m_fRotationMax = 0x124; // float
		constexpr auto m_fResetInterpTime = 0x128; // float
		constexpr auto m_fResetPauseTime = 0x12c; // float
		constexpr auto m_fResetRotation = 0x130; // float
		constexpr auto m_fRotatorMin = 0x134; // float
		constexpr auto m_fRotatorMax = 0x138; // float
		constexpr auto RotationsPerSecond = 0x13c; // float
		constexpr auto ResetRotationsPerSecond = 0x140; // float
	}

	namespace n_UInterpTrackNotify { // : UInterpTrack
		constexpr auto Node = 0xa0; // ObjectProperty
		constexpr auto ParentNodeName = 0xa8; // FName
		constexpr auto OuterSequence = 0xb0; // ObjectProperty
		constexpr auto OuterSet = 0xb8; // ObjectProperty
		constexpr auto NotifyTrack = 0xc0; // TArray<FNotifyTrackKey>
	}

	namespace n_ATgDevice_NinjaF { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedKoga = 0xa10; // ObjectProperty
		constexpr auto m_bSprinting = 0xa18; // uint32_t : 1
		constexpr auto c_bPendingRestart = 0xa18; // uint32_t : 1
	}

	namespace n_UInterpTrackMove { // : UInterpTrack
		constexpr auto PosTrack = 0xa0; // FInterpCurveVector
		constexpr auto EulerTrack = 0xb4; // FInterpCurveVector
		constexpr auto LookupTrack = 0xc8; // FInterpLookupTrack
		constexpr auto LookAtGroupName = 0xd8; // FName
		constexpr auto LinCurveTension = 0xe0; // float
		constexpr auto AngCurveTension = 0xe4; // float
		constexpr auto bUseQuatInterpolation = 0xe8; // uint32_t : 1
		constexpr auto bShowArrowAtKeys = 0xe8; // uint32_t : 1
		constexpr auto bDisableMovement = 0xe8; // uint32_t : 1
		constexpr auto bShowTranslationOnCurveEd = 0xe8; // uint32_t : 1
		constexpr auto bShowRotationOnCurveEd = 0xe8; // uint32_t : 1
		constexpr auto bHide3DTrack = 0xe8; // uint32_t : 1
		constexpr auto bUseRawActorTMforRelativeToInitial = 0xe8; // uint32_t : 1
		constexpr auto MoveFrame = 0xec; // EInterpTrackMoveFrame
		constexpr auto RotMode = 0xed; // EInterpTrackMoveRotMode
	}

	namespace n_UAnimSequence { // : UObject
		constexpr auto SequenceName = 0x60; // FName
		constexpr auto Notifies = 0x68; // TArray<FAnimNotifyEvent>
		constexpr auto MetaData = 0x78; // TArray<ObjectProperty>
		constexpr auto BoneControlModifiers = 0x88; // TArray<FSkelControlModifier>
		constexpr auto SequenceLength = 0x98; // float
		constexpr auto NumFrames = 0x9c; // int32_t
		constexpr auto RateScale = 0xa0; // float
		constexpr auto bParticleEffectsAreFootsteps = 0xa4; // uint32_t : 1
		constexpr auto bNoLoopingInterpolation = 0xa4; // uint32_t : 1
		constexpr auto bIsAdditive = 0xa4; // uint32_t : 1
		constexpr auto bAdditiveBuiltLooping = 0xa4; // uint32_t : 1
		constexpr auto bDoNotOverrideCompression = 0xa4; // uint32_t : 1
		constexpr auto bHasBeenUsed = 0xa4; // uint32_t : 1
		constexpr auto bWasCompressedWithoutTranslations = 0xa4; // uint32_t : 1
		constexpr auto RawAnimData = 0xa8; // TArray<FRawAnimSequenceTrack>
		constexpr auto RawAnimationData = 0xb8; // TArray<FRawAnimSequenceTrack>
		constexpr auto TranslationData = 0xc8; // TArray<FTranslationTrack>
		constexpr auto RotationData = 0xd8; // TArray<FRotationTrack>
		constexpr auto CurveData = 0xe8; // TArray<FCurveTrack>
		constexpr auto TranslationCompressionFormat = 0xf8; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0xf9; // AnimationCompressionFormat
		constexpr auto KeyEncodingFormat = 0xfa; // AnimationKeyFormat
		constexpr auto CompressedTrackOffsets = 0xfc; // TArray<int32_t>
		constexpr auto CompressedByteStream = 0x10c; // TArray<char>
		constexpr auto TranslationCodec = 0x11c; // FPointer
		constexpr auto RotationCodec = 0x124; // FPointer
		constexpr auto AdditiveRefPose = 0x12c; // TArray<FBoneAtom>
		constexpr auto AdditiveBasePose = 0x13c; // TArray<FRawAnimSequenceTrack>
		constexpr auto EncodingPkgVersion = 0x14c; // int32_t
		constexpr auto UseScore = 0x150; // float
	}

	namespace n_ATgPawn_Flak { // : ATgPawn_Character
		constexpr auto m_CachedKineticBurstDevice = 0x3164; // ObjectProperty
		constexpr auto m_CachedSiegeUnitDevice = 0x316c; // ObjectProperty
		constexpr auto m_CachedUltimateDevice = 0x3174; // ObjectProperty
		constexpr auto m_CachedShoulderBashDevice = 0x317c; // ObjectProperty
		constexpr auto m_WepIdleSound = 0x3184; // ObjectProperty
		constexpr auto m_PreviousZHeight = 0x318c; // float
		constexpr auto m_GravityMultiplier = 0x3190; // float
		constexpr auto m_bUseShoulderBashRetrieve = 0x3194; // uint32_t : 1
		constexpr auto m_bUseShoulderBashZoom = 0x3194; // uint32_t : 1
	}

	namespace n_UInterpTrackFloatProp { // : UInterpTrackFloatBase
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UAnalyticEventsBase { // : UPlatformInterfaceBase
		constexpr auto bSessionInProgress = 0x80; // uint32_t : 1
		constexpr auto bAutoStartSession = 0x80; // uint32_t : 1
		constexpr auto SessionPauseThresholdSec = 0x84; // int32_t
		constexpr auto UserId = 0x88; // FString
	}

	namespace n_USoundNodeOscillator { // : USoundNode
		constexpr auto bModulateVolume = 0x74; // uint32_t : 1
		constexpr auto bModulatePitch = 0x74; // uint32_t : 1
		constexpr auto AmplitudeMin = 0x78; // float
		constexpr auto AmplitudeMax = 0x7c; // float
		constexpr auto FrequencyMin = 0x80; // float
		constexpr auto FrequencyMax = 0x84; // float
		constexpr auto OffsetMin = 0x88; // float
		constexpr auto OffsetMax = 0x8c; // float
		constexpr auto CenterMin = 0x90; // float
		constexpr auto CenterMax = 0x94; // float
		constexpr auto Amplitude = 0x98; // FRawDistributionFloat
		constexpr auto Frequency = 0xbc; // FRawDistributionFloat
		constexpr auto Offset = 0xe0; // FRawDistributionFloat
		constexpr auto Center = 0x104; // FRawDistributionFloat
	}

	namespace n_UTgSeqAct_SetPlayerLevel { // : USequenceAction
		constexpr auto m_nLevel = 0x108; // int32_t
	}

	namespace n_UWebApplication { // : UObject
		constexpr auto WorldInfo = 0x60; // ObjectProperty
		constexpr auto WebServer = 0x68; // ObjectProperty
		constexpr auto Path = 0x70; // FString
	}

	namespace n_ATgPawn_BombQueen { // : ATgPawn_Character
		constexpr auto m_CachedUlt = 0x3164; // ObjectProperty
	}

	namespace n_UUIScene_UIPopupRealMoneyPurchase { // : UUIScene
		constexpr auto m_fDisplayHeight = 0x1cc; // float
		constexpr auto m_nScrollOffset = 0x1d0; // int32_t
		constexpr auto m_nMaxScrollOffset = 0x1d4; // int32_t
		constexpr auto m_mcTitle = 0x1d8; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x1e0; // ObjectProperty
		constexpr auto m_mcScrollingTF = 0x1e8; // ObjectProperty
		constexpr auto m_mcScrollUpArrow = 0x1f0; // ObjectProperty
		constexpr auto m_mcScrollDownArrow = 0x1f8; // ObjectProperty
		constexpr auto m_DLCPackDisplay = 0x200; // ObjectProperty
		constexpr auto m_GemPackDisplay = 0x208; // ObjectProperty
	}

	namespace n_UUIComponent_MatchInvite { // : UUIComponent
		constexpr auto m_mcWaiting = 0x118; // ObjectProperty
		constexpr auto m_pTimerProgress = 0x120; // ObjectProperty
		constexpr auto m_pSpinner = 0x128; // ObjectProperty
		constexpr auto m_PlayerData = 0x130; // TArray<ObjectProperty>
		constexpr auto m_Players = 0x140; // ObjectProperty
		constexpr auto m_nTickCallbackHandle = 0x148; // int32_t
	}

	namespace n_UTgGameDC_Chat { // : UTgObject
		constexpr auto c_CurrentMessage = 0x60; // FQueueMessage
		constexpr auto c_QueuedMessages = 0x90; // TArray<FQueueMessage>
		constexpr auto c_fProcessTime = 0xa0; // float
		constexpr auto c_DeferredMessages = 0xa4; // TArray<ObjectProperty>
		constexpr auto m_scFirstBlood = 0xb4; // ObjectProperty
		constexpr auto m_MessageTokens = 0xbc; // TArray<FMessageToken>
		constexpr auto m_fLastEnemyKilledAllyMessageTime = 0xcc; // float
		constexpr auto m_fMinEnemyKilledAllyMessageTime = 0xd0; // float
		constexpr auto m_fLastAllyKilledEnemyMessageTime = 0xd4; // float
		constexpr auto m_fMinAllyKilledEnemyMessageTime = 0xd8; // float
	}

	namespace n_ATgRepInfo_Game { // : AGameReplicationInfo
		constexpr auto m_GraphData = 0x2e8; // TArray<FGraphData>
		constexpr auto r_LastDataPoint = 0x2f8; // FGraphData
		constexpr auto m_GraphUpdateWaitTime = 0x304; // float
		constexpr auto r_GameType = 0x308; // TG_GAME_TYPE
		constexpr auto r_eHUDType = 0x309; // EHUDType
		constexpr auto r_eTalentsEnabled = 0x30a; // INITIALIZEABLE_BOOL
		constexpr auto r_nMissionTimerState = 0x30b; // MissionTimerState
		constexpr auto r_eGameTimerState = 0x30c; // GameTimerState
		constexpr auto r_nRoundLimitTimerState = 0x30d; // MissionTimerState
		constexpr auto r_nSecondaryTimerState = 0x30e; // MissionTimerState
		constexpr auto r_nLastRoundAttacker = 0x30f; // char
		constexpr auto r_nLastRoundWinner = 0x310; // char
		constexpr auto r_FlagState = 0x311; // EFlagState [0x2]
		constexpr auto r_GameEnvironmentRule = 0x313; // EGameEnvironmentRule
		constexpr auto r_GameRespawnRule = 0x314; // EGameRespawnRule
		constexpr auto r_GameMode = 0x315; // EGameMode
		constexpr auto r_eMusicEvent = 0x316; // ENotifySound
		constexpr auto r_eAbyssalEchoActive = 0x317; // AbyssalEchoActiveSTatus
		constexpr auto r_bIsMission = 0x318; // uint32_t : 1
		constexpr auto r_bGameHasSetup = 0x318; // uint32_t : 1
		constexpr auto r_bGameHasEnded = 0x318; // uint32_t : 1
		constexpr auto r_bCanPurchaseMasterRiding = 0x318; // uint32_t : 1
		constexpr auto r_bAllowSpawnGuardDuringDeviceFire = 0x318; // uint32_t : 1
		constexpr auto r_bLoadoutSelectionEnabled = 0x318; // uint32_t : 1
		constexpr auto r_bBlockCreditGain = 0x318; // uint32_t : 1
		constexpr auto r_bBlockEnergyGain = 0x318; // uint32_t : 1
		constexpr auto r_bDisablePlayerMovement = 0x318; // uint32_t : 1
		constexpr auto r_bOvertime = 0x318; // uint32_t : 1
		constexpr auto r_bCapturePointOvertime = 0x318; // uint32_t : 1
		constexpr auto r_bLimitBurnCardsToOnePerCategory = 0x318; // uint32_t : 1
		constexpr auto r_bRoundEnding = 0x318; // uint32_t : 1
		constexpr auto r_bFadeOutAtRoundEnd = 0x318; // uint32_t : 1
		constexpr auto r_bIntroPlayed = 0x318; // uint32_t : 1
		constexpr auto r_bUsePointsMode = 0x318; // uint32_t : 1
		constexpr auto r_bUltimatesLocked = 0x318; // uint32_t : 1
		constexpr auto r_bCanSpoolUlt = 0x318; // uint32_t : 1
		constexpr auto r_bAimAssistEnabled = 0x318; // uint32_t : 1
		constexpr auto r_bSuddenDeath = 0x318; // uint32_t : 1
		constexpr auto r_bCanPurchaseItemsWhileDead = 0x318; // uint32_t : 1
		constexpr auto r_bSuppressLoadoutMenu = 0x318; // uint32_t : 1
		constexpr auto r_bSuppressItemMenu = 0x318; // uint32_t : 1
		constexpr auto r_bEnableDistanceFOW = 0x318; // uint32_t : 1
		constexpr auto r_bSpawnGatesOpen = 0x318; // uint32_t : 1
		constexpr auto r_bAttackersSpawnGatesOpen = 0x318; // uint32_t : 1
		constexpr auto r_bDefendersSpawnGatesOpen = 0x318; // uint32_t : 1
		constexpr auto r_bForwardProgress = 0x318; // uint32_t : 1
		constexpr auto r_bServerFlagSprint = 0x318; // uint32_t : 1
		constexpr auto r_bServerFlagMinimapTeamVisibility = 0x318; // uint32_t : 1
		constexpr auto r_bForce3P = 0x318; // uint32_t : 1
		constexpr auto r_bForce1P = 0x318; // uint32_t : 1
		constexpr auto r_bForceOutOfCombatSprint = 0x31c; // uint32_t : 1
		constexpr auto r_bAutoMelee = 0x31c; // uint32_t : 1
		constexpr auto r_bShowProjectileProximityDistance = 0x31c; // uint32_t : 1
		constexpr auto r_bDisableProjectileProximityDistance = 0x31c; // uint32_t : 1
		constexpr auto r_bShowHeadMesh = 0x31c; // uint32_t : 1
		constexpr auto r_bUseInstantFireMeshTrace = 0x31c; // uint32_t : 1
		constexpr auto r_bAllowWeaponLagPrediction = 0x31c; // uint32_t : 1
		constexpr auto r_bSiegeEngineRequiresAlliesToMove = 0x31c; // uint32_t : 1
		constexpr auto r_bSiegeEngineMovementPaused = 0x31c; // uint32_t : 1
		constexpr auto r_bSiegeEngineMovementPausedAfterDamagingGate = 0x31c; // uint32_t : 1
		constexpr auto r_bFogConverging = 0x31c; // uint32_t : 1
		constexpr auto r_bFogEnded = 0x31c; // uint32_t : 1
		constexpr auto r_bCheckpoint1Reached = 0x31c; // uint32_t : 1
		constexpr auto r_bCheckpoint2Reached = 0x31c; // uint32_t : 1
		constexpr auto r_bEnableHeadshots = 0x31c; // uint32_t : 1
		constexpr auto r_bAllowPlayerMountingInSpawnRoom = 0x31c; // uint32_t : 1
		constexpr auto r_bAllowPlayerMountingAlways = 0x31c; // uint32_t : 1
		constexpr auto r_bKillCamEnabled = 0x31c; // uint32_t : 1
		constexpr auto r_bAttackersKillCamEnabled = 0x31c; // uint32_t : 1
		constexpr auto r_bDefendersKillCamEnabled = 0x31c; // uint32_t : 1
		constexpr auto r_bBlockKillCam = 0x31c; // uint32_t : 1
		constexpr auto r_bIsFirstRound = 0x31c; // uint32_t : 1
		constexpr auto r_bSpawnGatesOpenedAtLeastOnce = 0x31c; // uint32_t : 1
		constexpr auto r_bDisableMusicEvents = 0x31c; // uint32_t : 1
		constexpr auto r_bCapturePointAlert = 0x31c; // uint32_t : 1
		constexpr auto r_bCapturePointSpawned = 0x31c; // uint32_t : 1
		constexpr auto r_bTF1DamagedEcho = 0x31c; // uint32_t : 1
		constexpr auto r_bTF2DamagedEcho = 0x31c; // uint32_t : 1
		constexpr auto r_bEchoDied = 0x31c; // uint32_t : 1
		constexpr auto c_bAbyssalEchoSpawningIn = 0x31c; // uint32_t : 1
		constexpr auto r_nEventTalentVendorId = 0x320; // int32_t
		constexpr auto r_nEventDeckVendorId = 0x324; // int32_t
		constexpr auto r_fMissionRemainingTime = 0x328; // float
		constexpr auto r_nMissionTimerStateChange = 0x32c; // int32_t
		constexpr auto r_fMissionTime = 0x330; // float
		constexpr auto c_fMissionTime = 0x334; // float
		constexpr auto c_fMissionTimeSeconds = 0x338; // float
		constexpr auto c_fAIBotDelaySeconds = 0x33c; // float
		constexpr auto r_fRoundLimitElapsed = 0x340; // float
		constexpr auto r_fRoundLimitDuration = 0x344; // float
		constexpr auto r_fSecondaryRemainingTime = 0x348; // float
		constexpr auto r_nSecondaryTimerStateChange = 0x34c; // int32_t
		constexpr auto r_fSecondaryTime = 0x350; // float
		constexpr auto c_fSecondaryMissionTime = 0x354; // float
		constexpr auto c_fSecondaryMissionTimeSeconds = 0x358; // float
		constexpr auto r_fCapturePointOvertimeStartDuration = 0x35c; // float
		constexpr auto r_nCapturePointOvertimeStateChange = 0x360; // int32_t
		constexpr auto r_fPayloadOvertimeStartDuration = 0x364; // float
		constexpr auto r_nPayloadOvertimeStateChange = 0x368; // int32_t
		constexpr auto r_fTF1PayloadPushDistance = 0x36c; // float
		constexpr auto r_nPurchaseTime = 0x370; // int32_t
		constexpr auto m_fPurchaseTimer = 0x374; // float
		constexpr auto r_nEnergyChargeDeviceDisabled = 0x378; // int32_t
		constexpr auto r_nAutoHealingDisabled = 0x37c; // int32_t
		constexpr auto r_nGlobalItemPurchaseOverride = 0x380; // int32_t
		constexpr auto r_nGlobalLoadoutChangeOverride = 0x384; // int32_t
		constexpr auto r_fCooldownReduction = 0x388; // float
		constexpr auto r_fUltChargeRate = 0x38c; // float
		constexpr auto r_AttackingTaskForce = 0x390; // ObjectProperty
		constexpr auto r_CapturingTaskForce = 0x398; // ObjectProperty
		constexpr auto r_nChaosRemainingAttackDefendTime = 0x3a0; // int32_t
		constexpr auto r_Winner = 0x3a4; // ObjectProperty
		constexpr auto r_fPhysicsThreshold = 0x3ac; // float
		constexpr auto r_sQueueName = 0x3b0; // FString
		constexpr auto r_nPlayOfTheGamePawnId = 0x3c0; // int32_t
		constexpr auto r_nPlayOfTheGameMapLane = 0x3c4; // int32_t
		constexpr auto r_fPlayOfTheGameTimeStamp = 0x3c8; // float
		constexpr auto c_PlayOfTheGameCamera = 0x3cc; // ObjectProperty
		constexpr auto m_Deployables = 0x3d4; // TArray<ObjectProperty>
		constexpr auto m_Projectiles = 0x3e4; // TArray<ObjectProperty>
		constexpr auto m_Destructibles = 0x3f4; // TArray<ObjectProperty>
		constexpr auto m_DRIArray = 0x404; // TArray<ObjectProperty>
		constexpr auto m_CPRIArray = 0x414; // TArray<ObjectProperty>
		constexpr auto m_CapturePoints = 0x424; // TArray<ObjectProperty>
		constexpr auto r_pHHGate = 0x434; // ObjectProperty
		constexpr auto m_MovableProjBlockers = 0x43c; // TArray<ObjectProperty>
		constexpr auto r_nCurrentCheckpoint = 0x44c; // int32_t [0x2]
		constexpr auto c_nNextClientOnlyProjectileInstanceId = 0x454; // int32_t
		constexpr auto r_LanePusher = 0x458; // ObjectProperty
		constexpr auto r_LanePusher1 = 0x460; // ObjectProperty
		constexpr auto r_LanePusher2 = 0x468; // ObjectProperty
		constexpr auto r_SquadTarget1 = 0x470; // ObjectProperty
		constexpr auto r_SquadTarget2 = 0x478; // ObjectProperty
		constexpr auto r_fLastSquadTargetUpdate1 = 0x480; // float
		constexpr auto r_fLastSquadTargetUpdate2 = 0x484; // float
		constexpr auto r_fSpeedScale = 0x488; // float
		constexpr auto r_fPayloadProgressPercent = 0x48c; // float
		constexpr auto r_fCheckpoint1Percent = 0x490; // float
		constexpr auto r_fCheckpoint2Percent = 0x494; // float
		constexpr auto r_fServerFlagDamageMultiplier = 0x498; // float
		constexpr auto r_fServerFlagGroundSpeedModifier = 0x49c; // float
		constexpr auto r_fServerFlagAutoHealingMultiplier = 0x4a0; // float
		constexpr auto r_pSiegeWallTF1 = 0x4a4; // ObjectProperty [0x3]
		constexpr auto r_pSiegeWallTF2 = 0x4bc; // ObjectProperty [0x3]
		constexpr auto r_fFogDensity = 0x4d4; // float
		constexpr auto r_fFogStartDistance = 0x4d8; // float
		constexpr auto r_fFogObscureDistance = 0x4dc; // float
		constexpr auto c_Fog = 0x4e0; // ObjectProperty
		constexpr auto r_nPersistentTextID = 0x4e8; // int32_t
		constexpr auto r_nAlertTextID = 0x4ec; // int32_t
		constexpr auto r_nAlertIncrement = 0x4f0; // int32_t
		constexpr auto r_nRemainingObjectiveTime = 0x4f4; // int32_t
		constexpr auto r_nTotalObjectiveTime = 0x4f8; // int32_t
		constexpr auto r_fPlayerViewDistance = 0x4fc; // float
		constexpr auto r_fVisibilityVolumeViewDistance = 0x500; // float
		constexpr auto r_fPushTimer = 0x504; // float
		constexpr auto r_fWeaponMaxLagCompensation = 0x508; // float
		constexpr auto m_fVaultImmuneToSiegeEngineHealth = 0x50c; // float
		constexpr auto r_fConvergeDistance = 0x510; // float
		constexpr auto r_fConvergeStartDistance = 0x514; // float
		constexpr auto r_fFogConvergeInterval = 0x518; // float
		constexpr auto r_nTaskForcePushSuccessful = 0x51c; // int32_t
		constexpr auto r_nTaskForceDefenseSuccessful = 0x520; // int32_t
		constexpr auto r_nMapLane = 0x524; // int32_t
		constexpr auto r_fGlobalFrictionFalling = 0x528; // float
		constexpr auto r_fGlobalFrictionFlying = 0x52c; // float
		constexpr auto r_nVideoPathID = 0x530; // int32_t
		constexpr auto r_nTargetPhaseTicketCount = 0x534; // int32_t
		constexpr auto r_DifficultyDebugData = 0x538; // FBotDifficultyDebugData
		constexpr auto r_nAbyssalEchoTimer = 0x59c; // int32_t
		constexpr auto c_fAbyssalEchoTimer = 0x5a0; // float
		constexpr auto r_nAbyssalEchoTimerTotal = 0x5a4; // int32_t
		constexpr auto r_nAbyssalEchoBotId = 0x5a8; // int32_t
		constexpr auto r_AbyssalEcho = 0x5ac; // ObjectProperty
		constexpr auto c_AbyssalEchoMIC = 0x5b4; // ObjectProperty
		constexpr auto c_fAbyssalEchoMICFadeInDuration = 0x5bc; // float
		constexpr auto c_fAbyssalEchoMICFadeOutDuration = 0x5c0; // float
		constexpr auto c_fAbyssalEchoMICTimer = 0x5c4; // float
	}

	namespace n_UTgAIBehaviorCondition_ManaPercent { // : UTgAIBehaviorCondition
		constexpr auto ManaPct = 0x98; // float
	}

	namespace n_USkelControl_Multiply { // : USkelControlBase
		constexpr auto Multiplier = 0xd0; // float
	}

	namespace n_UFontImportOptions { // : UObject
		constexpr auto Data = 0x60; // FFontImportOptionsData
	}

	namespace n_USeqVar_Float { // : USequenceVariable
		constexpr auto FloatValue = 0xa0; // float
	}

	namespace n_UTgAnimNodeAimOffset_Charge { // : UTgAnimNodeAimOffset
		constexpr auto m_bInterpToCurrentTurnRate = 0x1f4; // uint32_t : 1
		constexpr auto m_bDisableIfNotMoving = 0x1f4; // uint32_t : 1
		constexpr auto m_bResetOnBecomeRelevant = 0x1f4; // uint32_t : 1
		constexpr auto m_fInterpSpeed = 0x1f8; // float
		constexpr auto m_fMaxYawRate = 0x1fc; // float
		constexpr auto m_fAimYawOffset = 0x200; // float
		constexpr auto m_rCachedOwnerRotator = 0x204; // FRotator
	}

	namespace n_UTgAIBehaviorCondition_PetPhase { // : UTgAIBehaviorCondition
		constexpr auto Phase = 0x98; // EPetPhase
	}

	namespace n_UTgAIUtilityFilter_DistanceFromPawn { // : UTgAIUtilityFilter
		constexpr auto DistanceCutoff = 0xc0; // float
		constexpr auto bInverse = 0xc4; // uint32_t : 1
	}

	namespace n_AGameAIController { // : AAIController
		constexpr auto CommandList = 0x494; // ObjectProperty
		constexpr auto bHasRunawayCommandList = 0x49c; // uint32_t : 1
		constexpr auto bAILogging = 0x49c; // uint32_t : 1
		constexpr auto bAILogToWindow = 0x49c; // uint32_t : 1
		constexpr auto bFlushAILogEachLine = 0x49c; // uint32_t : 1
		constexpr auto bMapBasedLogName = 0x49c; // uint32_t : 1
		constexpr auto bAIDrawDebug = 0x49c; // uint32_t : 1
		constexpr auto bAIBroken = 0x49c; // uint32_t : 1
		constexpr auto AILogFile = 0x4a0; // ObjectProperty
		constexpr auto DebugTextMaxLen = 0x4a8; // float
		constexpr auto CommandHistory = 0x4ac; // TArray<FAICmdHistoryItem>
		constexpr auto CommandHistoryNum = 0x4bc; // int32_t
		constexpr auto AILogFilter = 0x4c0; // TArray<FName>
		constexpr auto DemoActionString = 0x4d0; // FString
	}

	namespace n_ATgDevice_ToggleInhandFiremode { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_FuriaInhand { // : ATgWeaponMeshActor
		constexpr auto m_bFiredAltBarrel = 0x450; // uint32_t : 1
		constexpr auto m_stanceNodes3p = 0x454; // TArray<ObjectProperty>
		constexpr auto m_stanceNodes1p = 0x464; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIFooterGamepad { // : UUIScene
		constexpr auto m_Option = 0x1cc; // FFooterOption [0x8]
		constexpr auto m_bFrozen = 0x3ec; // uint32_t : 1
		constexpr auto m_CachedInputGamepadKeys = 0x3f0; // TArray<int32_t>
		constexpr auto m_CachedInputDisplay = 0x400; // TArray<FString>
	}

	namespace n_UUIComponent_AsiaticEventHome { // : UUIComponent_Display
		constexpr auto m_pSkyeBundle = 0x124; // ObjectProperty
		constexpr auto m_pZhinBundle = 0x12c; // ObjectProperty
		constexpr auto m_pSerisBundle = 0x134; // ObjectProperty
		constexpr auto m_pJenosBundle = 0x13c; // ObjectProperty
		constexpr auto m_pUnownedBundles = 0x144; // TArray<ObjectProperty>
		constexpr auto m_mcBundlesOwned = 0x154; // ObjectProperty
		constexpr auto m_pBundles = 0x15c; // ObjectProperty
		constexpr auto m_mcBundlePanel = 0x164; // ObjectProperty
		constexpr auto m_mcBundlePanelTitle = 0x16c; // ObjectProperty
		constexpr auto m_mcPurchaseTF = 0x174; // ObjectProperty
		constexpr auto m_pBundleItems = 0x17c; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x184; // ObjectProperty
		constexpr auto m_pPurchaseButtonCurr = 0x18c; // ObjectProperty
		constexpr auto m_mcBonusPanel = 0x194; // ObjectProperty
		constexpr auto m_mcBonusPanelTitle = 0x19c; // ObjectProperty
		constexpr auto m_mcPurchaseAllTF = 0x1a4; // ObjectProperty
		constexpr auto m_pBonusItems = 0x1ac; // ObjectProperty
		constexpr auto m_pLoadingFrame = 0x1b4; // ObjectProperty
		constexpr auto m_pPurchaseAllButton = 0x1bc; // ObjectProperty
		constexpr auto m_pPurchaseAllButtonCurr = 0x1c4; // ObjectProperty
		constexpr auto m_pBundleIcons = 0x1cc; // ObjectProperty
	}

	namespace n_USeqAct_DivideInt { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_USpeedTreeComponentFactory { // : UPrimitiveComponentFactory
		constexpr auto SpeedTreeComponent = 0x64; // ComponentProperty
	}

	namespace n_UUIHudDecks { // : UTgGfxScene
		constexpr auto m_bPresentCharacterCustomizationWhenReady = 0x1ec; // uint32_t : 1
		constexpr auto m_bPopup = 0x1ec; // uint32_t : 1
		constexpr auto m_nPassive = 0x1f0; // int32_t
		constexpr auto m_nTalent = 0x1f4; // int32_t
		constexpr auto m_Loadout = 0x1f8; // TScriptInterface<Class>
		constexpr auto m_nTime = 0x208; // int32_t
		constexpr auto m_nSelectLoadoutHandle = 0x20c; // int32_t
		constexpr auto m_nStepNum = 0x210; // int32_t
		constexpr auto m_mcPopup = 0x214; // ObjectProperty
		constexpr auto m_PopupEquip = 0x21c; // ObjectProperty
		constexpr auto m_mcPopupTitle = 0x224; // ObjectProperty
		constexpr auto m_mcPopupCard = 0x22c; // ObjectProperty [0x5]
		constexpr auto m_mcPopupShadow = 0x254; // ObjectProperty [0x5]
		constexpr auto m_mcBack = 0x27c; // ObjectProperty
		constexpr auto m_mcBreadcrumbs = 0x284; // ObjectProperty [0x3]
		constexpr auto m_mcBreadcrumbLines = 0x29c; // ObjectProperty [0x2]
		constexpr auto m_mcTitle = 0x2ac; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x2b4; // ObjectProperty
		constexpr auto m_mcTime = 0x2bc; // ObjectProperty
		constexpr auto m_akEquip = 0x2c4; // ObjectProperty
		constexpr auto m_DeckAbilityPools = 0x2cc; // ObjectProperty [0x8]
		constexpr auto m_SelectedDeckAbilityPool = 0x30c; // ObjectProperty
		constexpr auto m_pLoadoutsList = 0x314; // ObjectProperty
		constexpr auto m_mcLoadoutTalent = 0x31c; // ObjectProperty
		constexpr auto m_mcLoadoutTalentIcon = 0x324; // ObjectProperty
		constexpr auto m_mcLoadoutTalentTF = 0x32c; // ObjectProperty
		constexpr auto m_mcGameTip = 0x334; // ObjectProperty
		constexpr auto m_mcGameTipTitle = 0x33c; // ObjectProperty
		constexpr auto m_mcGameTipSubtitle = 0x344; // ObjectProperty
		constexpr auto m_BackAction = 0x34c; // ObjectProperty
		constexpr auto m_EquipAction = 0x354; // ObjectProperty
	}

	namespace n_UTgDeviceForm_AccursedArm { // : UTgDeviceForm
		constexpr auto m_bShouldBeActive = 0x28c; // uint32_t : 1
		constexpr auto m_fActivationTime = 0x290; // float
		constexpr auto m_fCurrentActivationPercent = 0x294; // float
		constexpr auto m_cachedWeaponMaterial = 0x298; // ObjectProperty
		constexpr auto m_accursedArmMaterial = 0x2a0; // ObjectProperty
		constexpr auto m_nmUltimateActive = 0x2a8; // FName
	}

	namespace n_UUIComponent_ChampionAbilities { // : UUIComponent_Display
		constexpr auto m_fUltPreviewTimeout = 0x124; // float
		constexpr auto m_mcChampHP = 0x128; // ObjectProperty
		constexpr auto m_mcUnlockPanel = 0x130; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchase = 0x138; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0 = 0x140; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice0Currency = 0x148; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1 = 0x150; // ObjectProperty
		constexpr auto m_mcUnlockPanelPurchasePrice1Currency = 0x158; // ObjectProperty
		constexpr auto m_mcUnlockPanelRent = 0x160; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0 = 0x168; // ObjectProperty
		constexpr auto m_mcUnlockPanelRentPrice0Currency = 0x170; // ObjectProperty
		constexpr auto m_mcUnlockPanelFreeRotation = 0x178; // ObjectProperty
		constexpr auto m_mcUnlockPanelInputPrompt = 0x180; // ObjectProperty
		constexpr auto m_pSkills = 0x188; // ObjectProperty
		constexpr auto m_pTalents = 0x190; // ObjectProperty
		constexpr auto m_UltPreviewButton = 0x198; // ObjectProperty
		constexpr auto m_pAdvancedButton = 0x1a0; // ObjectProperty
		constexpr auto m_pAdvancedButtonKey = 0x1a8; // ObjectProperty
		constexpr auto m_pTalentsButton = 0x1b0; // ObjectProperty
		constexpr auto m_pTalentsButtonKey = 0x1b8; // ObjectProperty
		constexpr auto m_pUnlockChampionButton = 0x1c0; // ObjectProperty
		constexpr auto m_pVoicePackPreviewButton = 0x1c8; // ObjectProperty
		constexpr auto m_grAbilities = 0x1d0; // ObjectProperty
		constexpr auto m_pUltPreviewAction = 0x1d8; // ObjectProperty
		constexpr auto m_pUnlockChampionAction = 0x1e0; // ObjectProperty
		constexpr auto m_pPreviewSkinVoiceAction = 0x1e8; // ObjectProperty
	}

	namespace n_UNavMeshPath_AlongLine { // : UNavMeshPathConstraint
		constexpr auto Direction = 0x78; // FVector
	}

	namespace n_UNavMeshGoal_WithinDistanceEnvelope { // : UNavMeshPathGoalEvaluator
		constexpr auto MaxDistance = 0x7c; // float
		constexpr auto MinDistance = 0x80; // float
		constexpr auto MinTraversalDist = 0x84; // float
		constexpr auto EnvelopeTestPoint = 0x88; // FVector
	}

	namespace n_USoundNodeDelay { // : USoundNode
		constexpr auto DelayMin = 0x74; // float
		constexpr auto DelayMax = 0x78; // float
		constexpr auto DelayDuration = 0x7c; // FRawDistributionFloat
	}

	namespace n_UTgSynchronizedTimer { // : UGFxObject
		constexpr auto m_bPausedByGame = 0x104; // uint32_t : 1
		constexpr auto m_bSuppressCallback = 0x104; // uint32_t : 1
		constexpr auto m_bRunning = 0x104; // uint32_t : 1
		constexpr auto m_bPaused = 0x104; // uint32_t : 1
		constexpr auto m_MP = 0x108; // ObjectProperty
		constexpr auto m_TimerManager = 0x110; // ObjectProperty
	}

	namespace n_UUIComponent_ExclusiveItemInfo { // : UUIComponent_Display
		constexpr auto m_mcLabelTF = 0x124; // ObjectProperty
		constexpr auto m_mcDescTF = 0x12c; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassRewardLevel { // : UUIComponent_Display
		constexpr auto m_pItemIcon = 0x124; // ObjectProperty
		constexpr auto m_pButton = 0x12c; // ObjectProperty
		constexpr auto m_mcLock = 0x134; // ObjectProperty
		constexpr auto m_mcCheck = 0x13c; // ObjectProperty
		constexpr auto m_mcCardIcon = 0x144; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x14c; // ObjectProperty
	}

	namespace n_USeqAct_IsInObjectList { // : USequenceAction
		constexpr auto bCheckForAllObjects = 0x108; // uint32_t : 1
		constexpr auto bObjectFound = 0x108; // uint32_t : 1
	}

	namespace n_UParticleModuleTypeDataBeam { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x68; // EBeamMethod
		constexpr auto EndPointMethod = 0x69; // EBeamEndPointMethod
		constexpr auto Distance = 0x6c; // FRawDistributionFloat
		constexpr auto EndPoint = 0x90; // FRawDistributionVector
		constexpr auto TessellationFactor = 0xb4; // int32_t
		constexpr auto EmitterStrength = 0xb8; // FRawDistributionFloat
		constexpr auto TargetStrength = 0xdc; // FRawDistributionFloat
		constexpr auto EndPointDirection = 0x100; // FRawDistributionVector
		constexpr auto TextureTile = 0x124; // int32_t
		constexpr auto RenderGeometry = 0x128; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x128; // uint32_t : 1
		constexpr auto RenderLines = 0x128; // uint32_t : 1
		constexpr auto RenderTessellation = 0x128; // uint32_t : 1
	}

	namespace n_UTgAnimNodeTriggerCameraAnim { // : UAnimNodeBlendBase
		constexpr auto CameraAnim = 0x114; // ObjectProperty
		constexpr auto fBlendInTime = 0x11c; // float
		constexpr auto fBlendOutTime = 0x120; // float
		constexpr auto bLoopAnimation = 0x124; // uint32_t : 1
		constexpr auto bBlendInOnBecomeRelevant = 0x124; // uint32_t : 1
		constexpr auto bBlendInOnReplayAnim = 0x124; // uint32_t : 1
		constexpr auto bBlendOutOnStopFire = 0x124; // uint32_t : 1
		constexpr auto bPlayAnimInLocalSpace = 0x124; // uint32_t : 1
		constexpr auto bPropertiesRelativeToBase = 0x124; // uint32_t : 1
		constexpr auto m_StopFireEquipSlotTarget = 0x128; // TG_EQUIP_POINT
		constexpr auto CameraAnimInst = 0x12c; // ObjectProperty
	}

	namespace n_UMobileMenuButton { // : UMobileMenuObject
		constexpr auto Images = 0xdc; // ObjectProperty [0x2]
		constexpr auto ImagesUVs = 0xec; // FUVCoords [0x2]
		constexpr auto ImageColor = 0x114; // FLinearColor
		constexpr auto Caption = 0x124; // FString
		constexpr auto CaptionColor = 0x134; // FLinearColor
	}

	namespace n_ATgProj_ClusterGrenade { // : ATgProj_FreeGrenade
		constexpr auto m_nSecondaryProjToSpawn = 0x580; // int32_t
		constexpr auto m_nSpawnsRemaining = 0x584; // int32_t
		constexpr auto m_CachedSMC = 0x588; // ComponentProperty
		constexpr auto m_GrenadeSkelControl = 0x590; // ObjectProperty
		constexpr auto m_SpikesSkelControl = 0x598; // ObjectProperty
		constexpr auto m_fCachedMIC = 0x5a0; // ObjectProperty
		constexpr auto m_rRotationalVelocity = 0x5a8; // FRotator
		constexpr auto m_Silhouette = 0x5b4; // ComponentProperty
		constexpr auto m_LocalSilhouetteColor = 0x5bc; // FLinearColor
		constexpr auto m_bSilhouetteInitialized = 0x5cc; // uint32_t : 1
		constexpr auto m_bSilhouetteAllowed = 0x5cc; // uint32_t : 1
		constexpr auto m_bBuildupSoundPlayed = 0x5cc; // uint32_t : 1
	}

	namespace n_UUIComponent_EventPlayPanel { // : UUIComponent_Display
		constexpr auto m_mcWarningTF = 0x124; // ObjectProperty
		constexpr auto m_pPlayButton = 0x12c; // ObjectProperty
		constexpr auto m_pKey = 0x134; // ObjectProperty
		constexpr auto m_pPlayButtonAction = 0x13c; // ObjectProperty
	}

	namespace n_ATgDevice_ChurchillShield { // : ATgDevice_Toggle
		constexpr auto m_CachedPawn = 0xa0c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_PlayEmote { // : UTgAIBehaviorAction
		constexpr auto EmoteToPlay = 0x94; // EEmote
	}

	namespace n_UTgAnimNodeSequenceByBoneRotation { // : UAnimNodeSequence
		constexpr auto BoneName = 0x1ac; // FName
		constexpr auto BoneAxis = 0x1b4; // EAxis
		constexpr auto AnimList = 0x1b8; // TArray<FAnimByRotation>
	}

	namespace n_UUIComponent_RewardPanel { // : UUIComponent_Display
		constexpr auto m_bShowingDetails = 0x124; // uint32_t : 1
		constexpr auto m_pCurrentInfo = 0x128; // FProgressInfo
		constexpr auto m_pEndingInfo = 0x138; // FProgressInfo
		constexpr auto m_akLevelUp = 0x148; // ObjectProperty
		constexpr auto m_akRankUp = 0x150; // ObjectProperty
		constexpr auto m_mcPanelTitleTF = 0x158; // ObjectProperty
		constexpr auto m_mcProgressBar = 0x160; // ObjectProperty
		constexpr auto m_mcLevelTF = 0x168; // ObjectProperty
		constexpr auto m_mcCurrentLevelTF = 0x170; // ObjectProperty
		constexpr auto m_mcRequiredXPTF = 0x178; // ObjectProperty
		constexpr auto m_mcLevelUpTF = 0x180; // ObjectProperty
		constexpr auto m_mcRankIcon = 0x188; // ObjectProperty
		constexpr auto m_mcReward = 0x190; // ObjectProperty
		constexpr auto m_mcNextRewardTF = 0x198; // ObjectProperty
		constexpr auto m_mcRewardNameTF = 0x1a0; // ObjectProperty
		constexpr auto m_mcRewardRankIcon = 0x1a8; // ObjectProperty
		constexpr auto m_pCurrentXP = 0x1b0; // ObjectProperty
		constexpr auto m_pXPGained = 0x1b8; // ObjectProperty
		constexpr auto m_pRewardItem = 0x1c0; // ObjectProperty
		constexpr auto m_pProgressBarA = 0x1c8; // ObjectProperty
		constexpr auto m_pProgressBarB = 0x1d0; // ObjectProperty
		constexpr auto m_pDetailEntries = 0x1d8; // ObjectProperty
		constexpr auto m_pFrameButton = 0x1e0; // ObjectProperty
		constexpr auto m_pProgressButton = 0x1e8; // ObjectProperty
	}

	namespace n_UTgInvListener_SpecialOnDamageEnemyPercent { // : UTgInvListener
		constexpr auto m_CachedTgPawn = 0xc4; // ObjectProperty
	}

	namespace n_UTgDeviceForm_TheLaw { // : UTgDeviceForm
		constexpr auto m_CachedLex = 0x28c; // ObjectProperty
		constexpr auto m_CachedWMA = 0x294; // ObjectProperty
		constexpr auto m_LeftSlideSkelControlName1P = 0x29c; // FName
		constexpr auto m_RightSlideSkelControlName1P = 0x2a4; // FName
		constexpr auto m_LeftSlideSkelControlName3P = 0x2ac; // FName
		constexpr auto m_RightSlideSkelControlName3P = 0x2b4; // FName
		constexpr auto m_LeftSlideSkelControl1P = 0x2bc; // ObjectProperty
		constexpr auto m_RightSlideSkelControl1P = 0x2c4; // ObjectProperty
		constexpr auto m_LeftSlideSkelControl3P = 0x2cc; // ObjectProperty
		constexpr auto m_RightSlideSkelControl3P = 0x2d4; // ObjectProperty
		constexpr auto c_fPreviousLeftSlideStrength = 0x2dc; // float
		constexpr auto c_fPreviousRightSlideStrength = 0x2e0; // float
	}

	namespace n_ATgTimeDilationVolume { // : APhysicsVolume
		constexpr auto m_fTimeMultiplier = 0x314; // float
		constexpr auto m_bAffectInstigator = 0x318; // uint32_t : 1
		constexpr auto m_AffectedActors = 0x31c; // TArray<ObjectProperty>
		constexpr auto m_AffectedPawns = 0x32c; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_BlastShotHitEffect { // : UTgInvListener
		constexpr auto m_PreviouslyHitActors = 0xc4; // TArray<ObjectProperty>
		constexpr auto m_nTargetType = 0xd4; // int32_t
	}

	namespace n_UUIPropertyDataProvider { // : UUIDataProvider
		constexpr auto ComplexPropertyTypes = 0x70; // TArray<UProperty*>
		constexpr auto __CanSupportComplexPropertyType__Delegate = 0x80; // DelegateProperty
	}

	namespace n_UUIAchievementPopups { // : UTgGfxScene
		constexpr auto m_bNewElementsQueued = 0x1ec; // uint32_t : 1
		constexpr auto m_rawProgressList = 0x1f0; // TArray<FAchievementProgressData>
		constexpr auto m_queuedProgressList = 0x200; // TArray<FAchievementProgressData>
		constexpr auto m_pPopup = 0x210; // ObjectProperty
		constexpr auto m_pUnlockedTF = 0x218; // ObjectProperty
		constexpr auto m_pPointsTF = 0x220; // ObjectProperty
		constexpr auto m_pNameTF = 0x228; // ObjectProperty
		constexpr auto m_pDescriptionTF = 0x230; // ObjectProperty
		constexpr auto m_pIconLoader = 0x238; // ObjectProperty
		constexpr auto m_pProgressBar = 0x240; // ObjectProperty
		constexpr auto m_pProgressBarMask = 0x248; // ObjectProperty
		constexpr auto m_pProgressBarTF = 0x250; // ObjectProperty
		constexpr auto m_pProgressBarFill = 0x258; // ObjectProperty
		constexpr auto m_fDisplayTimer = 0x260; // float
		constexpr auto m_fDelayTimer = 0x264; // float
	}

	namespace n_ACoverLink { // : ANavigationPoint
		constexpr auto GLOBAL_bUseSlotMarkers = 0x378; // uint32_t : 1
		constexpr auto bDisabled = 0x378; // uint32_t : 1
		constexpr auto bClaimAllSlots = 0x378; // uint32_t : 1
		constexpr auto bAutoSort = 0x378; // uint32_t : 1
		constexpr auto bAutoAdjust = 0x378; // uint32_t : 1
		constexpr auto bCircular = 0x378; // uint32_t : 1
		constexpr auto bLooped = 0x378; // uint32_t : 1
		constexpr auto bPlayerOnly = 0x378; // uint32_t : 1
		constexpr auto bDynamicCover = 0x378; // uint32_t : 1
		constexpr auto bFractureOnTouch = 0x378; // uint32_t : 1
		constexpr auto bDebug_FireLinks = 0x378; // uint32_t : 1
		constexpr auto bDebug_ExposedLinks = 0x378; // uint32_t : 1
		constexpr auto bDebug_CoverGen = 0x378; // uint32_t : 1
		constexpr auto bDoAutoSlotDensityFixup = 0x378; // uint32_t : 1
		constexpr auto LeanTraceDist = 0x37c; // float
		constexpr auto Slots = 0x380; // TArray<FCoverSlot>
		constexpr auto DynamicLinkInfos = 0x390; // TArray<FDynamicLinkInfo>
		constexpr auto Claims = 0x3a0; // TArray<ObjectProperty>
		constexpr auto InvalidateDistance = 0x3b0; // float
		constexpr auto MaxFireLinkDist = 0x3b4; // float
		constexpr auto CircularOrigin = 0x3b8; // FVector
		constexpr auto CircularRadius = 0x3c4; // float
		constexpr auto AlignDist = 0x3c8; // float
		constexpr auto AutoCoverSlotInterval = 0x3cc; // float
		constexpr auto StandHeight = 0x3d0; // float
		constexpr auto MidHeight = 0x3d4; // float
		constexpr auto StandingLeanOffset = 0x3d8; // FVector
		constexpr auto CrouchLeanOffset = 0x3e4; // FVector
		constexpr auto PopupOffset = 0x3f0; // FVector
		constexpr auto SlipDist = 0x3fc; // float
		constexpr auto TurnDist = 0x400; // float
		constexpr auto DangerScale = 0x404; // float
		constexpr auto NextCoverLink = 0x408; // ObjectProperty
		constexpr auto LocationDescription = 0x410; // ECoverLocationDescription
	}

	namespace n_UTgGameplayCurvesSet_BulletMagnetOverDist { // : UTgGameplayCurvesSet
		constexpr auto BulletMagnetDegOverDist = 0x64; // FRawDistributionFloat
		constexpr auto BulletMagnetMaxDegOverDist = 0x88; // FRawDistributionFloat
		constexpr auto BulletMagnetActiveType = 0xac; // EPaladinsBulletMagnetType
	}

	namespace n_UUIComponent_TalentSelection { // : UUIComponent_Display
		constexpr auto m_Talents = 0x124; // ObjectProperty
	}

	namespace n_AWebConnection { // : ATcpLink
		constexpr auto WebServer = 0x2e4; // ObjectProperty
		constexpr auto ReceivedData = 0x2ec; // FString
		constexpr auto Request = 0x2fc; // ObjectProperty
		constexpr auto Response = 0x304; // ObjectProperty
		constexpr auto Application = 0x30c; // ObjectProperty
		constexpr auto bDelayCleanup = 0x314; // uint32_t : 1
		constexpr auto RawBytesExpecting = 0x318; // int32_t
		constexpr auto MaxValueLength = 0x31c; // int32_t
		constexpr auto MaxLineLength = 0x320; // int32_t
		constexpr auto ConnID = 0x324; // int32_t
	}

	namespace n_UParticleModuleTrailTaper { // : UParticleModuleTrailBase
		constexpr auto TaperMethod = 0x68; // ETrailTaperMethod
		constexpr auto TaperFactor = 0x6c; // FRawDistributionFloat
	}

	namespace n_UInterpTrackInstColorProp { // : UInterpTrackInstProperty
		constexpr auto ColorProp = 0x70; // FPointer
		constexpr auto ResetColor = 0x78; // FColor
	}

	namespace n_ATgDevice_Transporter { // : ATgDevice
		constexpr auto m_fDowntraceDistance = 0xa08; // float
		constexpr auto c_vCurrentTargeting2Location = 0xa0c; // FVector
	}

	namespace n_ATgProj_DemonTeleport { // : ATgProj_Simulated
		constexpr auto m_bStopped = 0x52c; // uint32_t : 1
		constexpr auto m_bTriggerExplosion = 0x52c; // uint32_t : 1
	}

	namespace n_USeqVar_ObjectList { // : USeqVar_Object
		constexpr auto ObjList = 0xc4; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceForm_SelfResurrection { // : UTgDeviceForm
		constexpr auto m_SKCCrystalScale = 0x28c; // ObjectProperty
	}

	namespace n_ATgDeploy_WardersField { // : ATgDeploy_EffectField
		constexpr auto r_fRadiusForFX = 0x4a0; // float
		constexpr auto r_fRadiusScaleForDecal = 0x4a4; // float
		constexpr auto r_bEarthenGuardActive = 0x4a8; // uint32_t : 1
	}

	namespace n_ASkeletalMeshActorMAT { // : ASkeletalMeshCinematicActor
		constexpr auto SlotNodes = 0x2e8; // TArray<ObjectProperty>
	}

	namespace n_APostProcessVolume { // : AVolume
		constexpr auto Priority = 0x2bc; // float
		constexpr auto bOverrideWorldPostProcessChain = 0x2c0; // uint32_t : 1
		constexpr auto bEnabled = 0x2c0; // uint32_t : 1
		constexpr auto Settings = 0x2c4; // FPostProcessSettings
		constexpr auto NextLowerPriorityVolume = 0x444; // ObjectProperty
	}

	namespace n_ATgDevice_GourdMod { // : ATgDevice
		constexpr auto m_ImmuneTargets = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_ImmuneTimes = 0xa18; // TArray<float>
	}

	namespace n_UUIData_StoreItemTab { // : UUIData
		constexpr auto m_lsTitle = 0x64; // FString
		constexpr auto m_eTabType = 0x74; // char
	}

	namespace n_UTranslationContext { // : UObject
		constexpr auto TranslatorTags = 0x60; // TArray<ObjectProperty>
	}

	namespace n_ACamera { // : AActor
		constexpr auto PCOwner = 0x280; // ObjectProperty
		constexpr auto CameraStyle = 0x288; // FName
		constexpr auto DefaultFOV = 0x290; // float
		constexpr auto bLockedFOV = 0x294; // uint32_t : 1
		constexpr auto bConstrainAspectRatio = 0x294; // uint32_t : 1
		constexpr auto bEnableFading = 0x294; // uint32_t : 1
		constexpr auto bFadeAudio = 0x294; // uint32_t : 1
		constexpr auto bForceDisableTemporalAA = 0x294; // uint32_t : 1
		constexpr auto bEnableColorScaling = 0x294; // uint32_t : 1
		constexpr auto bEnableColorScaleInterp = 0x294; // uint32_t : 1
		constexpr auto bUseClientSideCameraUpdates = 0x294; // uint32_t : 1
		constexpr auto bDebugClientSideCamera = 0x294; // uint32_t : 1
		constexpr auto bShouldSendClientSideCameraUpdate = 0x294; // uint32_t : 1
		constexpr auto LockedFOV = 0x298; // float
		constexpr auto ConstrainedAspectRatio = 0x29c; // float
		constexpr auto DefaultAspectRatio = 0x2a0; // float
		constexpr auto OffAxisYawAngle = 0x2a4; // float
		constexpr auto OffAxisPitchAngle = 0x2a8; // float
		constexpr auto FadeColor = 0x2ac; // FColor
		constexpr auto FadeAmount = 0x2b0; // float
		constexpr auto CamOverridePostProcessAlpha = 0x2b4; // float
		constexpr auto CamPostProcessSettings = 0x2b8; // FPostProcessSettings
		constexpr auto RenderingOverrides = 0x438; // FRenderingPerformanceOverrides
		constexpr auto ColorScale = 0x43c; // FVector
		constexpr auto DesiredColorScale = 0x448; // FVector
		constexpr auto OriginalColorScale = 0x454; // FVector
		constexpr auto ColorScaleInterpDuration = 0x460; // float
		constexpr auto ColorScaleInterpStartTime = 0x464; // float
		constexpr auto CameraCache = 0x468; // FTCameraCache
		constexpr auto LastFrameCameraCache = 0x490; // FTCameraCache
		constexpr auto ViewTarget = 0x4b8; // FTViewTarget
		constexpr auto PendingViewTarget = 0x4f8; // FTViewTarget
		constexpr auto BlendTimeToGo = 0x538; // float
		constexpr auto BlendParams = 0x53c; // FViewTargetTransitionParams
		constexpr auto ModifierList = 0x54c; // TArray<ObjectProperty>
		constexpr auto FreeCamDistance = 0x55c; // float
		constexpr auto FreeCamOffset = 0x560; // FVector
		constexpr auto FadeAlpha = 0x56c; // FVector2D
		constexpr auto FadeTime = 0x574; // float
		constexpr auto FadeTimeRemaining = 0x578; // float
		constexpr auto CameraLensEffects = 0x57c; // TArray<ObjectProperty>
		constexpr auto CameraShakeCamMod = 0x58c; // ObjectProperty
		constexpr auto CameraShakeCamModClass = 0x594; // UCameraModifier_CameraShake*
		constexpr auto AnimInstPool = 0x59c; // ObjectProperty [0x8]
		constexpr auto ActiveAnims = 0x5dc; // TArray<ObjectProperty>
		constexpr auto FreeAnims = 0x5ec; // TArray<ObjectProperty>
		constexpr auto AnimCameraActor = 0x5fc; // ObjectProperty
	}

	namespace n_USubsystem { // : UObject
		constexpr auto VfTable_FExec = 0x60; // FPointer
	}

	namespace n_UNavMeshGoal_OutOfViewFrom { // : UNavMeshPathGoalEvaluator
		constexpr auto GoalPoly = 0x7c; // FPointer
		constexpr auto OutOfViewLocation = 0x84; // FVector
		constexpr auto bShowDebug = 0x90; // uint32_t : 1
	}

	namespace n_UTgAnimNodeToggleWithTransition { // : UTgAnimNodeBlendList
		constexpr auto m_fTransitionStartTime = 0x168; // float
		constexpr auto m_fTransitionTimeRemaining = 0x16c; // float
	}

	namespace n_UTgDeviceForm_LazarusInhand { // : UTgDeviceForm
		constexpr auto m_pHitPawnsList = 0x28c; // TArray<FHitPawn>
	}

	namespace n_ATgDevice_ShadowTeleport { // : ATgDevice
		constexpr auto m_Shadow = 0xa08; // ObjectProperty
		constexpr auto m_nShotsFired = 0xa10; // int32_t
		constexpr auto m_fShadowTargetTimerCurrent = 0xa14; // float
		constexpr auto m_fShadowTargetTimerTotal = 0xa18; // float
		constexpr auto m_pPrevTeleportedTo = 0xa1c; // ObjectProperty
	}

	namespace n_UTgDeviceFire_MirrorDamageToHeal { // : UTgDeviceFire
		constexpr auto m_fHealAmount = 0x268; // float
	}

	namespace n_UUIData_List_TitleIcon { // : UUIData_List
		constexpr auto nIcon = 0x74; // int32_t
		constexpr auto sTitles = 0x78; // TArray<FString>
	}

	namespace n_ALevelGridVolume { // : AVolume
		constexpr auto LevelGridVolumeName = 0x2bc; // FString
		constexpr auto CellShape = 0x2cc; // LevelGridCellShape
		constexpr auto Subdivisions = 0x2d0; // int32_t [0x3]
		constexpr auto LoadingDistance = 0x2dc; // float
		constexpr auto KeepLoadedRange = 0x2e0; // float
		constexpr auto CellConvexElem = 0x2e4; // FKConvexElem
	}

	namespace n_USeqAct_SetWorldAttractorParam { // : USequenceAction
		constexpr auto Attractor = 0x108; // TArray<ObjectProperty>
		constexpr auto bEnabledField = 0x118; // uint32_t : 1
		constexpr auto bFalloffTypeField = 0x118; // uint32_t : 1
		constexpr auto bFalloffExponentField = 0x118; // uint32_t : 1
		constexpr auto bRangeField = 0x118; // uint32_t : 1
		constexpr auto bStrengthField = 0x118; // uint32_t : 1
		constexpr auto bEnabled = 0x118; // uint32_t : 1
		constexpr auto FalloffType = 0x11c; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x120; // FRawDistributionFloat
		constexpr auto Range = 0x144; // FRawDistributionFloat
		constexpr auto Strength = 0x168; // FRawDistributionFloat
	}

	namespace n_AProjectile { // : AActor
		constexpr auto Speed = 0x280; // float
		constexpr auto MaxSpeed = 0x284; // float
		constexpr auto bSwitchToZeroCollision = 0x288; // uint32_t : 1
		constexpr auto bBlockedByInstigator = 0x288; // uint32_t : 1
		constexpr auto bBegunPlay = 0x288; // uint32_t : 1
		constexpr auto bRotationFollowsVelocity = 0x288; // uint32_t : 1
		constexpr auto bIgnoreFoliageTouch = 0x288; // uint32_t : 1
		constexpr auto ZeroCollider = 0x28c; // ObjectProperty
		constexpr auto ZeroColliderComponent = 0x294; // ComponentProperty
		constexpr auto Damage = 0x29c; // float
		constexpr auto DamageRadius = 0x2a0; // float
		constexpr auto MomentumTransfer = 0x2a4; // float
		constexpr auto MyDamageType = 0x2a8; // UDamageType*
		constexpr auto SpawnSound = 0x2b0; // ObjectProperty
		constexpr auto ImpactSound = 0x2b8; // ObjectProperty
		constexpr auto InstigatorController = 0x2c0; // ObjectProperty
		constexpr auto ImpactedActor = 0x2c8; // ObjectProperty
		constexpr auto NetCullDistanceSquared = 0x2d0; // float
		constexpr auto CylinderComponent = 0x2d4; // ComponentProperty
	}

	namespace n_UTgAnimNodeBlendAnimsByDirection { // : UAnimNodeSequenceBlendBase
		constexpr auto m_BlendSpeed = 0x1bc; // float
		constexpr auto m_bUsePlayRateByDirection = 0x1c0; // uint32_t : 1
		constexpr auto m_bIncludeStandingAnim = 0x1c0; // uint32_t : 1
		constexpr auto m_bForceStanding = 0x1c0; // uint32_t : 1
		constexpr auto m_bInterpolateWeights = 0x1c0; // uint32_t : 1
		constexpr auto m_bMirrorDirectionsWhenPawnMirrored = 0x1c0; // uint32_t : 1
		constexpr auto m_bForwardLeftCorrection = 0x1c0; // uint32_t : 1
		constexpr auto m_PlayRateByDirection = 0x1c4; // float [0x8]
		constexpr auto m_PlayRateStanding = 0x1e4; // float
		constexpr auto m_fStillThreshold = 0x1e8; // float
		constexpr auto m_DirAngle = 0x1ec; // float
		constexpr auto m_LastRelevantTime = 0x1f0; // float
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileNotCCed { // : UTgInvListener
		constexpr auto m_nAppliedStacks = 0xc4; // int32_t
		constexpr auto m_CachedPawn = 0xc8; // ObjectProperty
		constexpr auto m_fTimeSpentCCFree = 0xd0; // float
	}

	namespace n_UTgAIBehaviorCondition_NumberDevicesFiring { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIsFiring = 0x9c; // uint32_t : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
		constexpr auto DistanceThreshold = 0xa4; // float
	}

	namespace n_UTgDeviceForm_ArcaneMissilesInhand { // : UTgDeviceForm_Inhand
		constexpr auto m_CachedGauntlet = 0x29c; // ObjectProperty
		constexpr auto c_fLastReceivedTransitionInTime = 0x2a4; // float
	}

	namespace n_ATgShadowStickProp { // : ATgPropActor
		constexpr auto m_fCheckFallTimer = 0x294; // float
		constexpr auto m_fCheckFallFrequency = 0x298; // float
		constexpr auto m_bAttachedToPersonalShield = 0x29c; // uint32_t : 1
		constexpr auto m_bAttachedToDeployable = 0x29c; // uint32_t : 1
		constexpr auto m_bAttachedToPet = 0x29c; // uint32_t : 1
		constexpr auto m_bSkipClosenessCheck = 0x29c; // uint32_t : 1
		constexpr auto attachedToTarget = 0x2a0; // ObjectProperty
	}

	namespace n_UAnimNodeBlendDirectional { // : UAnimNodeBlendBase
		constexpr auto DirDegreesPerSecond = 0x114; // float
		constexpr auto DirAngle = 0x118; // float
		constexpr auto SingleAnimAtOrAboveLOD = 0x11c; // int32_t
		constexpr auto RotationOffset = 0x120; // FRotator
		constexpr auto bUseAcceleration = 0x12c; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_Inhand { // : UTgDeviceForm
		constexpr auto m_nAmmoCount = 0x28c; // int32_t
		constexpr auto m_nMaxAmmoCount = 0x290; // int32_t
		constexpr auto m_fPreviousAmmoPerc = 0x294; // float
		constexpr auto m_fCurrentAmmoPerc = 0x298; // float
	}

	namespace n_UTgGameplayCurvesSet_HitReactions { // : UTgGameplayCurvesSet
		constexpr auto ReactionStrengthOverTime = 0x64; // FRawDistributionFloat
		constexpr auto ReactionStrengthOverTimeDelayed = 0x88; // FRawDistributionFloat
		constexpr auto ReactionStrengthByDamage = 0xac; // FRawDistributionFloat
	}

	namespace n_ATgDevice_BunnyUlt { // : ATgDevice
		constexpr auto m_CachedBunny = 0xa08; // ObjectProperty
		constexpr auto m_CurrentUltTarget = 0xa10; // ObjectProperty
		constexpr auto m_bRequireTargetToFire = 0xa18; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_MoveToCover { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto bAllowPopout = 0x9c; // uint32_t : 1
	}

	namespace n_UParticleModuleMeshRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x68; // FRawDistributionVector
		constexpr auto bInheritParent = 0x8c; // uint32_t : 1
	}

	namespace n_ATgRepInfo_CapturePoint { // : AReplicationInfo
		constexpr auto r_OwningCapturePoint = 0x280; // ObjectProperty
		constexpr auto r_nUniqueCapturePointId = 0x288; // int32_t
		constexpr auto r_nControlledByTaskForce = 0x28c; // int32_t
		constexpr auto r_fOwnershipPct = 0x290; // float
		constexpr auto r_nTransitionDirection = 0x294; // char
		constexpr auto r_bIsLocked = 0x298; // uint32_t : 1
		constexpr auto c_OwnershipPercentKismetNode = 0x29c; // ObjectProperty
	}

	namespace n_ATgDevice_InPursuit { // : ATgDevice
		constexpr auto m_bRecalculateTarget = 0xa08; // uint32_t : 1
		constexpr auto m_CurrentMark = 0xa0c; // ObjectProperty
		constexpr auto m_PursuitTarget = 0xa14; // ObjectProperty
		constexpr auto m_CachedInhand = 0xa1c; // ObjectProperty
	}

	namespace n_UUIComponent_EventChallengeRegionListItem { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcRegionTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcTime = 0x134; // ObjectProperty
		constexpr auto m_mcTimeText = 0x13c; // ObjectProperty
		constexpr auto m_pProgress = 0x144; // ObjectProperty
		constexpr auto m_mcProgressText = 0x14c; // ObjectProperty
	}

	namespace n_ATgDeploy_DeployableLinked { // : ATgDeploy_MatchParentFireMode
		constexpr auto m_ParentDeployable = 0x46c; // ObjectProperty
	}

	namespace n_USeqVar_Int { // : USequenceVariable
		constexpr auto IntValue = 0xa0; // int32_t
	}

	namespace n_USeqAct_GiveInventory { // : USequenceAction
		constexpr auto InventoryList = 0x108; // TArray<AInventory*>
		constexpr auto bClearExisting = 0x118; // uint32_t : 1
		constexpr auto bForceReplace = 0x118; // uint32_t : 1
	}

	namespace n_ATgPawn_LanePusherBase { // : ATgPawn_Biped
		constexpr auto s_fSpeedMultiplierToCatchUpToSquad = 0x2fd0; // float
		constexpr auto s_PlayerAttacker = 0x2fd4; // ObjectProperty
		constexpr auto r_StartSpline = 0x2fdc; // ObjectProperty
		constexpr auto r_ServerSyncSpline = 0x2fe4; // ObjectProperty
		constexpr auto r_ServerSync = 0x2fec; // FServerSplineSync
		constexpr auto m_bMoving = 0x2ff4; // uint32_t : 1
		constexpr auto c_bServerSync = 0x2ff4; // uint32_t : 1
		constexpr auto m_bDoNotScaleCollisionBoxWithDatabase = 0x2ff4; // uint32_t : 1
		constexpr auto m_bApplySplinePitchToActor = 0x2ff4; // uint32_t : 1
		constexpr auto c_bApplySplinePitchToMesh = 0x2ff4; // uint32_t : 1
		constexpr auto m_bFullStopWhenNoDesiredSpeed = 0x2ff4; // uint32_t : 1
		constexpr auto s_bStopBackpeddlingAtCheckpoints = 0x2ff4; // uint32_t : 1
		constexpr auto m_bAllowBackpeddling = 0x2ff4; // uint32_t : 1
		constexpr auto m_bDestroyed = 0x2ff4; // uint32_t : 1
		constexpr auto r_bAsleep = 0x2ff4; // uint32_t : 1
		constexpr auto m_Spline = 0x2ff8; // ObjectProperty
		constexpr auto m_CollisionBox = 0x3000; // ComponentProperty
		constexpr auto m_fSplineDist = 0x3008; // float
		constexpr auto c_fSplineDistCorrection = 0x300c; // float
		constexpr auto c_fClientSideMovementFudgeFactor = 0x3010; // float
		constexpr auto c_fClientCorrectionTolerance = 0x3014; // float
		constexpr auto c_fClientCorrectionRate = 0x3018; // float
		constexpr auto m_fGroundSpeedScaleLastTick = 0x301c; // float
		constexpr auto r_fTrackGroundSpeed = 0x3020; // float
		constexpr auto m_fAcceleration = 0x3024; // float
	}

	namespace n_USeqAct_Latent { // : USequenceAction
		constexpr auto LatentActors = 0x108; // TArray<ObjectProperty>
		constexpr auto bAborted = 0x118; // uint32_t : 1
		constexpr auto LatentActivationTime = 0x11c; // float
	}

	namespace n_UTgInventoryObject_Listen_AzaanAbilityStartAboveThreshold { // : UTgInventoryObject_Listen_AbilityStart
		constexpr auto m_CachedAzaan = 0xcc; // ObjectProperty
	}

	namespace n_ATgDeploy_ProxyMineAdvanced { // : ATgDeployable
		constexpr auto m_bInProximityRange = 0x46c; // uint32_t : 1
		constexpr auto r_nExplosionCount = 0x470; // char
	}

	namespace n_UPComSupportCommands { // : UObject
		constexpr auto PC = 0x60; // ObjectProperty
		constexpr auto WorldInfo = 0x68; // ObjectProperty
	}

	namespace n_UTextureMovie { // : UTexture
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto AddressX = 0x109; // TextureAddress
		constexpr auto AddressY = 0x10a; // TextureAddress
		constexpr auto MovieStreamSource = 0x10b; // EMovieStreamSource
		constexpr auto DecoderClass = 0x10c; // UCodecMovie*
		constexpr auto Decoder = 0x114; // ObjectProperty
		constexpr auto Paused = 0x11c; // uint32_t : 1
		constexpr auto Stopped = 0x11c; // uint32_t : 1
		constexpr auto Looping = 0x11c; // uint32_t : 1
		constexpr auto ResetOnLastFrame = 0x11c; // uint32_t : 1
		constexpr auto AutoPlay = 0x11c; // uint32_t : 1
		constexpr auto Data = 0x120; // FUntypedBulkData_Mirror
		constexpr auto ReleaseCodecFence = 0x160; // FPointer
	}

	namespace n_UAnimNotify_PlayFaceFXAnim { // : UAnimNotify_Scripted
		constexpr auto FaceFXAnimSetRef = 0x68; // ObjectProperty
		constexpr auto GroupName = 0x70; // FString
		constexpr auto AnimName = 0x80; // FString
		constexpr auto SoundCueToPlay = 0x90; // ObjectProperty
		constexpr auto AkEventToPlay = 0x98; // ObjectProperty
		constexpr auto bOverridePlayingAnim = 0xa0; // uint32_t : 1
		constexpr auto PlayFrequency = 0xa4; // float
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileDeployableInactive { // : UTgInventoryObject_Listen_ActiveWhileOffCooldown
		constexpr auto m_nActiveDeployableCount = 0xc8; // int32_t
	}

	namespace n_APortal { // : ATriggerVolume
		constexpr auto Destination = 0x2bc; // ObjectProperty
		constexpr auto SourceEdgeRotation = 0x2c4; // FRotator
		constexpr auto SourceEdgeTranslation = 0x2d0; // FVector
		constexpr auto fEdgeWidth = 0x2dc; // float
		constexpr auto bForceParallelEdges = 0x2e0; // uint32_t : 1
	}

	namespace n_UUIHudWaypoint { // : UTgGfxScene
		constexpr auto m_fClipSize = 0x1ec; // float
		constexpr auto m_fPushTimer = 0x1f0; // float
		constexpr auto m_fPulseDelay = 0x1f4; // float
		constexpr auto m_fPulseTimer = 0x1f8; // float
		constexpr auto m_Captures = 0x1fc; // TArray<FWaypointObjective>
		constexpr auto m_Escort = 0x20c; // FWaypointObjective
		constexpr auto m_Attack = 0x238; // FWaypointObjective
		constexpr auto m_Defend = 0x264; // FWaypointObjective
		constexpr auto m_Beacon = 0x290; // FWaypointObjective
		constexpr auto m_Projectile = 0x2bc; // FWaypointObjective [0x4]
		constexpr auto m_KillCamYou = 0x36c; // FWaypointObjective
		constexpr auto m_DominationObjectives = 0x398; // TArray<FWaypointObjective>
		constexpr auto m_SnappedWaypointOffset = 0x3a8; // FVector
	}

	namespace n_UUIDataStore { // : UUIDataProvider
		constexpr auto Tag = 0x70; // FName
		constexpr auto RefreshSubscriberNotifies = 0x78; // TArray<DelegateProperty>
		constexpr auto __OnDataStoreValueUpdated__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UUIComponent_BoosterItemBenefits { // : UUIComponent_Display
		constexpr auto m_nRowsSet = 0x124; // int32_t
		constexpr auto m_mcBenefitsTF = 0x128; // ObjectProperty [0xb]
	}

	namespace n_UFractureMaterial { // : UObject
		constexpr auto FractureEffect = 0x60; // ObjectProperty
		constexpr auto FractureSound = 0x68; // ObjectProperty
	}

	namespace n_UTgControlModule_Koga { // : UTgControlModule_ThirdPerson
		constexpr auto m_CachedKogaPawn = 0xcc; // ObjectProperty
	}

	namespace n_UTgBrowserManager { // : UPComBrowserManager
		constexpr auto URLGold = 0x60; // FString
		constexpr auto URLAlert = 0x70; // FString
		constexpr auto URLStore = 0x80; // FString
		constexpr auto URLBooster = 0x90; // FString
		constexpr auto URLSupport = 0xa0; // FString
		constexpr auto URLProfile = 0xb0; // FString
		constexpr auto URLRedirect = 0xc0; // FString
		constexpr auto URLActivateKey = 0xd0; // FString
		constexpr auto URLCreateAccount = 0xe0; // FString
		constexpr auto URLRecoverPassword = 0xf0; // FString
		constexpr auto URLRecoverUsername = 0x100; // FString
		constexpr auto URLGodPack = 0x110; // FString
		constexpr auto URLRanked = 0x120; // FString
		constexpr auto URLFacebookPromo = 0x130; // FString
		constexpr auto URLTwitterPromo = 0x140; // FString
		constexpr auto URLRecruitPromo = 0x150; // FString
		constexpr auto URLPlayerStats = 0x160; // FString
		constexpr auto URLTwitchSignup = 0x170; // FString
		constexpr auto URLTwitchHelp = 0x180; // FString
		constexpr auto URLLaunchTournament = 0x190; // FString
		constexpr auto URLLinkAccount = 0x1a0; // FString
		constexpr auto m_pContainer = 0x1b0; // ObjectProperty
	}

	namespace n_UUIComponent_HealthBar_Overlay_Player { // : UUIComponent_HealthBar_Overlay
		constexpr auto m_mcImmortalBracketLeft = 0x248; // ObjectProperty
		constexpr auto m_mcImmortalBracketRight = 0x250; // ObjectProperty
		constexpr auto m_mcLexExecuteGuide = 0x258; // ObjectProperty
		constexpr auto m_fImmortal = 0x260; // float
		constexpr auto m_bInParty = 0x264; // uint32_t : 1
	}

	namespace n_UUIComponent_Targeter_ReiLinked { // : UUIComponent_Targeter_PointTargeter
		constexpr auto m_mcAnimation = 0x184; // ObjectProperty [0x3]
		constexpr auto m_bHasNullTarget = 0x19c; // uint32_t : 1
	}

	namespace n_UInterpGroupInst { // : UObject
		constexpr auto Group = 0x60; // ObjectProperty
		constexpr auto GroupActor = 0x68; // ObjectProperty
		constexpr auto TrackInst = 0x70; // TArray<ObjectProperty>
		constexpr auto CachedCamOverridePostProcess = 0x80; // FPointer
	}

	namespace n_UOnlineAuthInterfaceImpl { // : UObject
		constexpr auto VfTable_IOnlineAuthInterface = 0x60; // FPointer
		constexpr auto OwningSubsystem = 0x68; // ObjectProperty
		constexpr auto bAuthReady = 0x70; // uint32_t : 1
		constexpr auto ClientAuthSessions = 0x74; // FSparseArray_Mirror
		constexpr auto ServerAuthSessions = 0xac; // FSparseArray_Mirror
		constexpr auto PeerAuthSessions = 0xe4; // FSparseArray_Mirror
		constexpr auto LocalClientAuthSessions = 0x11c; // FSparseArray_Mirror
		constexpr auto LocalServerAuthSessions = 0x154; // FSparseArray_Mirror
		constexpr auto LocalPeerAuthSessions = 0x18c; // FSparseArray_Mirror
		constexpr auto AuthReadyDelegates = 0x1c4; // TArray<DelegateProperty>
		constexpr auto ClientAuthRequestDelegates = 0x1d4; // TArray<DelegateProperty>
		constexpr auto ServerAuthRequestDelegates = 0x1e4; // TArray<DelegateProperty>
		constexpr auto ClientAuthResponseDelegates = 0x1f4; // TArray<DelegateProperty>
		constexpr auto ServerAuthResponseDelegates = 0x204; // TArray<DelegateProperty>
		constexpr auto ClientAuthCompleteDelegates = 0x214; // TArray<DelegateProperty>
		constexpr auto ServerAuthCompleteDelegates = 0x224; // TArray<DelegateProperty>
		constexpr auto ClientAuthEndSessionRequestDelegates = 0x234; // TArray<DelegateProperty>
		constexpr auto ServerAuthRetryRequestDelegates = 0x244; // TArray<DelegateProperty>
		constexpr auto ClientConnectionCloseDelegates = 0x254; // TArray<DelegateProperty>
		constexpr auto ServerConnectionCloseDelegates = 0x264; // TArray<DelegateProperty>
		constexpr auto __OnAuthReady__Delegate = 0x274; // DelegateProperty
		constexpr auto __OnClientAuthRequest__Delegate = 0x284; // DelegateProperty
		constexpr auto __OnServerAuthRequest__Delegate = 0x294; // DelegateProperty
		constexpr auto __OnClientAuthResponse__Delegate = 0x2a4; // DelegateProperty
		constexpr auto __OnServerAuthResponse__Delegate = 0x2b4; // DelegateProperty
		constexpr auto __OnClientAuthComplete__Delegate = 0x2c4; // DelegateProperty
		constexpr auto __OnServerAuthComplete__Delegate = 0x2d4; // DelegateProperty
		constexpr auto __OnClientAuthEndSessionRequest__Delegate = 0x2e4; // DelegateProperty
		constexpr auto __OnServerAuthRetryRequest__Delegate = 0x2f4; // DelegateProperty
		constexpr auto __OnClientConnectionClose__Delegate = 0x304; // DelegateProperty
		constexpr auto __OnServerConnectionClose__Delegate = 0x314; // DelegateProperty
	}

	namespace n_UJsonObject { // : UObject
		constexpr auto ValueMap = 0x60; // FMap_Mirror
		constexpr auto ObjectMap = 0xa8; // FMap_Mirror
		constexpr auto ValueArray = 0xf0; // TArray<FString>
		constexpr auto ObjectArray = 0x100; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceForm_CounterAttack { // : UTgDeviceForm
		constexpr auto m_DarklordNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_DarklordNodes1p = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_GrohkInhand { // : ATgDevice
		constexpr auto m_CachedGrohkPawn = 0xa08; // ObjectProperty
	}

	namespace n_UCloudStorageBase { // : UPlatformInterfaceBase
		constexpr auto LocalCloudFiles = 0x80; // TArray<FString>
		constexpr auto bSuppressDelegateCalls = 0x90; // uint32_t : 1
	}

	namespace n_ATgDevice_OverGrowth { // : ATgDevice
		constexpr auto m_VineDevice = 0xa08; // ObjectProperty
	}

	namespace n_USeqAct_ModifyProperty { // : USequenceAction
		constexpr auto Properties = 0x108; // TArray<FPropertyInfo>
	}

	namespace n_ATgDevice_DruidSpawnGuardian { // : ATgDevice_Pet
		constexpr auto m_CachedDruid = 0xa08; // ObjectProperty
		constexpr auto m_fTraceDownDistance = 0xa10; // float
	}

	namespace n_USceneCapturePortalComponent { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
		constexpr auto ViewDestination = 0xdc; // ObjectProperty
	}

	namespace n_UPostProcessEffect { // : UObject
		constexpr auto bShowInEditor = 0x60; // uint32_t : 1
		constexpr auto bShowInGame = 0x60; // uint32_t : 1
		constexpr auto bUseWorldSettings = 0x60; // uint32_t : 1
		constexpr auto m_D3D11Only = 0x60; // uint32_t : 1
		constexpr auto bAffectsLightingOnly = 0x60; // uint32_t : 1
		constexpr auto EffectName = 0x64; // FName
		constexpr auto NodePosY = 0x6c; // int32_t
		constexpr auto NodePosX = 0x70; // int32_t
		constexpr auto DrawWidth = 0x74; // int32_t
		constexpr auto DrawHeight = 0x78; // int32_t
		constexpr auto OutDrawY = 0x7c; // int32_t
		constexpr auto InDrawY = 0x80; // int32_t
		constexpr auto SceneDPG = 0x84; // ESceneDepthPriorityGroup
	}

	namespace n_UParticleLODLevel { // : UObject
		constexpr auto Level = 0x60; // int32_t
		constexpr auto bEnabled = 0x64; // uint32_t : 1
		constexpr auto ConvertedModules = 0x64; // uint32_t : 1
		constexpr auto RequiredModule = 0x68; // ObjectProperty
		constexpr auto Modules = 0x70; // TArray<ObjectProperty>
		constexpr auto TypeDataModule = 0x80; // ObjectProperty
		constexpr auto SpawnModule = 0x88; // ObjectProperty
		constexpr auto EventGenerator = 0x90; // ObjectProperty
		constexpr auto SpawningModules = 0x98; // TArray<ObjectProperty>
		constexpr auto SpawnModules = 0xa8; // TArray<ObjectProperty>
		constexpr auto UpdateModules = 0xb8; // TArray<ObjectProperty>
		constexpr auto OrbitModules = 0xc8; // TArray<ObjectProperty>
		constexpr auto EventReceiverModules = 0xd8; // TArray<ObjectProperty>
		constexpr auto PeakActiveParticles = 0xe8; // int32_t
	}

	namespace n_UPartyBeaconHost { // : UPartyBeacon
		constexpr auto Clients = 0x98; // TArray<FClientBeaconConnection>
		constexpr auto NumTeams = 0xa8; // int32_t
		constexpr auto NumPlayersPerTeam = 0xac; // int32_t
		constexpr auto NumReservations = 0xb0; // int32_t
		constexpr auto NumConsumedReservations = 0xb4; // int32_t
		constexpr auto Reservations = 0xb8; // TArray<FPartyReservation>
		constexpr auto OnlineSessionName = 0xc8; // FName
		constexpr auto ConnectionBacklog = 0xd0; // int32_t
		constexpr auto ForceTeamNum = 0xd4; // int32_t
		constexpr auto ReservedHostTeamNum = 0xd8; // int32_t
		constexpr auto bBestFitTeamAssignment = 0xdc; // uint32_t : 1
		constexpr auto BeaconState = 0xe0; // EPartyBeaconHostState
		constexpr auto __OnReservationChange__Delegate = 0xe4; // DelegateProperty
		constexpr auto __OnReservationsFull__Delegate = 0xf4; // DelegateProperty
		constexpr auto __OnClientCancellationReceived__Delegate = 0x104; // DelegateProperty
	}

	namespace n_USeqEvent_RemoteEvent { // : USequenceEvent
		constexpr auto EventName = 0x128; // FName
		constexpr auto bStatusIsOk = 0x130; // uint32_t : 1
	}

	namespace n_ATgBotFactory { // : ATgActorFactory
		constexpr auto LocationSelection = 0x2c0; // eBotSelection
		constexpr auto LocationList = 0x2c4; // TArray<ObjectProperty>
		constexpr auto s_nCurLocationIndex = 0x2d4; // int32_t
		constexpr auto SafetyLocation = 0x2d8; // ObjectProperty
		constexpr auto ShouldTraceSpawnLocationToFloor = 0x2e0; // uint32_t : 1
		constexpr auto bUseSmiteStaggerSpawning = 0x2e0; // uint32_t : 1
		constexpr auto bSpawnAsSquad = 0x2e0; // uint32_t : 1
		constexpr auto bAutoSpawn = 0x2e0; // uint32_t : 1
		constexpr auto m_bFirstSpawn = 0x2e0; // uint32_t : 1
		constexpr auto bBulkSpawn = 0x2e0; // uint32_t : 1
		constexpr auto bRespawn = 0x2e0; // uint32_t : 1
		constexpr auto bStartBotsInIntroState = 0x2e0; // uint32_t : 1
		constexpr auto bHasDifferentInitialIntro = 0x2e0; // uint32_t : 1
		constexpr auto m_bFirstSpawnWave = 0x2e0; // uint32_t : 1
		constexpr auto m_bIgnoreCollisionOnSpawn = 0x2e0; // uint32_t : 1
		constexpr auto m_bUseCollisionHeightForSpawnPlacement = 0x2e0; // uint32_t : 1
		constexpr auto nBotCount = 0x2e4; // int32_t
		constexpr auto nCurrentCount = 0x2e8; // int32_t
		constexpr auto nActiveCount = 0x2ec; // int32_t
		constexpr auto nTotalSpawns = 0x2f0; // int32_t
		constexpr auto nLane = 0x2f4; // int32_t
		constexpr auto nNavPointsToSkipForPathing = 0x2f8; // int32_t
		constexpr auto fStaggerSpawnDelay = 0x2fc; // float
		constexpr auto s_CurrentSquad = 0x300; // ObjectProperty
		constexpr auto m_SquadClass = 0x308; // UTgAISquad*
		constexpr auto m_nLocationId = 0x310; // int32_t
		constexpr auto nSpawnTableId = 0x314; // int32_t
		constexpr auto nDefaultSpawnTableId = 0x318; // int32_t
		constexpr auto fSpawnDelay = 0x31c; // float
		constexpr auto m_SpawnQueue = 0x320; // TArray<FSpawnQueueEntry>
		constexpr auto m_SpawnVolume = 0x330; // ObjectProperty
		constexpr auto m_nLastGroup = 0x338; // int32_t
		constexpr auto fSpawnHealthPercent = 0x33c; // float
		constexpr auto fIntroductionDuration = 0x340; // float
		constexpr auto fInitialIntroductionDuration = 0x344; // float
		constexpr auto m_StartingSpline = 0x348; // ObjectProperty
		constexpr auto m_RespawnIndicator = 0x350; // ComponentProperty
		constexpr auto m_RespawnIndicatorMIC = 0x358; // ObjectProperty
		constexpr auto m_TextureNormal = 0x360; // ObjectProperty
		constexpr auto fLastKillTime = 0x368; // float
		constexpr auto fRespawnDelay = 0x36c; // float
	}

	namespace n_ATgPawn_Commander { // : ATgPawn_Character
		constexpr auto c_ScopeRevealTargets = 0x3164; // TArray<int32_t>
		constexpr auto r_bAirScoped = 0x3174; // uint32_t : 1
		constexpr auto m_bScopedThisJump = 0x3174; // uint32_t : 1
		constexpr auto r_bDistortionFieldTalentEquipped = 0x3174; // uint32_t : 1
		constexpr auto m_fAirScopeTime = 0x3178; // float
		constexpr auto m_CachedCommanderPassive = 0x317c; // ObjectProperty
		constexpr auto m_CommanderScope = 0x3184; // ObjectProperty
	}

	namespace n_ATgDevice_Restock { // : ATgDevice
		constexpr auto m_InhandWeapon = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NumGodsNearProjectile { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto ProjectileId = 0xa0; // int32_t
		constexpr auto GodThreshold = 0xa4; // int32_t
	}

	namespace n_UTgAIUtilityFilter_InsideActiveRallyPoint { // : UTgAIUtilityFilter
		constexpr auto bAllowEnemyRally = 0xc0; // uint32_t : 1
	}

	namespace n_UInstancedFoliageSettings { // : UObject
		constexpr auto Density = 0x60; // float
		constexpr auto Radius = 0x64; // float
		constexpr auto ScaleMinX = 0x68; // float
		constexpr auto ScaleMinY = 0x6c; // float
		constexpr auto ScaleMinZ = 0x70; // float
		constexpr auto ScaleMaxX = 0x74; // float
		constexpr auto ScaleMaxY = 0x78; // float
		constexpr auto ScaleMaxZ = 0x7c; // float
		constexpr auto LockScaleX = 0x80; // uint32_t : 1
		constexpr auto LockScaleY = 0x80; // uint32_t : 1
		constexpr auto LockScaleZ = 0x80; // uint32_t : 1
		constexpr auto AlignToNormal = 0x80; // uint32_t : 1
		constexpr auto RandomYaw = 0x80; // uint32_t : 1
		constexpr auto UniformScale = 0x80; // uint32_t : 1
		constexpr auto ReapplyDensity = 0x80; // uint32_t : 1
		constexpr auto ReapplyRadius = 0x80; // uint32_t : 1
		constexpr auto ReapplyAlignToNormal = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomYaw = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleX = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleY = 0x80; // uint32_t : 1
		constexpr auto ReapplyScaleZ = 0x80; // uint32_t : 1
		constexpr auto ReapplyRandomPitchAngle = 0x80; // uint32_t : 1
		constexpr auto ReapplyGroundSlope = 0x80; // uint32_t : 1
		constexpr auto ReapplyHeight = 0x80; // uint32_t : 1
		constexpr auto ReapplyLandscapeLayer = 0x80; // uint32_t : 1
		constexpr auto ReapplyZOffset = 0x80; // uint32_t : 1
		constexpr auto CastShadow = 0x80; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x80; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x80; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x80; // uint32_t : 1
		constexpr auto bNoModSelfShadow = 0x80; // uint32_t : 1
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x80; // uint32_t : 1
		constexpr auto bCastHiddenShadow = 0x80; // uint32_t : 1
		constexpr auto bCastShadowAsTwoSided = 0x80; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x80; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x80; // uint32_t : 1
		constexpr auto bUseOnePassLightingOnTranslucency = 0x80; // uint32_t : 1
		constexpr auto bUsePrecomputedShadows = 0x80; // uint32_t : 1
		constexpr auto bStreamInstanceBuffer = 0x80; // uint32_t : 1
		constexpr auto bCollideActors = 0x80; // uint32_t : 1
		constexpr auto bBlockActors = 0x84; // uint32_t : 1
		constexpr auto bBlockNonZeroExtent = 0x84; // uint32_t : 1
		constexpr auto bBlockZeroExtent = 0x84; // uint32_t : 1
		constexpr auto IsSelected = 0x84; // uint32_t : 1
		constexpr auto ShowNothing = 0x84; // uint32_t : 1
		constexpr auto ShowPaintSettings = 0x84; // uint32_t : 1
		constexpr auto ShowInstanceSettings = 0x84; // uint32_t : 1
		constexpr auto AlignMaxAngle = 0x88; // float
		constexpr auto RandomPitchAngle = 0x8c; // float
		constexpr auto GroundSlope = 0x90; // float
		constexpr auto HeightMin = 0x94; // float
		constexpr auto HeightMax = 0x98; // float
		constexpr auto LandscapeLayer = 0x9c; // FName
		constexpr auto ZOffsetMin = 0xa4; // float
		constexpr auto ZOffsetMax = 0xa8; // float
		constexpr auto MaxInstancesPerCluster = 0xac; // int32_t
		constexpr auto MaxClusterRadius = 0xb0; // float
		constexpr auto ReapplyDensityAmount = 0xb4; // float
		constexpr auto StartCullDistance = 0xb8; // int32_t
		constexpr auto EndCullDistance = 0xbc; // int32_t
		constexpr auto CullOption = 0xc0; // FoliageCullOption
		constexpr auto DetailMode = 0xc1; // EDetailMode
		constexpr auto TranslucencySortPriority = 0xc4; // int32_t
		constexpr auto DisplayOrder = 0xc8; // int32_t
	}

	namespace n_UGameStateObject { // : UGameplayEventsHandler
		constexpr auto TeamStates = 0x88; // FArray_Mirror
		constexpr auto PlayerStates = 0x98; // FArray_Mirror
		constexpr auto SessionType = 0xa8; // GameSessionType
		constexpr auto bIsMatchStarted = 0xac; // uint32_t : 1
		constexpr auto bIsRoundStarted = 0xac; // uint32_t : 1
		constexpr auto RoundNumber = 0xb0; // int32_t
		constexpr auto MaxRoundNumber = 0xb4; // int32_t
	}

	namespace n_USeqAct_ToggleCinematicMode { // : USequenceAction
		constexpr auto bDisableMovement = 0x108; // uint32_t : 1
		constexpr auto bDisableTurning = 0x108; // uint32_t : 1
		constexpr auto bHidePlayer = 0x108; // uint32_t : 1
		constexpr auto bDisableInput = 0x108; // uint32_t : 1
		constexpr auto bHideHUD = 0x108; // uint32_t : 1
		constexpr auto bDeadBodies = 0x108; // uint32_t : 1
		constexpr auto bDroppedPickups = 0x108; // uint32_t : 1
	}

	namespace n_ATriggeredPath { // : ANavigationPoint
		constexpr auto bOpen = 0x378; // uint32_t : 1
		constexpr auto MyTrigger = 0x37c; // ObjectProperty
	}

	namespace n_UUIData_LoadoutCategory { // : UUIData
		constexpr auto m_sName = 0x64; // FString
		constexpr auto m_pItem = 0x74; // ObjectProperty
	}

	namespace n_UUIData_String { // : UUIData
		constexpr auto m_sValue = 0x64; // FString
	}

	namespace n_ADroppedPickup { // : AActor
		constexpr auto Inventory = 0x280; // ObjectProperty
		constexpr auto InventoryClass = 0x288; // AInventory*
		constexpr auto PickupCache = 0x290; // ObjectProperty
		constexpr auto bFadeOut = 0x298; // uint32_t : 1
	}

	namespace n_UPhysicsAsset { // : UObject
		constexpr auto BodySetup = 0x60; // TArray<ObjectProperty>
		constexpr auto BodySetupIndexMap = 0x70; // FMap_Mirror
		constexpr auto BoundsBodies = 0xb8; // TArray<int32_t>
		constexpr auto ConstraintSetup = 0xc8; // TArray<ObjectProperty>
		constexpr auto DefaultInstance = 0xd8; // ObjectProperty
	}

	namespace n_ATgDevice_BombQueenAbility1 { // : ATgDevice
		constexpr auto m_pBombQueen = 0xa08; // ObjectProperty
	}

	namespace n_ATgDemoRecSpectator { // : ATgSpectatorController
		constexpr auto PendingCommands = 0x1874; // TArray<FSpectatorCommand>
		constexpr auto m_TimeIndex = 0x1884; // int32_t
		constexpr auto m_TimeDilations = 0x1888; // TArray<FDilationData>
		constexpr auto m_pTgCallbackDevice = 0x1898; // FPointer
		constexpr auto m_1xTimeIndex = 0x18a0; // int32_t
		constexpr auto m_bIsPaused = 0x18a4; // uint32_t : 1
		constexpr auto m_bInStasis = 0x18a4; // uint32_t : 1
		constexpr auto m_bSpectatorMaster = 0x18a4; // uint32_t : 1
		constexpr auto m_bSyncWithMasterEnabled = 0x18a4; // uint32_t : 1
		constexpr auto m_bIsSyncingWithMaster = 0x18a4; // uint32_t : 1
		constexpr auto m_bAutoSlomo = 0x18a4; // uint32_t : 1
		constexpr auto m_bReceiveCamSync = 0x18a4; // uint32_t : 1
		constexpr auto m_nLastReceivedMasterFrame = 0x18a8; // int32_t
		constexpr auto m_fLastReceivedMasterTimeDilation = 0x18ac; // float
		constexpr auto m_fLastReceievedRealTimeStamp = 0x18b0; // float
		constexpr auto m_nSyncFrameThreshold = 0x18b4; // int32_t
		constexpr auto m_nSyncFrameCheckThreshold = 0x18b8; // int32_t
		constexpr auto m_nSyncAheadFrameThreshold = 0x18bc; // int32_t
		constexpr auto m_nLastTimerValue = 0x18c0; // int32_t
		constexpr auto m_SpectatorDirector = 0x18c4; // ObjectProperty
		constexpr auto m_ActionListener = 0x18cc; // ObjectProperty
		constexpr auto m_fActionListenerRadius = 0x18d4; // float
		constexpr auto m_fActionListenerHeight = 0x18d8; // float
		constexpr auto m_nCurrentActionListenerRating = 0x18dc; // int32_t
		constexpr auto m_nActionListenerRatingThreshold = 0x18e0; // int32_t
		constexpr auto m_fRemainingAutoSlomoTime = 0x18e4; // float
		constexpr auto m_fAutoSlomoExpirationTime = 0x18e8; // float
		constexpr auto m_nAutoSlomoSpeedIndex = 0x18ec; // int32_t
		constexpr auto m_nAutoSlomoNearbyPlayersNum = 0x18f0; // int32_t
		constexpr auto m_fAutoSlomoFrequency = 0x18f4; // float
		constexpr auto m_fRemainingAutoSlomoTimeoutTime = 0x18f8; // float
	}

	namespace n_USimpleSplineAudioComponent { // : USplineAudioComponent
		constexpr auto bAttenuateWithLPF = 0x2e4; // uint32_t : 1
		constexpr auto LPFRadiusMin = 0x2e8; // float
		constexpr auto LPFRadiusMax = 0x2ec; // float
		constexpr auto dBAttenuationAtMax = 0x2f0; // float
		constexpr auto FlattenAttenuationRadius = 0x2f4; // float
		constexpr auto DistanceAlgorithm = 0x2f8; // SoundDistanceModel
		constexpr auto RadiusMin = 0x2fc; // float
		constexpr auto RadiusMax = 0x300; // float
		constexpr auto SoundSlots = 0x304; // TArray<FSplineSoundSlot>
		constexpr auto NotifyBufferFinishedHook = 0x314; // ObjectProperty
	}

	namespace n_ATgPawn_Structure { // : ATgPawn
		constexpr auto s_fLastDamageTime = 0x2ea0; // float
		constexpr auto s_fDamageNotificationDelay = 0x2ea4; // float
	}

	namespace n_UUIComponent_WinterEventOverview { // : UUIComponent_Display
		constexpr auto m_grOverview = 0x124; // ObjectProperty
	}

	namespace n_ATgProj_SeedlingSecondary { // : ATgProj_Seedling
		constexpr auto m_bInitialized = 0x5d0; // uint32_t : 1
		constexpr auto m_fGrowthLifetime = 0x5d4; // float
	}

	namespace n_ATgDevice_IronSights { // : ATgDevice_ToggleADS
		constexpr auto m_CachedViktorInhand = 0xa20; // ObjectProperty
		constexpr auto m_CachedHustleDevice = 0xa28; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearestTowerHealthPercent { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto HealthPct = 0x9c; // float
	}

	namespace n_UTgGamePhase_Ticket { // : UTgGamePhase
		constexpr auto m_nWinningTickets = 0xb8; // int32_t
		constexpr auto m_nScoreForTicketLimitReached = 0xbc; // int32_t
		constexpr auto m_nTF1Tickets = 0xc0; // int32_t
		constexpr auto m_nTF2Tickets = 0xc4; // int32_t
	}

	namespace n_UGFxRawData { // : UObject
		constexpr auto RawData = 0x60; // TArray<char>
		constexpr auto ReferencedSwfs = 0x70; // TArray<FString>
		constexpr auto References = 0x80; // TArray<ObjectProperty>
		constexpr auto UserReferences = 0x90; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SetSkelPosture { // : USequenceAction
		constexpr auto m_Posture = 0x108; // TG_POSTURE
	}

	namespace n_UCommandlet { // : UObject
		constexpr auto HelpDescription = 0x60; // FString
		constexpr auto HelpUsage = 0x70; // FString
		constexpr auto HelpWebLink = 0x80; // FString
		constexpr auto HelpParamNames = 0x90; // TArray<FString>
		constexpr auto HelpParamDescriptions = 0xa0; // TArray<FString>
		constexpr auto IsServer = 0xb0; // uint32_t : 1
		constexpr auto IsClient = 0xb0; // uint32_t : 1
		constexpr auto IsEditor = 0xb0; // uint32_t : 1
		constexpr auto LogToConsole = 0xb0; // uint32_t : 1
		constexpr auto ShowErrorCount = 0xb0; // uint32_t : 1
	}

	namespace n_UUIComponent_WinterEventEvents { // : UUIComponent_Display
		constexpr auto m_mcResetsAt = 0x124; // ObjectProperty
		constexpr auto m_pDays = 0x12c; // ObjectProperty
		constexpr auto m_pTooltip = 0x134; // ObjectProperty
		constexpr auto m_grEvents = 0x13c; // ObjectProperty
	}

	namespace n_USeqAct_SetCameraTarget { // : USequenceAction
		constexpr auto CameraTarget = 0x108; // ObjectProperty
		constexpr auto TransitionParams = 0x110; // FViewTargetTransitionParams
	}

	namespace n_UInterpCurveEdSetup { // : UObject
		constexpr auto Tabs = 0x60; // TArray<FCurveEdTab>
		constexpr auto ActiveTab = 0x70; // int32_t
	}

	namespace n_ATgDevice_BunnyHeal { // : ATgDevice
		constexpr auto m_CachedBunny = 0xa08; // ObjectProperty
		constexpr auto m_CurrentHealTarget = 0xa10; // ObjectProperty
		constexpr auto m_nMaxHealTargets = 0xa18; // int32_t
		constexpr auto m_fSeekingSearchRadius = 0xa1c; // float
		constexpr auto m_bCanHealPastTargets = 0xa20; // uint32_t : 1
		constexpr auto m_fHealBounceDelay = 0xa24; // float
		constexpr auto m_BunnyHealHistory = 0xa28; // TArray<FBunnyHealHistoryEntry>
	}

	namespace n_ULightmassPrimitiveSettingsObject { // : UObject
		constexpr auto LightmassSettings = 0x60; // FLightmassPrimitiveSettings
	}

	namespace n_ATgSurvivalFogVolumeDensityInfo { // : AFogVolumeSphericalDensityInfo
		constexpr auto m_bFogOn = 0x294; // uint32_t : 1
		constexpr auto m_fTargetStartDistance = 0x298; // float
		constexpr auto m_fPreviousStartDistance = 0x29c; // float
		constexpr auto m_fFogUpdateTimestamp = 0x2a0; // float
		constexpr auto m_fFogUpdateInterval = 0x2a4; // float
		constexpr auto m_fConvergenceRate = 0x2a8; // float
		constexpr auto m_fFadeInRate = 0x2ac; // float
		constexpr auto m_fFadeOutRate = 0x2b0; // float
		constexpr auto SphericalDensityComponent = 0x2b4; // ComponentProperty
	}

	namespace n_UInterpTrackInstDirector { // : UInterpTrackInst
		constexpr auto OldViewTarget = 0x60; // ObjectProperty
		constexpr auto OldRenderingOverrides = 0x68; // FRenderingPerformanceOverrides
	}

	namespace n_UUIComponent_MatchLobbyMap { // : UUIComponent_Display
		constexpr auto m_mcMapName = 0x124; // ObjectProperty
		constexpr auto m_mcModeName = 0x12c; // ObjectProperty
		constexpr auto m_mcMapIcon = 0x134; // ObjectProperty
	}

	namespace n_ATgCollisionProxy { // : AActor
		constexpr auto m_NearByPlayers = 0x280; // TArray<ObjectProperty>
		constexpr auto m_bIgnoreStealthPlayers = 0x290; // uint32_t : 1
		constexpr auto m_bIgnoreNonPlayers = 0x290; // uint32_t : 1
		constexpr auto m_bIgnoreInvulnerablePlayers = 0x290; // uint32_t : 1
		constexpr auto m_bForwardOwnerOnly = 0x290; // uint32_t : 1
		constexpr auto __ProxyTouch__Delegate = 0x294; // DelegateProperty
		constexpr auto __ProxyUnTouch__Delegate = 0x2a4; // DelegateProperty
	}

	namespace n_UUIData_EventEmoteButton { // : UUIData
		constexpr auto m_pEmoteItem = 0x64; // ObjectProperty
		constexpr auto m_pQuestGoals = 0x6c; // ObjectProperty
	}

	namespace n_UPBRuleNodeCycle { // : UPBRuleNodeBase
		constexpr auto RepeatAxis = 0x70; // EProcBuildingAxis
		constexpr auto RepeatSize = 0x74; // float
		constexpr auto CycleSize = 0x78; // int32_t
		constexpr auto bFixRepeatSize = 0x7c; // uint32_t : 1
	}

	namespace n_ATgDevice_ArcingBeam { // : ATgDevice
		constexpr auto m_ArcingList = 0xa08; // TArray<FArcingInfo>
		constexpr auto m_nMaxNumArcsPerTarget = 0xa18; // int32_t
		constexpr auto m_bCanTargetShields = 0xa1c; // uint32_t : 1
		constexpr auto m_bIsArcing = 0xa1c; // uint32_t : 1
	}

	namespace n_UInterpTrackFloatMaterialParam { // : UInterpTrackFloatBase
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // uint32_t : 1
	}

	namespace n_UUIComponent_ItemWithPrice { // : UUIComponent_Display
		constexpr auto m_pItem = 0x124; // ObjectProperty
		constexpr auto m_pCurrency = 0x12c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x134; // ObjectProperty
	}

	namespace n_UNxForceFieldGenericComponent { // : UNxForceFieldComponent
		constexpr auto RoughExtentX = 0x2bc; // float
		constexpr auto RoughExtentY = 0x2c0; // float
		constexpr auto RoughExtentZ = 0x2c4; // float
		constexpr auto Coordinates = 0x2c8; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2cc; // FVector
		constexpr auto PositionMultiplierX = 0x2d8; // FVector
		constexpr auto PositionMultiplierY = 0x2e4; // FVector
		constexpr auto PositionMultiplierZ = 0x2f0; // FVector
		constexpr auto PositionTarget = 0x2fc; // FVector
		constexpr auto VelocityMultiplierX = 0x308; // FVector
		constexpr auto VelocityMultiplierY = 0x314; // FVector
		constexpr auto VelocityMultiplierZ = 0x320; // FVector
		constexpr auto VelocityTarget = 0x32c; // FVector
		constexpr auto Noise = 0x338; // FVector
		constexpr auto FalloffLinear = 0x344; // FVector
		constexpr auto FalloffQuadratic = 0x350; // FVector
		constexpr auto TorusRadius = 0x35c; // float
		constexpr auto Kernel = 0x360; // FPointer
	}

	namespace n_ATgDeploy_ShieldBarikDome { // : ATgDeploy_Shield
		constexpr auto m_fTurretSetupTime = 0x470; // float
	}

	namespace n_UPComGameViewportClient { // : UGameViewportClient
		constexpr auto OpenBroadcaster = 0x1a8; // ObjectProperty
		constexpr auto InputLightingEffect = 0x1b0; // ObjectProperty
		constexpr auto bUseDynamicResolutionScaler = 0x1b8; // uint32_t : 1
		constexpr auto DynamicResolutionScaler = 0x1bc; // FPointer
	}

	namespace n_USeqAct_MobileAddInputZones { // : USequenceAction
		constexpr auto ZoneName = 0x108; // FName
		constexpr auto NewZone = 0x110; // ObjectProperty
	}

	namespace n_UUIComponent_ImaniManaBar { // : UUIComponent_Display
		constexpr auto m_mcManaBar = 0x124; // ObjectProperty
		constexpr auto m_mcManaBarMask = 0x12c; // ObjectProperty
		constexpr auto m_fCachedMana = 0x134; // float
		constexpr auto m_bClearcastActive = 0x138; // uint32_t : 1
		constexpr auto m_fClearcastTimeNormalization = 0x13c; // float
		constexpr auto m_fClearcastTimeRemaining = 0x140; // float
		constexpr auto m_nClearcastAnimationMaskFrame = 0x144; // int32_t
	}

	namespace n_AStaticMeshActor { // : AStaticMeshActorBase
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto bRenderElementsViaProxy = 0x288; // uint32_t : 1
		constexpr auto bDisableAutoBaseOnProcBuilding = 0x288; // uint32_t : 1
		constexpr auto bProxy = 0x288; // uint32_t : 1
		constexpr auto bHiddenByProxy = 0x288; // uint32_t : 1
		constexpr auto OldCastShadow = 0x288; // uint32_t : 1
		constexpr auto OldAcceptsLights = 0x288; // uint32_t : 1
		constexpr auto bCuttingMesh = 0x288; // uint32_t : 1
		constexpr auto Silhouette = 0x28c; // ComponentProperty
		constexpr auto VertexColorPhysicalMaterialMappings = 0x294; // TArray<FVertexColorPhysicalMaterialMapping>
	}

	namespace n_UParticleModuleOrbit { // : UParticleModuleOrbitBase
		constexpr auto ChainMode = 0x6c; // EOrbitChainMode
		constexpr auto OffsetAmount = 0x70; // FRawDistributionVector
		constexpr auto OffsetOptions = 0x94; // FOrbitOptions
		constexpr auto RotationAmount = 0x98; // FRawDistributionVector
		constexpr auto RotationOptions = 0xbc; // FOrbitOptions
		constexpr auto RotationRateAmount = 0xc0; // FRawDistributionVector
		constexpr auto RotationRateOptions = 0xe4; // FOrbitOptions
	}

	namespace n_UParticleModuleRotation_Seeded { // : UParticleModuleRotation
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_AController { // : AActor
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto Pawn = 0x288; // ObjectProperty
		constexpr auto PlayerReplicationInfo = 0x290; // ObjectProperty
		constexpr auto PlayerNum = 0x298; // int32_t
		constexpr auto NextController = 0x29c; // ObjectProperty
		constexpr auto bIsPlayer = 0x2a4; // uint32_t : 1
		constexpr auto bGodMode = 0x2a4; // uint32_t : 1
		constexpr auto bSoaking = 0x2a4; // uint32_t : 1
		constexpr auto bSlowerZAcquire = 0x2a4; // uint32_t : 1
		constexpr auto bNotifyPostLanded = 0x2a4; // uint32_t : 1
		constexpr auto bNotifyApex = 0x2a4; // uint32_t : 1
		constexpr auto bOverrideSearchStart = 0x2a4; // uint32_t : 1
		constexpr auto bAdvancedTactics = 0x2a4; // uint32_t : 1
		constexpr auto bCanDoSpecial = 0x2a4; // uint32_t : 1
		constexpr auto bAdjusting = 0x2a4; // uint32_t : 1
		constexpr auto bPreparingMove = 0x2a4; // uint32_t : 1
		constexpr auto bForceStrafe = 0x2a4; // uint32_t : 1
		constexpr auto bLOSflag = 0x2a4; // uint32_t : 1
		constexpr auto bSkipExtraLOSChecks = 0x2a4; // uint32_t : 1
		constexpr auto bNotifyFallingHitWall = 0x2a4; // uint32_t : 1
		constexpr auto bEarlyOutOfSighTestsForSameType = 0x2a4; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x2a4; // uint32_t : 1
		constexpr auto bSeeFriendly = 0x2a4; // uint32_t : 1
		constexpr auto bUsingPathLanes = 0x2a4; // uint32_t : 1
		constexpr auto bFire = 0x2a8; // char
		constexpr auto bAltFire = 0x2a9; // char
		constexpr auto m_eCurrentStunType = 0x2aa; // EStunType
		constexpr auto MinHitWall = 0x2ac; // float
		constexpr auto NavigationHandleClass = 0x2b0; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x2b8; // ObjectProperty
		constexpr auto OverrideSearchStart = 0x2c0; // FVector
		constexpr auto MoveTimer = 0x2cc; // float
		constexpr auto MoveTarget = 0x2d0; // ObjectProperty
		constexpr auto DestinationPosition = 0x2d8; // FBasedPosition
		constexpr auto FocalPosition = 0x310; // FBasedPosition
		constexpr auto Focus = 0x348; // ObjectProperty
		constexpr auto GoalList = 0x350; // ObjectProperty [0x4]
		constexpr auto AdjustPosition = 0x370; // FBasedPosition
		constexpr auto StartSpot = 0x3a8; // ObjectProperty
		constexpr auto RouteCache = 0x3b0; // TArray<ObjectProperty>
		constexpr auto CurrentPath = 0x3c0; // ObjectProperty
		constexpr auto NextRoutePath = 0x3c8; // ObjectProperty
		constexpr auto CurrentPathDir = 0x3d0; // FVector
		constexpr auto RouteGoal = 0x3dc; // ObjectProperty
		constexpr auto RouteDist = 0x3e4; // float
		constexpr auto LastRouteFind = 0x3e8; // float
		constexpr auto PendingMover = 0x3ec; // ObjectProperty
		constexpr auto FailedMoveTarget = 0x3f4; // ObjectProperty
		constexpr auto MoveFailureCount = 0x3fc; // int32_t
		constexpr auto GroundPitchTime = 0x400; // float
		constexpr auto ShotTarget = 0x404; // ObjectProperty
		constexpr auto LastFailedReach = 0x40c; // ObjectProperty
		constexpr auto FailedReachTime = 0x414; // float
		constexpr auto FailedReachLocation = 0x418; // FVector
		constexpr auto SightCounter = 0x424; // float
		constexpr auto SightCounterInterval = 0x428; // float
		constexpr auto InUseNodeCostMultiplier = 0x42c; // float
		constexpr auto HighJumpNodeCostModifier = 0x430; // int32_t
		constexpr auto MaxMoveTowardPawnTargetTime = 0x434; // float
		constexpr auto Enemy = 0x438; // ObjectProperty
		constexpr auto VisiblePortals = 0x440; // TArray<FVisiblePortalInfo>
		constexpr auto LaneOffset = 0x450; // float
		constexpr auto OldBasedRotation = 0x454; // FRotator
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x460; // FVector
		constexpr auto NavMeshPath_SearchHierachicalMinDistance = 0x46c; // float
	}

	namespace n_UMcpServerTimeManager { // : UMcpServerTimeBase
		constexpr auto TimeStampUrl = 0x98; // FString
		constexpr auto LastTimeStamp = 0xa8; // FString
		constexpr auto HTTPRequestServerTime = 0xb8; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_StandingStillSelfEffect { // : UTgInvListener
		constexpr auto m_fRestTime = 0xc4; // float
		constexpr auto m_bIsApplied = 0xc8; // uint32_t : 1
		constexpr auto m_CachedPawnOwner = 0xcc; // ObjectProperty
	}

	namespace n_ATgPawn_Demon { // : ATgPawn_Character
		constexpr auto r_bIsUltActive = 0x3164; // uint32_t : 1
		constexpr auto r_bIsUltTargeting = 0x3164; // uint32_t : 1
		constexpr auto r_bIsUltTraveling = 0x3164; // uint32_t : 1
		constexpr auto c_bUltRevealApplied = 0x3164; // uint32_t : 1
		constexpr auto c_bStimActive = 0x3164; // uint32_t : 1
		constexpr auto r_bTeleportActive = 0x3164; // uint32_t : 1
		constexpr auto r_bTeleportAlmostFinished = 0x3164; // uint32_t : 1
		constexpr auto r_bBloodSenseActive = 0x3164; // uint32_t : 1
		constexpr auto c_bBloodSenseRevealApplied = 0x3164; // uint32_t : 1
		constexpr auto m_bUseTeleportZoom = 0x3164; // uint32_t : 1
		constexpr auto m_bUseTelepunchZoom = 0x3164; // uint32_t : 1
		constexpr auto m_bTelepunchTargetLocked = 0x3164; // uint32_t : 1
		constexpr auto r_fBloodSenseThreshold = 0x3168; // float
		constexpr auto c_fBloodSenseUpdateTimer = 0x316c; // float
		constexpr auto c_fBloodSenseUpdateRate = 0x3170; // float
		constexpr auto s_fPostUltKillVoiceTimer = 0x3174; // float
		constexpr auto s_LastTelepunchTargetPawnId = 0x3178; // int32_t
		constexpr auto m_TelepunchTarget = 0x317c; // ObjectProperty
	}

	namespace n_UTgDeviceForm_RuckusInhand { // : UTgDeviceForm
		constexpr auto m_bFiredFromLeftGun = 0x28c; // uint32_t : 1
		constexpr auto m_bFiredFromTopBarrel = 0x28c; // uint32_t : 1
		constexpr auto m_bPlayingSpinnerSound = 0x28c; // uint32_t : 1
		constexpr auto m_bPlayingFireLoopSound = 0x28c; // uint32_t : 1
		constexpr auto m_bIsFiring = 0x28c; // uint32_t : 1
		constexpr auto m_SpinnerSkelControl1P = 0x290; // ObjectProperty
		constexpr auto m_SpinnerSkelControl3P = 0x298; // ObjectProperty
		constexpr auto c_nmSocketLeft = 0x2a0; // FName
		constexpr auto c_nmSocketRight = 0x2a8; // FName
		constexpr auto m_fLoopingSoundThreshold = 0x2b0; // float
		constexpr auto m_fLastSpinConfirmationTimestamp = 0x2b4; // float
		constexpr auto m_fSpinConfirmationCooldown = 0x2b8; // float
		constexpr auto m_LowerRightBarrel1P = 0x2bc; // ObjectProperty
		constexpr auto m_UpperRightBarrel1P = 0x2c4; // ObjectProperty
		constexpr auto m_LowerLeftBarrel1P = 0x2cc; // ObjectProperty
		constexpr auto m_UpperLeftBarrel1P = 0x2d4; // ObjectProperty
		constexpr auto m_LowerRightBarrel3P = 0x2dc; // ObjectProperty
		constexpr auto m_UpperRightBarrel3P = 0x2e4; // ObjectProperty
		constexpr auto m_LowerLeftBarrel3P = 0x2ec; // ObjectProperty
		constexpr auto m_UpperLeftBarrel3P = 0x2f4; // ObjectProperty
	}

	namespace n_UTgSeqAct_HackBot { // : USequenceAction
		constexpr auto m_ControlPawn = 0x108; // ObjectProperty
	}

	namespace n_UParticleModuleRotation { // : UParticleModuleRotationBase
		constexpr auto StartRotation = 0x68; // FRawDistributionFloat
	}

	namespace n_UTgDeviceForm_ToggleADS { // : UTgDeviceForm_ToggleWithLockout
		constexpr auto m_fTransitionAmount = 0x28c; // float
		constexpr auto m_fTransitionPerSec = 0x290; // float
		constexpr auto m_fDesiredScopeWorld1pFOV = 0x294; // float
		constexpr auto m_fDesiredScopeWorld3pFOV = 0x298; // float
		constexpr auto m_fLastSetWorldFOVInterp = 0x29c; // float
	}

	namespace n_USeqEvent_MobileMotion { // : USeqEvent_MobileBase
		constexpr auto Roll = 0x128; // float
		constexpr auto Pitch = 0x12c; // float
		constexpr auto Yaw = 0x130; // float
		constexpr auto DeltaRoll = 0x134; // float
		constexpr auto DeltaPitch = 0x138; // float
		constexpr auto DeltaYaw = 0x13c; // float
	}

	namespace n_UNetDriver { // : USubsystem
		constexpr auto ConnectionTimeout = 0x9c; // float
		constexpr auto InitialConnectTimeout = 0xa0; // float
		constexpr auto P2PConnectionTimeout = 0xa4; // float
		constexpr auto InitialHandshakeTimeout = 0xa8; // float
		constexpr auto KeepAliveTime = 0xac; // float
		constexpr auto RelevantTimeout = 0xb0; // float
		constexpr auto SpawnPrioritySeconds = 0xb4; // float
		constexpr auto ServerTravelPause = 0xb8; // float
		constexpr auto MaxClientRate = 0xc0; // int32_t
		constexpr auto MaxInternetClientRate = 0xc4; // int32_t
		constexpr auto NetServerMaxTickRate = 0xc8; // int32_t
		constexpr auto bClampListenServerTickRate = 0xd0; // uint32_t : 1
		constexpr auto AllowDownloads = 0xd4; // uint32_t : 1
		constexpr auto AllowPeerConnections = 0xd8; // uint32_t : 1
		constexpr auto AllowPeerVoice = 0xdc; // uint32_t : 1
		constexpr auto MaxDownloadSize = 0x100; // int32_t
		constexpr auto DownloadManagers = 0x104; // TArray<FString>
		constexpr auto NetConnectionClassName = 0x1b0; // FString
		constexpr auto PeerNetConnectionClassName = 0x1c8; // FString
	}

	namespace n_ANxForceFieldRadial { // : ANxForceField
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto ForceStrength = 0x2e4; // float
		constexpr auto ForceRadius = 0x2e8; // float
		constexpr auto SelfRotationStrength = 0x2ec; // float
		constexpr auto ForceFalloff = 0x2f0; // ERadialImpulseFalloff
		constexpr auto Kernel = 0x2f4; // FPointer
	}

	namespace n_UTgAnimNodeTargeting { // : UTgAnimNodeBlendList
		constexpr auto m_EquipPoint = 0x168; // TG_EQUIP_POINT
		constexpr auto m_bResetOnRelevant = 0x16c; // uint32_t : 1
		constexpr auto m_bDoneTargeting = 0x16c; // uint32_t : 1
	}

	namespace n_UTgSoundEventsManager { // : UObject
		constexpr auto m_bInitialized = 0x60; // uint32_t : 1
		constexpr auto m_eLastEvent = 0x64; // ENotifySound
		constexpr auto m_GameObjectShutdownQueue = 0x68; // TArray<FTimestampedGameObjectId>
		constexpr auto m_DeferredEvents = 0x78; // TArray<FQueuedSoundEvent>
	}

	namespace n_UUIScene_UIHudScore { // : UUIScene
		constexpr auto m_pHudScoreHH = 0x1cc; // ObjectProperty
	}

	namespace n_UUIData_MatchLobbyChampion { // : UUIData
		constexpr auto m_pChampion = 0x64; // ObjectProperty
		constexpr auto m_eCurrentLobbyState = 0x6c; // UIChampionMatchState
		constexpr auto m_nSelectedByIds = 0x70; // TArray<int32_t>
	}

	namespace n_UUIComponent_AzaanIreBar { // : UUIComponent_Display
		constexpr auto m_mcChargePctMask = 0x124; // ObjectProperty
		constexpr auto m_mcChargingFlash = 0x12c; // ObjectProperty
		constexpr auto m_mcChargePctTip = 0x134; // ObjectProperty
		constexpr auto m_mcIreTierFrame = 0x13c; // ObjectProperty
		constexpr auto m_CurrentViewAzaan = 0x144; // ObjectProperty
		constexpr auto m_fPrevIreAmt = 0x14c; // float
		constexpr auto m_nPrevIreTier = 0x150; // int32_t
		constexpr auto m_nIreChangeDir = 0x154; // int32_t
		constexpr auto m_bHideOnGamepad = 0x158; // uint32_t : 1
		constexpr auto m_bHideOnKeyboard = 0x158; // uint32_t : 1
		constexpr auto m_bIsActive = 0x158; // uint32_t : 1
		constexpr auto m_fKeyboardTranslation = 0x15c; // float
	}

	namespace n_AActor { // : UObject
		constexpr auto Components = 0x60; // TArray<ComponentProperty>
		constexpr auto AllComponents = 0x70; // TArray<ComponentProperty>
		constexpr auto Location = 0x80; // FVector
		constexpr auto Rotation = 0x8c; // FRotator
		constexpr auto DrawScale = 0x98; // float
		constexpr auto DrawScale3D = 0x9c; // FVector
		constexpr auto PrePivot = 0xa8; // FVector
		constexpr auto DetachFence = 0xb4; // FRenderCommandFence
		constexpr auto CustomTimeDilation = 0xb8; // float
		constexpr auto Physics = 0xbc; // EPhysics
		constexpr auto RemoteRole = 0xbd; // ENetRole
		constexpr auto Role = 0xbe; // ENetRole
		constexpr auto CollisionType = 0xbf; // ECollisionType
		constexpr auto ReplicatedCollisionType = 0xc0; // ECollisionType
		constexpr auto TickGroup = 0xc1; // ETickingGroup
		constexpr auto Owner = 0xc4; // ObjectProperty
		constexpr auto Base = 0xcc; // ObjectProperty
		constexpr auto Timers = 0xd4; // TArray<FTimerData>
		constexpr auto bStatic = 0xe4; // uint32_t : 1
		constexpr auto bHidden = 0xe4; // uint32_t : 1
		constexpr auto bNoDelete = 0xe4; // uint32_t : 1
		constexpr auto bDeleteMe = 0xe4; // uint32_t : 1
		constexpr auto bTicked = 0xe4; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0xe4; // uint32_t : 1
		constexpr auto bTickIsDisabled = 0xe4; // uint32_t : 1
		constexpr auto bServerTickIsDisabled = 0xe4; // uint32_t : 1
		constexpr auto bWorldGeometry = 0xe4; // uint32_t : 1
		constexpr auto bIgnoreRigidBodyPawns = 0xe4; // uint32_t : 1
		constexpr auto bOrientOnSlope = 0xe4; // uint32_t : 1
		constexpr auto bIgnoreEncroachers = 0xe4; // uint32_t : 1
		constexpr auto bPushedByEncroachers = 0xe4; // uint32_t : 1
		constexpr auto bDestroyedByInterpActor = 0xe4; // uint32_t : 1
		constexpr auto bRouteBeginPlayEvenIfStatic = 0xe4; // uint32_t : 1
		constexpr auto bIsMoving = 0xe4; // uint32_t : 1
		constexpr auto bAlwaysEncroachCheck = 0xe4; // uint32_t : 1
		constexpr auto bHasAlternateTargetLocation = 0xe4; // uint32_t : 1
		constexpr auto bCanStepUpOn = 0xe4; // uint32_t : 1
		constexpr auto bNetTemporary = 0xe4; // uint32_t : 1
		constexpr auto bOnlyRelevantToOwner = 0xe4; // uint32_t : 1
		constexpr auto bNetDirty = 0xe4; // uint32_t : 1
		constexpr auto bAlwaysRelevant = 0xe4; // uint32_t : 1
		constexpr auto bReplicateInstigator = 0xe4; // uint32_t : 1
		constexpr auto bReplicateMovement = 0xe4; // uint32_t : 1
		constexpr auto bSkipActorPropertyReplication = 0xe4; // uint32_t : 1
		constexpr auto bUpdateSimulatedPosition = 0xe4; // uint32_t : 1
		constexpr auto bTearOff = 0xe4; // uint32_t : 1
		constexpr auto bOnlyDirtyReplication = 0xe4; // uint32_t : 1
		constexpr auto bAlwaysInformOfTimelapse = 0xe4; // uint32_t : 1
		constexpr auto bNetTimelapse = 0xe4; // uint32_t : 1
		constexpr auto bNetTimelapseInit = 0xe4; // uint32_t : 1
		constexpr auto bNetTimelapsePost = 0xe8; // uint32_t : 1
		constexpr auto bAllowFluidSurfaceInteraction = 0xe8; // uint32_t : 1
		constexpr auto bDemoRecording = 0xe8; // uint32_t : 1
		constexpr auto bDemoOwner = 0xe8; // uint32_t : 1
		constexpr auto bForceDemoRelevant = 0xe8; // uint32_t : 1
		constexpr auto bNetInitialRotation = 0xe8; // uint32_t : 1
		constexpr auto bReplicateRigidBodyLocation = 0xe8; // uint32_t : 1
		constexpr auto bKillDuringLevelTransition = 0xe8; // uint32_t : 1
		constexpr auto bExchangedRoles = 0xe8; // uint32_t : 1
		constexpr auto bConsiderAllStaticMeshComponentsForStreaming = 0xe8; // uint32_t : 1
		constexpr auto bDebug = 0xe8; // uint32_t : 1
		constexpr auto bPostRenderIfNotVisible = 0xe8; // uint32_t : 1
		constexpr auto s_bThrottleNetRelevancy = 0xe8; // uint32_t : 1
		constexpr auto m_bHasThreadedWork = 0xe8; // uint32_t : 1
		constexpr auto bForceNetUpdate = 0xe8; // uint32_t : 1
		constexpr auto bPendingNetUpdate = 0xe8; // uint32_t : 1
		constexpr auto bHardAttach = 0xe8; // uint32_t : 1
		constexpr auto bIgnoreBaseRotation = 0xe8; // uint32_t : 1
		constexpr auto bShadowParented = 0xe8; // uint32_t : 1
		constexpr auto bSkipAttachedMoves = 0xe8; // uint32_t : 1
		constexpr auto bCanBeAdheredTo = 0xe8; // uint32_t : 1
		constexpr auto bCanBeFrictionedTo = 0xe8; // uint32_t : 1
		constexpr auto bHurtEntry = 0xe8; // uint32_t : 1
		constexpr auto bGameRelevant = 0xe8; // uint32_t : 1
		constexpr auto bMovable = 0xe8; // uint32_t : 1
		constexpr auto bDestroyInPainVolume = 0xe8; // uint32_t : 1
		constexpr auto bCanBeDamaged = 0xe8; // uint32_t : 1
		constexpr auto bShouldBaseAtStartup = 0xe8; // uint32_t : 1
		constexpr auto bPendingDelete = 0xe8; // uint32_t : 1
		constexpr auto bCanTeleport = 0xe8; // uint32_t : 1
		constexpr auto bAlwaysTick = 0xe8; // uint32_t : 1
		constexpr auto bBlocksNavigation = 0xe8; // uint32_t : 1
		constexpr auto BlockRigidBody = 0xec; // uint32_t : 1
		constexpr auto bCollideWhenPlacing = 0xec; // uint32_t : 1
		constexpr auto bCollideActors = 0xec; // uint32_t : 1
		constexpr auto bCollideWorld = 0xec; // uint32_t : 1
		constexpr auto bCollideComplex = 0xec; // uint32_t : 1
		constexpr auto bBlockActors = 0xec; // uint32_t : 1
		constexpr auto bProjTarget = 0xec; // uint32_t : 1
		constexpr auto bBlocksTeleport = 0xec; // uint32_t : 1
		constexpr auto bMoveIgnoresDestruction = 0xec; // uint32_t : 1
		constexpr auto bProjectileMoveSingleBlocking = 0xec; // uint32_t : 1
		constexpr auto bNoEncroachCheck = 0xec; // uint32_t : 1
		constexpr auto bCollideAsEncroacher = 0xec; // uint32_t : 1
		constexpr auto bPhysRigidBodyOutOfWorldCheck = 0xec; // uint32_t : 1
		constexpr auto bComponentOutsideWorld = 0xec; // uint32_t : 1
		constexpr auto bForceOctreeSNFilter = 0xec; // uint32_t : 1
		constexpr auto bForceOctreeMNFilter = 0xec; // uint32_t : 1
		constexpr auto bRigidBodyWasAwake = 0xec; // uint32_t : 1
		constexpr auto bCallRigidBodyWakeEvents = 0xec; // uint32_t : 1
		constexpr auto bWhitelistCollisionWarning = 0xec; // uint32_t : 1
		constexpr auto bBounce = 0xec; // uint32_t : 1
		constexpr auto bJustTeleported = 0xec; // uint32_t : 1
		constexpr auto bSupportNetIrrelevant = 0xec; // uint32_t : 1
		constexpr auto bClientSideOnly = 0xec; // uint32_t : 1
		constexpr auto bEnableMobileTouch = 0xec; // uint32_t : 1
		constexpr auto bNetInitial = 0xec; // uint32_t : 1
		constexpr auto bNetOwner = 0xec; // uint32_t : 1
		constexpr auto bNetRelevant = 0xec; // uint32_t : 1
		constexpr auto bNetAcked = 0xec; // uint32_t : 1
		constexpr auto bHiddenEd = 0xec; // uint32_t : 1
		constexpr auto bEditable = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdGroup = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdLayer = 0xec; // uint32_t : 1
		constexpr auto bHiddenEdCustom = 0xf0; // uint32_t : 1
		constexpr auto bHiddenEdTemporary = 0xf0; // uint32_t : 1
		constexpr auto bHiddenEdLevel = 0xf0; // uint32_t : 1
		constexpr auto bHiddenEdScene = 0xf0; // uint32_t : 1
		constexpr auto bEdShouldSnap = 0xf0; // uint32_t : 1
		constexpr auto bTempEditor = 0xf0; // uint32_t : 1
		constexpr auto bPathColliding = 0xf0; // uint32_t : 1
		constexpr auto bPathTemp = 0xf0; // uint32_t : 1
		constexpr auto bScriptInitialized = 0xf0; // uint32_t : 1
		constexpr auto bLockLocation = 0xf0; // uint32_t : 1
		constexpr auto bForceAllowKismetModification = 0xf0; // uint32_t : 1
		constexpr auto bReplicateBotRankId = 0xf0; // uint32_t : 1
		constexpr auto bNoTick = 0xf0; // uint32_t : 1
		constexpr auto bDebugEffectIsRelevant = 0xf0; // uint32_t : 1
		constexpr auto bUpdateHavokPos = 0xf0; // uint32_t : 1
		constexpr auto bHavokPosOnlyUseCollisionComponent = 0xf0; // uint32_t : 1
		constexpr auto c_bJustStartedTimelapsePlayback = 0xf0; // uint32_t : 1
		constexpr auto c_bJustEndedTimelapsePlayback = 0xf0; // uint32_t : 1
		constexpr auto m_bCanBaseOn = 0xf0; // uint32_t : 1
		constexpr auto m_bSupportsRelativeLocationBase = 0xf0; // uint32_t : 1
		constexpr auto m_bComplexOccluder = 0xf0; // uint32_t : 1
		constexpr auto m_bCanPlayFirstPersonAkEvent = 0xf0; // uint32_t : 1
		constexpr auto SkelMeshCompTickTag = 0xf4; // int32_t
		constexpr auto NetTag = 0xf8; // int32_t
		constexpr auto IndexInTickList = 0xfc; // int32_t
		constexpr auto LastSlowRelevancyCheckTime = 0x100; // float
		constexpr auto NetUpdateTime = 0x104; // float
		constexpr auto NetUpdateFrequency = 0x108; // float
		constexpr auto NetPriority = 0x10c; // float
		constexpr auto LastNetUpdateTime = 0x110; // float
		constexpr auto TimeSinceLastTick = 0x114; // float
		constexpr auto Instigator = 0x118; // ObjectProperty
		constexpr auto WorldInfo = 0x120; // ObjectProperty
		constexpr auto LifeSpan = 0x128; // float
		constexpr auto CreationTime = 0x12c; // float
		constexpr auto LastRenderTime = 0x130; // float
		constexpr auto Tag = 0x134; // FName
		constexpr auto InitialState = 0x13c; // FName
		constexpr auto Layer = 0x144; // FName
		constexpr auto Group = 0x14c; // FName
		constexpr auto HiddenEditorViews = 0x154; // FQWord
		constexpr auto Touching = 0x15c; // TArray<ObjectProperty>
		constexpr auto Children = 0x16c; // TArray<ObjectProperty>
		constexpr auto LatentFloat = 0x17c; // float
		constexpr auto LatentSeqNode = 0x180; // ObjectProperty
		constexpr auto PhysicsVolume = 0x188; // ObjectProperty
		constexpr auto Velocity = 0x190; // FVector
		constexpr auto Acceleration = 0x19c; // FVector
		constexpr auto AngularVelocity = 0x1a8; // FVector
		constexpr auto BaseSkelComponent = 0x1b4; // ComponentProperty
		constexpr auto BaseBoneName = 0x1bc; // FName
		constexpr auto Attached = 0x1c4; // TArray<ObjectProperty>
		constexpr auto RelativeLocation = 0x1d4; // FVector
		constexpr auto RelativeRotation = 0x1e0; // FRotator
		constexpr auto CollisionComponent = 0x1ec; // ComponentProperty
		constexpr auto OverlapTag = 0x1f4; // int32_t
		constexpr auto RotationRate = 0x1f8; // FRotator
		constexpr auto PendingTouch = 0x204; // ObjectProperty
		constexpr auto DatabaseFieldName = 0x20c; // FName
		constexpr auto MessageClass = 0x214; // ULocalMessage*
		constexpr auto BotRankId = 0x21c; // int32_t
		constexpr auto SupportedEvents = 0x220; // TArray<USequenceEvent*>
		constexpr auto GeneratedEvents = 0x230; // TArray<ObjectProperty>
		constexpr auto LatentActions = 0x240; // TArray<ObjectProperty>
		constexpr auto LocationPackedKey = 0x250; // int32_t
		constexpr auto LocationPrev = 0x254; // FVector
		constexpr auto m_fLastOcclusionCheckTime = 0x260; // float
		constexpr auto m_fOcclusionCheckInterval = 0x264; // float
		constexpr auto m_fOcclusionNormalization = 0x268; // float
		constexpr auto m_fLastOcclusionCheckLocation = 0x26c; // float
		constexpr auto m_fOcclusionCheckDist = 0x270; // float
		constexpr auto m_fOcclusionAmount = 0x274; // float
		constexpr auto m_fMaxDistForOcclusionPathfinding = 0x278; // float
		constexpr auto m_fMaxDistForOcclusionCheck = 0x27c; // float
	}

	namespace n_USeqAct_SetSkelControlTarget { // : USequenceAction
		constexpr auto SkelControlName = 0x108; // FName
		constexpr auto TargetActors = 0x110; // TArray<ObjectProperty>
	}

	namespace n_ATgAssaultPoint { // : ATgAIAnnotation
		constexpr auto AssaultPointType = 0x390; // EAssaultType
		constexpr auto LocationType = 0x391; // ELocationType
	}

	namespace n_UTgSeqAct_TutorialTips { // : USequenceAction
		constexpr auto nMsgId = 0x108; // int32_t
	}

	namespace n_UUIScene { // : UUIComponent_Display
		constexpr auto m_QueuedSounds = 0x124; // TArray<FUIQueuedSounds>
		constexpr auto m_AnimMap = 0x134; // FMap_Mirror
		constexpr auto m_Interactables = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_HeaderData = 0x18c; // TArray<ObjectProperty>
		constexpr auto m_sHeaderName = 0x19c; // FString
		constexpr auto m_FocusedGroupStack = 0x1ac; // TArray<ObjectProperty>
		constexpr auto m_bAllowDuplicateData = 0x1bc; // uint32_t : 1
		constexpr auto m_bAcceptsInput = 0x1bc; // uint32_t : 1
		constexpr auto m_bUninitializing = 0x1bc; // uint32_t : 1
		constexpr auto m_bShowHeader = 0x1bc; // uint32_t : 1
		constexpr auto m_bShowLogo = 0x1bc; // uint32_t : 1
		constexpr auto m_nSelectedHeaderTab = 0x1c0; // int32_t
		constexpr auto m_nOnBackCallbackHandle = 0x1c4; // int32_t
		constexpr auto m_nOnHeaderTabCallbackHandle = 0x1c8; // int32_t
	}

	namespace n_UUIComponent_HeaderTabsRotating { // : UUIComponent_List
		constexpr auto m_nMiddleIndex = 0x260; // int32_t
		constexpr auto m_nSelectedIndex = 0x264; // int32_t
		constexpr auto m_fButtonSpace = 0x268; // float
		constexpr auto m_fBumperSpaceLeft = 0x26c; // float
		constexpr auto m_fBumperSpaceRight = 0x270; // float
		constexpr auto m_fButtonStartX = 0x274; // float
		constexpr auto m_fButtonEndX = 0x278; // float
		constexpr auto m_mcTitleTF = 0x27c; // ObjectProperty
		constexpr auto m_mcLogo = 0x284; // ObjectProperty
		constexpr auto m_mcLogoFaded = 0x28c; // ObjectProperty
		constexpr auto m_mcBackground = 0x294; // ObjectProperty
		constexpr auto m_mcBackgroundMask = 0x29c; // ObjectProperty
		constexpr auto m_mcButtonMask = 0x2a4; // ObjectProperty
		constexpr auto m_mcSearching = 0x2ac; // ObjectProperty
		constexpr auto m_mcSearchingMask = 0x2b4; // ObjectProperty
		constexpr auto m_mcHeaderLeft = 0x2bc; // ObjectProperty
		constexpr auto m_mcHeaderRight = 0x2c4; // ObjectProperty
		constexpr auto m_pPips = 0x2cc; // ObjectProperty
		constexpr auto m_pBumpers = 0x2d4; // ObjectProperty [0x2]
		constexpr auto m_NavLeft = 0x2e4; // ObjectProperty
		constexpr auto m_NavRight = 0x2ec; // ObjectProperty
	}

	namespace n_UMaterialExpressionMultiply { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UTgAIBehaviorObject { // : UObject
		constexpr auto NodeToken = 0x60; // int32_t
	}

	namespace n_ATgLobbyCaptureActor { // : ASceneCapture2DActor
		constexpr auto m_ViewTarget = 0x290; // ObjectProperty
	}

	namespace n_ATgProj_BombBagBomb { // : ATgProj_FreeGrenade
		constexpr auto m_fMaxUndampenedZBounce = 0x580; // float
		constexpr auto m_fBounceGravityZMultiplier = 0x584; // float
	}

	namespace n_ATgProj_FuriaF { // : ATgProj_Simulated
		constexpr auto m_fRetargetingTimer = 0x52c; // float
		constexpr auto m_fRetargetTime = 0x530; // float
	}

	namespace n_UUIScene_UIHudImani { // : UUIScene
		constexpr auto m_ManaBar = 0x1cc; // ObjectProperty
		constexpr auto m_UltTimer = 0x1d4; // ObjectProperty
		constexpr auto m_mcClearcastProc = 0x1dc; // ObjectProperty
		constexpr auto m_mcClearcastProcLeft = 0x1e4; // ObjectProperty
		constexpr auto m_mcClearcastProcRight = 0x1ec; // ObjectProperty
		constexpr auto m_mcPyromania = 0x1f4; // ObjectProperty
		constexpr auto m_bHasDragonsFire = 0x1fc; // uint32_t : 1
		constexpr auto m_bClearcastActive = 0x1fc; // uint32_t : 1
		constexpr auto m_bViewTargetImani = 0x1fc; // uint32_t : 1
		constexpr auto m_nDragonsFireParity = 0x200; // int32_t
		constexpr auto m_fClearcastAnimationTime = 0x204; // float
		constexpr auto m_fClearcastAnimationOffset = 0x208; // float
		constexpr auto m_fClearcastAnimationFadeDuration = 0x20c; // float
	}

	namespace n_USeqAct_AndGate { // : USequenceAction
		constexpr auto bOpen = 0x108; // uint32_t : 1
		constexpr auto LinkedOutputFiredStatus = 0x10c; // TArray<char>
		constexpr auto LinkedOutputs = 0x11c; // TArray<FPointer>
	}

	namespace n_USkelControlLimb { // : USkelControlBase
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto JointTargetLocationSpace = 0xdd; // EBoneControlSpace
		constexpr auto JointOffsetSpace = 0xde; // EBoneControlSpace
		constexpr auto BoneAxis = 0xdf; // EAxis
		constexpr auto JointAxis = 0xe0; // EAxis
		constexpr auto EffectorSpaceBoneName = 0xe4; // FName
		constexpr auto JointTargetLocation = 0xec; // FVector
		constexpr auto JointTargetSpaceBoneName = 0xf8; // FName
		constexpr auto JointOffset = 0x100; // FVector
		constexpr auto JointOffsetBoneName = 0x10c; // FName
		constexpr auto bInvertBoneAxis = 0x114; // uint32_t : 1
		constexpr auto bInvertJointAxis = 0x114; // uint32_t : 1
		constexpr auto bRotateJoint = 0x114; // uint32_t : 1
		constexpr auto bMaintainEffectorRelRot = 0x114; // uint32_t : 1
		constexpr auto bTakeRotationFromEffectorSpace = 0x114; // uint32_t : 1
		constexpr auto bAllowStretching = 0x114; // uint32_t : 1
		constexpr auto m_bSnapEffectorToBoneLocation = 0x114; // uint32_t : 1
		constexpr auto StretchLimits = 0x118; // FVector2D
		constexpr auto StretchRollBoneName = 0x120; // FName
	}

	namespace n_AKeypoint { // : AActor
		constexpr auto SpriteComp = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_Pursuit { // : ATgDevice_DecoyMod
		constexpr auto m_fShatterBaseSpeed = 0xa08; // float
		constexpr auto m_fShatterResonanceBaseSpeed = 0xa0c; // float
	}

	namespace n_UUIComponent_HudSkillIcon_Ult { // : UUIComponent_HudSkillIcon
		constexpr auto m_mcUltimatePercent = 0x1d8; // ObjectProperty
		constexpr auto m_mcUltimateEffectBot = 0x1e0; // ObjectProperty
		constexpr auto m_mcUltimateEffectTop = 0x1e8; // ObjectProperty
		constexpr auto m_mcLazarusPulse = 0x1f0; // ObjectProperty
		constexpr auto m_scUltimateReady = 0x1f8; // ObjectProperty
		constexpr auto m_fPulseTimer = 0x200; // float
		constexpr auto m_bThirdPersonMode = 0x204; // uint32_t : 1
		constexpr auto m_bLazarusUltActive = 0x204; // uint32_t : 1
	}

	namespace n_UTgSeqEvent_MissionTimeRemaining { // : USequenceEvent
		constexpr auto SecsRemaining = 0x128; // float
	}

	namespace n_UUIComponent_NotificationCenterPatchNotes { // : UUIComponent_Display
		constexpr auto m_FeatureMap = 0x124; // TMap<None, None>
		constexpr auto m_pPatchNotesCarousel = 0x16c; // ObjectProperty
		constexpr auto m_grInput = 0x174; // ObjectProperty
	}

	namespace n_UTgChampionTickManager { // : UObject
		constexpr auto m_nCurrentFrame = 0x60; // int32_t
		constexpr auto m_nNextID = 0x64; // int32_t
		constexpr auto m_CachedPlayerController = 0x68; // ObjectProperty
		constexpr auto m_bTickThrottlingEnabled = 0x70; // uint32_t : 1
		constexpr auto m_fGuaranteedTickDistance = 0x74; // float
		constexpr auto m_nTickGroupCount = 0x78; // int32_t
		constexpr auto c_ChampionEntries = 0x7c; // TMap<None, None>
	}

	namespace n_UUIScene_UIEOMLAcquisition { // : UUIScene
		constexpr auto m_pAcquisition = 0x1cc; // ObjectProperty
		constexpr auto m_pAccountIcon = 0x1d4; // ObjectProperty
		constexpr auto m_pChampionIcon = 0x1dc; // ObjectProperty
		constexpr auto m_pQuestIcon = 0x1e4; // ObjectProperty
		constexpr auto m_pPlacementIcon = 0x1ec; // ObjectProperty
		constexpr auto m_pAcquisitionTitle = 0x1f4; // ObjectProperty
		constexpr auto m_pTitle = 0x1fc; // ObjectProperty
		constexpr auto m_pSubtitle = 0x204; // ObjectProperty
		constexpr auto m_pOpenChestCount = 0x20c; // ObjectProperty
		constexpr auto m_PurchasePrompt = 0x214; // ObjectProperty
		constexpr auto m_CancelPrompt = 0x21c; // ObjectProperty
		constexpr auto m_OpenChestPrompt = 0x224; // ObjectProperty
		constexpr auto m_pCancelButton = 0x22c; // ObjectProperty
		constexpr auto m_pPurchase = 0x234; // ObjectProperty
		constexpr auto m_pDisplayItem = 0x23c; // ObjectProperty
		constexpr auto m_pPriceA = 0x244; // ObjectProperty
		constexpr auto m_pPriceB = 0x24c; // ObjectProperty
		constexpr auto m_eQuestType = 0x254; // char
		constexpr auto m_pItemData = 0x258; // ObjectProperty
		constexpr auto m_nItemIndex = 0x260; // int32_t
		constexpr auto m_grEOML = 0x264; // ObjectProperty
		constexpr auto m_AcquisitionInput = 0x26c; // ObjectProperty
	}

	namespace n_UParticleModuleOrientationAxisLock { // : UParticleModuleOrientationBase
		constexpr auto LockAxisFlags = 0x68; // EParticleAxisLock
	}

	namespace n_ATgDevice_LongbowInhand { // : ATgDevice
		constexpr auto m_CachedLongbow = 0xa08; // ObjectProperty
		constexpr auto s_fLastFireHoldPct = 0xa10; // float
		constexpr auto m_fFireReleasePercent = 0xa14; // float
		constexpr auto m_fImpalerReticleAnimationTimer = 0xa18; // float
		constexpr auto m_fReticleReleaseAnimationDuration = 0xa1c; // float
		constexpr auto m_fImpalerReticleFadeInDuration = 0xa20; // float
		constexpr auto m_fImpalerReticleFadeOutDuration = 0xa24; // float
		constexpr auto m_fImpalerReticleGrowth = 0xa28; // float
		constexpr auto m_vProjectileSpawnOffsetPlanted = 0xa2c; // FVector
	}

	namespace n_ATgPawn_Stoker { // : ATgPawn_Viktor
		constexpr auto m_vCurrentWallRunNormal = 0x31ac; // FVector
		constexpr auto m_bIsWallRunning = 0x31b8; // uint32_t : 1
		constexpr auto r_bWantsWallRun = 0x31b8; // uint32_t : 1
		constexpr auto m_bHasDoubleJumped = 0x31b8; // uint32_t : 1
		constexpr auto m_fWallMagnetMovePerSec = 0x31bc; // float
		constexpr auto m_fWallRunStickinessDuration = 0x31c0; // float
		constexpr auto m_fWallRunStickinessTimer = 0x31c4; // float
		constexpr auto m_fWallRunLockoutJumpDuration = 0x31c8; // float
		constexpr auto m_fWallRunLockoutJumpTimer = 0x31cc; // float
		constexpr auto m_fWallJumpZSpeed = 0x31d0; // float
		constexpr auto m_fDoubleJumpZSpeed = 0x31d4; // float
		constexpr auto m_fNewWallAllowableRunAngle = 0x31d8; // float
		constexpr auto m_fWallRunTime = 0x31dc; // float
	}

	namespace n_UTgAIBehaviorCondition_Timer { // : UTgAIBehaviorCondition
		constexpr auto TimerLength = 0x98; // float
	}

	namespace n_ATgHelpTipActor { // : AActor
		constexpr auto m_strTitle = 0x280; // FString
		constexpr auto m_strTip = 0x290; // FString
		constexpr auto m_nGameTipId = 0x2a0; // int32_t
		constexpr auto m_fAlpha = 0x2a4; // float
		constexpr auto m_fAlphaNearDistanceSq = 0x2a8; // float
		constexpr auto m_fAlphaFarDistanceSq = 0x2ac; // float
	}

	namespace n_UUIComponent_EntryToggle { // : UUIComponent_Display
		constexpr auto m_bActive = 0x124; // uint32_t : 1
		constexpr auto m_bAllIsWell = 0x124; // uint32_t : 1
		constexpr auto m_mcText = 0x128; // ObjectProperty
		constexpr auto m_mcToggle = 0x130; // ObjectProperty
		constexpr auto m_Button = 0x138; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_Rider { // : ATgWeaponMeshActor
		constexpr auto m_LeftHead = 0x450; // ComponentProperty
		constexpr auto m_RightHead = 0x458; // ComponentProperty
		constexpr auto m_vLeftHeadTranslation = 0x460; // FVector
		constexpr auto m_vRightHeadTranslation = 0x46c; // FVector
		constexpr auto m_vLookDownTranslation = 0x478; // FVector
		constexpr auto m_vLookUpTranslation = 0x484; // FVector
		constexpr auto m_rLeftHeadRotation = 0x490; // FRotator
		constexpr auto m_rRightHeadRotation = 0x49c; // FRotator
		constexpr auto m_rLookDownRotation = 0x4a8; // FRotator
		constexpr auto m_rLookUpRotation = 0x4b4; // FRotator
		constexpr auto m_fHeadFOV = 0x4c0; // float
		constexpr auto m_BodyMesh = 0x4c4; // ComponentProperty
		constexpr auto m_BodyMeshMat = 0x4cc; // ObjectProperty
		constexpr auto m_bBodyMeshMatApplied = 0x4d4; // uint32_t : 1
		constexpr auto m_vBodyScale = 0x4d8; // FVector
		constexpr auto m_vBodyTranslation = 0x4e4; // FVector
		constexpr auto m_vLookDownBodyTranslation = 0x4f0; // FVector
		constexpr auto m_fLastRotation = 0x4fc; // float
		constexpr auto m_fMaxRotationLag = 0x500; // float
		constexpr auto m_fRotationLag = 0x504; // float
		constexpr auto m_fRotationLagRecoveryRate = 0x508; // float
	}

	namespace n_UUIComponent_StoreItemTab { // : UUIComponent_Display
		constexpr auto m_nVisible = 0x124; // int32_t
		constexpr auto m_nTotal = 0x128; // int32_t
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcTitle = 0x134; // ObjectProperty
		constexpr auto m_mcCount = 0x13c; // ObjectProperty
		constexpr auto m_mcSelectedIcon = 0x144; // ObjectProperty
		constexpr auto m_mcSelectedTitle = 0x14c; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_MirrorPetDamageToHeal { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_CachedFiremode = 0xcc; // ObjectProperty
	}

	namespace n_UTgMinimapManager { // : UObject
		constexpr auto m_LocalTeam = 0x60; // TgMapTeam
		constexpr auto m_EntityMap = 0x64; // TMap<None, None>
		constexpr auto m_bShouldDisableVisionRange = 0xac; // uint32_t : 1
		constexpr auto m_bSkipWorldGeometryLOS = 0xac; // uint32_t : 1
		constexpr auto m_bRequiresVisionUpdate = 0xac; // uint32_t : 1
		constexpr auto m_fFogOfWarAreaRevealTime = 0xb0; // float
		constexpr auto m_fUpdateTimer = 0xb4; // float
		constexpr auto m_fLastEntityUpdateTime = 0xb8; // float
		constexpr auto m_ReferencedRepInfos = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_ATgGame_Paladins_CrazyKing { // : ATgGame_Paladins
		constexpr auto m_fSetupDuration = 0x868; // float
		constexpr auto m_fRoundDuration = 0x86c; // float
		constexpr auto m_CapturePoints = 0x870; // TArray<ObjectProperty>
		constexpr auto m_nCurrentActivePointIndex = 0x880; // int32_t
		constexpr auto m_nLastActivePointIndex = 0x884; // int32_t
		constexpr auto m_currentActiveCapturePoint = 0x888; // ObjectProperty
		constexpr auto m_fMaxDistanceBetweenConsecutivePoints = 0x890; // float
	}

	namespace n_UCameraAnimInst { // : UObject
		constexpr auto CamAnim = 0x60; // ObjectProperty
		constexpr auto InterpGroupInst = 0x68; // ObjectProperty
		constexpr auto CurTime = 0x70; // float
		constexpr auto bLooping = 0x74; // uint32_t : 1
		constexpr auto bFinished = 0x74; // uint32_t : 1
		constexpr auto bAutoReleaseWhenFinished = 0x74; // uint32_t : 1
		constexpr auto bPropertiesRelativeToBase = 0x74; // uint32_t : 1
		constexpr auto bBlendingIn = 0x74; // uint32_t : 1
		constexpr auto bBlendingOut = 0x74; // uint32_t : 1
		constexpr auto BlendInTime = 0x78; // float
		constexpr auto BlendOutTime = 0x7c; // float
		constexpr auto CurBlendInTime = 0x80; // float
		constexpr auto CurBlendOutTime = 0x84; // float
		constexpr auto PlayRate = 0x88; // float
		constexpr auto BasePlayScale = 0x8c; // float
		constexpr auto TransientScaleModifier = 0x90; // float
		constexpr auto CurrentBlendWeight = 0x94; // float
		constexpr auto RemainingTime = 0x98; // float
		constexpr auto MoveTrack = 0x9c; // ObjectProperty
		constexpr auto MoveInst = 0xa4; // ObjectProperty
		constexpr auto SourceAnimNode = 0xac; // ObjectProperty
		constexpr auto PlaySpace = 0xb4; // ECameraAnimPlaySpace
		constexpr auto UserPlaySpaceMatrix = 0xc0; // FMatrix
		constexpr auto LastPPSettings = 0x100; // FPostProcessSettings
		constexpr auto LastPPSettingsAlpha = 0x280; // float
		constexpr auto LastCameraLoc = 0x284; // FVector
	}

	namespace n_ATgProj_ShadowStickyBomb { // : ATgProj_Simulated
		constexpr auto m_CachedTargetImpact = 0x52c; // FImpactInfo
		constexpr auto prevHitTarget = 0x5a8; // ObjectProperty
		constexpr auto m_pStickyProp = 0x5b0; // ObjectProperty
		constexpr auto m_bHasMadeContact = 0x5b8; // uint32_t : 1
		constexpr auto m_fExplodeDelay = 0x5bc; // float
		constexpr auto m_fNormalOffsetMultiplier = 0x5c0; // float
		constexpr auto m_fMaxAcceptableBulletToTargetDist = 0x5c4; // float
	}

	namespace n_UGameExplosionContent { // : UObject
		constexpr auto bAutoControllerVibration = 0x60; // uint32_t : 1
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // uint32_t : 1
		constexpr auto ExplosionSound = 0x64; // ObjectProperty
		constexpr auto CamShake = 0x6c; // ObjectProperty
		constexpr auto CamShake_Left = 0x74; // ObjectProperty
		constexpr auto CamShake_Right = 0x7c; // ObjectProperty
		constexpr auto CamShake_Rear = 0x84; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x8c; // float
		constexpr auto CamShakeOuterRadius = 0x90; // float
		constexpr auto CamShakeFalloff = 0x94; // float
		constexpr auto CameraLensEffect = 0x98; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0xa0; // float
		constexpr auto ExploLight = 0xa4; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xac; // float
		constexpr auto ExploRadialBlur = 0xb0; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0xb8; // float
		constexpr auto ExploRadialBlurMaxBlur = 0xbc; // float
		constexpr auto ParticleEmitterTemplate = 0xc0; // ObjectProperty
		constexpr auto FogVolumeArchetype = 0xc8; // ObjectProperty
	}

	namespace n_UActorFactoryDecal { // : UActorFactory
		constexpr auto DecalMaterial = 0x9c; // ObjectProperty
	}

	namespace n_UUIData_TreasureRoll_Item { // : UUIData
		constexpr auto m_pRolledItem = 0x64; // ObjectProperty
		constexpr auto m_dwRolledItemQuantity = 0x6c; // Fdword
		constexpr auto m_pReplacementItem = 0x70; // ObjectProperty
		constexpr auto m_dwReplacementItemQuantity = 0x78; // Fdword
		constexpr auto m_bIsUnreceivedBoostedItem = 0x7c; // uint32_t : 1
		constexpr auto m_pRolledSubItems = 0x80; // TArray<ObjectProperty>
		constexpr auto m_pSubItemReplacementAggregate = 0x90; // ObjectProperty
	}

	namespace n_UUIData_LastDamageDone { // : UUIData
		constexpr auto m_dwTotalDamage = 0x64; // Fdword
		constexpr auto m_dwTotalKills = 0x68; // Fdword
		constexpr auto m_dwKills = 0x6c; // Fdword
		constexpr auto m_dwSoloKills = 0x70; // Fdword
		constexpr auto m_bKillingBlow = 0x74; // uint32_t : 1
		constexpr auto m_dwSourcePlayerId = 0x78; // Fdword
		constexpr auto m_dwSourceProfileId = 0x7c; // Fdword
		constexpr auto m_dwSourceSkinId = 0x80; // Fdword
		constexpr auto m_dtTime = 0x84; // FDouble
		constexpr auto m_sSourcePlayerName = 0x8c; // FString
		constexpr auto m_pDamageInstances = 0x9c; // TArray<ObjectProperty>
	}

	namespace n_ATgDeploy_EffectSpots { // : ATgDeploy_MatchParentFireMode
		constexpr auto r_EffectSpots = 0x46c; // FEffectSpotInfo [0x64]
		constexpr auto m_nNewSpotIndex = 0x159c; // int32_t
		constexpr auto m_CollisionProxy = 0x15a0; // ObjectProperty
		constexpr auto m_fFirstPassRadius = 0x15a8; // float
		constexpr auto m_TouchingActors = 0x15ac; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0x15bc; // TArray<FEffectSpotTarget>
		constexpr auto m_bUsesEffectRefresh = 0x15cc; // uint32_t : 1
		constexpr auto m_fLastRefreshTime = 0x15d0; // float
		constexpr auto m_fMinRefreshTime = 0x15d4; // float
		constexpr auto c_SpotFX = 0x15d8; // FEffectSpotFXInfo [0x64]
	}

	namespace n_UFogVolumeLinearHalfspaceDensityComponent { // : UFogVolumeDensityComponent
		constexpr auto PlaneDistanceFactor = 0xe0; // float
		constexpr auto HalfspacePlane = 0xf0; // FPlane
	}

	namespace n_ATgDevice_Pounce { // : ATgDevice_Charge
		constexpr auto m_CachedBlades = 0xa7c; // ObjectProperty
		constexpr auto m_bHasBounced = 0xa84; // uint32_t : 1
	}

	namespace n_UTgGamePhase_UltAcceleration { // : UTgGamePhase
		constexpr auto m_fUltChargeRate = 0xb8; // float
	}

	namespace n_UTgControlModule_TopDown { // : UTgControlModule_Spectator
		constexpr auto DefaultStartHeight = 0x78; // float
	}

	namespace n_ATgProj_IceStorm { // : ATgProj_Simulated
		constexpr auto m_bStopped = 0x52c; // uint32_t : 1
		constexpr auto m_bCheckLOSForHit = 0x52c; // uint32_t : 1
	}

	namespace n_UMaterialExpressionConstant3Vector { // : UMaterialExpression
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
	}

	namespace n_UTgDeviceForm_Scope { // : UTgDeviceForm_ToggleWithLockout
		constexpr auto m_fTransitionAmount = 0x28c; // float
		constexpr auto m_fTransitionPerSec = 0x290; // float
	}

	namespace n_ATgDevice_ChurchillTurret { // : ATgDevice
		constexpr auto m_CachedChurchill = 0xa08; // ObjectProperty
	}

	namespace n_UUIComponent_DruidGuardianInfo { // : UUIComponent_Display
		constexpr auto m_mcStun = 0x124; // ObjectProperty
		constexpr auto m_StunCD = 0x12c; // ObjectProperty
		constexpr auto m_Health = 0x134; // ObjectProperty
		constexpr auto m_CachedDruid = 0x13c; // ObjectProperty
		constexpr auto m_bUIStunRushInCooldown = 0x144; // uint32_t : 1
		constexpr auto m_bIsVisible = 0x144; // uint32_t : 1
		constexpr auto m_fUIStunRushCooldownTimeLeft = 0x148; // float
		constexpr auto m_fUIStunRushCooldownTimeTotal = 0x14c; // float
		constexpr auto m_nLastUIStunRushNonce = 0x150; // int32_t
		constexpr auto m_nLastFoxActivityNonce = 0x154; // int32_t
		constexpr auto m_fFoxActivityPingCooldown = 0x158; // float
		constexpr auto m_fFoxActivityPingCooldownTotal = 0x15c; // float
	}

	namespace n_ATgGame_Paladins_PVETDM { // : ATgGame_Paladins
		constexpr auto m_fSetupDuration = 0x868; // float
	}

	namespace n_APhysicsVolume { // : AVolume
		constexpr auto ZoneVelocity = 0x2bc; // FVector
		constexpr auto bVelocityAffectsWalking = 0x2c8; // uint32_t : 1
		constexpr auto bPainCausing = 0x2c8; // uint32_t : 1
		constexpr auto bAIShouldIgnorePain = 0x2c8; // uint32_t : 1
		constexpr auto bEntryPain = 0x2c8; // uint32_t : 1
		constexpr auto BACKUP_bPainCausing = 0x2c8; // uint32_t : 1
		constexpr auto bDestructive = 0x2c8; // uint32_t : 1
		constexpr auto bNoInventory = 0x2c8; // uint32_t : 1
		constexpr auto bMoveProjectiles = 0x2c8; // uint32_t : 1
		constexpr auto bBounceVelocity = 0x2c8; // uint32_t : 1
		constexpr auto bNeutralZone = 0x2c8; // uint32_t : 1
		constexpr auto bCrowdAgentsPlayDeathAnim = 0x2c8; // uint32_t : 1
		constexpr auto bPhysicsOnContact = 0x2c8; // uint32_t : 1
		constexpr auto bWaterVolume = 0x2c8; // uint32_t : 1
		constexpr auto m_bIsElevating = 0x2c8; // uint32_t : 1
		constexpr auto m_bClampPawnVelocity = 0x2c8; // uint32_t : 1
		constexpr auto GroundFriction = 0x2cc; // float
		constexpr auto TerminalVelocity = 0x2d0; // float
		constexpr auto DamagePerSec = 0x2d4; // float
		constexpr auto DamageType = 0x2d8; // UDamageType*
		constexpr auto Priority = 0x2e0; // int32_t
		constexpr auto FluidFriction = 0x2e4; // float
		constexpr auto PainInterval = 0x2e8; // float
		constexpr auto RigidBodyDamping = 0x2ec; // float
		constexpr auto MaxDampingForce = 0x2f0; // float
		constexpr auto PainTimer = 0x2f4; // ObjectProperty
		constexpr auto DamageInstigator = 0x2fc; // ObjectProperty
		constexpr auto NextPhysicsVolume = 0x304; // ObjectProperty
		constexpr auto m_fClampedPawnVelocity = 0x30c; // FVector2D
	}

	namespace n_UParticleModuleRotationOverLifetime { // : UParticleModuleRotationBase
		constexpr auto RotationOverLife = 0x68; // FRawDistributionFloat
		constexpr auto Scale = 0x8c; // uint32_t : 1
	}

	namespace n_UTgSeqAct_SetLobbyMeshSkin { // : USequenceAction
		constexpr auto m_nMessageSkinId = 0x108; // int32_t
		constexpr auto m_nMessageDeviceSkinId = 0x10c; // int32_t
		constexpr auto m_nSkinId = 0x110; // int32_t
		constexpr auto m_nDeviceSkinId = 0x114; // int32_t
	}

	namespace n_UPComPictureInPicture { // : UObject
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto Scene = 0x68; // ObjectProperty
		constexpr auto RenderTargetToUse = 0x70; // ObjectProperty
		constexpr auto ViewDescs = 0x78; // TArray<FPComPipViewDesc>
		constexpr auto bEnableDebugRendering = 0x88; // uint32_t : 1
		constexpr auto CurrentOffset = 0x8c; // FVector2D
		constexpr auto CurrentScaling = 0x94; // FVector2D
	}

	namespace n_UUIData_LeaderboardPlayer { // : UUIData
		constexpr auto sName = 0x64; // FString
		constexpr auto qwPortalUserId = 0x74; // FQWord
		constexpr auto fRank = 0x7c; // float
		constexpr auto nLevel = 0x80; // int32_t
		constexpr auto nWins = 0x84; // int32_t
		constexpr auto nLosses = 0x88; // int32_t
		constexpr auto nPerk = 0x8c; // int32_t
		constexpr auto nRegion = 0x90; // int32_t
		constexpr auto nTitle = 0x94; // int32_t
		constexpr auto nPosition = 0x98; // int32_t
		constexpr auto pChampion = 0x9c; // ObjectProperty
	}

	namespace n_UMaterialExpressionDeriveNormalZ { // : UMaterialExpression
		constexpr auto InXY = 0xb0; // FExpressionInput
	}

	namespace n_ATgPawn_SiegeEngine_Wedge { // : ATgPawn_SiegeEngine_CaptureAndPayload
		constexpr auto m_nCollisionMeshId = 0x30d4; // int32_t
	}

	namespace n_UTgGfxScene { // : UGFxObject
		constexpr auto m_UISceneClass = 0x104; // UObject*
		constexpr auto m_UIScene = 0x10c; // ObjectProperty
		constexpr auto m_OptionList = 0x114; // TArray<GFXOPTION>
		constexpr auto m_DisplayData = 0x124; // TArray<FUIDisplayData>
		constexpr auto m_Blockers = 0x134; // TArray<ObjectProperty>
		constexpr auto m_Prompts = 0x144; // TArray<ObjectProperty>
		constexpr auto m_ePromptAlignment = 0x154; // UIALIGNINGTYPE
		constexpr auto m_eScalingType = 0x155; // UISCALINGTYPE
		constexpr auto m_eSnappingType = 0x156; // UISNAPPINGTYPE
		constexpr auto m_eAligningType = 0x157; // UIALIGNINGTYPE
		constexpr auto m_fPromptOffsetX = 0x158; // float
		constexpr auto m_nHighlight = 0x15c; // int32_t
		constexpr auto m_nSelectCount = 0x160; // int32_t
		constexpr auto m_nBackground = 0x164; // int32_t
		constexpr auto m_bBlur = 0x168; // uint32_t : 1
		constexpr auto m_bBlurForeground = 0x168; // uint32_t : 1
		constexpr auto m_bReshow = 0x168; // uint32_t : 1
		constexpr auto m_bHidden = 0x168; // uint32_t : 1
		constexpr auto m_bDisable = 0x168; // uint32_t : 1
		constexpr auto m_bInitData = 0x168; // uint32_t : 1
		constexpr auto m_bVisibleOnLoad = 0x168; // uint32_t : 1
		constexpr auto m_bPushContextOnLoad = 0x168; // uint32_t : 1
		constexpr auto m_bResetFocusOnShow = 0x168; // uint32_t : 1
		constexpr auto m_bResetHeaderFocusOnShow = 0x168; // uint32_t : 1
		constexpr auto m_bResize = 0x168; // uint32_t : 1
		constexpr auto m_bIsPopup = 0x168; // uint32_t : 1
		constexpr auto m_bDead = 0x168; // uint32_t : 1
		constexpr auto m_bAlwaysTick = 0x168; // uint32_t : 1
		constexpr auto m_bAllowSpectatorClickThru = 0x168; // uint32_t : 1
		constexpr auto m_bShowCursor = 0x168; // uint32_t : 1
		constexpr auto m_bCaptureKeys = 0x168; // uint32_t : 1
		constexpr auto m_bConsumeMotion = 0x168; // uint32_t : 1
		constexpr auto m_bRequiresFullInstall = 0x168; // uint32_t : 1
		constexpr auto m_bIsOnline = 0x168; // uint32_t : 1
		constexpr auto m_bCanShake = 0x168; // uint32_t : 1
		constexpr auto m_bShouldShake = 0x168; // uint32_t : 1
		constexpr auto m_bAlwaysKeepOpen = 0x168; // uint32_t : 1
		constexpr auto m_bAllowMultipleOnStack = 0x168; // uint32_t : 1
		constexpr auto m_bAllowLeaveQueueKey = 0x168; // uint32_t : 1
		constexpr auto m_bHasBeenUninitialized = 0x168; // uint32_t : 1
		constexpr auto m_fScaling = 0x16c; // float
		constexpr auto m_fScale = 0x170; // float
		constexpr auto m_fDeltaTime = 0x174; // float
		constexpr auto m_CachedPosition = 0x178; // FVector2D
		constexpr auto m_fThrowAwayX = 0x180; // float
		constexpr auto m_fThrowAwayY = 0x184; // float
		constexpr auto m_scShown = 0x188; // ObjectProperty
		constexpr auto m_scHighlight = 0x190; // ObjectProperty
		constexpr auto m_nEventFunc = 0x198; // int32_t
		constexpr auto m_nEventType = 0x19c; // int32_t
		constexpr auto m_nEventIndex = 0x1a0; // int32_t
		constexpr auto m_pFocus = 0x1a4; // ObjectProperty
		constexpr auto m_pData = 0x1ac; // ObjectProperty
		constexpr auto m_pMovie = 0x1b4; // ObjectProperty
		constexpr auto m_pUIData = 0x1bc; // ObjectProperty
		constexpr auto m_mcHeaderBumper = 0x1c4; // ObjectProperty [0x2]
		constexpr auto m_grHeader = 0x1d4; // ObjectProperty
		constexpr auto __DelegateEvent__Delegate = 0x1dc; // DelegateProperty
	}

	namespace n_UAnimNodeScalePlayRate { // : UAnimNodeBlendBase
		constexpr auto ScaleByValue = 0x114; // float
	}

	namespace n_UTgDeviceForm_ArcingBeam { // : UTgDeviceForm
		constexpr auto m_ArcingBeamList = 0x28c; // TArray<FArcingFXInfo>
		constexpr auto m_BeamSourceActor = 0x29c; // ObjectProperty
		constexpr auto m_fBeamPersistTime = 0x2a4; // float
		constexpr auto m_nBeamEffectID = 0x2a8; // int32_t
	}

	namespace n_UTgDeviceForm_ImaniInhandFrost { // : UTgDeviceForm
		constexpr auto m_DualFireStanceNodes1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_DualFireStanceNodes3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionMaterialFunctionCall { // : UMaterialExpression
		constexpr auto MaterialFunction = 0xb0; // ObjectProperty
		constexpr auto FunctionInputs = 0xb8; // TArray<FFunctionExpressionInput>
		constexpr auto FunctionOutputs = 0xc8; // TArray<FFunctionExpressionOutput>
	}

	namespace n_ATgDevice_YagoChargeUp { // : ATgDevice_Charge
		constexpr auto m_YagoTravelDevice = 0xa7c; // ObjectProperty
		constexpr auto m_fPerActorHitPeriod = 0xa84; // float
	}

	namespace n_ATgProj_FreeGrenade { // : ATgProj_Simulated
		constexpr auto m_bShieldTouched = 0x52c; // uint32_t : 1
		constexpr auto m_bTimerExplodeDisabled = 0x52c; // uint32_t : 1
		constexpr auto m_bExplodeOnTouch = 0x52c; // uint32_t : 1
		constexpr auto m_bExplodeOnGeometry = 0x52c; // uint32_t : 1
		constexpr auto m_bExplodeOnFloor = 0x52c; // uint32_t : 1
		constexpr auto m_bUseBilinearInterpolationForBounceDamping = 0x52c; // uint32_t : 1
		constexpr auto m_bUseGravityZOverride = 0x52c; // uint32_t : 1
		constexpr auto m_TouchedShield = 0x530; // ObjectProperty
		constexpr auto m_fToleranceZ = 0x538; // float
		constexpr auto m_fBounceDampingVertMin = 0x53c; // float
		constexpr auto m_fBounceDampingVertMax = 0x540; // float
		constexpr auto m_fBounceDampingHorizMin = 0x544; // float
		constexpr auto m_fBounceDampingHorizMax = 0x548; // float
		constexpr auto m_fBounceDamping = 0x54c; // float
		constexpr auto m_fSpeedToActivateBounceFX = 0x550; // float
		constexpr auto m_fGravityZOverride = 0x554; // float
		constexpr auto m_nBounceCount = 0x558; // int32_t
		constexpr auto m_nBouncesToExplode = 0x55c; // int32_t
		constexpr auto m_fBounceDistinctionDuration = 0x560; // float
		constexpr auto m_fLastBounceTime = 0x564; // int32_t
		constexpr auto m_vRecentHitNormal = 0x568; // FVector
		constexpr auto m_fRecentHitTime = 0x574; // float
		constexpr auto m_fDelayPredictStartLocPing = 0x578; // float
		constexpr auto m_fBounceFlashThreshold = 0x57c; // float
	}

	namespace n_UInterpTrackInstFloatParticleParam { // : UInterpTrackInst
		constexpr auto ResetFloat = 0x60; // float
	}

	namespace n_UUIComponent_BattlePassChallenges { // : UUIComponent_Display
		constexpr auto m_mcCapstone = 0x124; // ObjectProperty
		constexpr auto m_mcCapstoneTF = 0x12c; // ObjectProperty
		constexpr auto m_mcCapstoneBG = 0x134; // ObjectProperty
		constexpr auto m_pChallengeLarge = 0x13c; // ObjectProperty
		constexpr auto m_pScrollUpAction = 0x144; // ObjectProperty
		constexpr auto m_pScrollDownAction = 0x14c; // ObjectProperty
		constexpr auto m_pNavUpAction = 0x154; // ObjectProperty
		constexpr auto m_pNavDownAction = 0x15c; // ObjectProperty
	}

	namespace n_ADecalManager { // : AActor
		constexpr auto DecalTemplate = 0x280; // ComponentProperty
		constexpr auto PoolDecals = 0x288; // TArray<ComponentProperty>
		constexpr auto DecalLifeSpan = 0x298; // float
		constexpr auto DecalDepthBias = 0x29c; // float
		constexpr auto OrbisDecalDepthBias = 0x2a0; // float
		constexpr auto DecalBlendRange = 0x2a4; // FVector2D
		constexpr auto ActiveDecals = 0x2ac; // TArray<FActiveDecalInfo>
	}

	namespace n_USequence { // : USequenceOp
		constexpr auto LogFile = 0xec; // FPointer
		constexpr auto SequenceObjects = 0xf4; // TArray<ObjectProperty>
		constexpr auto ActiveSequenceOps = 0x104; // TArray<ObjectProperty>
		constexpr auto NestedSequences = 0x114; // TArray<ObjectProperty>
		constexpr auto UnregisteredEvents = 0x124; // TArray<ObjectProperty>
		constexpr auto DelayedActivatedOps = 0x134; // TArray<FActivateOp>
		constexpr auto DelayedLatentOps = 0x144; // TArray<ObjectProperty>
		constexpr auto bEnabled = 0x154; // uint32_t : 1
		constexpr auto QueuedActivations = 0x158; // TArray<FQueuedActivationInfo>
		constexpr auto DefaultViewX = 0x168; // int32_t
		constexpr auto DefaultViewY = 0x16c; // int32_t
		constexpr auto DefaultViewZoom = 0x170; // float
	}

	namespace n_USeqAct_SubtractFloat { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UParticleModule { // : UObject
		constexpr auto bSpawnModule = 0x60; // uint32_t : 1
		constexpr auto bUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bFinalUpdateModule = 0x60; // uint32_t : 1
		constexpr auto bCurvesAsColor = 0x60; // uint32_t : 1
		constexpr auto b3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bSupported3DDrawMode = 0x60; // uint32_t : 1
		constexpr auto bEnabled = 0x60; // uint32_t : 1
		constexpr auto bEditable = 0x60; // uint32_t : 1
		constexpr auto LODDuplicate = 0x60; // uint32_t : 1
		constexpr auto bSupportsRandomSeed = 0x60; // uint32_t : 1
		constexpr auto bRequiresLoopingNotification = 0x60; // uint32_t : 1
		constexpr auto LODValidity = 0x64; // char
	}

	namespace n_UTgAnimNodeBlendBySimpleStance { // : UTgAnimNodeBlendList
		constexpr auto m_nCurrentStance = 0x168; // int32_t
	}

	namespace n_UTgSkelCon_OscillateTranslation { // : USkelControlSingleBone
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationAxis = 0x108; // FVector
		constexpr auto OscillationAxisSpace = 0x114; // EBoneControlSpace
		constexpr auto OscillationAxisSpaceBoneName = 0x118; // FName
		constexpr auto Theta = 0x120; // float
	}

	namespace n_UTgSeqAct_SetPlayerMesh { // : USequenceAction
		constexpr auto m_nMeshAsmId = 0x108; // int32_t
	}

	namespace n_UTgSeqEvent_PlayerMoved { // : USequenceEvent
		constexpr auto ResultEnergy = 0x128; // int32_t
	}

	namespace n_UTgAnimBlendByHeadSkin { // : UTgAnimNodeBlendList
		constexpr auto m_SkinMap = 0x168; // TArray<FHeadSkinChildInfo>
	}

	namespace n_ATgDevice_Prowl { // : ATgDevice_Stim
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto __InterruptFiringDelegate__Delegate = 0xa10; // DelegateProperty
	}

	namespace n_ATgKismetTestActor { // : ADynamicSMActor
		constexpr auto m_nTestCount = 0x2d0; // int32_t
		constexpr auto r_nCurrentTest = 0x2d4; // int32_t
		constexpr auto r_nPassCount = 0x2d8; // int32_t
		constexpr auto r_nFailCount = 0x2dc; // int32_t
		constexpr auto c_aTextures = 0x2e0; // TArray<ObjectProperty>
		constexpr auto c_PassSound = 0x2f0; // ObjectProperty
		constexpr auto c_FailSound = 0x2f8; // ObjectProperty
		constexpr auto c_aResultActors = 0x300; // TArray<ObjectProperty>
	}

	namespace n_UAkEvent { // : UAkBaseSoundObject
		constexpr auto RequiredBank = 0x60; // ObjectProperty
		constexpr auto m_FirstPersonEvent = 0x68; // ObjectProperty
		constexpr auto m_ShutdownEvent = 0x70; // ObjectProperty
		constexpr auto m_bIgnoreOcclusion = 0x78; // uint32_t : 1
		constexpr auto m_bForce1pAnd3p = 0x78; // uint32_t : 1
	}

	namespace n_UGFxMoviePlayer { // : UObject
		constexpr auto pMovie = 0x60; // FPointer
		constexpr auto pCaptureKeys = 0x68; // FPointer
		constexpr auto pFocusIgnoreKeys = 0x70; // FPointer
		constexpr auto ASUClasses = 0x78; // TMap<None, None>
		constexpr auto ASUObjects = 0xc0; // TMap<None, None>
		constexpr auto NextASUObject = 0x108; // int32_t
		constexpr auto MovieInfo = 0x10c; // ObjectProperty
		constexpr auto bMovieIsOpen = 0x114; // uint32_t : 1
		constexpr auto bDisplayWithHudOff = 0x114; // uint32_t : 1
		constexpr auto bEnableGammaCorrection = 0x114; // uint32_t : 1
		constexpr auto bWidgetsInitializedThisFrame = 0x114; // uint32_t : 1
		constexpr auto bLogUnhandedWidgetInitializations = 0x114; // uint32_t : 1
		constexpr auto bAllowInput = 0x114; // uint32_t : 1
		constexpr auto bAllowFocus = 0x114; // uint32_t : 1
		constexpr auto bAutoPlay = 0x114; // uint32_t : 1
		constexpr auto bPauseGameWhileActive = 0x114; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x114; // uint32_t : 1
		constexpr auto bCaptureWorldRendering = 0x114; // uint32_t : 1
		constexpr auto bCloseOnLevelChange = 0x114; // uint32_t : 1
		constexpr auto bOnlyOwnerFocusable = 0x114; // uint32_t : 1
		constexpr auto bForceFullViewport = 0x114; // uint32_t : 1
		constexpr auto bDiscardNonOwnerInput = 0x114; // uint32_t : 1
		constexpr auto bCaptureInput = 0x114; // uint32_t : 1
		constexpr auto bCaptureMouseInput = 0x114; // uint32_t : 1
		constexpr auto bIgnoreMouseInput = 0x114; // uint32_t : 1
		constexpr auto bIsSplitscreenLayoutModified = 0x114; // uint32_t : 1
		constexpr auto bShowHardwareMouseCursor = 0x114; // uint32_t : 1
		constexpr auto bBlurLesserMovies = 0x114; // uint32_t : 1
		constexpr auto bHideLesserMovies = 0x114; // uint32_t : 1
		constexpr auto bIsPriorityBlurred = 0x114; // uint32_t : 1
		constexpr auto bIsPriorityHidden = 0x114; // uint32_t : 1
		constexpr auto bIgnoreVisibilityEffect = 0x114; // uint32_t : 1
		constexpr auto bIgnoreBlurEffect = 0x114; // uint32_t : 1
		constexpr auto RenderTexture = 0x118; // ObjectProperty
		constexpr auto LocalPlayerOwnerIndex = 0x120; // int32_t
		constexpr auto ExternalInterface = 0x124; // ObjectProperty
		constexpr auto CaptureKeys = 0x12c; // TArray<FName>
		constexpr auto FocusIgnoreKeys = 0x13c; // TArray<FName>
		constexpr auto ExternalTextures = 0x14c; // TArray<FExternalTexture>
		constexpr auto SoundThemes = 0x15c; // TArray<FSoundThemeBinding>
		constexpr auto TimingMode = 0x16c; // GFxTimingMode
		constexpr auto RenderTextureMode = 0x16d; // GFxRenderTextureMode
		constexpr auto Priority = 0x16e; // char
		constexpr auto WidgetBindings = 0x170; // TArray<FGFxWidgetBinding>
		constexpr auto WidgetPathBindings = 0x180; // TMap<None, None>
		constexpr auto SplitscreenLayoutObject = 0x1c8; // ObjectProperty
		constexpr auto SplitscreenLayoutYAdjust = 0x1d0; // int32_t
		constexpr auto m_StoredViewportParams = 0x1d4; // FGFxStoredViewportParams
		constexpr auto __OnPostAdvance__Delegate = 0x1e8; // DelegateProperty
	}

	namespace n_UUIRoot { // : UObject
		constexpr auto BadCapsLocContexts = 0x60; // TArray<FString>
	}

	namespace n_USoundClass { // : UObject
		constexpr auto Properties = 0x60; // FSoundClassProperties
		constexpr auto ChildClassNames = 0x90; // TArray<FName>
		constexpr auto bIsChild = 0xa0; // uint32_t : 1
		constexpr auto EditorData = 0xa4; // TMap<None, None>
	}

	namespace n_UMaterialExpressionSphereMask { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Radius = 0x118; // FExpressionInput
		constexpr auto Hardness = 0x14c; // FExpressionInput
		constexpr auto AttenuationRadius = 0x180; // float
		constexpr auto HardnessPercent = 0x184; // float
	}

	namespace n_ATgPawn_Corrupter { // : ATgPawn_Character
		constexpr auto m_SpinDevice = 0x3164; // ObjectProperty
		constexpr auto m_InHandDevice = 0x316c; // ObjectProperty
		constexpr auto m_CachedLatch = 0x3174; // ObjectProperty
		constexpr auto m_CorruptionPassive = 0x317c; // ObjectProperty
		constexpr auto m_UltDevice = 0x3184; // ObjectProperty
		constexpr auto r_nCorruptionStacks = 0x318c; // int32_t
		constexpr auto nMaxCorruption = 0x3190; // int32_t
		constexpr auto nAmountToHealPerStack = 0x3194; // int32_t
		constexpr auto c_nPoolMeshID = 0x3198; // int32_t
		constexpr auto c_nNormalMeshID = 0x319c; // int32_t
		constexpr auto m_PreviousZHeight = 0x31a0; // float
		constexpr auto m_GravityMultiplier = 0x31a4; // float
		constexpr auto m_bRenderPool = 0x31a8; // uint32_t : 1
		constexpr auto m_bForced3PDuringPool = 0x31a8; // uint32_t : 1
		constexpr auto m_bForcingMeshTransition = 0x31a8; // uint32_t : 1
		constexpr auto r_bAbility1CanEmote = 0x31a8; // uint32_t : 1
	}

	namespace n_UUIComponent_TitlesViewEntry { // : UUIComponent_Interactable
		constexpr auto m_nTitleId = 0x140; // int32_t
		constexpr auto m_mcRarityText = 0x144; // ObjectProperty
		constexpr auto m_mcColorBlock = 0x14c; // ObjectProperty
		constexpr auto m_mcFade = 0x154; // ObjectProperty
		constexpr auto m_mcTitle = 0x15c; // ObjectProperty
		constexpr auto m_mcLockIcon = 0x164; // ObjectProperty
		constexpr auto m_mcEquipped = 0x16c; // ObjectProperty
		constexpr auto m_scEquip = 0x174; // ObjectProperty
		constexpr auto m_scUnequip = 0x17c; // ObjectProperty
		constexpr auto m_scNotOwned = 0x184; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsDecoyState { // : UTgAIBehaviorCondition
		constexpr auto DecoyState = 0x98; // EDecoyAIState
	}

	namespace n_APComMusicThemeSyncActor { // : AActor
		constexpr auto m_ReplicatedMusicEvent = 0x280; // FName
	}

	namespace n_ATgDevice_RiderMovement { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_AccelMultiplier = 0xa08; // FPointer
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa10; // FPointer
		constexpr auto m_fLastMultiplierUsed = 0xa18; // float
	}

	namespace n_UTgSeqEvent_TutorialEvent { // : USequenceEvent
		constexpr auto TutEvent = 0x128; // TUTORIAL_EVENT
		constexpr auto EventData = 0x12c; // int32_t
	}

	namespace n_UUIFade { // : UTgGfxScene
		constexpr auto m_mcBlocker = 0x1ec; // ObjectProperty
		constexpr auto m_mcEndOfRoundText = 0x1f4; // ObjectProperty
	}

	namespace n_UUIComponent_TitlesView { // : UUIComponent_Display
		constexpr auto m_TitleEntries = 0x124; // TArray<ObjectProperty>
		constexpr auto m_grTitlesGroup = 0x134; // ObjectProperty
		constexpr auto m_mcPlayerTitle = 0x13c; // ObjectProperty
		constexpr auto m_pPlayerName = 0x144; // ObjectProperty
		constexpr auto m_pEquipButton = 0x14c; // ObjectProperty
		constexpr auto m_pTooltipLeft = 0x154; // ObjectProperty
		constexpr auto m_pTooltipRight = 0x15c; // ObjectProperty
		constexpr auto m_pScrollbar = 0x164; // ObjectProperty
		constexpr auto m_nLastTooltipIndex = 0x16c; // int32_t
		constexpr auto m_nNumTitlesRows = 0x170; // int32_t
		constexpr auto m_nNumTitlesCols = 0x174; // int32_t
	}

	namespace n_UTgSkelCon_HitReaction { // : UGameSkelCtrl_Recoil
		constexpr auto m_CurrentRecoilDir = 0x168; // RecoilHitDir
		constexpr auto m_MoveType = 0x169; // HitReactionMoveType
		constexpr auto m_RecoilFromFront = 0x16c; // FRecoilInfo
		constexpr auto m_RecoilFromBack = 0x24c; // FRecoilInfo
		constexpr auto m_RecoilFromLeft = 0x32c; // FRecoilInfo
		constexpr auto m_RecoilFromRight = 0x40c; // FRecoilInfo
		constexpr auto m_SlaveSkelControlNames = 0x4ec; // TArray<FName>
		constexpr auto m_SlaveSkelControls = 0x4fc; // TArray<ObjectProperty>
		constexpr auto m_bInitialized = 0x50c; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_Unyielding { // : UTgInvListener
		constexpr auto m_CachedRestoreStaminaDevice = 0xc4; // ObjectProperty
	}

	namespace n_ATgDevice_CorrupterLatch { // : ATgDevice_Latch
		constexpr auto m_CachedCorrupter = 0xa50; // ObjectProperty
	}

	namespace n_UPrimitiveComponent { // : UActorComponent
		constexpr auto Tag = 0x88; // int32_t
		constexpr auto ThreadTag = 0x8c; // int32_t [0x5]
		constexpr auto Bounds = 0xa0; // FBoxSphereBounds
		constexpr auto SceneInfo = 0xbc; // FPointer
		constexpr auto DetachFence = 0xc4; // int32_t
		constexpr auto LocalToWorldDeterminant = 0xc8; // float
		constexpr auto LocalToWorld = 0xd0; // FMatrix
		constexpr auto MotionBlurInfoIndex = 0x110; // int32_t
		constexpr auto DecalList = 0x114; // TArray<FPointer>
		constexpr auto DecalsToReattach = 0x124; // TArray<ComponentProperty>
		constexpr auto ShadowParent = 0x134; // ComponentProperty
		constexpr auto ReplacementPrimitive = 0x13c; // ComponentProperty
		constexpr auto FogVolumeComponent = 0x144; // ComponentProperty
		constexpr auto OverrideLightComponent = 0x14c; // ComponentProperty
		constexpr auto LightEnvironment = 0x154; // ComponentProperty
		constexpr auto PreviousLightEnvironment = 0x15c; // ComponentProperty
		constexpr auto MinDrawDistance = 0x164; // float
		constexpr auto MassiveLODDistance = 0x168; // float
		constexpr auto MaxDrawDistance = 0x16c; // float
		constexpr auto CachedMaxDrawDistance = 0x170; // float
		constexpr auto MotionBlurInstanceScale = 0x174; // float
		constexpr auto CullDistance = 0x178; // float
		constexpr auto CachedCullDistance = 0x17c; // float
		constexpr auto DepthPriorityGroup = 0x180; // ESceneDepthPriorityGroup
		constexpr auto ViewOwnerDepthPriorityGroup = 0x181; // ESceneDepthPriorityGroup
		constexpr auto DetailMode = 0x182; // EDetailMode
		constexpr auto RBChannel = 0x183; // ERBCollisionChannel
		constexpr auto RBDominanceGroup = 0x184; // char
		constexpr auto PreviewEnvironmentShadowing = 0x185; // char
		constexpr auto bUseViewOwnerDepthPriorityGroup = 0x188; // uint32_t : 1
		constexpr auto bAllowCullDistanceVolume = 0x188; // uint32_t : 1
		constexpr auto HiddenGame = 0x188; // uint32_t : 1
		constexpr auto HiddenEditor = 0x188; // uint32_t : 1
		constexpr auto bOwnerNoSee = 0x188; // uint32_t : 1
		constexpr auto bOnlyOwnerSee = 0x188; // uint32_t : 1
		constexpr auto bIgnoreOwnerHidden = 0x188; // uint32_t : 1
		constexpr auto bIncludeInManualZPrepass = 0x188; // uint32_t : 1
		constexpr auto bUseAsOccluder = 0x188; // uint32_t : 1
		constexpr auto bAllowApproximateOcclusion = 0x188; // uint32_t : 1
		constexpr auto bFirstFrameOcclusion = 0x188; // uint32_t : 1
		constexpr auto bIgnoreNearPlaneIntersection = 0x188; // uint32_t : 1
		constexpr auto bSelectable = 0x188; // uint32_t : 1
		constexpr auto bForceMipStreaming = 0x188; // uint32_t : 1
		constexpr auto bAcceptsDecals = 0x188; // uint32_t : 1
		constexpr auto bAcceptsDecalsDuringGameplay = 0x188; // uint32_t : 1
		constexpr auto bAcceptsStaticDecals = 0x188; // uint32_t : 1
		constexpr auto bAcceptsDynamicDecals = 0x188; // uint32_t : 1
		constexpr auto bIsRefreshingDecals = 0x188; // uint32_t : 1
		constexpr auto bAllowDecalAutomaticReAttach = 0x188; // uint32_t : 1
		constexpr auto bUsePerInstanceHitProxies = 0x188; // uint32_t : 1
		constexpr auto CastShadow = 0x188; // uint32_t : 1
		constexpr auto bForceDirectLightMap = 0x188; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0x188; // uint32_t : 1
		constexpr auto bCastStaticShadow = 0x188; // uint32_t : 1
		constexpr auto bSelfShadowOnly = 0x188; // uint32_t : 1
		constexpr auto bNoModSelfShadow = 0x188; // uint32_t : 1
		constexpr auto bAcceptsDynamicDominantLightShadows = 0x188; // uint32_t : 1
		constexpr auto bCastHiddenShadow = 0x188; // uint32_t : 1
		constexpr auto bCastShadowAsTwoSided = 0x188; // uint32_t : 1
		constexpr auto bAcceptsLights = 0x188; // uint32_t : 1
		constexpr auto bAcceptsDynamicLights = 0x188; // uint32_t : 1
		constexpr auto bUseOnePassLightingOnTranslucency = 0x18c; // uint32_t : 1
		constexpr auto bUsePrecomputedShadows = 0x18c; // uint32_t : 1
		constexpr auto bHasExplicitShadowParent = 0x18c; // uint32_t : 1
		constexpr auto bAllowAmbientOcclusion = 0x18c; // uint32_t : 1
		constexpr auto CollideActors = 0x18c; // uint32_t : 1
		constexpr auto AlwaysCheckCollision = 0x18c; // uint32_t : 1
		constexpr auto BlockActors = 0x18c; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x18c; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x18c; // uint32_t : 1
		constexpr auto CanBlockCamera = 0x18c; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x18c; // uint32_t : 1
		constexpr auto bBlockFootPlacement = 0x18c; // uint32_t : 1
		constexpr auto bSeenByAI = 0x18c; // uint32_t : 1
		constexpr auto bDisableAllRigidBody = 0x18c; // uint32_t : 1
		constexpr auto bSkipRBGeomCreation = 0x18c; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0x18c; // uint32_t : 1
		constexpr auto bFluidDrain = 0x18c; // uint32_t : 1
		constexpr auto bFluidTwoWay = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreRadialImpulse = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreRadialForce = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreForceField = 0x18c; // uint32_t : 1
		constexpr auto bUseCompartment = 0x18c; // uint32_t : 1
		constexpr auto AlwaysLoadOnClient = 0x18c; // uint32_t : 1
		constexpr auto AlwaysLoadOnServer = 0x18c; // uint32_t : 1
		constexpr auto bIgnoreHiddenActorsMembership = 0x18c; // uint32_t : 1
		constexpr auto AbsoluteTranslation = 0x18c; // uint32_t : 1
		constexpr auto AbsoluteRotation = 0x18c; // uint32_t : 1
		constexpr auto AbsoluteScale = 0x18c; // uint32_t : 1
		constexpr auto bAllowShadowFade = 0x18c; // uint32_t : 1
		constexpr auto bSupportedOnMobile = 0x18c; // uint32_t : 1
		constexpr auto bWasSNFiltered = 0x18c; // uint32_t : 1
		constexpr auto OctreeNodes = 0x190; // TArray<int32_t>
		constexpr auto TranslucencySortPriority = 0x1a0; // int32_t
		constexpr auto VisibilityId = 0x1a4; // int32_t
		constexpr auto LightingChannels = 0x1a8; // FLightingChannelContainer
		constexpr auto RBCollideWithChannels = 0x1ac; // FRBCollisionChannelContainer
		constexpr auto PhysMaterialOverride = 0x1b0; // ObjectProperty
		constexpr auto BodyInstance = 0x1b8; // ObjectProperty
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto Rotation = 0x20c; // FRotator
		constexpr auto Scale = 0x218; // float
		constexpr auto Scale3D = 0x21c; // FVector
		constexpr auto BoundsScale = 0x228; // float
		constexpr auto OcclusionBoundsScale = 0x22c; // FVector
		constexpr auto OcclusionSphereScale = 0x238; // float
		constexpr auto OverrideDrawDistanceScale = 0x23c; // float
		constexpr auto LastSubmitTime = 0x240; // float
		constexpr auto LastRenderTime = 0x244; // float
		constexpr auto ScriptRigidBodyCollisionThreshold = 0x248; // float
	}

	namespace n_UTgCameraModule_SpectatorLockedView { // : UTgCameraModule_Spectator
		constexpr auto WorldViewRotation = 0x9c; // FRotator
		constexpr auto bAutoRotate = 0xa8; // uint32_t : 1
		constexpr auto FOV = 0xac; // float
		constexpr auto ZoomIncrement = 0xb0; // float
		constexpr auto CurrentWorldViewTargetIndex = 0xb4; // int32_t
	}

	namespace n_UOnlineTitleFileDownloadWeb { // : UOnlineTitleFileDownloadBase
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileWeb>
	}

	namespace n_UInterpTrackHeadTracking { // : UInterpTrack
		constexpr auto HeadTrackingTrack = 0xa0; // TArray<FHeadTrackingKey>
		constexpr auto TrackControllerName = 0xb0; // TArray<FName>
		constexpr auto LookAtActorRadius = 0xc0; // float
		constexpr auto bDisableBeyondLimit = 0xc4; // uint32_t : 1
		constexpr auto bLookAtPawns = 0xc4; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xc8; // float
		constexpr auto MinLookAtTime = 0xcc; // float
		constexpr auto MaxInterestTime = 0xd0; // float
		constexpr auto ActorClassesToLookAt = 0xd4; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xe4; // TArray<FName>
	}

	namespace n_UTgDeviceForm_YagorathUlt { // : UTgDeviceForm
		constexpr auto m_Target = 0x28c; // ObjectProperty
		constexpr auto m_nPosture = 0x294; // int32_t
		constexpr auto m_fZoomOutTimer = 0x298; // float
		constexpr auto m_fZoomOutDist = 0x29c; // float
		constexpr auto m_fZoomInDist = 0x2a0; // float
		constexpr auto m_fDisableEatFxTimer = 0x2a4; // float
		constexpr auto m_eYagorathUltAnimState = 0x2a8; // YagorathUltAnimState
		constexpr auto m_YagorathUltNodes3p = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_YagorathUltNodes1p = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIHudVora { // : UUIScene
		constexpr auto m_bViewTargetVora = 0x1cc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1cc; // uint32_t : 1
		constexpr auto m_Pips = 0x1d0; // ObjectProperty [0x5]
		constexpr auto m_ChargedAnim = 0x1f8; // ObjectProperty
		constexpr auto m_CachedVora = 0x200; // ObjectProperty
	}

	namespace n_UTgEffectHeal { // : UTgEffect
		constexpr auto m_fMissingHealthInitial = 0xa0; // float
		constexpr auto m_nIntervalCount = 0xa4; // int32_t
		constexpr auto m_nSimplifiedPropertyId = 0xa8; // int32_t
		constexpr auto m_nScalingHoTCounter = 0xac; // int32_t
	}

	namespace n_UTgDeviceForm_TiberiusQ { // : UTgDeviceForm
		constexpr auto m_CachedTiberius = 0x28c; // ObjectProperty
		constexpr auto m_fLoopingSFXDuration = 0x294; // float
		constexpr auto m_fKillSFXLoopIn = 0x298; // float
	}

	namespace n_UTgSeqVar_DamageType { // : USequenceVariable
		constexpr auto DamageTypeValue = 0xa0; // UDamageType*
	}

	namespace n_ATgDevice_HealingPotion { // : ATgDevice
		constexpr auto s_bQueueDetonation = 0xa08; // uint32_t : 1
		constexpr auto m_bAttemptingToDetonate = 0xa08; // uint32_t : 1
	}

	namespace n_ATgWeaponMeshActor_LianInhand { // : ATgWeaponMeshActor
		constexpr auto m_CachedLian = 0x450; // ObjectProperty
		constexpr auto c_GraceTracers = 0x458; // ObjectProperty [0xf]
		constexpr auto c_bTracersVisible = 0x4d0; // uint32_t : 1
	}

	namespace n_UTgSkelCon_RotateToNormal { // : UTgSkelCon_MirrorToOtherMesh
		constexpr auto m_fRotationSpeed = 0x108; // float
		constexpr auto m_bUseConstantSpeed = 0x10c; // uint32_t : 1
		constexpr auto m_bRotateInstantly = 0x10c; // uint32_t : 1
		constexpr auto m_vTargetNormal = 0x110; // FVector
		constexpr auto m_rTargetRotation = 0x11c; // FRotator
	}

	namespace n_UTgAIBehaviorAction_FollowLane { // : UTgAIBehaviorAction
		constexpr auto bUseReverseDirection = 0x94; // uint32_t : 1
	}

	namespace n_ULocalPlayer { // : UPlayer
		constexpr auto VfTable_FObserverInterface = 0x8c; // FPointer
		constexpr auto ControllerId = 0x94; // int32_t
		constexpr auto ViewportClient = 0x98; // ObjectProperty
		constexpr auto Origin = 0xa0; // FVector2D
		constexpr auto Size = 0xa8; // FVector2D
		constexpr auto PlayerPostProcess = 0xb0; // ObjectProperty
		constexpr auto PlayerPostProcessChains = 0xb8; // TArray<ObjectProperty>
		constexpr auto bForceDefaultPostProcessChain = 0xc8; // uint32_t : 1
		constexpr auto bWantToResetToMapDefaultPP = 0xc8; // uint32_t : 1
		constexpr auto bSentSplitJoin = 0xc8; // uint32_t : 1
		constexpr auto bPendingServerAuth = 0xc8; // uint32_t : 1
		constexpr auto ViewState = 0xcc; // FPointer
		constexpr auto ViewState2 = 0xd4; // FPointer
		constexpr auto ActorVisibilityHistory = 0xdc; // FSynchronizedActorVisibilityHistory
		constexpr auto LastViewLocation = 0xec; // FVector
		constexpr auto CurrentPPInfo = 0xf8; // FCurrentPostProcessVolumeInfo
		constexpr auto LevelPPInfo = 0x288; // FCurrentPostProcessVolumeInfo
		constexpr auto ActivePPOverrides = 0x418; // TArray<FPostProcessSettingsOverride>
		constexpr auto AspectRatioAxisConstraint = 0x428; // EAspectRatioAxisConstraint
		constexpr auto LastMap = 0x42c; // FString
		constexpr auto TagContext = 0x43c; // ObjectProperty
		constexpr auto CachedAuthInt = 0x444; // TScriptInterface<Class>
		constexpr auto ServerAuthTimestamp = 0x454; // float
		constexpr auto ServerAuthTimeout = 0x458; // int32_t
		constexpr auto ServerAuthRetryCount = 0x45c; // int32_t
		constexpr auto MaxServerAuthRetryCount = 0x460; // int32_t
		constexpr auto ServerAuthUID = 0x464; // FUniqueNetId
	}

	namespace n_ATgDevice_AccursedArmGun { // : ATgDevice
		constexpr auto m_AccursedArm = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_ChainSequence { // : ATgDevice
		constexpr auto m_nChainCount = 0xa08; // int32_t
		constexpr auto m_fChainResetTimer = 0xa0c; // float
		constexpr auto m_fChainResetDuration = 0xa10; // float
	}

	namespace n_ATgDevice_AtlasInhand { // : ATgDevice
		constexpr auto m_CachedAtlas = 0xa08; // ObjectProperty
		constexpr auto m_fLastFireHoldPct = 0xa10; // float
		constexpr auto m_fFireReleasePercent = 0xa14; // float
		constexpr auto m_fReticleReleaseAnimationDuration = 0xa18; // float
		constexpr auto m_nSelectedFireLevel = 0xa1c; // int32_t
		constexpr auto m_nAmmoToRegain = 0xa20; // int32_t
	}

	namespace n_UUIData { // : UObject
		constexpr auto m_nPriority = 0x60; // int32_t
	}

	namespace n_UApexStaticDestructibleComponent { // : UApexStaticComponent
		constexpr auto SleepEnergyThreshold = 0x2b0; // float
		constexpr auto SleepDamping = 0x2b4; // float
		constexpr auto ApexDestructibleActor = 0x2b8; // FPointer
		constexpr auto ApexDestructiblePreview = 0x2c0; // FPointer
		constexpr auto bIsThumbnailComponent = 0x2c8; // uint32_t : 1
	}

	namespace n_AKActorFromStatic { // : AKActor
		constexpr auto MyStaticMeshActor = 0x3b4; // ObjectProperty
		constexpr auto MaxImpulseSpeed = 0x3bc; // float
	}

	namespace n_UUIData_List { // : UUIData
		constexpr auto pData = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleBeamSource { // : UParticleModuleBeamBase
		constexpr auto SourceMethod = 0x68; // Beam2SourceTargetMethod
		constexpr auto SourceTangentMethod = 0x69; // Beam2SourceTargetTangentMethod
		constexpr auto SourceName = 0x6c; // FName
		constexpr auto SourceSocketName = 0x74; // FName
		constexpr auto bSourceAbsolute = 0x7c; // uint32_t : 1
		constexpr auto bLockSource = 0x7c; // uint32_t : 1
		constexpr auto bLockSourceTangent = 0x7c; // uint32_t : 1
		constexpr auto bLockSourceStength = 0x7c; // uint32_t : 1
		constexpr auto Source = 0x80; // FRawDistributionVector
		constexpr auto SourceTangent = 0xa4; // FRawDistributionVector
		constexpr auto SourceStrength = 0xc8; // FRawDistributionFloat
	}

	namespace n_UMorphNodeWeightBase { // : UMorphNodeBase
		constexpr auto NodeConns = 0x74; // TArray<FMorphNodeConn>
	}

	namespace n_UTgAnimMetaData_KeyframedDisplayGroup { // : UAnimMetaData
		constexpr auto DisplayGroup = 0x60; // FName
		constexpr auto m_fStartTime = 0x68; // float
		constexpr auto m_fEndTime = 0x6c; // float
		constexpr auto EqpSlot = 0x70; // TG_EQUIP_POINT
		constexpr auto m_bDisplayGroupActivated = 0x74; // uint32_t : 1
	}

	namespace n_UDamageType { // : UObject
		constexpr auto bArmorStops = 0x60; // uint32_t : 1
		constexpr auto bCausedByWorld = 0x60; // uint32_t : 1
		constexpr auto bExtraMomentumZ = 0x60; // uint32_t : 1
		constexpr auto bCausesFracture = 0x60; // uint32_t : 1
		constexpr auto bRadialDamageVelChange = 0x60; // uint32_t : 1
		constexpr auto KDamageImpulse = 0x64; // float
		constexpr auto KDeathVel = 0x68; // float
		constexpr auto KDeathUpKick = 0x6c; // float
		constexpr auto RadialDamageImpulse = 0x70; // float
		constexpr auto VehicleDamageScaling = 0x74; // float
		constexpr auto VehicleMomentumScaling = 0x78; // float
		constexpr auto DamagedFFWaveform = 0x7c; // ObjectProperty
		constexpr auto KilledFFWaveform = 0x84; // ObjectProperty
		constexpr auto FracturedMeshDamage = 0x8c; // float
	}

	namespace n_AWorldAttractor { // : AActor
		constexpr auto bEnabled = 0x280; // uint32_t : 1
		constexpr auto LoopDuration = 0x284; // float
		constexpr auto CurrentTime = 0x288; // float
		constexpr auto FalloffType = 0x28c; // EWorldAttractorFalloffType
		constexpr auto FalloffExponent = 0x290; // FMatineeRawDistributionFloat
		constexpr auto Range = 0x2bc; // FMatineeRawDistributionFloat
		constexpr auto Strength = 0x2e8; // FMatineeRawDistributionFloat
		constexpr auto CollisionRadius = 0x314; // float
		constexpr auto DragCoefficient = 0x318; // FMatineeRawDistributionFloat
		constexpr auto DragRadius = 0x344; // FMatineeRawDistributionFloat
	}

	namespace n_ATgAIVolume { // : AVolume
		constexpr auto LaneIndex = 0x2bc; // int32_t
		constexpr auto TaskforceIndex = 0x2c0; // int32_t
		constexpr auto bEnabled = 0x2c4; // uint32_t : 1
	}

	namespace n_UTgInvListener_SetInhandFiremodeAfterDeviceFired { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_nRemainingShots = 0xcc; // int32_t
		constexpr auto m_fRemainingTime = 0xd0; // float
	}

	namespace n_UTgSeqAct_SetEnergyGainBlock { // : USequenceAction
		constexpr auto m_bBlockEnergyGain = 0x108; // int32_t
	}

	namespace n_ATgGame_Battle_Training { // : ATgGame_Battle_Practice
		constexpr auto m_bNewTutorial = 0x76c; // uint32_t : 1
		constexpr auto m_StartingItems = 0x770; // TArray<int32_t>
		constexpr auto m_StartingSkills = 0x780; // int32_t [0x4]
		constexpr auto m_RecommendedItems = 0x790; // TArray<int32_t>
	}

	namespace n_ATgDevice_CorrupterInhand { // : ATgDevice_ChainSequence
		constexpr auto m_Corrupter = 0xa14; // ObjectProperty
		constexpr auto m_DeviceForm = 0xa1c; // ObjectProperty
		constexpr auto m_nChainMax = 0xa24; // int32_t
	}

	namespace n_UTgRewardCenterManager { // : UObject
		constexpr auto m_pMovie = 0x60; // ObjectProperty
		constexpr auto m_pReturningBonus = 0x68; // TArray<FGoalRewardItem>
	}

	namespace n_ATgDevice_ImaniRMB1 { // : ATgDevice
		constexpr auto r_bHasActiveProjectile = 0xa08; // uint32_t : 1
		constexpr auto m_fLastDistanceTravelled = 0xa0c; // float
		constexpr auto m_CachedImani = 0xa10; // ObjectProperty
	}

	namespace n_UUIComponent_ChampionSelectRoleTab { // : UUIComponent_Display
		constexpr auto m_mcSelectedIcon = 0x124; // ObjectProperty
		constexpr auto m_mcHighlightIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcBackgroundIcon = 0x134; // ObjectProperty
	}

	namespace n_UTgAchievement { // : UObject
		constexpr auto Controller = 0x60; // ObjectProperty
		constexpr auto m_bCustomValue3IsBotId = 0x68; // uint32_t : 1
		constexpr auto m_bAwardsAllowTriggering = 0x68; // uint32_t : 1
		constexpr auto m_bIsTickable = 0x68; // uint32_t : 1
		constexpr auto m_nBotId = 0x6c; // int32_t
		constexpr auto m_nActivityId = 0x70; // int32_t
		constexpr auto m_nGoalId = 0x74; // int32_t
		constexpr auto m_nCustomValue1 = 0x78; // int32_t
		constexpr auto m_nCustomValue2 = 0x7c; // int32_t
		constexpr auto m_nCustomValue3 = 0x80; // int32_t
		constexpr auto m_nCustomValue4 = 0x84; // int32_t
		constexpr auto m_nCustomValue5 = 0x88; // int32_t
		constexpr auto m_nCurrentProgress = 0x8c; // int32_t
		constexpr auto m_nCurrentTarget = 0x90; // int32_t
	}

	namespace n_UTgAchievement_Headshot { // : UTgAchievement
		constexpr auto m_nHeadshotsWithoutMissing = 0x94; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Combo_BombKing { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_HitActors = 0xcc; // TArray<FStickyHitInfo>
	}

	namespace n_UNavMeshPath_Toward { // : UNavMeshPathConstraint
		constexpr auto bBiasAgainstHighLevelPath = 0x78; // uint32_t : 1
		constexpr auto OutOfHighLevelPathBias = 0x7c; // float
		constexpr auto GoalActor = 0x80; // ObjectProperty
		constexpr auto GoalPoint = 0x88; // FVector
	}

	namespace n_UInterpTrackInstSkelControlStrength { // : UInterpTrackInst
		constexpr auto bSavedControlledByAnimMetaData = 0x60; // uint32_t : 1
	}

	namespace n_ATgDeploy_MoonShardTween { // : ATgDeploy_EffectField
		constexpr auto WalkableFloorZ = 0x4a0; // float
		constexpr auto s_PreviouslyAffectedPawns = 0x4a4; // TArray<ObjectProperty>
		constexpr auto r_pAffectedPawns = 0x4b4; // ObjectProperty [0x5]
		constexpr auto m_AffectedPawnRecords = 0x4dc; // FAffectedPawn [0x5]
		constexpr auto m_fPullSpeed = 0x568; // float
		constexpr auto r_fProjectileInitialSpeed = 0x56c; // float
		constexpr auto r_fProjectileMaxSpeed = 0x570; // float
		constexpr auto r_fAccelerationMagnitude = 0x574; // float
		constexpr auto m_fInnerRadius = 0x578; // float
		constexpr auto m_fGravityFactor = 0x57c; // float
		constexpr auto m_fMaxCosineWallSlide = 0x580; // float
		constexpr auto m_vLastDesiredOrientation = 0x584; // FVector
		constexpr auto m_fMaxRotationSpeedDegPerSec = 0x590; // float
		constexpr auto m_bApplyEffectsOnPawnRelease = 0x594; // uint32_t : 1
		constexpr auto m_bNoVerticalAcceleration = 0x594; // uint32_t : 1
		constexpr auto m_fGrabSourceVerticalPivotOffsetFactor = 0x598; // float
		constexpr auto m_fGrabOffsetExtensionFactor = 0x59c; // float
		constexpr auto m_vCollisionExtent = 0x5a0; // FVector
	}

	namespace n_USeqEvent_RigidBodyCollision { // : USequenceEvent
		constexpr auto MinCollisionVelocity = 0x128; // float
	}

	namespace n_UMaterialExpressionIf { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto AGreaterThanB = 0x118; // FExpressionInput
		constexpr auto AEqualsB = 0x14c; // FExpressionInput
		constexpr auto ALessThanB = 0x180; // FExpressionInput
	}

	namespace n_UTgDeviceForm_ImaniSwap { // : UTgDeviceForm
		constexpr auto m_bSecondaryStance = 0x28c; // uint32_t : 1
		constexpr auto m_CachedWMA = 0x290; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_Wiggle { // : UTgAIBehaviorAction
		constexpr auto WiggleIntensity = 0x94; // float
	}

	namespace n_UUIComponent_SimulMediaCollectionReward { // : UUIComponent_Display
		constexpr auto m_mcTF0 = 0x124; // ObjectProperty
		constexpr auto m_mcTF1 = 0x12c; // ObjectProperty
		constexpr auto m_mcRewardIcon = 0x134; // ObjectProperty
	}

	namespace n_UNavMeshGoal_PolyEncompassesAI { // : UNavMeshPathGoalEvaluator
		constexpr auto OverrideExtentToCheck = 0x7c; // FVector
	}

	namespace n_ATgGameHUD { // : ATgClientHUD
		constexpr auto m_nLastUpgrade = 0x684; // int32_t
		constexpr auto m_bGameWon = 0x688; // uint32_t : 1
		constexpr auto m_bGameOver = 0x688; // uint32_t : 1
		constexpr auto m_bHasMounted = 0x688; // uint32_t : 1
		constexpr auto m_bUpdateMinimapThisTick = 0x688; // uint32_t : 1
		constexpr auto m_fFireTime = 0x68c; // float
		constexpr auto m_fFireTimer = 0x690; // float
		constexpr auto m_fMMUpdateTimer = 0x694; // float
		constexpr auto m_LastTarget = 0x698; // ObjectProperty
		constexpr auto m_Blinder = 0x6a0; // ObjectProperty
		constexpr auto m_MiniMap = 0x6a8; // ObjectProperty
		constexpr auto m_TargetingMap = 0x6b0; // ObjectProperty
		constexpr auto m_fLastMinimapUpdateTime = 0x6b8; // float
		constexpr auto m_nPotGModelPose = 0x6bc; // int32_t
		constexpr auto m_nPotGModelSkin = 0x6c0; // int32_t
		constexpr auto m_nPotGModelHead = 0x6c4; // int32_t
		constexpr auto m_nPotGModelClass = 0x6c8; // int32_t
		constexpr auto m_nPotGModelDevice = 0x6cc; // int32_t
		constexpr auto m_nPotGModelDeviceSkin = 0x6d0; // int32_t
		constexpr auto m_nKillerName = 0x6d4; // FString
		constexpr auto m_nKillerDevice = 0x6e4; // int32_t
	}

	namespace n_ATgDevice_FragGrenade { // : ATgDevice
		constexpr auto m_CachedViktor = 0xa08; // ObjectProperty
		constexpr auto m_bEndCook = 0xa10; // uint32_t : 1
		constexpr auto m_bThrownGrenade = 0xa10; // uint32_t : 1
		constexpr auto s_bCanPickUpNuggetRefills = 0xa10; // uint32_t : 1
		constexpr auto s_bFullCook = 0xa10; // uint32_t : 1
	}

	namespace n_UTgSeqAct_PlayAnnouncement { // : USequenceAction
		constexpr auto bPlayImmediately = 0x108; // uint32_t : 1
		constexpr auto bFlushOthers = 0x108; // uint32_t : 1
		constexpr auto SoundIndex = 0x10c; // int32_t
		constexpr auto OptionalCue = 0x110; // ObjectProperty
	}

	namespace n_UUIScene_UITalents { // : UUIScene
		constexpr auto m_pTalents = 0x1cc; // ObjectProperty
		constexpr auto m_pBlocker = 0x1d4; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_AmmoCount { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
		constexpr auto AmmoThreshold = 0x9c; // int32_t
	}

	namespace n_UTgAnimNodeBlendNPC { // : UTgAnimNodeBlendList
		constexpr auto m_NoCustomerPresentBlendInTime = 0x168; // float
		constexpr auto m_CustomerPresentBlendInTime = 0x16c; // float
		constexpr auto m_GreetingBlendInTime = 0x170; // float
		constexpr auto m_NoSaleBlendInTime = 0x174; // float
		constexpr auto m_CallOutBlendInTime = 0x178; // float
		constexpr auto m_SaleBlendInTime = 0x17c; // float
		constexpr auto m_TransCustomerPresentToNotPresentBlendInTime = 0x180; // float
		constexpr auto m_UninterruptibleAnims = 0x184; // TArray<FName>
		constexpr auto m_QueuedChild = 0x194; // NPCAnimationStates
		constexpr auto m_QueuedBlendTime = 0x198; // float
		constexpr auto m_CurrentAnimPlaying = 0x19c; // FName
	}

	namespace n_UPComPlayerProfile { // : UOnlinePlayerStorage
		constexpr auto Rank = 0x94; // int32_t
		constexpr auto Kills = 0x98; // int32_t
		constexpr auto Deaths = 0x9c; // int32_t
		constexpr auto Assists = 0xa0; // int32_t
		constexpr auto XpLevel = 0xa4; // int32_t
		constexpr auto HZPoints = 0xa8; // int32_t
		constexpr auto XPPoints = 0xac; // int32_t
		constexpr auto AssistPoints = 0xb0; // int32_t
		constexpr auto AverageScore = 0xb4; // int32_t
		constexpr auto BoostHoursRemaining = 0xb8; // int32_t
		constexpr auto InfoMask = 0xbc; // int32_t
		constexpr auto TimePlayed = 0xc0; // int32_t
		constexpr auto TotalAccolades = 0xc4; // int32_t
		constexpr auto FastestSki = 0xc8; // int32_t
		constexpr auto FlagGrabs = 0xcc; // int32_t
		constexpr auto FlagCaps = 0xd0; // int32_t
		constexpr auto GensDestroyed = 0xd4; // int32_t
		constexpr auto ObjsDestroyed = 0xd8; // int32_t
		constexpr auto bVIP = 0xdc; // uint32_t : 1
		constexpr auto bBoost = 0xdc; // uint32_t : 1
		constexpr auto PlayerID = 0xe0; // int32_t
		constexpr auto PlayerName = 0xe4; // FString
		constexpr auto Badges = 0xf4; // TArray<FBadgeStruct>
		constexpr auto TopBadges = 0x104; // TArray<FBadgeStruct>
		constexpr auto ClassTimePlayed = 0x114; // TArray<FPropertyPair>
		constexpr auto Accolades = 0x124; // TArray<FAccoladeStruct>
	}

	namespace n_UParticleModuleMeshRotation_Seeded { // : UParticleModuleMeshRotation
		constexpr auto RandomSeedInfo = 0x90; // FParticleRandomSeedInfo
	}

	namespace n_UTgPawnMod_FxAudio_EDMJenos { // : UTgPawnMod_FxAudio
		constexpr auto m_fGlowMultBass = 0xac; // float
	}

	namespace n_UUIComponent_CompetitiveRankedDecay { // : UUIComponent_Display
		constexpr auto m_pButton = 0x124; // ObjectProperty
		constexpr auto m_mcRankIcon = 0x12c; // ObjectProperty
	}

	namespace n_ULandscapeMaterialInstanceConstant { // : UMaterialInstanceConstant
		constexpr auto bIsLayerThumbnail = 0x344; // uint32_t : 1
		constexpr auto DataWeightmapIndex = 0x348; // int32_t
		constexpr auto DataWeightmapSize = 0x34c; // int32_t
	}

	namespace n_USavedMove { // : UObject
		constexpr auto NextMove = 0x60; // ObjectProperty
		constexpr auto TimeStamp = 0x68; // float
		constexpr auto Delta = 0x6c; // float
		constexpr auto bRun = 0x70; // uint32_t : 1
		constexpr auto bDuck = 0x70; // uint32_t : 1
		constexpr auto bPressedJump = 0x70; // uint32_t : 1
		constexpr auto bDoubleJump = 0x70; // uint32_t : 1
		constexpr auto bPreciseDestination = 0x70; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x70; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x70; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x70; // uint32_t : 1
		constexpr auto DoubleClickMove = 0x74; // EDoubleClickDir
		constexpr auto SavedPhysics = 0x75; // EPhysics
		constexpr auto RootMotionMode = 0x76; // ERootMotionMode
		constexpr auto StartLocation = 0x78; // FVector
		constexpr auto StartRelativeLocation = 0x84; // FVector
		constexpr auto StartVelocity = 0x90; // FVector
		constexpr auto StartFloor = 0x9c; // FVector
		constexpr auto SavedLocation = 0xa8; // FVector
		constexpr auto SavedVelocity = 0xb4; // FVector
		constexpr auto SavedRelativeLocation = 0xc0; // FVector
		constexpr auto RMVelocity = 0xcc; // FVector
		constexpr auto Acceleration = 0xd8; // FVector
		constexpr auto Rotation = 0xe4; // FRotator
		constexpr auto StartBase = 0xf0; // ObjectProperty
		constexpr auto EndBase = 0xf8; // ObjectProperty
		constexpr auto CustomTimeDilation = 0x100; // float
		constexpr auto AccelDotThreshold = 0x104; // float
		constexpr auto RootMotionInterpCurrentTime = 0x108; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x10c; // FVector
	}

	namespace n_UUIComponent_SummerEventHome { // : UUIComponent_Display
		constexpr auto m_pBundleLTI = 0x124; // ObjectProperty
		constexpr auto m_pBonusLTI = 0x12c; // ObjectProperty
		constexpr auto m_mcBundleTitle = 0x134; // ObjectProperty
		constexpr auto m_mcButtonTitle = 0x13c; // ObjectProperty
		constexpr auto m_pBundleItems = 0x144; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x14c; // ObjectProperty
		constexpr auto m_pPurchaseButtonCurr = 0x154; // ObjectProperty
		constexpr auto m_pPurchaseButtonKey = 0x15c; // ObjectProperty
		constexpr auto m_pPlayPanel = 0x164; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x16c; // ObjectProperty
		constexpr auto m_pPurchaseAction = 0x174; // ObjectProperty
	}

	namespace n_USeqAct_DivideFloat { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UAnimNodeBlendMultiBone { // : UAnimNodeBlendBase
		constexpr auto BlendTargetList = 0x114; // TArray<FChildBoneBlendInfo>
		constexpr auto SourceRequiredBones = 0x124; // TArray<char>
	}

	namespace n_UTgAnimNodeSlot { // : UAnimNodeSlot
		constexpr auto m_TgPawn = 0x138; // ObjectProperty
		constexpr auto m_bBlendOutIfVelocityIsGreaterThanZero = 0x140; // uint32_t : 1
		constexpr auto m_bIsTransitionAnim = 0x140; // uint32_t : 1
		constexpr auto m_bNotifyActorOnChildAnimEnd = 0x140; // uint32_t : 1
		constexpr auto m_nmHackingTransitionAnimName = 0x144; // FName
		constexpr auto m_nmHackingLoopingAnimName = 0x14c; // FName
		constexpr auto m_nmAFKTransitionAnimName = 0x154; // FName
		constexpr auto m_nmAFKLoopingAnimName = 0x15c; // FName
		constexpr auto m_nmQueuedAnim = 0x164; // FName
	}

	namespace n_UTgAnimNodeChannelFire_Telepunch { // : UTgAnimNodeChannelFire
		constexpr auto m_eAnimState = 0x180; // TelepunchAnimState
	}

	namespace n_UTgInventoryObject_Listen_MountShield { // : UTgInventoryObject_Listen_Mount
		constexpr auto m_fNextMountShieldTime = 0xd4; // float
		constexpr auto m_fMinMountShieldTime = 0xd8; // float
	}

	namespace n_ATgDevice_DragonSlam { // : ATgDevice
		constexpr auto m_bHasHitTarget = 0xa08; // uint32_t : 1
		constexpr auto m_CachedDrogozOwner = 0xa0c; // ObjectProperty
		constexpr auto m_CollisionProxy = 0xa14; // ObjectProperty
		constexpr auto m_DrogozLeg1 = 0xa1c; // ObjectProperty
	}

	namespace n_UActorFactoryAmbientSound { // : UActorFactory
		constexpr auto AmbientSoundCue = 0x9c; // ObjectProperty
	}

	namespace n_UUIDataVGSMaps { // : UUIDataObject
		constexpr auto m_pRootPC = 0x74; // ObjectProperty
		constexpr auto m_pRootConsole = 0x7c; // ObjectProperty
		constexpr auto m_pRootLegacy = 0x84; // ObjectProperty
	}

	namespace n_UMaterialExpressionRotator { // : UMaterialExpression
		constexpr auto Coordinate = 0xb0; // FExpressionInput
		constexpr auto Time = 0xe4; // FExpressionInput
		constexpr auto CenterX = 0x118; // float
		constexpr auto CenterY = 0x11c; // float
		constexpr auto Speed = 0x120; // float
	}

	namespace n_UParticleModuleVelocityCone { // : UParticleModuleVelocityBase
		constexpr auto Angle = 0x6c; // FRawDistributionFloat
		constexpr auto Velocity = 0x90; // FRawDistributionFloat
		constexpr auto Direction = 0xb4; // FVector
	}

	namespace n_UTgAnimNodePlayTgCameraAnim { // : UAnimNodeBlendBase
		constexpr auto m_CameraShake = 0x114; // ObjectProperty
		constexpr auto m_TgPawn = 0x11c; // ObjectProperty
	}

	namespace n_UInterpTrackInstToggle { // : UInterpTrackInst
		constexpr auto Action = 0x60; // ETrackToggleAction
		constexpr auto LastUpdatePosition = 0x64; // float
		constexpr auto bSavedActiveState = 0x68; // uint32_t : 1
	}

	namespace n_UTgAchievement_Unstoppable { // : UTgAchievement
		constexpr auto m_bReachedKillstreak = 0x94; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_UltChargeFromHealing { // : UTgInvListener
		constexpr auto m_CachedTgPawn = 0xc4; // ObjectProperty
	}

	namespace n_UTgSkelCon_OscillateBoneScale { // : USkelControlSingleBone
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationBaseScale = 0x108; // float
		constexpr auto Theta = 0x10c; // float
	}

	namespace n_UTgDeviceForm_DemonStim { // : UTgDeviceForm
		constexpr auto m_fTransitionTime = 0x28c; // float
	}

	namespace n_UModelComponent { // : UPrimitiveComponent
		constexpr auto Model = 0x24c; // ObjectProperty
		constexpr auto ZoneIndex = 0x254; // int32_t
		constexpr auto ComponentIndex = 0x258; // int32_t
		constexpr auto Nodes = 0x25c; // TArray<FPointer>
		constexpr auto Elements = 0x26c; // TArray<FPointer>
	}

	namespace n_ATgProj_ClusterGrenadeSecondary { // : ATgProj_ClusterGrenade
		constexpr auto m_bInitialized = 0x5d0; // uint32_t : 1
		constexpr auto m_fGrowthLifetime = 0x5d4; // float
	}

	namespace n_ULightFunction { // : UObject
		constexpr auto SourceMaterial = 0x60; // ObjectProperty
		constexpr auto Scale = 0x68; // FVector
		constexpr auto DisabledBrightness = 0x74; // float
	}

	namespace n_UTgNewUserSettings { // : UObject
		constexpr auto WatchedVideoIds = 0x60; // TArray<int32_t>
	}

	namespace n_UTgGameplayCurvesSet_Recoil { // : UTgGameplayCurvesSet
		constexpr auto HorizRecoil = 0x64; // TArray<ObjectProperty>
		constexpr auto VertRecoil = 0x74; // TArray<ObjectProperty>
		constexpr auto RecoilType = 0x84; // EPaladinsRecoilType
	}

	namespace n_UTgSkelControlSingleBone_Ammo { // : UTgSkelControlSingleBone
		constexpr auto m_PawnOwner = 0x124; // ObjectProperty
		constexpr auto m_bInvertStrengthFromAmmo = 0x12c; // uint32_t : 1
		constexpr auto m_fFlatInterpolationRateDecrease = 0x130; // float
		constexpr auto m_fInterpolationRateDecrease = 0x134; // float
		constexpr auto m_fFlatInterpolationRateIncrease = 0x138; // float
		constexpr auto m_fInterpolationRateIncrease = 0x13c; // float
		constexpr auto m_nMaxAmmoFallback = 0x140; // int32_t
	}

	namespace n_ULandscapeComponent { // : UPrimitiveComponent
		constexpr auto SectionBaseX = 0x24c; // int32_t
		constexpr auto SectionBaseY = 0x250; // int32_t
		constexpr auto ComponentSizeQuads = 0x254; // int32_t
		constexpr auto SubsectionSizeQuads = 0x258; // int32_t
		constexpr auto NumSubsections = 0x25c; // int32_t
		constexpr auto OverrideMaterial = 0x260; // ObjectProperty
		constexpr auto MaterialInstance = 0x268; // ObjectProperty
		constexpr auto WeightmapLayerAllocations = 0x270; // TArray<FWeightmapLayerAllocationInfo>
		constexpr auto WeightmapTextures = 0x280; // TArray<ObjectProperty>
		constexpr auto WeightmapData = 0x290; // FIndirectArray_Mirror
		constexpr auto WeightmapScaleBias = 0x2a0; // FVector4
		constexpr auto WeightmapSubsectionOffset = 0x2b0; // float
		constexpr auto HeightmapScaleBias = 0x2c0; // FVector4
		constexpr auto HeightmapTexture = 0x2d0; // ObjectProperty
		constexpr auto CachedBoxSphereBounds = 0x2d8; // FBoxSphereBounds
		constexpr auto CachedLocalBox = 0x2f4; // FBox
		constexpr auto ShadowMaps = 0x310; // TArray<ObjectProperty>
		constexpr auto IrrelevantLights = 0x320; // TArray<FGuid>
		constexpr auto LightMap = 0x330; // FLightMapRef
		constexpr auto EditToolRenderData = 0x338; // FPointer
		constexpr auto CollisionMipLevel = 0x340; // int32_t
		constexpr auto PlatformData = 0x344; // FPointer
		constexpr auto PlatformDataSize = 0x34c; // int32_t
		constexpr auto bNeedPostUndo = 0x350; // uint32_t : 1
		constexpr auto ForcedLOD = 0x354; // int32_t
		constexpr auto NeighborLOD = 0x358; // char [0x8]
		constexpr auto NeighborLODBias = 0x360; // char [0x8]
		constexpr auto LODBias = 0x368; // int32_t
	}

	namespace n_ATgDevice_YingInhand { // : ATgDevice
		constexpr auto m_CachedYingPawn = 0xa08; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_DistanceFromObjective { // : UTgInvListener
		constexpr auto m_bIsActive = 0xc4; // uint32_t : 1
		constexpr auto m_fTimeNearObjective = 0xc8; // float
		constexpr auto m_nNumStacksApplied = 0xcc; // int32_t
		constexpr auto m_CachedCharacterPawn = 0xd0; // ObjectProperty
	}

	namespace n_UMaterialExpressionTextureSample { // : UMaterialExpression
		constexpr auto Texture = 0xb0; // ObjectProperty
		constexpr auto Coordinates = 0xb8; // FExpressionInput
		constexpr auto TextureObject = 0xec; // FExpressionInput
	}

	namespace n_APickupFactory { // : ANavigationPoint
		constexpr auto bOnlyReplicateHidden = 0x378; // uint32_t : 1
		constexpr auto bPickupHidden = 0x378; // uint32_t : 1
		constexpr auto bPredictRespawns = 0x378; // uint32_t : 1
		constexpr auto bIsSuperItem = 0x378; // uint32_t : 1
		constexpr auto bRespawnPaused = 0x378; // uint32_t : 1
		constexpr auto InventoryType = 0x37c; // AInventory*
		constexpr auto RespawnEffectTime = 0x384; // float
		constexpr auto MaxDesireability = 0x388; // float
		constexpr auto PickupMesh = 0x38c; // ComponentProperty
		constexpr auto ReplacementFactory = 0x394; // ObjectProperty
		constexpr auto OriginalFactory = 0x39c; // ObjectProperty
	}

	namespace n_UInterpTrackMoveAxis { // : UInterpTrackFloatBase
		constexpr auto MoveAxis = 0xb8; // EInterpMoveAxis
		constexpr auto LookupTrack = 0xbc; // FInterpLookupTrack
	}

	namespace n_UUIComponent_ChestDisplayWithCTA { // : UUIComponent_Display
		constexpr auto m_pCTA = 0x124; // ObjectProperty
		constexpr auto m_pChestDisplay = 0x12c; // ObjectProperty
	}

	namespace n_UNavMeshGoal_GenericFilterContainer { // : UNavMeshPathGoalEvaluator
		constexpr auto GoalFilters = 0x7c; // TArray<ObjectProperty>
		constexpr auto SuccessfulGoal = 0x8c; // FPointer
		constexpr auto MyNavigationHandle = 0x94; // ObjectProperty
		constexpr auto SeedLocations = 0x9c; // TArray<FVector>
	}

	namespace n_UUIScene_UIAcquisition { // : UUIScene
		constexpr auto m_AcquisitionInput = 0x1cc; // ObjectProperty
	}

	namespace n_USeqAct_PlaySound { // : USeqAct_Latent
		constexpr auto PlaySound = 0x120; // ObjectProperty
		constexpr auto ExtraDelay = 0x128; // float
		constexpr auto bDelayReached = 0x12c; // uint32_t : 1
		constexpr auto bSuppressSubtitles = 0x12c; // uint32_t : 1
		constexpr auto bStopped = 0x12c; // uint32_t : 1
		constexpr auto SoundDuration = 0x130; // float
		constexpr auto FadeInTime = 0x134; // float
		constexpr auto FadeOutTime = 0x138; // float
		constexpr auto VolumeMultiplier = 0x13c; // float
		constexpr auto PitchMultiplier = 0x140; // float
		constexpr auto BeforeEndTime = 0x144; // float
	}

	namespace n_ATgDevice_GuardianChainAttack { // : ATgDevice_ChainSequence
		constexpr auto m_fPauseAttackChainDuration = 0xa14; // float
		constexpr auto m_vProjectileSpawnOffset2 = 0xa18; // FVector
		constexpr auto m_vProjectileSpawnOffset3 = 0xa24; // FVector
	}

	namespace n_AVolume { // : ABrush
		constexpr auto AssociatedActor = 0x2b0; // ObjectProperty
		constexpr auto bForcePawnWalk = 0x2b8; // uint32_t : 1
		constexpr auto bProcessAllActors = 0x2b8; // uint32_t : 1
		constexpr auto bExcludeNavmesh = 0x2b8; // uint32_t : 1
		constexpr auto bPawnsOnly = 0x2b8; // uint32_t : 1
		constexpr auto bLocalPawnsOnly = 0x2b8; // uint32_t : 1
	}

	namespace n_ATgSilhouetteManager { // : AActor
		constexpr auto m_Owner = 0x280; // ObjectProperty
		constexpr auto m_bSilhouettesEnabled = 0x288; // uint32_t : 1
		constexpr auto m_bForceSilhouetteVisible = 0x288; // uint32_t : 1
		constexpr auto m_SilhouetteInfos = 0x28c; // TArray<FTgSilhouetteInfo>
		constexpr auto m_SilhouetteClass = 0x29c; // UTgSilhouetteComponent*
	}

	namespace n_UFont { // : UObject
		constexpr auto Characters = 0x60; // TArray<FFontCharacter>
		constexpr auto Textures = 0x70; // TArray<ObjectProperty>
		constexpr auto CharRemap = 0x80; // TMap<None, None>
		constexpr auto IsRemapped = 0xc8; // int32_t
		constexpr auto EmScale = 0xcc; // float
		constexpr auto Ascent = 0xd0; // float
		constexpr auto Descent = 0xd4; // float
		constexpr auto Leading = 0xd8; // float
		constexpr auto Kerning = 0xdc; // int32_t
		constexpr auto ImportOptions = 0xe0; // FFontImportOptionsData
		constexpr auto NumCharacters = 0x188; // int32_t
		constexpr auto MaxCharHeight = 0x18c; // TArray<int32_t>
		constexpr auto ScalingFactor = 0x19c; // float
	}

	namespace n_ATgDevice_Drag { // : ATgDevice
		constexpr auto m_PullTarget = 0xa08; // ObjectProperty
		constexpr auto m_TargetInitialRotation = 0xa10; // FRotator
		constexpr auto m_fPullStartTime = 0xa1c; // float
		constexpr auto m_StunnedTarget = 0xa20; // ObjectProperty
		constexpr auto r_ClientPullTarget = 0xa28; // ObjectProperty
		constexpr auto m_fTruePostfireTime = 0xa30; // float
		constexpr auto m_fPullVelocityBreakFactor = 0xa34; // float
		constexpr auto m_fPullVerticalEndOffset = 0xa38; // float
		constexpr auto m_fMaxPullTime = 0xa3c; // float
		constexpr auto m_fPrePullTime = 0xa40; // float
		constexpr auto m_fPullEndOffset = 0xa44; // float
		constexpr auto m_fPullSpeed = 0xa48; // float
		constexpr auto m_fPullEndStunDuration = 0xa4c; // float
		constexpr auto m_bCanStillPull = 0xa50; // uint32_t : 1
		constexpr auto m_bNeedsDelayedServerEndPull = 0xa50; // uint32_t : 1
		constexpr auto m_bNeedsDelayedClientEndPull = 0xa50; // uint32_t : 1
		constexpr auto m_bHasPulledOnce = 0xa50; // uint32_t : 1
		constexpr auto m_bPullMissed = 0xa50; // uint32_t : 1
		constexpr auto m_vEndLocation = 0xa54; // FVector
		constexpr auto m_CachedPawnOwner = 0xa60; // ObjectProperty
	}

	namespace n_UGFxAction_GetVariable { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_UDistributionVector { // : UComponent
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_UTgDeviceMod_Burst { // : UObject
		constexpr auto m_nBurstTotalShots = 0x60; // int32_t
		constexpr auto m_nBurstShotsRemaining = 0x64; // int32_t
		constexpr auto m_bIsFirstBurstShot = 0x68; // uint32_t : 1
		constexpr auto m_bOnlyFirstBurstCostsAmmo = 0x68; // uint32_t : 1
		constexpr auto m_bBurstCanBeInterrupted = 0x68; // uint32_t : 1
		constexpr auto m_bCanEndBurstEarly = 0x68; // uint32_t : 1
		constexpr auto m_bPlayFireOnFirstShotOnly = 0x68; // uint32_t : 1
		constexpr auto c_bBurstPendingStopFire = 0x68; // uint32_t : 1
		constexpr auto s_bInBurstRecovery = 0x68; // uint32_t : 1
		constexpr auto s_bIsStartingBurstFire = 0x68; // uint32_t : 1
		constexpr auto m_fTimeBetweenShots = 0x6c; // float
	}

	namespace n_UUIComponent_MatchInviteWithJoin { // : UUIComponent_MatchInvite
		constexpr auto m_mcFade = 0x14c; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x154; // ObjectProperty
		constexpr auto m_mcPrompt = 0x15c; // ObjectProperty
		constexpr auto m_pButton = 0x164; // ObjectProperty
		constexpr auto m_pJoinAction = 0x16c; // ObjectProperty
		constexpr auto m_akShown = 0x174; // ObjectProperty
		constexpr auto m_akSelect = 0x17c; // ObjectProperty
		constexpr auto m_QueuePopWaveform = 0x184; // ObjectProperty
	}

	namespace n_AScout { // : APawn
		constexpr auto PathSizes = 0x5a8; // TArray<FPathSizeInfo>
		constexpr auto TestJumpZ = 0x5b8; // float
		constexpr auto TestGroundSpeed = 0x5bc; // float
		constexpr auto TestMaxFallSpeed = 0x5c0; // float
		constexpr auto TestFallSpeed = 0x5c4; // float
		constexpr auto MaxLandingVelocity = 0x5c8; // float
		constexpr auto MinNumPlayerStarts = 0x5cc; // int32_t
		constexpr auto DefaultReachSpecClass = 0x5d0; // UReachSpec*
		constexpr auto EdgePathColors = 0x5d8; // TArray<FColor>
		constexpr auto NavMeshGen_StepSize = 0x5e8; // float
		constexpr auto NavMeshGen_EntityHalfHeight = 0x5ec; // float
		constexpr auto NavMeshGen_StartingHeightOffset = 0x5f0; // float
		constexpr auto NavMeshGen_MaxDropHeight = 0x5f4; // float
		constexpr auto NavMeshGen_MaxStepHeight = 0x5f8; // float
		constexpr auto NavMeshGen_VertZDeltaSnapThresh = 0x5fc; // float
		constexpr auto NavMeshGen_MinPolyArea = 0x600; // float
		constexpr auto NavMeshGen_BorderBackfill_CheckDist = 0x604; // float
		constexpr auto NavMeshGen_MinMergeDotAreaThreshold = 0x608; // float
		constexpr auto NavMeshGen_MinMergeDotSmallArea = 0x60c; // float
		constexpr auto NavMeshGen_MinMergeDotLargeArea = 0x610; // float
		constexpr auto NavMeshGen_MaxPolyHeight = 0x614; // float
		constexpr auto NavMeshGen_HeightMergeThreshold = 0x618; // float
		constexpr auto NavMeshGen_EdgeMaxDelta = 0x61c; // float
		constexpr auto NavMeshGen_MaxGroundCheckSize = 0x620; // float
		constexpr auto NavMeshGen_MinEdgeLength = 0x624; // float
		constexpr auto NavMeshGen_MinRadius = 0x628; // float
		constexpr auto NavMeshGen_MaxRadius = 0x62c; // float
		constexpr auto StandardJumpHeight = 0x630; // float
		constexpr auto StandardJumpDistance = 0x634; // float
		constexpr auto NavMeshGen_RecastCellSize = 0x638; // float
		constexpr auto NavMeshGen_RecastCellHeight = 0x63c; // float
		constexpr auto NavMeshGen_RecastErodeRadius = 0x640; // float
		constexpr auto NavMeshGen_ExpansionDoObstacleMeshSimplification = 0x644; // uint32_t : 1
		constexpr auto bHightlightOneWayReachSpecs = 0x644; // uint32_t : 1
		constexpr auto MinMantleFallDist = 0x648; // float
		constexpr auto MaxMantleFallDist = 0x64c; // float
		constexpr auto MinMantleLateralDist = 0x650; // float
		constexpr auto MaxMantleLateralDist = 0x654; // float
		constexpr auto MaxMantleFallTime = 0x658; // float
	}

	namespace n_UUIScene_UISendGift { // : UUIScene
		constexpr auto m_grSendGift = 0x1cc; // ObjectProperty
		constexpr auto m_nChestScroll = 0x1d4; // int32_t
		constexpr auto m_bCanNavChests = 0x1d8; // uint32_t : 1
		constexpr auto m_dwGifteePlayerId = 0x1dc; // Fdword
		constexpr auto m_mcContainer = 0x1e0; // ObjectProperty
		constexpr auto m_mcFriendInput = 0x1e8; // ObjectProperty
		constexpr auto m_mcGiftDetails = 0x1f0; // ObjectProperty
		constexpr auto m_pPlayerDisplay = 0x1f8; // ObjectProperty
		constexpr auto m_pFriendsList = 0x200; // ObjectProperty
		constexpr auto m_pChestList = 0x208; // ObjectProperty
		constexpr auto m_pGiftOption = 0x210; // ObjectProperty
		constexpr auto m_pMessageOption = 0x218; // ObjectProperty
		constexpr auto m_pAnonymousOption = 0x220; // ObjectProperty
		constexpr auto m_pHoldPrompt = 0x228; // ObjectProperty
		constexpr auto m_pSendGiftButton = 0x230; // ObjectProperty
		constexpr auto m_pNavLeftAction = 0x238; // ObjectProperty
		constexpr auto m_pNavRightAction = 0x240; // ObjectProperty
		constexpr auto m_pScrollUpAction = 0x248; // ObjectProperty
		constexpr auto m_pScrollDownAction = 0x250; // ObjectProperty
		constexpr auto m_pToggleSenderAction = 0x258; // ObjectProperty
		constexpr auto m_pGoBackAction = 0x260; // ObjectProperty
	}

	namespace n_UTgCameraModule_ThirdPerson { // : UTgCameraModule
		constexpr auto vBaseCameraOffset = 0x68; // FVector
		constexpr auto vForcedCameraOffset = 0x74; // FVector
		constexpr auto vCurrentCameraOffset = 0x80; // FVector
		constexpr auto vPreviousCameraOffset = 0x8c; // FVector
		constexpr auto fCameraOffsetLerpDuration = 0x98; // float
		constexpr auto fCameraOffsetLerpTimer = 0x9c; // float
		constexpr auto fZoomFactorInterp = 0xa0; // float
		constexpr auto fZoomFactor = 0xa4; // float
		constexpr auto fZoomStep = 0xa8; // float
		constexpr auto fZoomMax = 0xac; // float
		constexpr auto fMountZoomMax = 0xb0; // float
		constexpr auto fZoomMin = 0xb4; // float
		constexpr auto fZoom3pPercentFromTo = 0xb8; // FVector2D
		constexpr auto fZoomDuration = 0xc0; // float
		constexpr auto fZoomDurationOverride = 0xc4; // float
		constexpr auto fZoomUsedTime = 0xc8; // float
		constexpr auto ePreviousPerspectiveType = 0xcc; // CameraPerspectiveType
		constexpr auto ePerspectiveType = 0xcd; // CameraPerspectiveType
		constexpr auto bForce3PView = 0xd0; // uint32_t : 1
		constexpr auto vServerCorrectionDelta = 0xd4; // FVector
		constexpr auto vAvgServerCorrectionDelta = 0xe0; // FVector
		constexpr auto vLastDesiredLocation = 0xec; // FVector
		constexpr auto CorrectionSmoothing = 0xf8; // FServerCorrectionSmoothingParams
	}

	namespace n_ATgProj_GrumpyBomb { // : ATgProj_FreeGrenade
		constexpr auto m_Silhouette = 0x580; // ComponentProperty
		constexpr auto m_bSilhouetteInitialized = 0x588; // uint32_t : 1
		constexpr auto m_bSilhouetteAllowed = 0x588; // uint32_t : 1
		constexpr auto m_fPostLandDurationAccelerant = 0x58c; // float
	}

	namespace n_ATgDevice_Survival { // : ATgDevice
		constexpr auto m_ThrustDevice = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_ShellSpin { // : ATgDevice_Charge
		constexpr auto m_fZoomDurationOverride = 0xa7c; // float
	}

	namespace n_UTgAIBehaviorAction_SetAimDevice { // : UTgAIBehaviorAction
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
	}

	namespace n_ATgDevice_LongReach { // : ATgDevice
		constexpr auto m_fMinPullSpeed = 0xa08; // float
		constexpr auto m_fMaxPullSpeed = 0xa0c; // float
		constexpr auto m_fTimeToMaxPullSpeed = 0xa10; // float
		constexpr auto m_fPullSpeedInterpExp = 0xa14; // float
		constexpr auto m_CachedTgP = 0xa18; // ObjectProperty
		constexpr auto s_TouchingNuggets = 0xa20; // TArray<FNuggetPullVals>
		constexpr auto m_fBlockedByBlockersRecheckTime = 0xa30; // float
		constexpr auto s_CollisionProxy = 0xa34; // ObjectProperty
		constexpr auto s_bIsAuraActive = 0xa3c; // uint32_t : 1
		constexpr auto m_bAutoActivateAura = 0xa3c; // uint32_t : 1
	}

	namespace n_UInterpTrackParticleReplay { // : UInterpTrack
		constexpr auto TrackKeys = 0xa0; // TArray<FParticleReplayTrackKey>
		constexpr auto bIsCapturingReplay = 0xb0; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByAmmo { // : UTgAnimNodeBlendList
		constexpr auto m_nDefaultChild = 0x168; // int32_t
		constexpr auto m_EquipPoint = 0x16c; // TG_EQUIP_POINT
		constexpr auto m_bDelayUpdateUntilReplay = 0x170; // uint32_t : 1
		constexpr auto m_bCheckAmmoPerTick = 0x170; // uint32_t : 1
		constexpr auto m_ChildAmmoParams = 0x174; // TArray<FAmmoBlendParams>
		constexpr auto m_nPendingChildIndex = 0x184; // int32_t
		constexpr auto m_nAmmoUpdateTickTag = 0x188; // int32_t
	}

	namespace n_UUIComponent_Tooltip { // : UUIComponent_Display
		constexpr auto m_eAlignHorz = 0x124; // UIALIGNINGTYPE
		constexpr auto m_eAlignVert = 0x125; // UIALIGNINGTYPE
		constexpr auto m_pDisplay = 0x128; // ObjectProperty
		constexpr auto m_fAnimInOutTime = 0x130; // float
		constexpr auto m_fAnimInDelay = 0x134; // float
		constexpr auto m_bApplyPositionAlignment = 0x138; // uint32_t : 1
		constexpr auto m_bUseGlobalPositioning = 0x138; // uint32_t : 1
		constexpr auto m_TF = 0x13c; // ObjectProperty
		constexpr auto m_BG = 0x144; // ObjectProperty
		constexpr auto m_nBGPadding = 0x14c; // int32_t
	}

	namespace n_AInstancedFoliageActor { // : AActor
		constexpr auto FoliageMeshes = 0x280; // FMap_Mirror
		constexpr auto SelectedMesh = 0x2c8; // ObjectProperty
		constexpr auto InstancedStaticMeshComponents = 0x2d0; // TArray<ComponentProperty>
		constexpr auto StreamingSerializationVersion = 0x2e0; // int32_t
		constexpr auto StreamingFilename = 0x2e4; // FString
		constexpr auto StreamGroups = 0x2f4; // FArray_Mirror
	}

	namespace n_UTgGameDataHandler { // : UTgDataHandler
		constexpr auto m_Game = 0x11c; // ObjectProperty
	}

	namespace n_UUIScene_UISettings { // : UUIScene
		constexpr auto m_LastOpenChatTab = 0x1cc; // ObjectProperty
	}

	namespace n_ATgAIAnnotation { // : ATgNavigationPoint
		constexpr auto VfTable_IInterface_AIAnnotation = 0x37c; // FPointer
		constexpr auto AnnotationType = 0x384; // EAIAnnotationType
		constexpr auto m_pClaimedBy = 0x388; // ObjectProperty
	}

	namespace n_UTgCameraModule_SpectatorOverview { // : UTgCameraModule_Spectator
		constexpr auto WorldViewRotation = 0x9c; // FRotator
		constexpr auto FOV = 0xa8; // float
		constexpr auto TargetZoomedFOV = 0xac; // float
		constexpr auto ZoomIncrement = 0xb0; // float
		constexpr auto MinZoom = 0xb4; // float
		constexpr auto MaxZoom = 0xb8; // float
		constexpr auto ZoomInterpTime = 0xbc; // float
		constexpr auto CurrentSpringLocation = 0xc0; // FVector
		constexpr auto PawnTargetSpringDamping = 0xcc; // float
		constexpr auto FreeCamSpringDamping = 0xd0; // float
		constexpr auto IgnoreSpringDistance = 0xd4; // float
		constexpr auto CameraPitchData = 0xd8; // TArray<FCameraPitchInfo>
		constexpr auto bFlippedSides = 0xe8; // uint32_t : 1
		constexpr auto bJustBecameActive = 0xe8; // uint32_t : 1
		constexpr auto bAutoZoomEnabled = 0xe8; // uint32_t : 1
		constexpr auto OverviewCameraInfluenceDist = 0xec; // float
		constexpr auto OverviewCameras = 0xf0; // TArray<ObjectProperty>
		constexpr auto TransparentTowerList = 0x100; // TArray<ObjectProperty>
		constexpr auto ObstacleTransparentExtent = 0x110; // FVector
		constexpr auto fMinAutoZoomFOVAngle = 0x11c; // float
		constexpr auto fMaxAutoZoomFOVAngle = 0x120; // float
		constexpr auto fMinAutoZoomDistance = 0x124; // float
		constexpr auto fMaxAutoZoomDistance = 0x128; // float
		constexpr auto fAutoZoomDetectionRadius = 0x12c; // float
		constexpr auto fAutoZoomInSpeed = 0x130; // float
		constexpr auto fAutoZoomOutSpeed = 0x134; // float
		constexpr auto fAutoZoomInLockOutTime = 0x138; // float
		constexpr auto fAutoZoomOutLockOutTime = 0x13c; // float
		constexpr auto m_RemainingAutoZoomInLockOutTime = 0x140; // float
		constexpr auto m_RemainingAutoZoomOutLockOutTime = 0x144; // float
	}

	namespace n_UParticleModuleLocationEmitterDirect { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x68; // FName
	}

	namespace n_AFileWriter { // : AInfo
		constexpr auto ArchivePtr = 0x280; // FPointer
		constexpr auto Filename = 0x288; // FString
		constexpr auto FileType = 0x298; // FWFileType
		constexpr auto bFlushEachWrite = 0x29c; // uint32_t : 1
		constexpr auto bWantsAsyncWrites = 0x29c; // uint32_t : 1
	}

	namespace n_UMobilePlayerInput { // : UPlayerInput
		constexpr auto Touches = 0x2d4; // FTouchData [0x5]
		constexpr auto InteractiveObject = 0x464; // ObjectProperty
		constexpr auto InteractiveObjectLastTime = 0x46c; // FDouble
		constexpr auto MobileInputGroups = 0x474; // TArray<FMobileInputGroup>
		constexpr auto CurrentMobileGroup = 0x484; // int32_t
		constexpr auto MobileInputZones = 0x488; // TArray<ObjectProperty>
		constexpr auto MobileInputZoneClasses = 0x498; // TArray<FMobileInputZoneClassMap>
		constexpr auto MobilePitch = 0x4a8; // float
		constexpr auto MobilePitchCenter = 0x4ac; // float
		constexpr auto MobilePitchMultiplier = 0x4b0; // float
		constexpr auto MobileYaw = 0x4b4; // float
		constexpr auto MobileYawCenter = 0x4b8; // float
		constexpr auto MobileYawMultiplier = 0x4bc; // float
		constexpr auto MobilePitchDeadzoneSize = 0x4c0; // float
		constexpr auto MobileYawDeadzoneSize = 0x4c4; // float
		constexpr auto MobileDoubleTapTime = 0x4c8; // float
		constexpr auto MobileMinHoldForTap = 0x4cc; // float
		constexpr auto MobileTapRepeatTime = 0x4d0; // float
		constexpr auto bAllowTouchesInCinematic = 0x4d4; // uint32_t : 1
		constexpr auto bDisableTouchInput = 0x4d4; // uint32_t : 1
		constexpr auto bAbsoluteTouchLocations = 0x4d4; // uint32_t : 1
		constexpr auto bCollapseTouchInput = 0x4d4; // uint32_t : 1
		constexpr auto bFakeMobileTouches = 0x4d4; // uint32_t : 1
		constexpr auto bDisableSceneRender = 0x4d4; // uint32_t : 1
		constexpr auto ZoneTimeout = 0x4d8; // float
		constexpr auto MobileMenuStack = 0x4dc; // TArray<ObjectProperty>
		constexpr auto NativeDebugString = 0x4ec; // FString
		constexpr auto MobileInactiveTime = 0x4fc; // float
		constexpr auto MobileSeqEventHandlers = 0x500; // TArray<ObjectProperty>
		constexpr auto MobileRawInputSeqEventHandlers = 0x510; // TArray<ObjectProperty>
		constexpr auto MobileViewportOffset = 0x520; // FVector2D
		constexpr auto MobileViewportSize = 0x528; // FVector2D
		constexpr auto __OnTouchNotHandledInMenu__Delegate = 0x530; // DelegateProperty
		constexpr auto __OnPreviewTouch__Delegate = 0x540; // DelegateProperty
		constexpr auto __OnInputTouch__Delegate = 0x550; // DelegateProperty
	}

	namespace n_UTgInvListener_SteadyAim { // : UTgInvListener
		constexpr auto m_nSteadyAimStackCount = 0xc4; // int32_t
		constexpr auto m_fFullyChargedHitTime = 0xc8; // float
	}

	namespace n_USceneCaptureReflectComponent { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto ScaleFOV = 0xd8; // float
		constexpr auto ActorsToReflect = 0xdc; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_RocketLauncher { // : ATgDevice
		constexpr auto m_vProjectileSpawnOffset2 = 0xa08; // FVector
		constexpr auto m_nFireCount = 0xa14; // int32_t
	}

	namespace n_UTgAnimNotify_AudioGroup { // : UAnimNotify
		constexpr auto c_PreviewSound = 0x68; // ObjectProperty
		constexpr auto c_SoundCueName = 0x70; // FName
		constexpr auto c_eMeshSource = 0x78; // TG_MESH_SOURCE
	}

	namespace n_UOnlineGameSettings { // : USettings
		constexpr auto NumPublicConnections = 0xa0; // int32_t
		constexpr auto NumPrivateConnections = 0xa4; // int32_t
		constexpr auto NumOpenPublicConnections = 0xa8; // int32_t
		constexpr auto NumOpenPrivateConnections = 0xac; // int32_t
		constexpr auto ServerNonce = 0xb0; // FQWord
		constexpr auto ServiceConfigId = 0xb8; // FString
		constexpr auto SessionTemplateName = 0xc8; // FString
		constexpr auto MatchHopperName = 0xd8; // FString
		constexpr auto SessionGuid = 0xe8; // FString
		constexpr auto SessionHandle = 0xf8; // FString
		constexpr auto ReservedMembers = 0x108; // TArray<FUniqueNetId>
		constexpr auto bShouldAdvertise = 0x118; // uint32_t : 1
		constexpr auto bIsLanMatch = 0x118; // uint32_t : 1
		constexpr auto bUsesStats = 0x118; // uint32_t : 1
		constexpr auto bAllowJoinInProgress = 0x118; // uint32_t : 1
		constexpr auto bPublic = 0x118; // uint32_t : 1
		constexpr auto bAllowInvites = 0x118; // uint32_t : 1
		constexpr auto bUsesPresence = 0x118; // uint32_t : 1
		constexpr auto bAllowJoinViaPresence = 0x118; // uint32_t : 1
		constexpr auto bAllowJoinViaPresenceFriendsOnly = 0x118; // uint32_t : 1
		constexpr auto bUsesArbitration = 0x118; // uint32_t : 1
		constexpr auto bAntiCheatProtected = 0x118; // uint32_t : 1
		constexpr auto bWasFromInvite = 0x118; // uint32_t : 1
		constexpr auto bIsDedicated = 0x118; // uint32_t : 1
		constexpr auto bHasSkillUpdateInProgress = 0x118; // uint32_t : 1
		constexpr auto bShouldShrinkArbitratedSessions = 0x118; // uint32_t : 1
		constexpr auto OwningPlayerName = 0x11c; // FString
		constexpr auto OwningPlayerId = 0x12c; // FUniqueNetId
		constexpr auto PingInMs = 0x134; // int32_t
		constexpr auto MatchQuality = 0x138; // float
		constexpr auto GameState = 0x13c; // EOnlineGameState
		constexpr auto BuildUniqueId = 0x140; // int32_t
	}

	namespace n_UInterpTrackFloatBase { // : UInterpTrack
		constexpr auto FloatTrack = 0xa0; // FInterpCurveFloat
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_AWindDirectionalSource { // : AInfo
		constexpr auto Component = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_ToggleADS { // : ATgDevice_ToggleWithLockout
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa14; // FPointer
		constexpr auto m_bDelayMoveSpeedPenalty = 0xa1c; // uint32_t : 1
		constexpr auto m_bIsZoomed = 0xa1c; // uint32_t : 1
	}

	namespace n_ATgDeploy_EffectAura { // : ATgDeploy_MatchParentFireMode
		constexpr auto r_fRadiusScale = 0x46c; // float
		constexpr auto m_TouchingActors = 0x470; // TArray<ObjectProperty>
		constexpr auto m_AffectedActors = 0x480; // TArray<ObjectProperty>
		constexpr auto m_fLastBlockedByBlockersTime = 0x490; // float
		constexpr auto m_fMinBlockedByBlockersTime = 0x494; // float
		constexpr auto m_BlockedActors = 0x498; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0x4a8; // ObjectProperty
	}

	namespace n_UParticleModuleSubUVSelect { // : UParticleModuleSubUVBase
		constexpr auto SubImageSelect = 0x68; // FRawDistributionVector
	}

	namespace n_ATgDevice_DruidLastStand { // : ATgDevice
		constexpr auto m_CachedDruid = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Turret { // : UTgDeviceForm
		constexpr auto m_SKCTurretScale = 0x28c; // ObjectProperty
	}

	namespace n_ATgDevice_Headhunter { // : ATgDevice_Stim
		constexpr auto m_CachedInhandDevice = 0xa08; // ObjectProperty
		constexpr auto m_CachedSniperModeDevice = 0xa10; // ObjectProperty
		constexpr auto m_bCamFXEnabled = 0xa18; // uint32_t : 1
	}

	namespace n_UGameAICmd_Hover_MoveToGoal { // : UGameAICommand
		constexpr auto Path = 0x84; // ObjectProperty
		constexpr auto Find = 0x8c; // ObjectProperty
		constexpr auto Goal = 0x94; // ObjectProperty
		constexpr auto Radius = 0x9c; // float
		constexpr auto bWasFiring = 0xa0; // uint32_t : 1
		constexpr auto DesiredHoverHeight = 0xa4; // float
		constexpr auto CurrentHoverHeight = 0xa8; // float
		constexpr auto SubGoalReachDist = 0xac; // float
		constexpr auto GoalDistance = 0xb0; // float
		constexpr auto MoveVectDest = 0xb4; // FVector
		constexpr auto CurrentSpec = 0xc0; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileAlliesNear { // : UTgInvListener
		constexpr auto m_fPawnCheckRateInterval = 0xc4; // float
		constexpr auto m_fTimeUntilNextPawnCheck = 0xc8; // float
		constexpr auto m_bAppliedToSelf = 0xcc; // uint32_t : 1
		constexpr auto m_AlliesInRange = 0xd0; // TArray<int32_t>
	}

	namespace n_UUIData_LeagueEOM { // : UUIData
		constexpr auto m_pLeague = 0x64; // ObjectProperty
		constexpr auto m_pTier = 0x6c; // ObjectProperty
		constexpr auto m_nGameId = 0x74; // int32_t
		constexpr auto m_nPointChange = 0x78; // int32_t
		constexpr auto m_nCurrentPoints = 0x7c; // int32_t
		constexpr auto m_nWins = 0x80; // int32_t
		constexpr auto m_nLosses = 0x84; // int32_t
		constexpr auto m_nMatchesPlayed = 0x88; // int32_t
		constexpr auto m_TierChange = 0x8c; // ObjectProperty
	}

	namespace n_UInterpTrackInstFloatProp { // : UInterpTrackInstProperty
		constexpr auto FloatProp = 0x70; // FPointer
		constexpr auto ResetFloat = 0x78; // float
		constexpr auto DistributionProp = 0x7c; // FPointer
	}

	namespace n_UTgAnimNotify_SetMICStates { // : UAnimNotify
		constexpr auto MICStateName = 0x68; // FName
		constexpr auto FromMICStateName = 0x70; // FName
		constexpr auto fInterpTime = 0x78; // float
		constexpr auto nMaterialIndex = 0x7c; // int32_t
		constexpr auto bApplyToChildMeshes = 0x80; // uint32_t : 1
	}

	namespace n_UUIComponent_MVP { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
		constexpr auto m_mcEquipableTitle = 0x134; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x13c; // ObjectProperty
		constexpr auto m_mcIcon = 0x144; // ObjectProperty
		constexpr auto m_mcFrame = 0x14c; // ObjectProperty
		constexpr auto m_pPlayerName = 0x154; // ObjectProperty
		constexpr auto m_grButtons = 0x15c; // ObjectProperty
		constexpr auto m_mcCommendationButtonTooltip = 0x164; // ObjectProperty
		constexpr auto m_CommendationButton = 0x16c; // ObjectProperty
		constexpr auto m_mcCommendationPanel = 0x174; // ObjectProperty
		constexpr auto m_CommendTeam = 0x17c; // ObjectProperty
		constexpr auto m_CommendLead = 0x184; // ObjectProperty
		constexpr auto m_CommendSkill = 0x18c; // ObjectProperty
		constexpr auto m_pCommendationInputBack = 0x194; // ObjectProperty
	}

	namespace n_ATgDevice_Mount { // : ATgDevice_Toggle
		constexpr auto m_bForceFireDueToRespawn = 0xa0c; // uint32_t : 1
		constexpr auto m_bDismountProtection = 0xa0c; // uint32_t : 1
		constexpr auto m_bAutoMounting = 0xa0c; // uint32_t : 1
		constexpr auto m_fZoomDurationOverride = 0xa10; // float
		constexpr auto m_CachedInhands = 0xa14; // TArray<ObjectProperty>
		constexpr auto m_fAutoMountDismountProtectionDuration = 0xa24; // float
	}

	namespace n_UTgLocalPlayer { // : ULocalPlayer
		constexpr auto m_fViewScale = 0x46c; // float
		constexpr auto m_vViewPan = 0x470; // FVector
		constexpr auto m_bEnableOutlineEffect = 0x47c; // uint32_t : 1
		constexpr auto m_bEnableColorBlindEffect = 0x47c; // uint32_t : 1
		constexpr auto m_bBlurForeground = 0x47c; // uint32_t : 1
		constexpr auto m_fHitOnlyAlpha = 0x480; // float
		constexpr auto m_fHealthOnlyAlpha = 0x484; // float
		constexpr auto m_fHealthPPAlpha = 0x488; // float
		constexpr auto m_fDeathDesatPPAlpha = 0x48c; // float
		constexpr auto m_eColorBlindEffectType = 0x490; // int32_t
		constexpr auto m_fColorBlindIntensity = 0x494; // float
		constexpr auto m_fTargetBlurAmount = 0x498; // float
		constexpr auto m_fBlurAmount = 0x49c; // float
		constexpr auto m_fBlurInterpSpeed = 0x4a0; // float
		constexpr auto m_fBlurKernelSize = 0x4a4; // float
		constexpr auto m_eCurrentDOFType = 0x4a8; // EDOFType
	}

	namespace n_UUIComponent_TorvaldShieldText { // : UUIComponent_Display
		constexpr auto m_mcShieldTextContainer = 0x124; // ObjectProperty
		constexpr auto m_mcCurrentShieldText = 0x12c; // ObjectProperty
		constexpr auto m_mcMaxShieldText = 0x134; // ObjectProperty
		constexpr auto m_fCurrentShield = 0x13c; // float
		constexpr auto m_fMaxShield = 0x140; // float
		constexpr auto m_bVisible = 0x144; // uint32_t : 1
	}

	namespace n_UMaterialExpressionStaticBoolParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0xd0; // uint32_t : 1
		constexpr auto ExtendedCaptionDisplay = 0xd0; // uint32_t : 1
		constexpr auto InstanceOverride = 0xd4; // FPointer
	}

	namespace n_ATgEmitter_CameraEffect { // : ATgEmitter
		constexpr auto m_fDistFromCamera = 0x29c; // float
		constexpr auto m_bShowOnlyIn1P = 0x2a0; // uint32_t : 1
		constexpr auto m_bShowOnlyIn3P = 0x2a0; // uint32_t : 1
		constexpr auto m_bIsIn1P = 0x2a0; // uint32_t : 1
		constexpr auto m_bIsCameraEffectActive = 0x2a0; // uint32_t : 1
		constexpr auto m_SoundList = 0x2a4; // TArray<FFx_Sound>
		constexpr auto m_nSourceFxId = 0x2b4; // int32_t
		constexpr auto m_EffectSourcePawn = 0x2b8; // ObjectProperty
	}

	namespace n_ATgDevice_BunnyLink { // : ATgDevice
		constexpr auto m_CachedBunny = 0xa08; // ObjectProperty
		constexpr auto m_CandidateSpiritLinkTarget = 0xa10; // ObjectProperty
		constexpr auto m_CurrentSpiritLinkTarget = 0xa18; // ObjectProperty
		constexpr auto m_fLinkedDamageHealthFloor = 0xa20; // float
		constexpr auto m_fSpiritLinkBreakThreshold = 0xa24; // float
		constexpr auto m_LinkDeviceMode = 0xa28; // ObjectProperty
	}

	namespace n_ATgProj_Vine { // : ATgProj_Simulated
		constexpr auto m_VineForm = 0x52c; // ObjectProperty
	}

	namespace n_ATgGameInfo_TeamDeathMatch { // : ATgGameInfo
		constexpr auto m_bSpawnInputLock = 0x280; // uint32_t : 1
		constexpr auto m_bAllowSpawnGuardDuringDeviceFire = 0x280; // uint32_t : 1
	}

	namespace n_UInterpTrackDirector { // : UInterpTrack
		constexpr auto CutTrack = 0xa0; // TArray<FDirectorTrackCut>
		constexpr auto bSimulateCameraCutsOnClients = 0xb0; // uint32_t : 1
		constexpr auto fIntroFadeTime = 0xb4; // float
		constexpr auto fOutroFadeTime = 0xb8; // float
	}

	namespace n_UTgGamePhase_PlayMovie { // : UTgGamePhase
		constexpr auto m_nVideoPathId = 0xb8; // int32_t
		constexpr auto m_bYieldOnlyWhenFinished = 0xbc; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_CombatRepair { // : UTgInvListener
		constexpr auto m_CachedPawnOwner = 0xc4; // ObjectProperty
	}

	namespace n_UTgSeqAct_UIElementVisibility { // : USequenceAction
		constexpr auto ShowElement = 0x108; // uint32_t : 1
		constexpr auto UISceneName = 0x10c; // FString
		constexpr auto UIElementName = 0x11c; // FString
	}

	namespace n_USpeedTreeActorFactory { // : UActorFactory
		constexpr auto SpeedTree = 0x9c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearbyGodCount { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bMustBeInForwardCone = 0x9c; // uint32_t : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UGameThirdPersonCameraMode { // : UObject
		constexpr auto ThirdPersonCam = 0x60; // ObjectProperty
		constexpr auto FOVAngle = 0x68; // float
		constexpr auto BlendTime = 0x6c; // float
		constexpr auto bLockedToViewTarget = 0x70; // uint32_t : 1
		constexpr auto bDirectLook = 0x70; // uint32_t : 1
		constexpr auto bFollowTarget = 0x70; // uint32_t : 1
		constexpr auto bInterpLocation = 0x70; // uint32_t : 1
		constexpr auto bUsePerAxisOriginLocInterp = 0x70; // uint32_t : 1
		constexpr auto bInterpRotation = 0x70; // uint32_t : 1
		constexpr auto bRotInterpSpeedConstant = 0x70; // uint32_t : 1
		constexpr auto bDoPredictiveAvoidance = 0x70; // uint32_t : 1
		constexpr auto bValidateWorstLoc = 0x70; // uint32_t : 1
		constexpr auto bSkipCameraCollision = 0x70; // uint32_t : 1
		constexpr auto bSmoothViewOffsetPitchChanges = 0x70; // uint32_t : 1
		constexpr auto bApplyDeltaViewOffset = 0x70; // uint32_t : 1
		constexpr auto bAdjustDOF = 0x70; // uint32_t : 1
		constexpr auto bDOFUpdated = 0x70; // uint32_t : 1
		constexpr auto bNoFOVPostProcess = 0x70; // uint32_t : 1
		constexpr auto bInterpViewOffsetOnlyForCamTransition = 0x70; // uint32_t : 1
		constexpr auto FollowingInterpSpeed_Pitch = 0x74; // float
		constexpr auto FollowingInterpSpeed_Yaw = 0x78; // float
		constexpr auto FollowingInterpSpeed_Roll = 0x7c; // float
		constexpr auto FollowingCameraVelThreshold = 0x80; // float
		constexpr auto OriginLocInterpSpeed = 0x84; // float
		constexpr auto PerAxisOriginLocInterpSpeed = 0x88; // FVector
		constexpr auto OriginRotInterpSpeed = 0x94; // float
		constexpr auto StrafeLeftAdjustment = 0x98; // FVector
		constexpr auto StrafeRightAdjustment = 0xa4; // FVector
		constexpr auto StrafeOffsetScalingThreshold = 0xb0; // float
		constexpr auto StrafeOffsetInterpSpeedIn = 0xb4; // float
		constexpr auto StrafeOffsetInterpSpeedOut = 0xb8; // float
		constexpr auto LastStrafeOffset = 0xbc; // FVector
		constexpr auto RunFwdAdjustment = 0xc8; // FVector
		constexpr auto RunBackAdjustment = 0xd4; // FVector
		constexpr auto RunOffsetScalingThreshold = 0xe0; // float
		constexpr auto RunOffsetInterpSpeedIn = 0xe4; // float
		constexpr auto RunOffsetInterpSpeedOut = 0xe8; // float
		constexpr auto LastRunOffset = 0xec; // FVector
		constexpr auto WorstLocOffset = 0xf8; // FVector
		constexpr auto TargetRelativeCameraOriginOffset = 0x104; // FVector
		constexpr auto ViewOffset = 0x110; // FViewOffsetData
		constexpr auto ViewOffset_ViewportAdjustments = 0x134; // FViewOffsetData [0x6]
		constexpr auto DOF_FalloffExponent = 0x20c; // float
		constexpr auto DOF_BlurKernelSize = 0x210; // float
		constexpr auto DOF_FocusInnerRadius = 0x214; // float
		constexpr auto DOF_MaxNearBlurAmount = 0x218; // float
		constexpr auto DOF_MaxFarBlurAmount = 0x21c; // float
		constexpr auto LastDOFRadius = 0x220; // float
		constexpr auto LastDOFDistance = 0x224; // float
		constexpr auto DOFDistanceInterpSpeed = 0x228; // float
		constexpr auto DOFTraceExtent = 0x22c; // FVector
		constexpr auto DOF_RadiusFalloff = 0x238; // float
		constexpr auto DOF_RadiusRange = 0x23c; // FVector2D
		constexpr auto DOF_RadiusDistRange = 0x244; // FVector2D
		constexpr auto ViewOffsetInterp = 0x24c; // float
		constexpr auto OffsetAdjustmentInterpSpeed = 0x250; // float
		constexpr auto CurrentViewportType = 0x254; // ECameraViewportTypes
	}

	namespace n_ATgTeamPlayerStart { // : ATgStartPoint
		constexpr auto m_nTaskForce = 0x3bc; // char
		constexpr auto m_nPriority = 0x3c0; // int32_t
		constexpr auto nPrevPriority = 0x3c4; // int32_t
		constexpr auto m_fMaxDistForEnemyCheckUU = 0x3c8; // float
		constexpr auto m_fMaxDistForHazardCheckUU = 0x3cc; // float
		constexpr auto m_fMaxWeightForEnemyDistanceCheck = 0x3d0; // float
		constexpr auto m_fMaxDistForAllyCheckUU = 0x3d4; // float
		constexpr auto m_fMinDistForAllyCheckUU = 0x3d8; // float
		constexpr auto m_fMaxWeightForAllyDistanceCheck = 0x3dc; // float
		constexpr auto m_fRandomRatingWeighting = 0x3e0; // float
		constexpr auto m_bInitialSpawnOnly = 0x3e4; // uint32_t : 1
		constexpr auto m_bDisallowEnemyLOS = 0x3e4; // uint32_t : 1
		constexpr auto m_bRotateTowardNearestVisibleAlly = 0x3e4; // uint32_t : 1
		constexpr auto m_fExtraHeightToTraceTo = 0x3e8; // float
		constexpr auto m_nMinLevel = 0x3ec; // int32_t
		constexpr auto m_fLastUsedTimeStamp = 0x3f0; // float
		constexpr auto s_AssignedPlayers = 0x3f4; // TArray<ObjectProperty>
	}

	namespace n_ATgDeploy_Illusion { // : ATgDeployable
		constexpr auto VfTable_ITgInterface_YingIllusion = 0x46c; // FPointer
		constexpr auto r_fShatterDelay = 0x474; // float
		constexpr auto m_nShatterDeviceID = 0x478; // int32_t
		constexpr auto m_ShatterFiremode = 0x47c; // ObjectProperty
		constexpr auto s_nNumBeamHits = 0x484; // int32_t
		constexpr auto s_BeamAimDir = 0x488; // FVector
		constexpr auto s_BeamTargetActor = 0x494; // ObjectProperty
		constexpr auto r_BeamTargetPos = 0x49c; // FVector
		constexpr auto r_nPlayShatterFX = 0x4a8; // char
		constexpr auto s_OnDestroyDelegates = 0x4ac; // TArray<DelegateProperty>
		constexpr auto __DestroyedEvent__Delegate = 0x4bc; // DelegateProperty
	}

	namespace n_UUIComponent_NotificationCouponEntry { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcExpiration = 0x12c; // ObjectProperty
		constexpr auto m_mcItemIconTexture = 0x134; // ObjectProperty
		constexpr auto m_mcChestImageStack = 0x13c; // ObjectProperty
		constexpr auto m_pCTA = 0x144; // ObjectProperty
		constexpr auto m_pCostPrev = 0x14c; // ObjectProperty
		constexpr auto m_pCostCurrent = 0x154; // ObjectProperty
		constexpr auto m_pGoToButton = 0x15c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x164; // ObjectProperty
	}

	namespace n_UTgGamePhase_TicketsOnPointTick { // : UTgGamePhase
		constexpr auto m_nTicketsPerTick = 0xb8; // int32_t
	}

	namespace n_UUIData_JsonFeature { // : UUIData
		constexpr auto m_Feature = 0x64; // FJsonFeatureData
	}

	namespace n_UGameSpecialMove { // : UObject
		constexpr auto PawnOwner = 0x60; // ObjectProperty
		constexpr auto Handle = 0x68; // FName
		constexpr auto LastCanDoSpecialMoveTime = 0x70; // float
		constexpr auto bLastCanDoSpecialMove = 0x74; // uint32_t : 1
		constexpr auto bReachPreciseDestination = 0x74; // uint32_t : 1
		constexpr auto bReachedPreciseDestination = 0x74; // uint32_t : 1
		constexpr auto bReachPreciseRotation = 0x74; // uint32_t : 1
		constexpr auto bReachedPreciseRotation = 0x74; // uint32_t : 1
		constexpr auto bForcePrecisePosition = 0x74; // uint32_t : 1
		constexpr auto PreciseDestination = 0x78; // FVector
		constexpr auto PreciseDestBase = 0x84; // ObjectProperty
		constexpr auto PreciseDestRelOffset = 0x8c; // FVector
		constexpr auto PreciseRotationInterpolationTime = 0x98; // float
		constexpr auto PreciseRotation = 0x9c; // FRotator
	}

	namespace n_USeqAct_ControlGameMovie { // : USeqAct_Latent
		constexpr auto MovieName = 0x120; // FString
		constexpr auto StartOfRenderingMovieFrame = 0x130; // int32_t
		constexpr auto EndOfRenderingMovieFrame = 0x134; // int32_t
	}

	namespace n_UAmbientOcclusionEffect { // : UPostProcessEffect
		constexpr auto OcclusionColor = 0x88; // FLinearColor
		constexpr auto OcclusionPower = 0x98; // float
		constexpr auto OcclusionScale = 0x9c; // float
		constexpr auto OcclusionBias = 0xa0; // float
		constexpr auto MinOcclusion = 0xa4; // float
		constexpr auto SSAO2 = 0xa8; // uint32_t : 1
		constexpr auto bAngleBasedSSAO = 0xa8; // uint32_t : 1
		constexpr auto OcclusionRadius = 0xac; // float
		constexpr auto OcclusionAttenuation = 0xb0; // float
		constexpr auto OcclusionQuality = 0xb4; // EAmbientOcclusionQuality
		constexpr auto OcclusionFadeoutMinDistance = 0xb8; // float
		constexpr auto OcclusionFadeoutMaxDistance = 0xbc; // float
		constexpr auto HaloDistanceThreshold = 0xc0; // float
		constexpr auto HaloDistanceScale = 0xc4; // float
		constexpr auto HaloOcclusion = 0xc8; // float
		constexpr auto EdgeDistanceThreshold = 0xcc; // float
		constexpr auto EdgeDistanceScale = 0xd0; // float
		constexpr auto FilterDistanceScale = 0xd4; // float
		constexpr auto FilterSize = 0xd8; // int32_t
		constexpr auto HistoryConvergenceTime = 0xdc; // float
		constexpr auto HistoryWeightConvergenceTime = 0xe0; // float
	}

	namespace n_ULevelStreaming { // : UObject
		constexpr auto PackageName = 0x60; // FName
		constexpr auto LoadedLevel = 0x68; // ObjectProperty
		constexpr auto Offset = 0x70; // FVector
		constexpr auto LevelTransform = 0x80; // FMatrix
		constexpr auto OldOffset = 0xc0; // FVector
		constexpr auto bIsVisible = 0xcc; // uint32_t : 1
		constexpr auto bHasLoadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bHasUnloadRequestPending = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisibleInEditor = 0xcc; // uint32_t : 1
		constexpr auto bBoundingBoxVisible = 0xcc; // uint32_t : 1
		constexpr auto bLocked = 0xcc; // uint32_t : 1
		constexpr auto bIsFullyStatic = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeLoaded = 0xcc; // uint32_t : 1
		constexpr auto bShouldBeVisible = 0xcc; // uint32_t : 1
		constexpr auto bShouldBlockOnLoad = 0xcc; // uint32_t : 1
		constexpr auto bDrawOnLevelStatusMap = 0xcc; // uint32_t : 1
		constexpr auto bIsRequestingUnloadAndRemoval = 0xcc; // uint32_t : 1
		constexpr auto bClientSideLevel = 0xcc; // uint32_t : 1
		constexpr auto DrawColor = 0xd0; // FColor
		constexpr auto EditorStreamingVolumes = 0xd4; // TArray<ObjectProperty>
		constexpr auto MinTimeBetweenVolumeUnloadRequests = 0xe4; // float
		constexpr auto LastVolumeUnloadRequestTime = 0xe8; // float
		constexpr auto EditorGridVolume = 0xec; // ObjectProperty
		constexpr auto GridPosition = 0xf4; // int32_t [0x3]
	}

	namespace n_UInterpTrackBoolProp { // : UInterpTrack
		constexpr auto BoolTrack = 0xa0; // TArray<FBoolTrackKey>
		constexpr auto PropertyName = 0xb0; // FName
	}

	namespace n_ATgDeploy_HealingTotem { // : ATgDeployable
		constexpr auto r_fRadiusScale = 0x46c; // float
		constexpr auto r_bHasHealingRain = 0x470; // uint32_t : 1
		constexpr auto r_bHasWindTotem = 0x470; // uint32_t : 1
		constexpr auto r_fMonolithReduction = 0x474; // float
		constexpr auto m_CachedPawnOwner = 0x478; // ObjectProperty
	}

	namespace n_UUIComponent_LoadoutSubscene { // : UUIComponent_Display
		constexpr auto m_grGroup = 0x124; // ObjectProperty
		constexpr auto m_List = 0x12c; // ObjectProperty
		constexpr auto m_ButtonClass = 0x134; // UUIComponent_Display*
		constexpr auto m_nLoadoutSlot = 0x13c; // int32_t
		constexpr auto m_bHasDefaultDataItem = 0x140; // uint32_t : 1
		constexpr auto m_bPreviewCamera = 0x140; // uint32_t : 1
		constexpr auto m_bFullBackground = 0x140; // uint32_t : 1
		constexpr auto m_sButtonName = 0x144; // FString
		constexpr auto m_nButtonCount = 0x154; // int32_t
		constexpr auto m_nButtonsPerRow = 0x158; // int32_t
		constexpr auto m_nOnDataCallbackHandle = 0x15c; // int32_t
		constexpr auto m_pRotator = 0x160; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsLastAttackerOfType { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UTgAnimNodeMountSync { // : UAnimNodeBlendBase
		constexpr auto m_TgP = 0x114; // ObjectProperty
		constexpr auto m_nmSyncGroupNames = 0x11c; // TArray<FName>
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTargetAsCombatTarget { // : UTgAIBehaviorAction
		constexpr auto bSkipPawnNotify = 0x94; // uint32_t : 1
	}

	namespace n_UUIComponent_Chests { // : UUIComponent
		constexpr auto m_nOnTickCallbackHandle = 0x118; // int32_t
		constexpr auto m_bLastOpeningWasGift = 0x11c; // uint32_t : 1
		constexpr auto m_bShowingDetails = 0x11c; // uint32_t : 1
		constexpr auto m_fRevealTimer = 0x120; // float
		constexpr auto m_fAcquisitionPoolTimer = 0x124; // float
		constexpr auto m_fChestPreviewTimer = 0x128; // float
		constexpr auto m_eState = 0x12c; // UICHESTS_STATE
		constexpr auto m_pDisplayedData = 0x130; // ObjectProperty
		constexpr auto m_GiftAcquisitions = 0x138; // TArray<ObjectProperty>
		constexpr auto m_mcGiftDetails = 0x148; // ObjectProperty
		constexpr auto m_mcGiftMessage = 0x150; // ObjectProperty
		constexpr auto m_mcGiftDesc = 0x158; // ObjectProperty
		constexpr auto m_mcGiftDescTitle = 0x160; // ObjectProperty
		constexpr auto m_mcGiftDescSubtitle = 0x168; // ObjectProperty
		constexpr auto m_mcOpenedChestContainer = 0x170; // ObjectProperty
		constexpr auto m_mcOpenedItemName = 0x178; // ObjectProperty
		constexpr auto m_mcOpenedItemType = 0x180; // ObjectProperty
		constexpr auto m_mcOpenedItemOpenAgainTF = 0x188; // ObjectProperty
		constexpr auto m_mcChestItemListTitle = 0x190; // ObjectProperty
		constexpr auto m_mcItemListTitle = 0x198; // ObjectProperty
		constexpr auto m_mcItemListDesc = 0x1a0; // ObjectProperty
		constexpr auto m_mcItemListOwnedCount = 0x1a8; // ObjectProperty
		constexpr auto m_mcPurchaseButtonWarningTF = 0x1b0; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x1b8; // ObjectProperty
		constexpr auto m_pChestList = 0x1c0; // ObjectProperty
		constexpr auto m_pItemList = 0x1c8; // ObjectProperty
		constexpr auto m_pOpenChestButton = 0x1d0; // ObjectProperty
		constexpr auto m_pOpenedItemEquip = 0x1d8; // ObjectProperty
		constexpr auto m_pOpenedItemGoBack = 0x1e0; // ObjectProperty
		constexpr auto m_pOpenedItemOpenAgain = 0x1e8; // ObjectProperty
		constexpr auto m_pUnlockChestButton = 0x1f0; // ObjectProperty
		constexpr auto m_pOpenedItemUnlockChestButton = 0x1f8; // ObjectProperty
		constexpr auto m_pGiftPlayer = 0x200; // ObjectProperty
		constexpr auto m_pItemListChestIcon = 0x208; // ObjectProperty
		constexpr auto m_pItemListItemHint = 0x210; // ObjectProperty
		constexpr auto m_pSkipRevealTimerAction = 0x218; // ObjectProperty
		constexpr auto m_pOpenItemContinueAction = 0x220; // ObjectProperty
		constexpr auto m_pUnlockChestAction = 0x228; // ObjectProperty
		constexpr auto m_pOpenChestAction = 0x230; // ObjectProperty
		constexpr auto m_pSendGiftAction = 0x238; // ObjectProperty
		constexpr auto m_pOpenGiftAction = 0x240; // ObjectProperty
		constexpr auto m_pChestDetailsAction = 0x248; // ObjectProperty
		constexpr auto m_pGiftDetailsAction = 0x250; // ObjectProperty
		constexpr auto m_pOpenedItemEquipAction = 0x258; // ObjectProperty
		constexpr auto m_pChestBumperBlockerAction = 0x260; // ObjectProperty
		constexpr auto m_grChests = 0x268; // ObjectProperty
		constexpr auto m_grItems = 0x270; // ObjectProperty
	}

	namespace n_ATgDevice_BombQueenInhand { // : ATgDevice_BuckInhand
		constexpr auto m_pBombQueen = 0xa28; // ObjectProperty
	}

	namespace n_UAnimNodeSynch { // : UAnimNodeBlendBase
		constexpr auto Groups = 0x114; // TArray<FSynchGroup>
	}

	namespace n_USeqEvent_Input { // : USequenceEvent
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto InputNames = 0x130; // TArray<FName>
	}

	namespace n_ATgAITaskforceBlockingVolume { // : AVolume
		constexpr auto BlockTaskforce = 0x2bc; // int32_t
		constexpr auto m_bHasRegisteredObstacle = 0x2c0; // uint32_t : 1
	}

	namespace n_UTgAnimNodeBlendByAbilitySimple { // : UTgAnimNodeBlendList
		constexpr auto m_bBlendToActiveOnStartFire = 0x168; // uint32_t : 1
		constexpr auto m_bBlendToActiveOnFire = 0x168; // uint32_t : 1
		constexpr auto m_bDelayBlendToActiveUntilAnimEnd = 0x168; // uint32_t : 1
		constexpr auto m_bDelayBlendToActiveUntilReplay = 0x168; // uint32_t : 1
		constexpr auto m_bDelayBlendToIdleUntilAnimEnd = 0x168; // uint32_t : 1
		constexpr auto m_bDelayBlendToIdleUntilReplay = 0x168; // uint32_t : 1
		constexpr auto m_bBlendToIdleImmediatelyOnInterrupt = 0x168; // uint32_t : 1
		constexpr auto m_bIsAbilityFiring = 0x168; // uint32_t : 1
		constexpr auto m_EqpPoint = 0x16c; // TG_EQUIP_POINT
	}

	namespace n_UTgAnimNotify_ToggleSocketSpecialFX { // : UAnimNotify
		constexpr auto m_DisplayGroupName = 0x68; // FName
		constexpr auto m_EquipSlot = 0x70; // int32_t
		constexpr auto m_bActivateFxGroup = 0x74; // uint32_t : 1
	}

	namespace n_UMaterialExpressionDotProduct { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_ULandscapeHeightfieldCollisionComponent { // : UPrimitiveComponent
		constexpr auto CollisionHeightData = 0x24c; // FUntypedBulkData_Mirror
		constexpr auto ComponentLayers = 0x28c; // TArray<FName>
		constexpr auto DominantLayerData = 0x29c; // FUntypedBulkData_Mirror
		constexpr auto SectionBaseX = 0x2dc; // int32_t
		constexpr auto SectionBaseY = 0x2e0; // int32_t
		constexpr auto CollisionSizeQuads = 0x2e4; // int32_t
		constexpr auto CollisionScale = 0x2e8; // float
		constexpr auto CollisionQuadFlags = 0x2ec; // TArray<char>
		constexpr auto PhysicalMaterials = 0x2fc; // TArray<ObjectProperty>
		constexpr auto RBHeightfield = 0x30c; // FPointer
		constexpr auto bHasKDOPData = 0x314; // uint32_t : 1
		constexpr auto bIncludeHoles = 0x314; // uint32_t : 1
		constexpr auto bHeightFieldDataHasHole = 0x314; // uint32_t : 1
		constexpr auto kDOPTree = 0x318; // FPointer
		constexpr auto kDOPCollisionVerts = 0x320; // TArray<FVector>
		constexpr auto CachedBoxSphereBounds = 0x330; // FBoxSphereBounds
	}

	namespace n_UUIInteractable_DailyDeal { // : UUIComponent_Interactable
		constexpr auto m_mcTitle = 0x140; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x148; // ObjectProperty
		constexpr auto m_pItems = 0x150; // TArray<ObjectProperty>
		constexpr auto m_pItemCardArt = 0x160; // TArray<ObjectProperty>
		constexpr auto m_pItemEmoteIcon = 0x170; // TArray<ObjectProperty>
		constexpr auto m_pItemVPIcon = 0x180; // TArray<ObjectProperty>
		constexpr auto m_pRealMoneyPrice = 0x190; // ObjectProperty
		constexpr auto m_pTokenPrice = 0x198; // ObjectProperty
		constexpr auto m_CardArtManifestGroup = 0x1a0; // ObjectProperty
		constexpr auto m_pDailyDealLTI = 0x1a8; // ObjectProperty
		constexpr auto m_bLeaveStorefrontDelegateRegistered = 0x1b0; // uint32_t : 1
		constexpr auto m_bSafeWait = 0x1b0; // uint32_t : 1
		constexpr auto m_nTickCallbackHandle = 0x1b4; // int32_t
		constexpr auto m_fSafeWaitTimer = 0x1b8; // float
		constexpr auto m_fSafeWaitTimerDuration = 0x1bc; // float
	}

	namespace n_ATgItemShopVolume { // : AVolume
		constexpr auto TaskforceIndex = 0x2bc; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetPhysicsState { // : UTgAIBehaviorCondition
		constexpr auto PhysicsState = 0x98; // EPhysics
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileOffCooldown { // : UTgInvListener
		constexpr auto m_bIsActive = 0xc4; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_DimensionalLink { // : UTgDeviceForm
		constexpr auto m_CachedYingPawn = 0x28c; // ObjectProperty
	}

	namespace n_UMaterialExpressionAbs { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgAIBehaviorAction_MoveToDeployable { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeployableId = 0x9c; // int32_t
		constexpr auto bMustBeEnemy = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreInsideCollision = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreTaskforce = 0xa0; // uint32_t : 1
	}

	namespace n_USeqEvent_TouchInput { // : USequenceEvent
		constexpr auto bTrapInput = 0x128; // uint32_t : 1
		constexpr auto AllowedPlayerIndex = 0x12c; // int32_t
		constexpr auto AllowedTouchIndex = 0x130; // int32_t
		constexpr auto AllowedTouchpadIndex = 0x134; // int32_t
	}

	namespace n_ALensFlareSource { // : AActor
		constexpr auto LensFlareComp = 0x280; // ComponentProperty
		constexpr auto bCurrentlyActive = 0x288; // uint32_t : 1
	}

	namespace n_UNavMeshPathGoalEvaluator { // : UObject
		constexpr auto NextEvaluator = 0x60; // ObjectProperty
		constexpr auto MaxPathVisits = 0x68; // int32_t
		constexpr auto bAlwaysCallEvaluateGoal = 0x6c; // uint32_t : 1
		constexpr auto bDoPartialAStar = 0x6c; // uint32_t : 1
		constexpr auto NumNodesThrownOut = 0x70; // int32_t
		constexpr auto NumNodesProcessed = 0x74; // int32_t
		constexpr auto MaxOpenListSize = 0x78; // int32_t
	}

	namespace n_ATgDevice_LongbowPlanted { // : ATgDevice_Stim
		constexpr auto m_CachedLongbow = 0xa08; // ObjectProperty
		constexpr auto m_CachedInhand = 0xa10; // ObjectProperty
	}

	namespace n_UUIDataStore_OnlineGameSettings { // : UUIDataStore_Settings
		constexpr auto GameSettingsCfgList = 0x98; // TArray<FGameSettingsCfg>
		constexpr auto SettingsProviderClass = 0xa8; // UUIDataProvider_Settings*
		constexpr auto SelectedIndex = 0xb0; // int32_t
	}

	namespace n_ULightmappedSurfaceCollection { // : UObject
		constexpr auto SourceModel = 0x60; // ObjectProperty
		constexpr auto Surfaces = 0x68; // TArray<int32_t>
	}

	namespace n_UNavMeshGoalFilter_MinPathDistance { // : UNavMeshGoal_Filter
		constexpr auto MinDistancePathShouldBe = 0x6c; // int32_t
	}

	namespace n_ATgNavRouteIndicator { // : ATgSkeletalMeshActorSpawnable
		constexpr auto VfTable_IInterface_NavigationHandle = 0x32c; // FPointer
		constexpr auto WayPoints = 0x334; // TArray<FVector>
		constexpr auto Position = 0x344; // int32_t
		constexpr auto m_fPositionStartTime = 0x348; // float
		constexpr auto m_fPositionMaxSeekTime = 0x34c; // float
		constexpr auto m_fSpinUpTime = 0x350; // float
		constexpr auto m_fSpinDownTime = 0x354; // float
		constexpr auto m_SpinUpFx = 0x358; // ObjectProperty
		constexpr auto m_PathingFx = 0x360; // ObjectProperty
		constexpr auto m_SpinDownFx = 0x368; // ObjectProperty
		constexpr auto NavigationHandle = 0x370; // ObjectProperty
	}

	namespace n_UUIDataManager { // : UUIDataObject
		constexpr auto m_CommonData = 0x74; // ObjectProperty
		constexpr auto m_ChampionData = 0x7c; // ObjectProperty
		constexpr auto m_Social = 0x84; // ObjectProperty
		constexpr auto m_LeagueMgr = 0x8c; // ObjectProperty
		constexpr auto m_Goals = 0x94; // ObjectProperty
		constexpr auto m_Queues = 0x9c; // ObjectProperty
		constexpr auto m_Chat = 0xa4; // ObjectProperty
		constexpr auto m_Match = 0xac; // ObjectProperty
		constexpr auto m_AcquisitionMgr = 0xb4; // ObjectProperty
		constexpr auto m_DataDirector = 0xbc; // ObjectProperty
		constexpr auto m_Loadouts = 0xc4; // ObjectProperty
		constexpr auto m_VGSMaps = 0xcc; // ObjectProperty
		constexpr auto m_Data = 0xd4; // TArray<ObjectProperty>
	}

	namespace n_UActorFactoryApexClothing { // : UActorFactorySkeletalMesh
		constexpr auto ClothingAssets = 0xb4; // TArray<ObjectProperty>
		constexpr auto ClothingRBChannel = 0xc4; // ERBCollisionChannel
		constexpr auto ClothingRBCollideWithChannels = 0xc8; // FRBCollisionChannelContainer
	}

	namespace n_AMobileDebugCameraController { // : ADebugCameraController
		constexpr auto OldMobileGroup = 0x7c8; // int32_t
		constexpr auto MPI = 0x7cc; // ObjectProperty
	}

	namespace n_USeqAct_MultiLevelStreaming { // : USeqAct_LevelStreamingBase
		constexpr auto Levels = 0x124; // TArray<FLevelStreamingNameCombo>
		constexpr auto bUnloadAllOtherLevels = 0x134; // uint32_t : 1
		constexpr auto bStatusIsOk = 0x134; // uint32_t : 1
	}

	namespace n_UTgSeqAct_ForceClientTutorialAction { // : USequenceAction
		constexpr auto ForcedAction = 0x108; // eForcedClientTutorialAction
		constexpr auto GameUIElement = 0x109; // eTutorialForceableElements
	}

	namespace n_ALadderVolume { // : APhysicsVolume
		constexpr auto WallDir = 0x314; // FRotator
		constexpr auto m_bBotOnly = 0x320; // uint32_t : 1
		constexpr auto bNoPhysicalLadder = 0x320; // uint32_t : 1
		constexpr auto bAutoPath = 0x320; // uint32_t : 1
		constexpr auto bAllowLadderStrafing = 0x320; // uint32_t : 1
		constexpr auto LookDir = 0x324; // FVector
		constexpr auto ClimbDir = 0x330; // FVector
		constexpr auto LadderList = 0x33c; // ObjectProperty
		constexpr auto PendingClimber = 0x344; // ObjectProperty
		constexpr auto WallDirArrow = 0x34c; // ComponentProperty
		constexpr auto m_WallDirArrow = 0x354; // ComponentProperty
	}

	namespace n_USeqAct_HeadTrackingControl { // : USequenceAction
		constexpr auto TrackControllerName = 0x108; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x118; // float
		constexpr auto bDisableBeyondLimit = 0x11c; // uint32_t : 1
		constexpr auto bLookAtPawns = 0x11c; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0x120; // float
		constexpr auto MinLookAtTime = 0x124; // float
		constexpr auto MaxInterestTime = 0x128; // float
		constexpr auto ActorClassesToLookAt = 0x12c; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0x13c; // TArray<FName>
		constexpr auto LookAtTargets = 0x14c; // TArray<ObjectProperty>
		constexpr auto ActorToComponentMap = 0x15c; // TMap<None, None>
	}

	namespace n_AAmbientSound { // : AKeypoint
		constexpr auto bAutoPlay = 0x288; // uint32_t : 1
		constexpr auto bIsPlaying = 0x288; // uint32_t : 1
		constexpr auto AudioComponent = 0x28c; // ComponentProperty
	}

	namespace n_ANxForceField { // : AActor
		constexpr auto ExcludeChannel = 0x280; // int32_t
		constexpr auto bForceActive = 0x284; // uint32_t : 1
		constexpr auto CollideWithChannels = 0x288; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x28c; // ERBCollisionChannel
		constexpr auto ForceField = 0x290; // FPointer
		constexpr auto ConvexMeshes = 0x298; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x2a8; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x2b8; // TArray<FPointer>
		constexpr auto U2NRotation = 0x2c8; // FPointer
		constexpr auto SceneIndex = 0x2d0; // int32_t
	}

	namespace n_UUILandingPanelManager { // : UPComUIManagerBase
		constexpr auto m_pMovie = 0x84; // ObjectProperty
		constexpr auto m_JsonDiscountData = 0x8c; // TMap<None, None>
		constexpr auto m_JsonHomeFeatures = 0xd4; // TArray<FJsonHomeFeatureData>
		constexpr auto m_nHotSkinIDs = 0xe4; // TArray<int32_t>
		constexpr auto m_nNewSkinIDs = 0xf4; // TArray<int32_t>
	}

	namespace n_UActorFactoryDynamicSM { // : UActorFactory
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
		constexpr auto bNoEncroachCheck = 0xb0; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xb0; // uint32_t : 1
		constexpr auto bBlockRigidBody = 0xb0; // uint32_t : 1
		constexpr auto bUseCompartment = 0xb0; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xb0; // uint32_t : 1
		constexpr auto CollisionType = 0xb4; // ECollisionType
	}

	namespace n_UUIData_Pair { // : UUIData
		constexpr auto m_pFirst = 0x64; // ObjectProperty
		constexpr auto m_pSecond = 0x6c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_MoveToDamagingDeployable { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreInsideCollision = 0x9c; // uint32_t : 1
		constexpr auto bMoveAway = 0x9c; // uint32_t : 1
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipPercent { // : USequenceEvent
		constexpr auto OwnershipPercent = 0x128; // float
		constexpr auto PointIndex = 0x12c; // int32_t
	}

	namespace n_UTgSkelCon_HookChain { // : USkelControlSingleBone
		constexpr auto m_fBoneScales = 0x100; // float [0x48]
		constexpr auto m_DragDeviceForm = 0x220; // ObjectProperty
		constexpr auto m_ChainComponent = 0x228; // ComponentProperty
	}

	namespace n_UUIHudSniper { // : UTgGfxScene
		constexpr auto m_eActiveKinessaHUD = 0x1ec; // KINESSA_HUD_TYPE
		constexpr auto m_nAmmo = 0x1f0; // int32_t
		constexpr auto m_fCharge = 0x1f4; // float
		constexpr auto m_fFrameScaleInitial = 0x1f8; // float
		constexpr auto m_fFrameScaleOnShoot = 0x1fc; // float
		constexpr auto m_nPreviousSkinId = 0x200; // int32_t
		constexpr auto m_nCachedSkinId = 0x204; // int32_t
		constexpr auto m_nCachedFrameWidth = 0x208; // int32_t
		constexpr auto m_nCachedFrameHeight = 0x20c; // int32_t
		constexpr auto m_mcPins = 0x210; // ObjectProperty
		constexpr auto m_mcReady = 0x218; // ObjectProperty [0x2]
		constexpr auto m_mcFrame = 0x228; // ObjectProperty [0x2]
		constexpr auto m_mcBackground = 0x238; // ObjectProperty [0x2]
		constexpr auto m_mcAmmoBelt = 0x248; // ObjectProperty
		constexpr auto m_mcPin = 0x250; // ObjectProperty [0x4]
		constexpr auto m_mcAmmo = 0x270; // ObjectProperty [0x6]
		constexpr auto m_mcCharge = 0x2a0; // ObjectProperty [0x2]
		constexpr auto m_mcChargeLeft = 0x2b0; // ObjectProperty [0x4]
		constexpr auto m_mcChargeRight = 0x2d0; // ObjectProperty [0x4]
		constexpr auto m_mcAmmoBelt_Val = 0x2f0; // ObjectProperty
		constexpr auto m_mcAmmo_Val = 0x2f8; // ObjectProperty [0x6]
	}

	namespace n_ATestSplittingVolume { // : AVolume
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2bc; // FPointer
	}

	namespace n_UUIComponent_EventChallengeRegionInfo { // : UUIComponent_Display
		constexpr auto m_pRegions = 0x124; // ObjectProperty
		constexpr auto m_pProgress = 0x12c; // ObjectProperty
		constexpr auto m_mcProgressText = 0x134; // ObjectProperty
		constexpr auto m_pChallengeSystemData = 0x13c; // ObjectProperty
		constexpr auto m_mcTitle = 0x144; // ObjectProperty
		constexpr auto m_RegionInputGroup = 0x14c; // ObjectProperty
	}

	namespace n_UUIComponent_MatchLobbyRoleIndicator { // : UUIComponent_Display
		constexpr auto m_mcActive = 0x124; // ObjectProperty
		constexpr auto m_mcInactive = 0x12c; // ObjectProperty
		constexpr auto m_eArchetype = 0x134; // EArchetypes
		constexpr auto m_bIsActive = 0x138; // uint32_t : 1
	}

	namespace n_UUIData_SpecialEvent { // : UUIData_Quest
		constexpr auto m_dwCount = 0x9c; // Fdword
		constexpr auto m_dwCompleteCount = 0xa0; // Fdword
		constexpr auto m_dwLootTableItemId = 0xa4; // Fdword
		constexpr auto m_dwEndSeconds = 0xa8; // Fdword
		constexpr auto m_dwNameMsgId = 0xac; // Fdword
		constexpr auto m_dwDescMsgId = 0xb0; // Fdword
		constexpr auto m_dwIconId = 0xb4; // Fdword
		constexpr auto m_dwGoalId = 0xb8; // Fdword
		constexpr auto m_dwGoalActivityType = 0xbc; // Fdword
	}

	namespace n_UParticleModuleTypeDataTrail2 { // : UParticleModuleTypeDataBase
		constexpr auto TessellationFactor = 0x68; // int32_t
		constexpr auto TessellationFactorDistance = 0x6c; // float
		constexpr auto TessellationStrength = 0x70; // float
		constexpr auto TextureTile = 0x74; // int32_t
		constexpr auto Sheets = 0x78; // int32_t
		constexpr auto MaxTrailCount = 0x7c; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x80; // int32_t
		constexpr auto bClipSourceSegement = 0x84; // uint32_t : 1
		constexpr auto bClearTangents = 0x84; // uint32_t : 1
		constexpr auto RenderGeometry = 0x84; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x84; // uint32_t : 1
		constexpr auto RenderLines = 0x84; // uint32_t : 1
		constexpr auto RenderTessellation = 0x84; // uint32_t : 1
	}

	namespace n_AWindPointSource { // : AInfo
		constexpr auto Component = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_Spray { // : ATgDevice
		constexpr auto m_bMissedSpray = 0xa08; // uint32_t : 1
		constexpr auto m_nSelectedSpray = 0xa0c; // int32_t
	}

	namespace n_ANxRadialForceField { // : ANxForceField
		constexpr auto RenderComponent = 0x2d4; // ComponentProperty
		constexpr auto ForceStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceFalloff = 0x2e4; // ERadialImpulseFalloff
		constexpr auto LinearKernel = 0x2e8; // FPointer
	}

	namespace n_UTgAnimTreeComment { // : UAnimObject
		constexpr auto m_bDrawBox = 0x68; // uint32_t : 1
	}

	namespace n_UTgSeqOp_MathCalc { // : USequenceCondition
		constexpr auto m_fResult = 0xec; // float
	}

	namespace n_ATgMapCalloutVolume { // : AVolume
		constexpr auto m_sMsg = 0x2bc; // FString
	}

	namespace n_ATgDevice_CombatSlide { // : ATgDevice_Charge
		constexpr auto m_nEyeheightAdjustmentWhileSliding = 0xa7c; // int32_t
		constexpr auto m_fEyeHeightSmoothFactor = 0xa80; // float
	}

	namespace n_ATgDevice_RestoreSoul { // : ATgDevice
		constexpr auto m_CachedOraclePawn = 0xa08; // ObjectProperty
		constexpr auto m_CachedImpact = 0xa10; // FImpactInfo
		constexpr auto m_bApplyCooldown = 0xa8c; // uint32_t : 1
	}

	namespace n_UTgAnimNotify_PlayParticleEffect_Skinned { // : UAnimNotify_PlayParticleEffect
		constexpr auto m_SkinOverrideList = 0x98; // TArray<FPPE_Skin>
		constexpr auto m_bApplyTeamColor = 0xa8; // uint32_t : 1
	}

	namespace n_ATgDevice_SilenceBeam { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedGauntletPawn = 0xa10; // ObjectProperty
	}

	namespace n_UTgSkelCon_RotateToAim { // : UTgSkelCon_MirrorToOtherMesh
		constexpr auto m_fRotationSpeed = 0x108; // float
		constexpr auto m_bUseConstantSpeed = 0x10c; // uint32_t : 1
		constexpr auto m_bAim2DOnly = 0x10c; // uint32_t : 1
		constexpr auto m_bVelocity2DOnly = 0x10c; // uint32_t : 1
		constexpr auto m_fMinVelocity = 0x110; // float
		constexpr auto m_rTargetRotation = 0x114; // FRotator
	}

	namespace n_ATgDevice_AtlasRMBInhand { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
	}

	namespace n_UUIDataShop { // : UObject
		constexpr auto m_LootTableItems = 0x60; // TMap<None, None>
		constexpr auto m_Vendors = 0xa8; // TMap<None, None>
		constexpr auto m_DLCItems = 0xf0; // TMap<None, None>
		constexpr auto m_Items = 0x138; // TMap<None, None>
		constexpr auto m_SKUtoLootId = 0x180; // TMap<None, None>
		constexpr auto m_dwHiddenLTIs = 0x1c8; // TArray<Fdword>
		constexpr auto m_MarketplaceProducts = 0x1d8; // TArray<FMarketplaceProductDetails>
		constexpr auto m_dwContinuousRequestVendors = 0x1e8; // TArray<Fdword>
		constexpr auto m_fContinuousRequestTimer = 0x1f8; // float
		constexpr auto m_dwInfoVendors = 0x1fc; // TArray<Fdword>
		constexpr auto m_dwStoreVendors = 0x20c; // TArray<Fdword>
		constexpr auto m_dwDLCVendors = 0x21c; // TArray<Fdword>
		constexpr auto m_bAllStoreVendorsLoaded = 0x22c; // uint32_t : 1
		constexpr auto m_bFinishedStoringDLCItemData = 0x22c; // uint32_t : 1
		constexpr auto m_dwVendorRequestId = 0x230; // Fdword
		constexpr auto m_dwContinuousVendorsRequestId = 0x234; // Fdword
		constexpr auto m_dwDLCVendorsRequestId = 0x238; // Fdword
	}

	namespace n_UUIHudKillFeed { // : UTgGfxScene
		constexpr auto m_nMaxDisplayedKillEntries = 0x1ec; // int32_t
		constexpr auto m_nDepth = 0x1f0; // int32_t
		constexpr auto m_sKillEntryName = 0x1f4; // FString
		constexpr auto m_sHHPickupEntryName = 0x204; // FString
		constexpr auto m_bDisableKillFeed = 0x214; // uint32_t : 1
		constexpr auto m_fKillEntryUpwardAnimDistance = 0x218; // float
		constexpr auto m_Entries = 0x21c; // TArray<FUIKILLFEED_DATA>
		constexpr auto m_EntryPool = 0x22c; // TArray<FUIKILLFEED_DATA>
		constexpr auto m_mcGuide = 0x23c; // ObjectProperty
	}

	namespace n_AAccessControl { // : AInfo
		constexpr auto IPPolicies = 0x280; // TArray<FString>
		constexpr auto BannedIDs = 0x290; // TArray<FUniqueNetId>
		constexpr auto IPBanned = 0x2a0; // FString
		constexpr auto WrongPassword = 0x2b0; // FString
		constexpr auto NeedPassword = 0x2c0; // FString
		constexpr auto SessionBanned = 0x2d0; // FString
		constexpr auto KickedMsg = 0x2e0; // FString
		constexpr auto DefaultKickReason = 0x2f0; // FString
		constexpr auto IdleKickReason = 0x300; // FString
		constexpr auto AdminClass = 0x310; // AAdmin*
		constexpr auto AdminPassword = 0x318; // FString
		constexpr auto GamePassword = 0x328; // FString
		constexpr auto ACDisplayText = 0x338; // FString [0x3]
		constexpr auto ACDescText = 0x368; // FString [0x3]
		constexpr auto bDontAddDefaultAdmin = 0x398; // uint32_t : 1
		constexpr auto bAuthenticateClients = 0x398; // uint32_t : 1
		constexpr auto bAuthenticateServer = 0x398; // uint32_t : 1
		constexpr auto bAuthenticateListenHost = 0x398; // uint32_t : 1
		constexpr auto bAuthDelegatesRegistered = 0x398; // uint32_t : 1
		constexpr auto bPendingListenAuth = 0x398; // uint32_t : 1
		constexpr auto MaxAuthRetryCount = 0x39c; // int32_t
		constexpr auto AuthRetryDelay = 0x3a0; // int32_t
		constexpr auto OnlineSub = 0x3a4; // ObjectProperty
		constexpr auto CachedAuthInt = 0x3ac; // TScriptInterface<Class>
		constexpr auto ClientsPendingAuth = 0x3bc; // TArray<FPendingClientAuth>
		constexpr auto ServerAuthRetries = 0x3cc; // TArray<FServerAuthRetry>
		constexpr auto ListenAuthTicketUID = 0x3dc; // int32_t
		constexpr auto ListenAuthRetryCount = 0x3e0; // int32_t
	}

	namespace n_UTgAnimBlendByBuffMonsterIntro { // : UTgAnimNodeBlendList
		constexpr auto m_bScalePlayRateOfSpawnAndIntro = 0x168; // uint32_t : 1
		constexpr auto m_bEndIntroStateEarly = 0x168; // uint32_t : 1
		constexpr auto m_bIntroHasBeenSetup = 0x168; // uint32_t : 1
		constexpr auto m_fIntroTimeHittableAt = 0x16c; // float
		constexpr auto m_fTimeToStartIntroAnim = 0x170; // float
		constexpr auto m_CachedPawn = 0x174; // ObjectProperty
		constexpr auto m_fSpawnIntroScaleRate = 0x17c; // float
	}

	namespace n_UOnlinePlaylistGameTypeProvider { // : UUIResourceDataProvider
		constexpr auto PlaylistGameTypeName = 0x94; // FName
		constexpr auto DisplayName = 0x9c; // FString
		constexpr auto Description = 0xac; // FString
		constexpr auto GameTypeId = 0xbc; // int32_t
	}

	namespace n_ATgDevice_YagorathQ { // : ATgDevice
		constexpr auto m_fHardenDamage = 0xa08; // float
	}

	namespace n_UTgGamePhase_Setup { // : UTgGamePhase
		constexpr auto m_bAutoMountAtEnd = 0xb8; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_RaumInhand { // : UTgDeviceForm
		constexpr auto m_SpinnerName = 0x28c; // FName
		constexpr auto m_SpinnerSkelControls1p = 0x294; // TArray<ObjectProperty>
		constexpr auto m_SpinnerSkelControls3p = 0x2a4; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct1P = 0x2b4; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct3P = 0x2c4; // TArray<ObjectProperty>
		constexpr auto m_CachedRaum = 0x2d4; // ObjectProperty
		constexpr auto m_bIsSpinningUp = 0x2dc; // uint32_t : 1
		constexpr auto m_fMaxHeatBuildup = 0x2e0; // float
		constexpr auto m_fHeatBuildup = 0x2e4; // float
		constexpr auto m_fHeatDecayFactor = 0x2e8; // float
		constexpr auto m_fHeatVisibilityFloor = 0x2ec; // float
		constexpr auto m_fPerShotHeatBuildup = 0x2f0; // float
		constexpr auto m_fSyntheticShotSpinUpThreshold = 0x2f4; // float
		constexpr auto m_fSyntheticShotSpinUpNormalization = 0x2f8; // float
		constexpr auto m_fAccuracyModifier = 0x2fc; // float
		constexpr auto m_fLastReceivedRefire = 0x300; // float
		constexpr auto m_fTimeLastStopFire = 0x304; // float
		constexpr auto m_fSustainedFireBeforeCustomPostFire = 0x308; // float
		constexpr auto m_fCustomPostFireDuration = 0x30c; // float
		constexpr auto m_fSustainedFireDuration = 0x310; // float
	}

	namespace n_UUIComponent_CTA { // : UUIComponent_Display
		constexpr auto m_mcTF = 0x124; // ObjectProperty
		constexpr auto m_bAnimOnHide = 0x12c; // uint32_t : 1
	}

	namespace n_ASceneCaptureReflectActor { // : ASceneCaptureActor
		constexpr auto StaticMesh = 0x288; // ComponentProperty
		constexpr auto ReflectMaterialInst = 0x290; // ObjectProperty
	}

	namespace n_ATgDevice_NinjaSwap { // : ATgDevice
		constexpr auto r_bDeferredSwapInterrupt = 0xa08; // uint32_t : 1
		constexpr auto m_CachedKoga = 0xa0c; // ObjectProperty
		constexpr auto m_CachedRMB2 = 0xa14; // ObjectProperty
	}

	namespace n_UTgSeqEvent_UI_Event { // : USequenceEvent
		constexpr auto mDeckNum = 0x128; // int32_t
		constexpr auto mEmptyItemSlots = 0x12c; // int32_t
	}

	namespace n_UTgInvListener_ConsecutiveHitsForDamageBonusByCredits { // : UTgInvListener
		constexpr auto m_Targets = 0xc4; // TArray<FTrackedDamagedTargets>
	}

	namespace n_UUIComponent_List { // : UUIComponent_Display
		constexpr auto m_ScrollAxis = 0x124; // FSmoothScrollingAxis [0x2]
		constexpr auto m_nSelectedDataIndex = 0x164; // int32_t
		constexpr auto m_ListItems = 0x168; // TArray<FUICListEntry>
		constexpr auto m_PrefixBufferItem = 0x178; // FUICListEntry
		constexpr auto m_SuffixBufferItem = 0x1c0; // FUICListEntry
		constexpr auto m_ListData = 0x208; // TArray<ObjectProperty>
		constexpr auto m_grList = 0x218; // ObjectProperty
		constexpr auto m_pScrollbarV = 0x220; // ObjectProperty
		constexpr auto m_pScrollbarH = 0x228; // ObjectProperty
		constexpr auto m_dwItemSize = 0x230; // Fdword
		constexpr auto m_dwDataSize = 0x234; // Fdword
		constexpr auto m_bExtendVertically = 0x238; // uint32_t : 1
		constexpr auto m_bAutoFillNavGroup = 0x238; // uint32_t : 1
		constexpr auto m_bFocusSelectedItem = 0x238; // uint32_t : 1
		constexpr auto m_bAutoSelectQueued = 0x238; // uint32_t : 1
		constexpr auto m_bInvertXAxis = 0x238; // uint32_t : 1
		constexpr auto m_bInvertYAxis = 0x238; // uint32_t : 1
		constexpr auto m_bIsDynamicList = 0x238; // uint32_t : 1
		constexpr auto m_bHideElementsIfDisabled = 0x238; // uint32_t : 1
		constexpr auto m_bNavByData = 0x238; // uint32_t : 1
		constexpr auto m_bDisableHighlightDuringScroll = 0x238; // uint32_t : 1
		constexpr auto m_nScrollX = 0x23c; // int32_t
		constexpr auto m_nScrollY = 0x240; // int32_t
		constexpr auto m_nItemOffsetX = 0x244; // int32_t
		constexpr auto m_nItemOffsetY = 0x248; // int32_t
		constexpr auto m_nMarginX = 0x24c; // int32_t
		constexpr auto m_nMarginY = 0x250; // int32_t
		constexpr auto m_fAutoSelectDelay = 0x254; // float
		constexpr auto m_fAutoSelectTimer = 0x258; // float
		constexpr auto m_fDynamicListSpacing = 0x25c; // float
	}

	namespace n_UUIHudCards { // : UTgGfxScene
		constexpr auto m_nCredits = 0x1ec; // int32_t
		constexpr auto m_nLoadout = 0x1f0; // int32_t
		constexpr auto m_bShouldShow = 0x1f4; // uint32_t : 1
		constexpr auto m_bThirdPerson = 0x1f4; // uint32_t : 1
		constexpr auto m_bSpectateEnemy = 0x1f4; // uint32_t : 1
		constexpr auto m_fCachedRotationY = 0x1f8; // float
		constexpr auto m_grScene = 0x1fc; // ObjectProperty
		constexpr auto m_mcCredits = 0x204; // ObjectProperty
		constexpr auto m_mcLoadout = 0x20c; // ObjectProperty
		constexpr auto m_mcHighlight = 0x214; // ObjectProperty
		constexpr auto m_CardDisplayGroup = 0x21c; // FUICardDisplayGroup
	}

	namespace n_UMorphNodeWeightByBoneAngle { // : UMorphNodeWeightBase
		constexpr auto Angle = 0x84; // float
		constexpr auto NodeWeight = 0x88; // float
		constexpr auto BaseBoneName = 0x8c; // FName
		constexpr auto BaseBoneAxis = 0x94; // EAxis
		constexpr auto AngleBoneAxis = 0x95; // EAxis
		constexpr auto bInvertBaseBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bInvertAngleBoneAxis = 0x98; // uint32_t : 1
		constexpr auto bControlMaterialParameter = 0x98; // uint32_t : 1
		constexpr auto AngleBoneName = 0x9c; // FName
		constexpr auto MaterialSlotId = 0xa4; // int32_t
		constexpr auto ScalarParameterName = 0xa8; // FName
		constexpr auto MaterialInstanceConstant = 0xb0; // ObjectProperty
		constexpr auto WeightArray = 0xb8; // TArray<FBoneAngleMorph>
	}

	namespace n_UPhysXParticleSystem { // : UObject
		constexpr auto MaxParticles = 0x60; // int32_t
		constexpr auto ParticleSpawnReserve = 0x64; // int32_t
		constexpr auto RBChannel = 0x68; // ERBCollisionChannel
		constexpr auto SimulationMethod = 0x69; // ESimulationMethod
		constexpr auto PacketSizeMultiplier = 0x6a; // EPacketSizeMultiplier
		constexpr auto RBCollideWithChannels = 0x6c; // FRBCollisionChannelContainer
		constexpr auto CollisionDistance = 0x70; // float
		constexpr auto RestitutionWithStaticShapes = 0x74; // float
		constexpr auto RestitutionWithDynamicShapes = 0x78; // float
		constexpr auto FrictionWithStaticShapes = 0x7c; // float
		constexpr auto FrictionWithDynamicShapes = 0x80; // float
		constexpr auto StaticFrictionWithStaticShapes = 0x84; // float
		constexpr auto StaticFrictionWithDynamicShapes = 0x88; // float
		constexpr auto bDynamicCollision = 0x8c; // uint32_t : 1
		constexpr auto bDisableGravity = 0x8c; // uint32_t : 1
		constexpr auto bStaticCollision = 0x8c; // uint32_t : 1
		constexpr auto bTwoWayCollision = 0x8c; // uint32_t : 1
		constexpr auto bDestroy = 0x8c; // uint32_t : 1
		constexpr auto bSyncFailed = 0x8c; // uint32_t : 1
		constexpr auto bIsInGame = 0x8c; // uint32_t : 1
		constexpr auto MaxMotionDistance = 0x90; // float
		constexpr auto Damping = 0x94; // float
		constexpr auto ExternalAcceleration = 0x98; // FVector
		constexpr auto RestParticleDistance = 0xa4; // float
		constexpr auto RestDensity = 0xa8; // float
		constexpr auto KernelRadiusMultiplier = 0xac; // float
		constexpr auto Stiffness = 0xb0; // float
		constexpr auto Viscosity = 0xb4; // float
		constexpr auto CollisionResponseCoefficient = 0xb8; // float
		constexpr auto CascadeScene = 0xbc; // FPointer
		constexpr auto PSys = 0xc4; // FPointer
	}

	namespace n_UUIData_TitleQuantity { // : UUIData
		constexpr auto m_sTitle = 0x64; // FString
		constexpr auto m_nQuantity = 0x74; // int32_t
		constexpr auto m_nTotal = 0x78; // int32_t
	}

	namespace n_AAISwitchablePylon { // : APylon
		constexpr auto bOpen = 0x490; // uint32_t : 1
	}

	namespace n_USequenceVariable { // : USequenceObject
		constexpr auto VarName = 0x98; // FName
	}

	namespace n_UScriptViewportClient { // : UObject
		constexpr auto VfTable_FViewportClient = 0x60; // FPointer
	}

	namespace n_UTgInventoryObject_Listen_DoubleTap { // : UTgInvListener
		constexpr auto m_fBaseWeaponDamage = 0xc4; // float
		constexpr auto m_fDoubleTapDelay = 0xc8; // float
		constexpr auto m_PendingDoubleTapActors = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_PendingDoubleTapTimes = 0xdc; // TArray<float>
	}

	namespace n_UMaterial { // : UMaterialInterface
		constexpr auto PhysMaterial = 0x254; // ObjectProperty
		constexpr auto PhysicalMaterial = 0x25c; // UPhysicalMaterial*
		constexpr auto PhysMaterialMask = 0x264; // ObjectProperty
		constexpr auto PhysMaterialMaskUVChannel = 0x26c; // int32_t
		constexpr auto BlackPhysicalMaterial = 0x270; // ObjectProperty
		constexpr auto WhitePhysicalMaterial = 0x278; // ObjectProperty
		constexpr auto DiffuseColor = 0x280; // FColorMaterialInput
		constexpr auto DiffusePower = 0x2bc; // FScalarMaterialInput
		constexpr auto SpecularColor = 0x2f8; // FColorMaterialInput
		constexpr auto SpecularPower = 0x334; // FScalarMaterialInput
		constexpr auto Normal = 0x370; // FVectorMaterialInput
		constexpr auto EmissiveColor = 0x3b4; // FColorMaterialInput
		constexpr auto Opacity = 0x3f0; // FScalarMaterialInput
		constexpr auto OpacityMask = 0x42c; // FScalarMaterialInput
		constexpr auto OpacityMaskClipValue = 0x468; // float
		constexpr auto ShadowDepthBias = 0x46c; // float
		constexpr auto Distortion = 0x470; // FVector2MaterialInput
		constexpr auto BlendMode = 0x4b0; // EBlendMode
		constexpr auto LightingModel = 0x4b1; // EMaterialLightingModel
		constexpr auto DepthModificationMode = 0x4b2; // EMaterialDepthModifier
		constexpr auto D3D11TessellationMode = 0x4b3; // EMaterialTessellationMode
		constexpr auto CustomLighting = 0x4b4; // FColorMaterialInput
		constexpr auto CustomSkylightDiffuse = 0x4f0; // FColorMaterialInput
		constexpr auto AnisotropicDirection = 0x52c; // FVectorMaterialInput
		constexpr auto TwoSidedLightingMask = 0x570; // FScalarMaterialInput
		constexpr auto TwoSidedLightingColor = 0x5ac; // FColorMaterialInput
		constexpr auto WorldPositionOffset = 0x5e8; // FVectorMaterialInput
		constexpr auto WorldDisplacement = 0x62c; // FVectorMaterialInput
		constexpr auto TessellationMultiplier = 0x670; // FScalarMaterialInput
		constexpr auto SubsurfaceInscatteringColor = 0x6ac; // FColorMaterialInput
		constexpr auto SubsurfaceAbsorptionColor = 0x6e8; // FColorMaterialInput
		constexpr auto SubsurfaceScatteringRadius = 0x724; // FScalarMaterialInput
		constexpr auto CustomPixelShaderVector = 0x760; // FVectorMaterialInput
		constexpr auto PixelDepthModifier = 0x7a4; // FScalarMaterialInput
		constexpr auto EnableSubsurfaceScattering = 0x7e0; // uint32_t : 1
		constexpr auto EnableSeparateTranslucency = 0x7e0; // uint32_t : 1
		constexpr auto bEnableMaskedAntialiasing = 0x7e0; // uint32_t : 1
		constexpr auto TwoSided = 0x7e0; // uint32_t : 1
		constexpr auto TwoSidedFlipsNormals = 0x7e0; // uint32_t : 1
		constexpr auto TwoSidedSeparatePass = 0x7e0; // uint32_t : 1
		constexpr auto bDisableDepthTest = 0x7e0; // uint32_t : 1
		constexpr auto bSceneTextureRenderBehindTranslucency = 0x7e0; // uint32_t : 1
		constexpr auto bAllowFog = 0x7e0; // uint32_t : 1
		constexpr auto bTranslucencyReceiveDominantShadowsFromStatic = 0x7e0; // uint32_t : 1
		constexpr auto bTranslucencyInheritDominantShadowsFromOpaque = 0x7e0; // uint32_t : 1
		constexpr auto bAllowTranslucencyDoF = 0x7e0; // uint32_t : 1
		constexpr auto bUseOneLayerDistortion = 0x7e0; // uint32_t : 1
		constexpr auto bUseLitTranslucencyDepthPass = 0x7e0; // uint32_t : 1
		constexpr auto bUseLitTranslucencyPostRenderDepthPass = 0x7e0; // uint32_t : 1
		constexpr auto bCastLitTranslucencyShadowAsMasked = 0x7e0; // uint32_t : 1
		constexpr auto bUsedAsLightFunction = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithFogVolumes = 0x7e0; // uint32_t : 1
		constexpr auto bUsedAsSpecialEngineMaterial = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithSkeletalMesh = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithTerrain = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithLandscape = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithMobileLandscape = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithFracturedMeshes = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSystem = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSprites = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithBeamTrails = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithParticleSubUV = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithSpeedTree = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithStaticLighting = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithLensFlare = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithGammaCorrection = 0x7e0; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshParticles = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithFluidSurfaces = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithDecals = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithMaterialEffect = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithMorphTargets = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithRadialBlur = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithInstancedMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithSplineMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithAPEXMeshes = 0x7e4; // uint32_t : 1
		constexpr auto bUsedWithScreenDoorFade = 0x7e4; // uint32_t : 1
		constexpr auto bEnableCrackFreeDisplacement = 0x7e4; // uint32_t : 1
		constexpr auto bTessellationFrustumCulling = 0x7e4; // uint32_t : 1
		constexpr auto bTessellationBackfaceCulling = 0x7e4; // uint32_t : 1
		constexpr auto bUseImageBasedReflections = 0x7e4; // uint32_t : 1
		constexpr auto Wireframe = 0x7e4; // uint32_t : 1
		constexpr auto bPerPixelCameraVector = 0x7e4; // uint32_t : 1
		constexpr auto bAllowLightmapSpecular = 0x7e4; // uint32_t : 1
		constexpr auto bOverrideLowQualitySpecular = 0x7e4; // uint32_t : 1
		constexpr auto bCleanupUnusedTextures = 0x7e4; // uint32_t : 1
		constexpr auto bIsFallbackMaterial = 0x7e4; // uint32_t : 1
		constexpr auto bUsesDistortion = 0x7e4; // uint32_t : 1
		constexpr auto bIsMasked = 0x7e4; // uint32_t : 1
		constexpr auto bIsPreviewMaterial = 0x7e4; // uint32_t : 1
		constexpr auto ImageReflectionNormalDampening = 0x7e8; // float
		constexpr auto CookedShaderCache = 0x7ec; // ObjectProperty
		constexpr auto MaterialResources = 0x7f4; // FPointer [0x3]
		constexpr auto DefaultMaterialInstances = 0x80c; // FPointer [0x3]
		constexpr auto EditorX = 0x824; // int32_t
		constexpr auto EditorY = 0x828; // int32_t
		constexpr auto EditorPitch = 0x82c; // int32_t
		constexpr auto EditorYaw = 0x830; // int32_t
		constexpr auto Expressions = 0x834; // TArray<ObjectProperty>
		constexpr auto MaterialFunctionInfos = 0x844; // TArray<FMaterialFunctionInfo>
		constexpr auto EditorParameters = 0x854; // TMap<None, None>
		constexpr auto ReferencedTextures = 0x89c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_FernandoShieldBar { // : UUIComponent_ShieldBar
		constexpr auto m_bHasAegisTalent = 0x158; // uint32_t : 1
		constexpr auto m_mcShieldMeter = 0x15c; // ObjectProperty
		constexpr auto m_mcBrokenShieldIcon = 0x164; // ObjectProperty
	}

	namespace n_ADoorMarker { // : ANavigationPoint
		constexpr auto MyDoor = 0x378; // ObjectProperty
		constexpr auto DoorType = 0x380; // EDoorType
		constexpr auto DoorTrigger = 0x384; // ObjectProperty
		constexpr auto bWaitUntilCompletelyOpened = 0x38c; // uint32_t : 1
		constexpr auto bInitiallyClosed = 0x38c; // uint32_t : 1
		constexpr auto bBlockedWhenClosed = 0x38c; // uint32_t : 1
		constexpr auto bDoorOpen = 0x38c; // uint32_t : 1
		constexpr auto bTempDisabledCollision = 0x38c; // uint32_t : 1
	}

	namespace n_ATgGameTipManager { // : AActor
		constexpr auto m_TipSavedState = 0x280; // TArray<FTipSavedState>
		constexpr auto m_GameTipQueue = 0x290; // TArray<FGameTipInfo>
		constexpr auto m_GameTipWorldQueue = 0x2a0; // TArray<FGameTipInfo>
		constexpr auto m_GameTipSpecialQueue = 0x2b0; // TArray<FGameTipInfo>
		constexpr auto m_bIsActive = 0x2c0; // uint32_t : 1
		constexpr auto m_AudioComponent = 0x2c4; // ComponentProperty
		constexpr auto m_nActiveTip = 0x2cc; // int32_t
		constexpr auto m_nPlaySoundTip = 0x2d0; // int32_t
	}

	namespace n_UFactory { // : UObject
		constexpr auto SupportedClass = 0x60; // UObject*
		constexpr auto ContextClass = 0x68; // UObject*
		constexpr auto Description = 0x70; // FString
		constexpr auto Formats = 0x80; // TArray<FString>
		constexpr auto bCreateNew = 0x90; // uint32_t : 1
		constexpr auto bEditAfterNew = 0x90; // uint32_t : 1
		constexpr auto bEditorImport = 0x90; // uint32_t : 1
		constexpr auto bText = 0x90; // uint32_t : 1
		constexpr auto AutoPriority = 0x94; // int32_t
		constexpr auto ValidGameNames = 0x98; // TArray<FString>
	}

	namespace n_ATgDevice_CommanderUlt { // : ATgDevice
		constexpr auto m_CachedCommander = 0xa08; // ObjectProperty
		constexpr auto m_CommanderUltFireDevice = 0xa10; // ObjectProperty
		constexpr auto m_vLastDeployLocPreOffset = 0xa18; // FVector
		constexpr auto m_rInitialDeployRotation = 0xa24; // FRotator
	}

	namespace n_USettings { // : UObject
		constexpr auto LocalizedSettings = 0x60; // TArray<FLocalizedStringSetting>
		constexpr auto Properties = 0x70; // TArray<FSettingsProperty>
		constexpr auto LocalizedSettingsMappings = 0x80; // TArray<FLocalizedStringSettingMetaData>
		constexpr auto PropertyMappings = 0x90; // TArray<FSettingsPropertyPropertyMetaData>
	}

	namespace n_ATgDevice_Stealth { // : ATgDevice
		constexpr auto m_bIsInCombat = 0xa08; // uint32_t : 1
		constexpr auto m_bCanFireInCombat = 0xa08; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_DragonSlam { // : UTgDeviceForm
		constexpr auto m_bStartFireInAir = 0x28c; // uint32_t : 1
		constexpr auto m_DragonSlamBlendList1P = 0x290; // TArray<ObjectProperty>
		constexpr auto m_DragonSlamBlendList3P = 0x2a0; // TArray<ObjectProperty>
	}

	namespace n_UDrawBoxComponent { // : UPrimitiveComponent
		constexpr auto BoxColor = 0x24c; // FColor
		constexpr auto BoxMaterial = 0x250; // ObjectProperty
		constexpr auto BoxExtent = 0x258; // FVector
		constexpr auto bDrawWireBox = 0x264; // uint32_t : 1
		constexpr auto bDrawLitBox = 0x264; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x264; // uint32_t : 1
	}

	namespace n_UInterpTrackEvent { // : UInterpTrack
		constexpr auto EventTrack = 0xa0; // TArray<FEventTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_UTgInvListener_SoulChargesActive { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bIsListenerActive = 0xcc; // uint32_t : 1
		constexpr auto m_bIsCardLogicActive = 0xcc; // uint32_t : 1
	}

	namespace n_UTgAchievement_MitigateDuringAbility { // : UTgAchievement
		constexpr auto m_CachedDevice = 0x94; // ObjectProperty
	}

	namespace n_UTgDeviceFire_RendSoul { // : UTgDeviceFire
		constexpr auto s_nStacksConsumed = 0x268; // int32_t
	}

	namespace n_UAnimTree { // : UAnimNodeBlendBase
		constexpr auto AnimTreeTemplate = 0x114; // ObjectProperty
		constexpr auto bEnablePooling = 0x11c; // uint32_t : 1
		constexpr auto bUseSavedPose = 0x11c; // uint32_t : 1
		constexpr auto bBeingEdited = 0x11c; // uint32_t : 1
		constexpr auto bParentNodeArrayBuilt = 0x11c; // uint32_t : 1
		constexpr auto bRebuildAnimTickArray = 0x11c; // uint32_t : 1
		constexpr auto m_bControlSpeed = 0x11c; // uint32_t : 1
		constexpr auto AnimGroups = 0x120; // TArray<FAnimGroup>
		constexpr auto PrioritizedSkelBranches = 0x130; // TArray<FName>
		constexpr auto ComposePrePassBoneNames = 0x140; // TArray<FName>
		constexpr auto ComposePostPassBoneNames = 0x150; // TArray<FName>
		constexpr auto RootMorphNodes = 0x160; // TArray<ObjectProperty>
		constexpr auto m_AnimTreeComments = 0x170; // TArray<ObjectProperty>
		constexpr auto SkelControlLists = 0x180; // TArray<FSkelControlListHead>
		constexpr auto SavedPose = 0x190; // TArray<FBoneAtom>
		constexpr auto AnimTickArray = 0x1a0; // TArray<ObjectProperty>
		constexpr auto m_fSpeed = 0x1b0; // float
		constexpr auto m_MasterMorphWeightNodeNames = 0x1b4; // TArray<FName>
		constexpr auto m_MasterMorphWeightGroups = 0x1c4; // TArray<FName>
		constexpr auto m_HelmetMorphRestrictions = 0x1d4; // TArray<FHelmetMorphRestrictions>
	}

	namespace n_UPath_WithinDistanceEnvelope { // : UPathConstraint
		constexpr auto MaxDistance = 0x6c; // float
		constexpr auto MinDistance = 0x70; // float
		constexpr auto bSoft = 0x74; // uint32_t : 1
		constexpr auto bOnlyThrowOutNodesThatLeaveEnvelope = 0x74; // uint32_t : 1
		constexpr auto SoftStartPenalty = 0x78; // float
		constexpr auto EnvelopeTestPoint = 0x7c; // FVector
	}

	namespace n_USeqAct_PlayFaceFXAnim { // : USequenceAction
		constexpr auto FaceFXAnimSetRef = 0x108; // ObjectProperty
		constexpr auto FaceFXGroupName = 0x110; // FString
		constexpr auto FaceFXAnimName = 0x120; // FString
		constexpr auto SoundCueToPlay = 0x130; // ObjectProperty
		constexpr auto AkEventToPlay = 0x138; // ObjectProperty
	}

	namespace n_UAkBank { // : UObject
		constexpr auto AutoLoad = 0x60; // uint32_t : 1
		constexpr auto GenerateDefinition = 0x60; // uint32_t : 1
		constexpr auto bIsAsyncLoading = 0x60; // uint32_t : 1
	}

	namespace n_UTgGameDC_EffectList { // : UTgDataChunk
		constexpr auto m_EffectList = 0x158; // ObjectProperty [0x10]
	}

	namespace n_UParticleModuleKillBox { // : UParticleModuleKillBase
		constexpr auto LowerLeftCorner = 0x68; // FRawDistributionVector
		constexpr auto UpperRightCorner = 0x8c; // FRawDistributionVector
		constexpr auto bAbsolute = 0xb0; // uint32_t : 1
		constexpr auto bKillInside = 0xb0; // uint32_t : 1
		constexpr auto bAxisAlignedAndFixedSize = 0xb0; // uint32_t : 1
	}

	namespace n_UParticleModuleUberBase { // : UParticleModule
		constexpr auto RequiredModules = 0x68; // TArray<FName>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Cassie { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_fDodgeRollFireTime = 0xcc; // float
		constexpr auto m_CachedCassiePawn = 0xd0; // ObjectProperty
	}

	namespace n_UAnimNodeAimOffset { // : UAnimNodeBlendBase
		constexpr auto Aim = 0x114; // FVector2D
		constexpr auto AngleOffset = 0x11c; // FVector2D
		constexpr auto bForceAimDir = 0x124; // uint32_t : 1
		constexpr auto bBakeFromAnimations = 0x124; // uint32_t : 1
		constexpr auto bPassThroughWhenNotRendered = 0x124; // uint32_t : 1
		constexpr auto bSynchronizeNodesInEditor = 0x124; // uint32_t : 1
		constexpr auto PassThroughAtOrAboveLOD = 0x128; // int32_t
		constexpr auto ForcedAimDir = 0x12c; // EAnimAimDir
		constexpr auto RequiredBones = 0x130; // TArray<char>
		constexpr auto AimCpntIndexLUT = 0x140; // TArray<char>
		constexpr auto TemplateNode = 0x150; // ObjectProperty
		constexpr auto Profiles = 0x158; // TArray<FAimOffsetProfile>
		constexpr auto CurrentProfileIndex = 0x168; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_TeamDeathCount { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto DeathThreshold = 0x9c; // int32_t
	}

	namespace n_UUIComponent_YagorathAcidJuiceBar { // : UUIComponent_ProgressBarRadial
		constexpr auto m_nThresholdZeroPercentFrame = 0x148; // int32_t
		constexpr auto m_nThresholdHundredPercentFrame = 0x14c; // int32_t
		constexpr auto m_ThresholdBar = 0x150; // ObjectProperty
		constexpr auto m_fMinAcidJuice = 0x158; // float
	}

	namespace n_UTgInventoryObject_Listen_ActiveWhileInGrass { // : UTgInvListener
		constexpr auto m_bCachedIsInGrass = 0xc4; // uint32_t : 1
		constexpr auto s_fExitTimestamp = 0xc8; // float
	}

	namespace n_UTgSeqAct_BeginWaitForLookAt { // : USequenceAction
		constexpr auto LocationToLookAt = 0x108; // FVector
		constexpr auto MinOffsetDistance = 0x114; // float
	}

	namespace n_USeqAct_AkPostTrigger { // : USequenceAction
		constexpr auto Trigger = 0x108; // FString
	}

	namespace n_ULensFlare { // : UObject
		constexpr auto SourceElement = 0x60; // FLensFlareElement
		constexpr auto SourceMesh = 0x1f8; // ObjectProperty
		constexpr auto SourceDPG = 0x200; // ESceneDepthPriorityGroup
		constexpr auto ReflectionsDPG = 0x201; // ESceneDepthPriorityGroup
		constexpr auto Reflections = 0x204; // TArray<FLensFlareElement>
		constexpr auto OuterCone = 0x214; // float
		constexpr auto InnerCone = 0x218; // float
		constexpr auto ConeFudgeFactor = 0x21c; // float
		constexpr auto Radius = 0x220; // float
		constexpr auto bUseTrueConeCalculation = 0x224; // uint32_t : 1
		constexpr auto bUseFixedRelativeBoundingBox = 0x224; // uint32_t : 1
		constexpr auto bRenderDebugLines = 0x224; // uint32_t : 1
		constexpr auto ThumbnailImageOutOfDate = 0x224; // uint32_t : 1
		constexpr auto MinStrength = 0x228; // float
		constexpr auto ScreenPercentageMap = 0x22c; // FRawDistributionFloat
		constexpr auto FixedRelativeBoundingBox = 0x250; // FBox
		constexpr auto CurveEdSetup = 0x26c; // ObjectProperty
		constexpr auto ReflectionCount = 0x274; // int32_t
		constexpr auto ThumbnailAngle = 0x278; // FRotator
		constexpr auto ThumbnailDistance = 0x284; // float
		constexpr auto ThumbnailImage = 0x288; // ObjectProperty
	}

	namespace n_UUIComponent_DisplayOption { // : UUIComponent_Display
		constexpr auto m_nDisplayedOption = 0x124; // int32_t
		constexpr auto m_bRegisterCallbacks = 0x128; // uint32_t : 1
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcHighlight = 0x134; // ObjectProperty
		constexpr auto m_mcOptionTF = 0x13c; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x144; // ObjectProperty
		constexpr auto m_pRightArrow = 0x14c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x154; // ObjectProperty
	}

	namespace n_UTgDeviceForm_VanguardGrab { // : UTgDeviceForm
		constexpr auto m_VanguardGrabNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_Target = 0x29c; // ObjectProperty
		constexpr auto m_nPosture = 0x2a4; // int32_t
	}

	namespace n_USoundNode { // : UObject
		constexpr auto NodeUpdateHint = 0x60; // int32_t
		constexpr auto ChildNodes = 0x64; // TArray<ObjectProperty>
	}

	namespace n_ULandscapeInfo { // : UObject
		constexpr auto LandscapeGuid = 0x60; // FGuid
		constexpr auto LayerInfoMap = 0x70; // TMap<None, None>
		constexpr auto DataInterface = 0xb8; // FPointer
		constexpr auto XYtoComponentMap = 0xc0; // TMap<None, None>
		constexpr auto XYtoCollisionComponentMap = 0x108; // TMap<None, None>
		constexpr auto LandscapeProxy = 0x150; // ObjectProperty
		constexpr auto XYtoAddCollisionMap = 0x158; // TMap<None, None>
		constexpr auto Proxies = 0x1a0; // FSet_Mirror
		constexpr auto SelectedComponents = 0x1e8; // FSet_Mirror
		constexpr auto SelectedCollisionComponents = 0x230; // FSet_Mirror
		constexpr auto SelectedRegionComponents = 0x278; // FSet_Mirror
		constexpr auto SelectedRegion = 0x2c0; // TMap<None, None>
		constexpr auto bIsValid = 0x308; // uint32_t : 1
	}

	namespace n_UUIData_PreviewItems { // : UUIData
		constexpr auto m_PreviewItemIds = 0x64; // TArray<int32_t>
	}

	namespace n_UUIComponent_PreviewRotator { // : UUIComponent_Interactable
		constexpr auto m_bHovering = 0x140; // uint32_t : 1
		constexpr auto m_bRotating = 0x140; // uint32_t : 1
		constexpr auto m_fPreviousPosX = 0x144; // float
		constexpr auto m_fRotationFactor = 0x148; // float
		constexpr auto m_LeftPressInputAction = 0x14c; // ObjectProperty
		constexpr auto m_LeftReleaseInputAction = 0x154; // ObjectProperty
	}

	namespace n_UNavMeshGoal_ClosestActorInList { // : UNavMeshPathGoalEvaluator
		constexpr auto GoalList = 0x7c; // TArray<FBiasedGoalActor>
		constexpr auto PolyToGoalActorMap = 0x8c; // FMultiMap_Mirror
		constexpr auto CachedAnchorPoly = 0xd4; // FPointer
	}

	namespace n_UMaterialExpressionCustom { // : UMaterialExpression
		constexpr auto Code = 0xb0; // FString
		constexpr auto OutputType = 0xc0; // ECustomMaterialOutputType
		constexpr auto Description = 0xc4; // FString
		constexpr auto Inputs = 0xd4; // TArray<FCustomInput>
	}

	namespace n_UUIComponent_Targeter_Headhunter { // : UUIComponent_Targeter_PointTargeter
		constexpr auto m_mcSpinner = 0x184; // ObjectProperty
		constexpr auto m_fSpinnerRotation = 0x18c; // float
	}

	namespace n_ABroadcastHandler { // : AInfo
		constexpr auto SentText = 0x280; // int32_t
		constexpr auto bMuteSpectators = 0x284; // uint32_t : 1
	}

	namespace n_ATgPawn_Character { // : ATgPawn_Biped
		constexpr auto c_bUpdatePlayerStatUI = 0x2fd0; // uint32_t : 1
		constexpr auto m_bInHandFiring = 0x2fd0; // uint32_t : 1
		constexpr auto r_bNearCapturePoint = 0x2fd0; // uint32_t : 1
		constexpr auto r_bNearPayload = 0x2fd0; // uint32_t : 1
		constexpr auto r_bNearSiegeMonster = 0x2fd0; // uint32_t : 1
		constexpr auto r_bVisibleToEnemies = 0x2fd0; // uint32_t : 1
		constexpr auto s_bAmmoReloadCheat = 0x2fd0; // uint32_t : 1
		constexpr auto s_bAutomountProtection = 0x2fd0; // uint32_t : 1
		constexpr auto m_bRecalcMoveSpeed = 0x2fd0; // uint32_t : 1
		constexpr auto m_bAttemptingAirJump = 0x2fd0; // uint32_t : 1
		constexpr auto m_bDelayingStopSpecialJumpFx = 0x2fd0; // uint32_t : 1
		constexpr auto m_bPendingBounce = 0x2fd0; // uint32_t : 1
		constexpr auto s_bInitiatingJoin = 0x2fd0; // uint32_t : 1
		constexpr auto r_bJoinForceView = 0x2fd0; // uint32_t : 1
		constexpr auto c_bInterpolatingFOV = 0x2fd0; // uint32_t : 1
		constexpr auto s_bReplicateInhandAmmo = 0x2fd0; // uint32_t : 1
		constexpr auto m_bPendingPawnModScan = 0x2fd0; // uint32_t : 1
		constexpr auto m_bInSpawnRoom = 0x2fd0; // uint32_t : 1
		constexpr auto c_bShouldTickThisFrame = 0x2fd0; // uint32_t : 1
		constexpr auto r_bCanChangeLoadout = 0x2fd0; // uint32_t : 1
		constexpr auto m_fLastCapturePointReclaimedTime = 0x2fd4; // float
		constexpr auto m_fMinReclaimPointTime = 0x2fd8; // float
		constexpr auto c_fUpdateAltitudeRTPCDelay = 0x2fdc; // float
		constexpr auto m_fInHandStartFireTime = 0x2fe0; // float
		constexpr auto m_fInHandStopFireTime = 0x2fe4; // float
		constexpr auto m_fWallDamagePercent = 0x2fe8; // float
		constexpr auto m_fSiegeDamagePercent = 0x2fec; // float
		constexpr auto r_fZoomAmt = 0x2ff0; // float
		constexpr auto r_nCriticalHit = 0x2ff4; // char
		constexpr auto m_fMountZoomOverride = 0x2ff8; // float
		constexpr auto r_StuckBombs = 0x2ffc; // ObjectProperty [0x6]
		constexpr auto m_nCharacterRole = 0x302c; // int32_t
		constexpr auto m_CustomCharacterComponent = 0x3030; // ComponentProperty
		constexpr auto m_MountedCollisionComponent = 0x3038; // ComponentProperty
		constexpr auto m_MeshEncompassingCollisionComponent = 0x3040; // ComponentProperty
		constexpr auto m_CachedMoveSpeedModDevices = 0x3048; // TArray<TScriptInterface<Class>>
		constexpr auto m_CachedAccelModDevices = 0x3058; // TArray<TScriptInterface<Class>>
		constexpr auto m_CachedDeployModDevices = 0x3068; // TArray<TScriptInterface<Class>>
		constexpr auto m_nAirJumps = 0x3078; // int32_t
		constexpr auto m_fAirJumpZSpeed = 0x307c; // float
		constexpr auto m_vBounceVelocity = 0x3080; // FVector
		constexpr auto m_JoinTargetLocal = 0x308c; // ObjectProperty
		constexpr auto m_JoinSourceLocal = 0x3094; // ObjectProperty
		constexpr auto r_JoinTarget = 0x309c; // ObjectProperty
		constexpr auto r_vJoinSourceLocation = 0x30a4; // FVector
		constexpr auto r_vJoinTargetLocation = 0x30b0; // FVector
		constexpr auto r_fJoinTweenDuration = 0x30bc; // float
		constexpr auto c_fFOVInterpStartTimestamp = 0x30c0; // float
		constexpr auto c_fFOVInterpStartValue = 0x30c4; // float
		constexpr auto c_fFOVInterpEndTimestamp = 0x30c8; // float
		constexpr auto c_fLastAppliedFOV = 0x30cc; // float
		constexpr auto r_JoinSource = 0x30d0; // ObjectProperty
		constexpr auto m_ForceFaceActors = 0x30d8; // TArray<FForceFaceTargetActor>
		constexpr auto m_fForceFaceRotationTime = 0x30e8; // float
		constexpr auto m_rForcedRotation = 0x30ec; // FRotator
		constexpr auto m_fForceFaceRotationRate = 0x30f8; // float
		constexpr auto r_nInHandCurrentAmmo = 0x30fc; // int32_t
		constexpr auto r_nInHandMaxAmmo = 0x3100; // int32_t
		constexpr auto s_nOppressorMineStackCount = 0x3104; // int32_t
		constexpr auto c_fTickCatchup = 0x3108; // float
		constexpr auto m_fEmoteMoveSpeedCeiling = 0x310c; // float
		constexpr auto r_nEquippedEmotes = 0x3110; // int32_t [0x4]
		constexpr auto r_nEquippedSprays = 0x3120; // int32_t [0x4]
		constexpr auto m_CurrentDOFSettings = 0x3130; // FWeaponDOF
		constexpr auto m_fOverriddenFOV = 0x3158; // float
		constexpr auto s_pCaptureProxy = 0x315c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorComposite_SubTree { // : UTgAIBehaviorComposite
		constexpr auto ChildTree = 0xb8; // ObjectProperty
	}

	namespace n_UUIComponent_SocialPlayer { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_pName = 0x12c; // ObjectProperty
		constexpr auto m_Avatar = 0x134; // ObjectProperty
		constexpr auto m_CrossplayIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcStatus = 0x144; // ObjectProperty
		constexpr auto m_mcLevel = 0x14c; // ObjectProperty
		constexpr auto m_mcLevelX = 0x154; // ObjectProperty
		constexpr auto m_mcRankedIndicator = 0x15c; // ObjectProperty
		constexpr auto m_mcRankedIcon = 0x164; // ObjectProperty
		constexpr auto m_mcFrame = 0x16c; // ObjectProperty
		constexpr auto m_mcTitle = 0x174; // ObjectProperty
		constexpr auto m_mcAddIcon = 0x17c; // ObjectProperty
		constexpr auto m_mcAddFrame = 0x184; // ObjectProperty
		constexpr auto m_mcAddFrameBG = 0x18c; // ObjectProperty
	}

	namespace n_UPlayer { // : UObject
		constexpr auto VfTable_FExec = 0x60; // FPointer
		constexpr auto Actor = 0x68; // ObjectProperty
		constexpr auto CurrentNetSpeed = 0x70; // int32_t
		constexpr auto ConfiguredInternetSpeed = 0x74; // int32_t
		constexpr auto ConfiguredLanSpeed = 0x78; // int32_t
		constexpr auto PP_DesaturationMultiplier = 0x7c; // float
		constexpr auto PP_HighlightsMultiplier = 0x80; // float
		constexpr auto PP_MidTonesMultiplier = 0x84; // float
		constexpr auto PP_ShadowsMultiplier = 0x88; // float
	}

	namespace n_UUIComponent_CommendationReward { // : UUIComponent_Display
		constexpr auto m_pItemPreviewStack = 0x124; // ObjectProperty
		constexpr auto m_mcLevelRequirement = 0x12c; // ObjectProperty
	}

	namespace n_UParticleModuleUberRainSplashA { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // uint32_t : 1
		constexpr auto MultiplyX = 0xe4; // uint32_t : 1
		constexpr auto MultiplyY = 0xe4; // uint32_t : 1
		constexpr auto MultiplyZ = 0xe4; // uint32_t : 1
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto ColorOverLife = 0x10c; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x130; // FRawDistributionFloat
	}

	namespace n_UUIInteractable_Button_GamepadPrompt { // : UUIComponent
		constexpr auto m_pButton = 0x118; // ObjectProperty
		constexpr auto m_mcPrompt = 0x120; // ObjectProperty
		constexpr auto m_nOptionCBHandle = 0x128; // int32_t
	}

	namespace n_AFracturedStaticMeshPart { // : AFracturedStaticMeshActor
		constexpr auto DestroyPartRadiusFactor = 0x314; // float
		constexpr auto BaseFracturedMeshActor = 0x318; // ObjectProperty
		constexpr auto bHasBeenRecycled = 0x320; // uint32_t : 1
		constexpr auto bChangeRBChannelWhenAsleep = 0x320; // uint32_t : 1
		constexpr auto bCompositeThatExplodesOnImpact = 0x320; // uint32_t : 1
		constexpr auto LastSpawnTime = 0x324; // float
		constexpr auto PartPoolIndex = 0x328; // int32_t
		constexpr auto FracPartGravScale = 0x32c; // float
		constexpr auto AsleepRBChannel = 0x330; // ERBCollisionChannel
		constexpr auto OldVelocity = 0x334; // FVector
		constexpr auto CurrentVibrationLevel = 0x340; // float
		constexpr auto LastImpactSoundTime = 0x344; // float
	}

	namespace n_UUIData_ItemQuest { // : UUIData_SpecialEvent
		constexpr auto m_dwPurchasePortion = 0xc0; // Fdword
	}

	namespace n_ULandscapeLayerInfoObject { // : UObject
		constexpr auto LayerName = 0x60; // FName
		constexpr auto PhysMaterial = 0x68; // ObjectProperty
		constexpr auto Hardness = 0x70; // float
		constexpr auto bNoWeightBlend = 0x74; // uint32_t : 1
	}

	namespace n_UTgAnimNodeTiltTowardsVelocity { // : UAnimNodeBlendBase
		constexpr auto m_MaximumVelocity = 0x114; // FVector2D
		constexpr auto m_PitchOffset = 0x11c; // int32_t
		constexpr auto m_MaximumPitchOffset = 0x120; // int32_t
		constexpr auto m_RollOffset = 0x124; // int32_t
		constexpr auto m_MaximumRollOffset = 0x128; // int32_t
		constexpr auto m_Pawn = 0x12c; // ObjectProperty
	}

	namespace n_ATgDevice_DualWield { // : ATgDevice
		constexpr auto m_vProjectileSpawnOffset2 = 0xa08; // FVector
		constexpr auto m_bFireLeftWeapon = 0xa14; // uint32_t : 1
	}

	namespace n_UTgSeqAct_PushMatinee { // : USeqAct_Interp
		constexpr auto m_fCheckpoint1Time = 0x21c; // float
		constexpr auto m_fCheckpoint2Time = 0x220; // float
		constexpr auto m_nDefenderTaskForce = 0x224; // int32_t
	}

	namespace n_UTgSeqEvent_SpawnWise { // : USequenceEvent
		constexpr auto Taskforce = 0x128; // int32_t
	}

	namespace n_ANxTornadoAngularForceFieldCapsule { // : ANxTornadoAngularForceField
		constexpr auto RenderComponent = 0x308; // ComponentProperty
	}

	namespace n_UTgAnimNodeSimpleTransitioner { // : UAnimNodeBlendList
		constexpr auto m_nDeviceId = 0x144; // int32_t
		constexpr auto m_bConfigureBasedOnDevice = 0x148; // uint32_t : 1
		constexpr auto m_bIgnoreFireMode = 0x148; // uint32_t : 1
		constexpr auto m_nNumberOfStances = 0x14c; // int32_t
		constexpr auto m_StanceBaseName = 0x150; // FName
		constexpr auto m_TransitionBaseName = 0x158; // FName
		constexpr auto m_BlendTransitionDuration = 0x160; // float
	}

	namespace n_AAutoTestManager { // : AInfo
		constexpr auto bAutomatedPerfTesting = 0x280; // uint32_t : 1
		constexpr auto bAutoContinueToNextRound = 0x280; // uint32_t : 1
		constexpr auto bUsingAutomatedTestingMapList = 0x280; // uint32_t : 1
		constexpr auto bAutomatedTestingWithOpen = 0x280; // uint32_t : 1
		constexpr auto bExitOnCyclesComplete = 0x280; // uint32_t : 1
		constexpr auto bCheckingForFragmentation = 0x280; // uint32_t : 1
		constexpr auto bCheckingForMemLeaks = 0x280; // uint32_t : 1
		constexpr auto bIsDoingASimplePerfRun = 0x280; // uint32_t : 1
		constexpr auto bDoingASentinelRun = 0x280; // uint32_t : 1
		constexpr auto bSentinelRunInProgress = 0x280; // uint32_t : 1
		constexpr auto bSentinelStreamingLevelStillLoading = 0x280; // uint32_t : 1
		constexpr auto AutomatedPerfRemainingTime = 0x284; // int32_t
		constexpr auto AutomatedTestingMapIndex = 0x288; // int32_t
		constexpr auto AutomatedMapTestingList = 0x28c; // TArray<FString>
		constexpr auto NumAutomatedMapTestingCycles = 0x29c; // int32_t
		constexpr auto NumberOfMatchesPlayed = 0x2a0; // int32_t
		constexpr auto NumMapListCyclesDone = 0x2a4; // int32_t
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatch = 0x2a8; // FString
		constexpr auto AutomatedTestingExecCommandToRunAtStartMatchOnPC = 0x2b8; // FString
		constexpr auto AutomatedMapTestingTransitionMap = 0x2c8; // FString
		constexpr auto SentinelTaskDescription = 0x2d8; // FString
		constexpr auto SentinelTaskParameter = 0x2e8; // FString
		constexpr auto SentinelTagDesc = 0x2f8; // FString
		constexpr auto SentinelPC = 0x308; // ObjectProperty
		constexpr auto SentinelTravelArray = 0x310; // TArray<FVector>
		constexpr auto SentinelNavigationIdx = 0x320; // int32_t
		constexpr auto SentinelIdx = 0x324; // int32_t
		constexpr auto NumRotationsIncrement = 0x328; // int32_t
		constexpr auto TravelPointsIncrement = 0x32c; // int32_t
		constexpr auto NumMinutesPerMap = 0x330; // int32_t
		constexpr auto TotalNumMinutesToRun = 0x334; // int32_t
		constexpr auto ProfilingInterval = 0x338; // float
		constexpr auto CommandsToRunAtEachTravelTheWorldNode = 0x33c; // TArray<FString>
		constexpr auto CommandStringToExec = 0x34c; // FString
	}

	namespace n_UTgInventoryObject_Listen_AddDamage { // : UTgInvListener
		constexpr auto m_bAutoProcOnInhand = 0xc4; // uint32_t : 1
		constexpr auto m_bCheckIsValidTarget = 0xc4; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_MirrorDamageToHealBlock { // : UTgInvListener
		constexpr auto m_CachedFiremode = 0xc4; // ObjectProperty
	}

	namespace n_UMicroTransactionBase { // : UPlatformInterfaceBase
		constexpr auto AvailableProducts = 0x80; // TArray<FPurchaseInfo>
		constexpr auto LastError = 0x90; // FString
		constexpr auto LastErrorSolution = 0xa0; // FString
	}

	namespace n_UUIScene_UIHudVGS { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_mcFrame = 0x1d4; // ObjectProperty
		constexpr auto m_pVGSEntries = 0x1dc; // ObjectProperty
	}

	namespace n_UTgAIObstacleAvoidance { // : UObject
		constexpr auto ObstacleGrid = 0x60; // FPointer
		constexpr auto CachedAvoidance = 0x68; // FObstacleQueryCache
		constexpr auto CachedBlockers = 0x94; // TArray<ObjectProperty>
		constexpr auto CachedLandscapes = 0xa4; // TArray<ObjectProperty>
		constexpr auto OuterController = 0xb4; // ObjectProperty
		constexpr auto bRenderingIsDirty = 0xbc; // uint32_t : 1
	}

	namespace n_ATgProj_CorrupterBaseProjectile { // : ATgProj_ExtraColliders
		constexpr auto m_Corrupter = 0x55c; // ObjectProperty
		constexpr auto m_FireSpecial = 0x564; // ObjectProperty
	}

	namespace n_ATgDevice_OwlSidearm { // : ATgDevice
		constexpr auto m_fQueueFireTime = 0xa08; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xa0c; // float
		constexpr auto m_bEnableContinuousFire = 0xa10; // uint32_t : 1
	}

	namespace n_UUIData_ChestDataWithCTA { // : UUIData
		constexpr auto m_dwCTACount = 0x64; // Fdword
		constexpr auto m_pChestData = 0x68; // ObjectProperty
	}

	namespace n_ARadialBlurActor { // : AActor
		constexpr auto RadialBlur = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_GuardianStunRush { // : ATgDevice
		constexpr auto m_CachedFox = 0xa08; // ObjectProperty
		constexpr auto m_PlaceHolder = 0xa10; // ObjectProperty
		constexpr auto m_fImpactAnimationTime = 0xa18; // float
		constexpr auto m_pIntendedRushTarget = 0xa1c; // ObjectProperty
	}

	namespace n_ATgDevice_BombKingInhand { // : ATgDevice_DualWield
		constexpr auto r_bHasActiveProjectile = 0xa18; // uint32_t : 1
		constexpr auto m_bInDetonationMode = 0xa18; // uint32_t : 1
		constexpr auto m_PendingDetonations = 0xa1c; // TArray<FStickyBombPendingDetonate>
		constexpr auto m_PendingProjectileConversions = 0xa2c; // TArray<ObjectProperty>
		constexpr auto c_nLiveExplosiveIds = 0xa3c; // TArray<int32_t>
		constexpr auto m_fValidationTolerance = 0xa4c; // float
		constexpr auto __DetonatorFiringDelegate__Delegate = 0xa50; // DelegateProperty
	}

	namespace n_ATgDevice_GroverInhand { // : ATgDevice
		constexpr auto m_nProjectilesRemaining = 0xa08; // int32_t
		constexpr auto m_nProjectileCount = 0xa0c; // int32_t
		constexpr auto m_fMultiProjectileDelay = 0xa10; // float
	}

	namespace n_USeqCond_CompareBool { // : USequenceCondition
		constexpr auto bResult = 0xec; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_TimeInPayloadMode { // : UTgAIBehaviorCondition
		constexpr auto TimeThreshold = 0x98; // float
	}

	namespace n_UTgSeqEvent_ControlPointOwnershipChange_Server { // : USequenceEvent
		constexpr auto PointIndex = 0x128; // int32_t
	}

	namespace n_ATgPawn_Biped { // : ATgPawn
		constexpr auto m_nmLeftFootBone = 0x2ea0; // FName
		constexpr auto m_nmRightFootBone = 0x2ea8; // FName
		constexpr auto m_nmLeftFootControlName = 0x2eb0; // FName
		constexpr auto m_nmRightFootControlName = 0x2eb8; // FName
		constexpr auto m_fOldLocationZ = 0x2ec0; // float
		constexpr auto m_bEnableRightFootPlacement = 0x2ec4; // uint32_t : 1
		constexpr auto m_bEnableLeftFootPlacement = 0x2ec4; // uint32_t : 1
		constexpr auto m_bMayDisableFootIKFromAnimNodes = 0x2ec4; // uint32_t : 1
		constexpr auto m_bInitializedFootIKCachedNodeList = 0x2ec4; // uint32_t : 1
		constexpr auto m_bApplyLeftHandWeaponIK = 0x2ec4; // uint32_t : 1
		constexpr auto m_bSetHandIKStrengthFromAnimNodes = 0x2ec4; // uint32_t : 1
		constexpr auto m_bInitializedHandIKCachedNodeList = 0x2ec4; // uint32_t : 1
		constexpr auto c_bPlayingRefire = 0x2ec4; // uint32_t : 1
		constexpr auto c_bRefireIsUpperBody = 0x2ec4; // uint32_t : 1
		constexpr auto m_fZSmoothingRate = 0x2ec8; // float
		constexpr auto m_fMaxFootPlacementDistSquared = 0x2ecc; // float
		constexpr auto m_LeftLegControl = 0x2ed0; // ObjectProperty
		constexpr auto m_RightLegControl = 0x2ed8; // ObjectProperty
		constexpr auto m_FootIKZeroStrengthAnimNodeNameList = 0x2ee0; // TArray<FName>
		constexpr auto m_FootIKZeroStrengthCachedNodeList = 0x2ef0; // TArray<ObjectProperty>
		constexpr auto m_vPreviousRightFootPosition = 0x2f00; // FVector
		constexpr auto m_vPreviousLeftFootPosition = 0x2f0c; // FVector
		constexpr auto m_fCachedRightTracedFloor = 0x2f18; // float
		constexpr auto m_fCachedLeftTracedFloor = 0x2f1c; // float
		constexpr auto m_fCachedRightFloorNormalZ = 0x2f20; // float
		constexpr auto m_fCachedLeftFloorNormalZ = 0x2f24; // float
		constexpr auto m_nCachedLeftFootBoneIndex = 0x2f28; // int32_t
		constexpr auto m_nCachedRightFootBoneIndex = 0x2f2c; // int32_t
		constexpr auto m_SkelControl_LeftHandName = 0x2f30; // FName
		constexpr auto m_SkelControl_LeftHand = 0x2f38; // ObjectProperty
		constexpr auto m_SkelControl_LeftHandRotate = 0x2f40; // ObjectProperty
		constexpr auto m_SkelControl_RightHandName = 0x2f48; // FName
		constexpr auto m_SkelControl_RightHand = 0x2f50; // ObjectProperty
		constexpr auto m_SkelControl_RightHandRotate = 0x2f58; // ObjectProperty
		constexpr auto m_SkelControl_RightToLeftPropSwitch = 0x2f60; // ObjectProperty
		constexpr auto m_HandIKFullStrengthAnimNodeNameList = 0x2f68; // TArray<FName>
		constexpr auto m_HandIKZeroStrengthAnimNodeNameList = 0x2f78; // TArray<FName>
		constexpr auto m_HandIKFullStengthCachedNodeList = 0x2f88; // TArray<ObjectProperty>
		constexpr auto m_HandIKZeroStrengthCachedNodeList = 0x2f98; // TArray<ObjectProperty>
		constexpr auto m_FadeMaterialControllerBody = 0x2fa8; // ObjectProperty
		constexpr auto c_RefireBeginBlendAnimationName = 0x2fb0; // FName
		constexpr auto c_RefireEndBlendAnimationName = 0x2fb8; // FName
		constexpr auto c_RefireAnimSet = 0x2fc0; // ObjectProperty
		constexpr auto c_fRefireDuration = 0x2fc8; // float
		constexpr auto c_fRefireEndDuration = 0x2fcc; // float
	}

	namespace n_ATgDevice_ImaniF { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_fLastMultiplierUsed = 0xa10; // float
		constexpr auto m_fInterruptSpeedThresholdSqr = 0xa14; // float
		constexpr auto m_CachedImani = 0xa18; // ObjectProperty
		constexpr auto m_CachedLMB2 = 0xa20; // ObjectProperty
	}

	namespace n_UTgDeviceFire_DrogozLeg1 { // : UTgDeviceFire
		constexpr auto m_DamageAmount = 0x268; // float
	}

	namespace n_ATgGame_Paladins_SiegeRedux { // : ATgGame_Paladins
		constexpr auto m_fInitialSetupDuration = 0x868; // float
		constexpr auto m_fSetupDuration = 0x86c; // float
		constexpr auto m_fPushDuration = 0x870; // float
	}

	namespace n_ATgIdol { // : AActor
		constexpr auto r_nDefenderTaskForce = 0x280; // int32_t
		constexpr auto m_Holder = 0x284; // ObjectProperty
		constexpr auto r_HolderPRI = 0x28c; // ObjectProperty
		constexpr auto m_OldHolder = 0x294; // ObjectProperty
	}

	namespace n_UTgParticleSystemComponent { // : UParticleSystemComponent
		constexpr auto m_AttachedToSkelMesh = 0x3c8; // ComponentProperty
		constexpr auto m_bReenableAfterTeleport = 0x3d0; // uint32_t : 1
	}

	namespace n_ATgDevice_Lightspeed { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_ATgDevice_Vine { // : ATgDevice
		constexpr auto m_PullTarget = 0xa08; // ObjectProperty
		constexpr auto m_vPullLocation = 0xa10; // FVector
		constexpr auto m_bCanBeCanceled = 0xa1c; // uint32_t : 1
		constexpr auto m_bMissedPull = 0xa1c; // uint32_t : 1
		constexpr auto m_bIsPulling = 0xa1c; // uint32_t : 1
		constexpr auto m_bHasPulledOnce = 0xa1c; // uint32_t : 1
		constexpr auto m_bTeleportedAfterFiring = 0xa1c; // uint32_t : 1
	}

	namespace n_UUIComponent_ExpandableTextBox { // : UUIComponent_Display
		constexpr auto m_bIsExpanded = 0x124; // uint32_t : 1
		constexpr auto m_mcTitleTF = 0x128; // ObjectProperty
		constexpr auto m_mcSubTitleTF = 0x130; // ObjectProperty
		constexpr auto m_mcBackground = 0x138; // ObjectProperty
		constexpr auto m_pArrow = 0x140; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x148; // ObjectProperty
		constexpr auto m_pScrollableText = 0x150; // ObjectProperty
	}

	namespace n_ATgSpawnTeleporterExit { // : AActor
		constexpr auto nTaskForce = 0x280; // int32_t
		constexpr auto nLane = 0x284; // int32_t
		constexpr auto nGamePhase = 0x288; // int32_t
		constexpr auto nPriority = 0x28c; // int32_t
		constexpr auto bEnabled = 0x290; // uint32_t : 1
	}

	namespace n_ALandscapeProxy { // : AInfo
		constexpr auto LandscapeGuid = 0x280; // FGuid
		constexpr auto MaxLODLevel = 0x290; // int32_t
		constexpr auto DefaultPhysMaterial = 0x294; // ObjectProperty
		constexpr auto StreamingDistanceMultiplier = 0x29c; // float
		constexpr auto LandscapeMaterial = 0x2a0; // ObjectProperty
		constexpr auto LODDistanceFactor = 0x2a8; // float
		constexpr auto LandscapeComponents = 0x2ac; // TArray<ComponentProperty>
		constexpr auto CollisionComponents = 0x2bc; // TArray<ComponentProperty>
		constexpr auto MaterialInstanceConstantMap = 0x2cc; // TMap<None, None>
		constexpr auto WeightmapUsageMap = 0x314; // TMap<None, None>
		constexpr auto StaticLightingResolution = 0x35c; // float
		constexpr auto LandscapeActor = 0x360; // ObjectProperty
		constexpr auto bIncludeInManualZPrepass = 0x368; // uint32_t : 1
		constexpr auto bIsProxy = 0x368; // uint32_t : 1
		constexpr auto bIsSetup = 0x368; // uint32_t : 1
		constexpr auto bResetup = 0x368; // uint32_t : 1
		constexpr auto bIsMovingToLevel = 0x368; // uint32_t : 1
		constexpr auto ActorLayerNames = 0x36c; // TArray<FName>
		constexpr auto LightmassSettings = 0x37c; // FLightmassPrimitiveSettings
		constexpr auto CollisionMipLevel = 0x398; // int32_t
		constexpr auto MobileLODBias = 0x39c; // int32_t
		constexpr auto LayerInfoObjs = 0x3a0; // TArray<FLandscapeLayerStruct>
		constexpr auto ComponentSizeQuads = 0x3b0; // int32_t
		constexpr auto SubsectionSizeQuads = 0x3b4; // int32_t
		constexpr auto NumSubsections = 0x3b8; // int32_t
	}

	namespace n_UParticleModuleTypeDataBeam2 { // : UParticleModuleTypeDataBase
		constexpr auto BeamMethod = 0x68; // EBeam2Method
		constexpr auto TaperMethod = 0x69; // EBeamTaperMethod
		constexpr auto TextureTile = 0x6c; // int32_t
		constexpr auto TextureTileDistance = 0x70; // float
		constexpr auto Sheets = 0x74; // int32_t
		constexpr auto MaxBeamCount = 0x78; // int32_t
		constexpr auto Speed = 0x7c; // float
		constexpr auto InterpolationPoints = 0x80; // int32_t
		constexpr auto bAlwaysOn = 0x84; // uint32_t : 1
		constexpr auto RenderGeometry = 0x84; // uint32_t : 1
		constexpr auto RenderDirectLine = 0x84; // uint32_t : 1
		constexpr auto RenderLines = 0x84; // uint32_t : 1
		constexpr auto RenderTessellation = 0x84; // uint32_t : 1
		constexpr auto UpVectorStepSize = 0x88; // int32_t
		constexpr auto BranchParentName = 0x8c; // FName
		constexpr auto Distance = 0x94; // FRawDistributionFloat
		constexpr auto TaperFactor = 0xb8; // FRawDistributionFloat
		constexpr auto TaperScale = 0xdc; // FRawDistributionFloat
	}

	namespace n_ATgDevice_TripleBeacon { // : ATgDevice
		constexpr auto m_CachedCorvusBeaconDevice = 0xa08; // ObjectProperty
	}

	namespace n_USeqEvent_Mover { // : USequenceEvent
		constexpr auto StayOpenTime = 0x128; // float
	}

	namespace n_UApexAsset { // : UObject
		constexpr auto OriginalApexName = 0x60; // FString
		constexpr auto ApexComponents = 0x70; // TArray<ComponentProperty>
	}

	namespace n_UTgDeviceFire_RaumStomp { // : UTgDeviceFire
		constexpr auto m_fCurrentScalingFactor = 0x268; // float
	}

	namespace n_ATgDevice_IllusoryRift { // : ATgDevice
		constexpr auto m_bDeviceLockout = 0xa08; // uint32_t : 1
	}

	namespace n_ATgPawn_TowerBase { // : ATgPawn_Structure
		constexpr auto BorderEdges = 0x2ea8; // TArray<FNavMeshBorderEdges>
		constexpr auto c_BeamFX = 0x2eb8; // ObjectProperty
		constexpr auto s_DamageScaler = 0x2ec0; // ComponentProperty
		constexpr auto m_nNumGuardianLevels = 0x2ec8; // int32_t
		constexpr auto r_bLocked = 0x2ecc; // uint32_t : 1
		constexpr auto m_bShouldBeFaded = 0x2ecc; // uint32_t : 1
		constexpr auto m_fTransparentFadeSpeed = 0x2ed0; // float
		constexpr auto m_fMaxFadeTransparency = 0x2ed4; // float
		constexpr auto m_fFadeDistance2D = 0x2ed8; // float
	}

	namespace n_UTgDeviceForm_CorvusDagger { // : UTgDeviceForm
		constexpr auto m_CorvusDaggerNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_CorvusDaggerNodes1p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_CorvusNodes3p = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_CorvusNodes1p = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_AkSetSwitch { // : USequenceAction
		constexpr auto SwitchGroup = 0x108; // FString
		constexpr auto Switch = 0x118; // FString
	}

	namespace n_UTgEffectGroup { // : UObject
		constexpr auto m_nType = 0x60; // int32_t
		constexpr auto m_Target = 0x64; // ObjectProperty
		constexpr auto m_Instigator = 0x6c; // ObjectProperty
		constexpr auto m_InstigatorDeployable = 0x74; // ObjectProperty
		constexpr auto m_nEffectGroupId = 0x7c; // int32_t
		constexpr auto m_fLifeTime = 0x80; // float
		constexpr auto m_fModLifeTime = 0x84; // float
		constexpr auto m_fLifeTimeIncreaseFromInstigator = 0x88; // float
		constexpr auto m_fApplyInterval = 0x8c; // float
		constexpr auto m_Effects = 0x90; // TArray<ObjectProperty>
		constexpr auto m_nDamageType = 0xa0; // int32_t
		constexpr auto m_eAttackType = 0xa4; // AttackType
		constexpr auto m_StunType = 0xa5; // EStunType
		constexpr auto m_bIsManaged = 0xa8; // uint32_t : 1
		constexpr auto m_bHasStealthEffect = 0xa8; // uint32_t : 1
		constexpr auto m_bDoesDamage = 0xa8; // uint32_t : 1
		constexpr auto m_bDoesDamageOverTime = 0xa8; // uint32_t : 1
		constexpr auto m_bContagious = 0xa8; // uint32_t : 1
		constexpr auto s_bActiveFlag = 0xa8; // uint32_t : 1
		constexpr auto s_bCriticalHitFlag = 0xa8; // uint32_t : 1
		constexpr auto m_bDeviceSpecificFlag = 0xa8; // uint32_t : 1
		constexpr auto m_bHasVisual = 0xa8; // uint32_t : 1
		constexpr auto m_bSupportsEffectSimulation = 0xa8; // uint32_t : 1
		constexpr auto m_fPercAbsorbedDamage = 0xac; // float
		constexpr auto m_nApplicationType = 0xb0; // int32_t
		constexpr auto m_fApplicationValue = 0xb4; // float
		constexpr auto m_fApplicationChance = 0xb8; // float
		constexpr auto m_nApplicationCategoryCode = 0xbc; // int32_t
		constexpr auto m_nBehaviorCategoryCode = 0xc0; // int32_t
		constexpr auto m_nReqDeviceInstanceId = 0xc4; // int32_t
		constexpr auto m_fBuffValue = 0xc8; // float
		constexpr auto m_fPhysicalPowerScaling = 0xcc; // float
		constexpr auto m_fMagicalPowerScaling = 0xd0; // float
		constexpr auto m_fLifetimeScaling = 0xd4; // float
		constexpr auto m_fLifetimeMax = 0xd8; // float
		constexpr auto m_nScalingType = 0xdc; // int32_t
		constexpr auto m_nTargetType = 0xe0; // int32_t
		constexpr auto m_nTargetAffectsType = 0xe4; // int32_t
		constexpr auto m_nHitSpecialSituationalType = 0xe8; // int32_t
		constexpr auto m_nNumStacks = 0xec; // int32_t
		constexpr auto m_nNumMaxStacks = 0xf0; // int32_t
		constexpr auto s_NonContagiousEffectGroup = 0xf4; // ObjectProperty
		constexpr auto m_Impact = 0xfc; // FImpactInfo
		constexpr auto m_nPosture = 0x178; // int32_t
		constexpr auto m_nFxAppliedId = 0x17c; // int32_t
		constexpr auto m_nmDisplayGroup = 0x180; // FName
		constexpr auto s_ManagedEffectListIndex = 0x188; // int32_t
		constexpr auto s_OwnerEffectManager = 0x18c; // ObjectProperty
		constexpr auto m_nmDamageTypeClass = 0x194; // FName
		constexpr auto m_nSourceDeviceInstId = 0x19c; // int32_t
		constexpr auto m_nSourceItemId = 0x1a0; // int32_t
		constexpr auto s_fEGShieldHealth = 0x1a4; // float
		constexpr auto s_fEGShieldHealthMax = 0x1a8; // float
		constexpr auto m_Waveform = 0x1ac; // ObjectProperty
		constexpr auto m_pEffectGroupSetup = 0x1b4; // FPointer
		constexpr auto m_LastLifeTimeCalcInfo = 0x1bc; // FLifeTimeCalcInfo
	}

	namespace n_ATgDevice_ChurchillADS { // : ATgDevice_ToggleADS
		constexpr auto m_CachedInhand = 0xa20; // ObjectProperty
	}

	namespace n_UUIHud { // : UTgGfxScene
		constexpr auto m_mcSubscenes = 0x1ec; // ObjectProperty [0xb]
		constexpr auto m_mcPaused = 0x244; // ObjectProperty
	}

	namespace n_UUIScene_UIReferredRewardsPopup { // : UUIScene
		constexpr auto m_grPanel = 0x1cc; // ObjectProperty
		constexpr auto m_mcTimeTitle = 0x1d4; // ObjectProperty
		constexpr auto m_pTimeSubtitle = 0x1dc; // ObjectProperty
		constexpr auto m_pAddReferrerButton = 0x1e4; // ObjectProperty
		constexpr auto m_pLevelRewards = 0x1ec; // ObjectProperty
		constexpr auto m_pFriendRewards = 0x1f4; // ObjectProperty
		constexpr auto m_pAddReferrerAction = 0x1fc; // ObjectProperty
	}

	namespace n_AMutator { // : AInfo
		constexpr auto NextMutator = 0x280; // ObjectProperty
		constexpr auto GroupNames = 0x288; // TArray<FString>
		constexpr auto bUserAdded = 0x298; // uint32_t : 1
	}

	namespace n_UUIComponent_EventBundleButton { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcLock = 0x12c; // ObjectProperty
		constexpr auto m_pPreviewVoice = 0x134; // ObjectProperty
		constexpr auto m_pButton = 0x13c; // ObjectProperty
	}

	namespace n_UForceFeedbackWaveform { // : UObject
		constexpr auto bIsLooping = 0x60; // uint32_t : 1
		constexpr auto Samples = 0x64; // TArray<FWaveformSample>
		constexpr auto WaveformFalloffStartDistance = 0x74; // float
		constexpr auto MaxWaveformDistance = 0x78; // float
	}

	namespace n_UUIComponent_ChestTab { // : UUIComponent_Display
		constexpr auto m_mcChestIcon = 0x124; // ObjectProperty
		constexpr auto m_pCTA = 0x12c; // ObjectProperty
	}

	namespace n_AAIController { // : AController
		constexpr auto bAdjustFromWalls = 0x470; // uint32_t : 1
		constexpr auto bReverseScriptedRoute = 0x470; // uint32_t : 1
		constexpr auto Skill = 0x474; // float
		constexpr auto ScriptedMoveTarget = 0x478; // ObjectProperty
		constexpr auto ScriptedRoute = 0x480; // ObjectProperty
		constexpr auto ScriptedRouteIndex = 0x488; // int32_t
		constexpr auto ScriptedFocus = 0x48c; // ObjectProperty
	}

	namespace n_UFracturedStaticMeshComponent { // : UFracturedBaseComponent
		constexpr auto FragmentNeighborsVisible = 0x338; // TArray<char>
		constexpr auto VisibleBox = 0x348; // FBox
		constexpr auto bUseSkinnedRendering = 0x364; // uint32_t : 1
		constexpr auto bUseVisibleVertsForBounds = 0x364; // uint32_t : 1
		constexpr auto bTopFragmentsRootNonDestroyable = 0x364; // uint32_t : 1
		constexpr auto bBottomFragmentsRootNonDestroyable = 0x364; // uint32_t : 1
		constexpr auto TopBottomFragmentDistThreshold = 0x368; // float
		constexpr auto LoseChunkOutsideMaterialOverride = 0x36c; // ObjectProperty
		constexpr auto FragmentBoundsMaxZ = 0x374; // float
		constexpr auto FragmentBoundsMinZ = 0x378; // float
		constexpr auto SkinnedComponent = 0x37c; // ComponentProperty
	}

	namespace n_UMaterialExpressionComment { // : UMaterialExpression
		constexpr auto PosX = 0xb0; // int32_t
		constexpr auto PosY = 0xb4; // int32_t
		constexpr auto SizeX = 0xb8; // int32_t
		constexpr auto SizeY = 0xbc; // int32_t
		constexpr auto Text = 0xc0; // FString
	}

	namespace n_UTexture2DDynamic { // : UTexture
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto NumMips = 0x10c; // int32_t
		constexpr auto bIsResolveTarget = 0x110; // uint32_t : 1
	}

	namespace n_USeqAct_SubtractInt { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UMaterialExpressionConstant4Vector { // : UMaterialExpression
		constexpr auto R = 0xb0; // float
		constexpr auto G = 0xb4; // float
		constexpr auto B = 0xb8; // float
		constexpr auto A = 0xbc; // float
	}

	namespace n_UUIComponent_NotificationCenterCoupons { // : UUIComponent_Display
		constexpr auto m_pEntries = 0x124; // ObjectProperty
		constexpr auto m_grInput = 0x12c; // ObjectProperty
	}

	namespace n_UUIDataLeague { // : UUIData
		constexpr auto dwLeagueId = 0x64; // Fdword
		constexpr auto m_TierArray = 0x68; // TArray<ObjectProperty>
		constexpr auto m_Tiers = 0x78; // TMap<None, None>
		constexpr auto m_TierTypeToTierId = 0xc0; // TMap<None, None>
		constexpr auto m_PlayerArray = 0x108; // TArray<ObjectProperty>
		constexpr auto m_Players = 0x118; // TMap<None, None>
	}

	namespace n_UUIComponent_LegendaryCardIcon { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
	}

	namespace n_USeqEvent_MobileSwipe { // : USeqEvent_MobileRawInput
		constexpr auto Tolerance = 0x13c; // float
		constexpr auto MinDistance = 0x140; // float
		constexpr auto InitialTouch = 0x144; // FVector2D
		constexpr auto TouchedActors = 0x14c; // TArray<ObjectProperty>
		constexpr auto TraceDistance = 0x15c; // float
	}

	namespace n_UGameSkelCtrl_Recoil { // : USkelControlBase
		constexpr auto bBoneSpaceRecoil = 0xd0; // uint32_t : 1
		constexpr auto bPlayRecoil = 0xd0; // uint32_t : 1
		constexpr auto bOldPlayRecoil = 0xd0; // uint32_t : 1
		constexpr auto bApplyControl = 0xd0; // uint32_t : 1
		constexpr auto m_bBlendIn = 0xd0; // uint32_t : 1
		constexpr auto Recoil = 0xd4; // FRecoilDef
		constexpr auto Aim = 0x144; // FVector2D
		constexpr auto m_bBlendInRemainingTime = 0x14c; // float
		constexpr auto m_BlendLoc = 0x150; // FVector
		constexpr auto m_BlendRot = 0x15c; // FRotator
	}

	namespace n_UDistributionVectorParameterBase { // : UDistributionVectorConstant
		constexpr auto ParameterName = 0x90; // FName
		constexpr auto MinInput = 0x98; // FVector
		constexpr auto MaxInput = 0xa4; // FVector
		constexpr auto MinOutput = 0xb0; // FVector
		constexpr auto MaxOutput = 0xbc; // FVector
		constexpr auto ParamModes = 0xc8; // DistributionParamMode [0x3]
	}

	namespace n_UChildConnection { // : UNetConnection
		constexpr auto Parent = 0xb104; // ObjectProperty
	}

	namespace n_UUIComponent { // : UObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_ComponentType = 0x68; // UICOMPONENTTYPE
		constexpr auto m_Owner = 0x6c; // ObjectProperty
		constexpr auto m_mcRoot = 0x74; // ObjectProperty
		constexpr auto m_sLoadName = 0x7c; // FString
		constexpr auto m_nLoadIndex = 0x8c; // int32_t
		constexpr auto m_sConstructName = 0x90; // FString
		constexpr auto m_bConstructed = 0xa0; // uint32_t : 1
		constexpr auto m_bCenteredHorizontally = 0xa0; // uint32_t : 1
		constexpr auto m_bCenteredVertically = 0xa0; // uint32_t : 1
		constexpr auto m_bShouldCreateInput = 0xa0; // uint32_t : 1
		constexpr auto m_bBlockInputFallThrough = 0xa0; // uint32_t : 1
		constexpr auto m_bBlockGlobalInput = 0xa0; // uint32_t : 1
		constexpr auto m_bPushInputOnVisible = 0xa0; // uint32_t : 1
		constexpr auto m_nDeferredUpdateCallbackHandle = 0xa4; // int32_t
		constexpr auto m_Components = 0xa8; // TArray<ObjectProperty>
		constexpr auto m_ComponentMap = 0xb8; // FMultiMap_Mirror
		constexpr auto m_CallbackContainer = 0x100; // ObjectProperty
		constexpr auto m_nXBeforeCenter = 0x108; // int32_t
		constexpr auto m_nYBeforeCenter = 0x10c; // int32_t
		constexpr auto m_InputContext = 0x110; // ObjectProperty
	}

	namespace n_UStaticMeshComponent { // : UMeshComponent
		constexpr auto ForcedLodModel = 0x294; // int32_t
		constexpr auto PreviousLODLevel = 0x298; // int32_t
		constexpr auto StaticMesh = 0x29c; // ObjectProperty
		constexpr auto WireframeColor = 0x2a4; // FColor
		constexpr auto bIgnoreInstanceForTextureStreaming = 0x2a8; // uint32_t : 1
		constexpr auto bOverrideLightMapResolution = 0x2a8; // uint32_t : 1
		constexpr auto bOverrideLightMapRes = 0x2a8; // uint32_t : 1
		constexpr auto OverriddenLightMapResolution = 0x2ac; // int32_t
		constexpr auto OverriddenLightMapRes = 0x2b0; // int32_t
		constexpr auto OverriddenLODMaxRange = 0x2b4; // float
		constexpr auto StreamingDistanceMultiplier = 0x2b8; // float
		constexpr auto SubDivisionStepSize = 0x2bc; // int32_t
		constexpr auto bUseSubDivisions = 0x2c0; // uint32_t : 1
		constexpr auto bForceStaticDecals = 0x2c0; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x2c0; // uint32_t : 1
		constexpr auto bUseSimpleLightmapModifications = 0x2c0; // uint32_t : 1
		constexpr auto SimpleLightmapModificationFunction = 0x2c4; // ELightmapModificationFunction
		constexpr auto bNeverBecomeDynamic = 0x2c8; // uint32_t : 1
		constexpr auto bForceRenderAsDynamic = 0x2c8; // uint32_t : 1
		constexpr auto IrrelevantLights = 0x2cc; // TArray<FGuid>
		constexpr auto LODData = 0x2dc; // TArray<FStaticMeshComponentLODInfo>
		constexpr auto VertexPositionVersionNumber = 0x2ec; // int32_t
		constexpr auto ForcedElementIndex = 0x2f0; // int32_t
		constexpr auto LightmassSettings = 0x2f4; // FLightmassPrimitiveSettings
	}

	namespace n_UUIData_Quest { // : UUIData
		constexpr auto m_qwQuestId = 0x64; // FQWord
		constexpr auto m_dwActivityId = 0x6c; // Fdword
		constexpr auto m_dwPrevActivityId = 0x70; // Fdword
		constexpr auto m_dwGroupingNumber = 0x74; // Fdword
		constexpr auto m_eStatus = 0x78; // Fdword
		constexpr auto m_dtReceivedDatetime = 0x7c; // FQWord
		constexpr auto m_bIsDirty = 0x84; // uint32_t : 1
		constexpr auto m_bHasSeen = 0x84; // uint32_t : 1
		constexpr auto m_bIsNew = 0x84; // uint32_t : 1
		constexpr auto m_bCanAbandon = 0x84; // uint32_t : 1
		constexpr auto m_bCompletionAck = 0x84; // uint32_t : 1
		constexpr auto m_bGoalsInitialized = 0x84; // uint32_t : 1
		constexpr auto m_bShowLastComplete = 0x84; // uint32_t : 1
		constexpr auto m_eQuestType = 0x88; // QuestType
		constexpr auto m_Goals = 0x8c; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_SetParticleSysParam { // : USequenceAction
		constexpr auto InstanceParameters = 0x108; // TArray<FParticleSysParam>
		constexpr auto bOverrideScalar = 0x118; // uint32_t : 1
		constexpr auto ScalarValue = 0x11c; // float
	}

	namespace n_UActorFactoryAmbientSoundSimple { // : UActorFactory
		constexpr auto SoundNodeWave = 0x9c; // ObjectProperty
	}

	namespace n_USeqAct_ControlMovieTexture { // : USequenceAction
		constexpr auto MovieTexture = 0x108; // ObjectProperty
	}

	namespace n_UUIComponent_KeyboardKey { // : UUIComponent_Display
		constexpr auto m_sKeyboardKey = 0x124; // FString
		constexpr auto m_bForceHidden = 0x134; // uint32_t : 1
		constexpr auto m_mcTF = 0x138; // ObjectProperty
		constexpr auto m_mcFrame = 0x140; // ObjectProperty
		constexpr auto m_mcMask = 0x148; // ObjectProperty
	}

	namespace n_AStaticLightCollectionActor { // : ALight
		constexpr auto LightComponents = 0x28c; // TArray<ComponentProperty>
		constexpr auto MaxLightComponents = 0x29c; // int32_t
	}

	namespace n_UUIMoviePlayer { // : UGFxMoviePlayer
		constexpr auto m_nLastTimerIndex = 0x1f8; // int32_t
		constexpr auto m_bInitialized = 0x1fc; // uint32_t : 1
		constexpr auto m_bInTransition = 0x1fc; // uint32_t : 1
		constexpr auto m_bResizeForSafeZones = 0x1fc; // uint32_t : 1
		constexpr auto m_mcRoot = 0x200; // ObjectProperty
		constexpr auto m_mcGlobal = 0x208; // ObjectProperty
		constexpr auto m_DataHandler = 0x210; // ObjectProperty
		constexpr auto m_TimerManager = 0x218; // ObjectProperty
		constexpr auto m_DataHandlerClass = 0x220; // UTgDataHandler*
		constexpr auto m_pTgCallbackDevice = 0x228; // FPointer
		constexpr auto m_pKeybindLookup = 0x230; // FPointer
		constexpr auto OnlineSub = 0x238; // ObjectProperty
		constexpr auto GameInterface = 0x240; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0x250; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x260; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0x270; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x280; // TScriptInterface<Class>
		constexpr auto MarketplaceInterface = 0x290; // TScriptInterface<Class>
	}

	namespace n_UUIComponent_StoreFilterToggle { // : UUIComponent_Interactable
		constexpr auto m_bActive = 0x140; // uint32_t : 1
		constexpr auto m_mcTitle = 0x144; // ObjectProperty
		constexpr auto m_mcToggle = 0x14c; // ObjectProperty
	}

	namespace n_UMcpClashMobBase { // : UMcpServiceBase
		constexpr auto McpClashMobClassName = 0x78; // FString
		constexpr auto __OnQueryChallengeListComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDownloadChallengeFileComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnAcceptChallengeComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryChallengeUserStatusComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserProgressComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnUpdateChallengeUserRewardComplete__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UTgEffectDamage_AstroDOT { // : UTgEffectDamage
		constexpr auto m_EffectTimeStamps = 0xc4; // TArray<float>
		constexpr auto m_EffectDamageValues = 0xd4; // TArray<float>
		constexpr auto m_EffectInfo = 0xe4; // FPointer
	}

	namespace n_UUIScene_UISkills { // : UUIScene
		constexpr auto m_mcBackground = 0x1cc; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x1d4; // ObjectProperty
		constexpr auto m_mcSkillsRoot = 0x1dc; // ObjectProperty
		constexpr auto m_mcFrame = 0x1e4; // ObjectProperty
		constexpr auto m_Skills = 0x1ec; // ObjectProperty
		constexpr auto m_CloseButton = 0x1f4; // ObjectProperty
		constexpr auto m_pBlocker = 0x1fc; // ObjectProperty
	}

	namespace n_UParticleModuleVelocity { // : UParticleModuleVelocityBase
		constexpr auto StartVelocity = 0x6c; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0x90; // FRawDistributionFloat
	}

	namespace n_ATgLanePylon { // : APylon
		constexpr auto m_nLane = 0x490; // int32_t
	}

	namespace n_ATgStaticMeshActor_TeamColor { // : AStaticMeshActor
		constexpr auto nTaskForce = 0x2a4; // int32_t
		constexpr auto TeamColoringParameterName = 0x2a8; // FName
		constexpr auto bInvertColoringParameter = 0x2b0; // uint32_t : 1
		constexpr auto bInstancedAllMaterials = 0x2b0; // uint32_t : 1
		constexpr auto bFriendlyWithLocalPlayer = 0x2b4; // char
		constexpr auto InitialMaterialList = 0x2b8; // TArray<ObjectProperty>
	}

	namespace n_ATgAIController_BehaviorGod { // : ATgAIController_Behavior
		constexpr auto VfTable_ITgPaladinsController = 0x930; // FPointer
		constexpr auto WaitForSpawnSecs = 0x938; // float
		constexpr auto PlayerID = 0x93c; // int32_t
		constexpr auto bCanPurchaseItems = 0x940; // uint32_t : 1
		constexpr auto bCanPurchaseSkills = 0x940; // uint32_t : 1
		constexpr auto bRespawnAtOriginalLocation = 0x940; // uint32_t : 1
		constexpr auto CurrentGoldRemainder = 0x944; // float
		constexpr auto CurrentGold = 0x948; // int32_t
		constexpr auto CurrentXPRemainder = 0x94c; // float
		constexpr auto CurrentXP = 0x950; // int32_t
		constexpr auto GeometricMean = 0x954; // FVector
	}

	namespace n_ATgDeploy_Pickup { // : ATgDeployable
		constexpr auto m_bApplyToEntireTeam = 0x46c; // uint32_t : 1
	}

	namespace n_UParticleModuleRequired { // : UParticleModule
		constexpr auto Material = 0x68; // ObjectProperty
		constexpr auto ScreenAlignment = 0x70; // EParticleScreenAlignment
		constexpr auto SortMode = 0x71; // EParticleSortMode
		constexpr auto ParticleBurstMethod = 0x72; // EParticleBurstMethod
		constexpr auto InterpolationMethod = 0x73; // EParticleSubUVInterpMethod
		constexpr auto EmitterNormalsMode = 0x74; // EEmitterNormalsMode
		constexpr auto bAllowImageFlipping = 0x78; // uint32_t : 1
		constexpr auto bSquareImageFlipping = 0x78; // uint32_t : 1
		constexpr auto bUseLocalSpace = 0x78; // uint32_t : 1
		constexpr auto bKillOnDeactivate = 0x78; // uint32_t : 1
		constexpr auto bKillOnCompleted = 0x78; // uint32_t : 1
		constexpr auto bRequiresSorting = 0x78; // uint32_t : 1
		constexpr auto bUseLegacyEmitterTime = 0x78; // uint32_t : 1
		constexpr auto bEnableNearParticleCulling = 0x78; // uint32_t : 1
		constexpr auto bEnableFarParticleCulling = 0x78; // uint32_t : 1
		constexpr auto bEnableParticleTrimming = 0x78; // uint32_t : 1
		constexpr auto bEmitterDurationUseRange = 0x78; // uint32_t : 1
		constexpr auto bDurationRecalcEachLoop = 0x78; // uint32_t : 1
		constexpr auto bEmitterDelayUseRange = 0x78; // uint32_t : 1
		constexpr auto bDelayFirstLoopOnly = 0x78; // uint32_t : 1
		constexpr auto bScaleUV = 0x78; // uint32_t : 1
		constexpr auto bDirectUV = 0x78; // uint32_t : 1
		constexpr auto bOverrideSystemMacroUV = 0x78; // uint32_t : 1
		constexpr auto bUseMaxDrawCount = 0x78; // uint32_t : 1
		constexpr auto bOrbitModuleAffectsVelocityAlignment = 0x78; // uint32_t : 1
		constexpr auto NearCullDistance = 0x7c; // float
		constexpr auto NearFadeDistance = 0x80; // float
		constexpr auto FarFadeDistance = 0x84; // float
		constexpr auto FarCullDistance = 0x88; // float
		constexpr auto TrimmedVertices = 0x8c; // TArray<FVector2D>
		constexpr auto EmitterDuration = 0x9c; // float
		constexpr auto EmitterDurationLow = 0xa0; // float
		constexpr auto EmitterLoops = 0xa4; // int32_t
		constexpr auto SpawnRate = 0xa8; // FRawDistributionFloat
		constexpr auto BurstList = 0xcc; // TArray<FParticleBurst>
		constexpr auto EmitterDelay = 0xdc; // float
		constexpr auto EmitterDelayLow = 0xe0; // float
		constexpr auto SubImages_Horizontal = 0xe4; // int32_t
		constexpr auto SubImages_Vertical = 0xe8; // int32_t
		constexpr auto RandomImageTime = 0xec; // float
		constexpr auto RandomImageChanges = 0xf0; // int32_t
		constexpr auto MacroUVPosition = 0xf4; // FVector
		constexpr auto MacroUVRadius = 0x100; // float
		constexpr auto MaxDrawCount = 0x104; // int32_t
		constexpr auto DownsampleThresholdScreenFraction = 0x108; // float
		constexpr auto NormalsSphereCenter = 0x10c; // FVector
		constexpr auto NormalsCylinderDirection = 0x118; // FVector
	}

	namespace n_UTgCameraModule { // : UObject
		constexpr auto PlayerCamera = 0x60; // ObjectProperty
	}

	namespace n_UTgCameraModule_Free { // : UTgCameraModule
		constexpr auto CamAltitude = 0x68; // float
		constexpr auto DesiredCamAltitude = 0x6c; // float
		constexpr auto MaxCamAltitude = 0x70; // float
		constexpr auto MinCamAltitude = 0x74; // float
		constexpr auto CamZoomIncrement = 0x78; // float
		constexpr auto m_bCachedNoDeathCamExperiment = 0x7c; // uint32_t : 1
	}

	namespace n_UUIScene_UIHudCenter { // : UUIScene
		constexpr auto m_mcKillingBlow = 0x1cc; // ObjectProperty
	}

	namespace n_UParticleModuleCameraOffset { // : UParticleModuleCameraBase
		constexpr auto CameraOffset = 0x68; // FRawDistributionFloat
		constexpr auto bSpawnTimeOnly = 0x8c; // uint32_t : 1
		constexpr auto UpdateMethod = 0x90; // EParticleCameraOffsetUpdateMethod
	}

	namespace n_UTgDeviceForm_Reversal { // : UTgDeviceForm
		constexpr auto m_fAccumulatedDamage = 0x28c; // float
		constexpr auto m_fMaxChargeDamage = 0x290; // float
		constexpr auto c_CameraEffect = 0x294; // ObjectProperty
		constexpr auto m_1pNodes = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_3pNodes = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_bIsAbsorbingShots = 0x2bc; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_WeaponSwap { // : UTgDeviceForm
		constexpr auto m_PistolScale1p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_PistolScale3p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_RifleScale1p = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_RifleScale3p = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_PlaySettings { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSite = 0x12c; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x134; // ObjectProperty
		constexpr auto m_pSiteSelectList = 0x13c; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x144; // ObjectProperty
		constexpr auto m_pRightArrow = 0x14c; // ObjectProperty
		constexpr auto m_pCloseButton = 0x154; // ObjectProperty
		constexpr auto m_pConfirmButton = 0x15c; // ObjectProperty
		constexpr auto m_pSelectedSite = 0x164; // ObjectProperty
		constexpr auto m_pPreviewSite = 0x16c; // ObjectProperty
		constexpr auto m_fPreviewTime = 0x174; // float
		constexpr auto m_fPreviewDuration = 0x178; // float
	}

	namespace n_UImageReflectionComponent { // : UActorComponent
		constexpr auto ReflectionTexture = 0x88; // ObjectProperty
	}

	namespace n_UDOFBloomMotionBlurEffect { // : UDOFAndBloomEffect
		constexpr auto MaxVelocity = 0xdc; // float
		constexpr auto MotionBlurAmount = 0xe0; // float
		constexpr auto FullMotionBlur = 0xe4; // uint32_t : 1
		constexpr auto CameraRotationThreshold = 0xe8; // float
		constexpr auto CameraTranslationThreshold = 0xec; // float
	}

	namespace n_ATgDevice_SaatiPassive { // : ATgDevice
		constexpr auto m_CachedSaati = 0xa08; // ObjectProperty
		constexpr auto m_eSaatiBuff = 0xa10; // ESaatiBuffType
		constexpr auto m_fUpperBuffActivationPoint = 0xa14; // float
		constexpr auto m_fLowerBuffActivationPoint = 0xa18; // float
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget { // : UTgAIBehaviorAction
		constexpr auto bMustBeEnemy = 0x94; // uint32_t : 1
		constexpr auto bMustBePhoenix = 0x94; // uint32_t : 1
		constexpr auto bMustBeSameLane = 0x94; // uint32_t : 1
	}

	namespace n_UUIDataQueues { // : UUIDataObject
		constexpr auto m_StaticQueueData = 0x74; // ObjectProperty
		constexpr auto m_CasualQueues = 0x7c; // TArray<ObjectProperty>
		constexpr auto m_EventQueues = 0x8c; // TArray<ObjectProperty>
		constexpr auto m_TrainingQueues = 0x9c; // TArray<ObjectProperty>
		constexpr auto m_DevQueues = 0xac; // TArray<ObjectProperty>
		constexpr auto m_Queues = 0xbc; // TMap<None, None>
		constexpr auto m_fStatusTimer = 0x104; // float
	}

	namespace n_UTgSpecialFxLightManager { // : UObject
		constexpr auto c_FxLightsEnabled = 0x60; // uint32_t : 1
		constexpr auto c_FxLightsUnconstrained = 0x60; // uint32_t : 1
		constexpr auto c_FxLightsMaxActive = 0x64; // int32_t
		constexpr auto c_FxLightsMaxDying = 0x68; // int32_t
		constexpr auto m_ActiveEmitters = 0x6c; // TArray<FPointer>
		constexpr auto m_DyingEmitters = 0x7c; // TArray<FPointer>
		constexpr auto c_LocalPawn = 0x8c; // ObjectProperty
	}

	namespace n_UTgCallbackContainer { // : UObject
		constexpr auto m_RegisteredCallbacks = 0x60; // FMultiMap_Mirror
		constexpr auto m_RegisteredCallbacksByHandle = 0xa8; // FMap_Mirror
		constexpr auto m_CallbackHandles = 0xf0; // FMap_Mirror
		constexpr auto m_IteratingCallbackTypeStack = 0x138; // TArray<char>
		constexpr auto m_CallbacksToRemove = 0x148; // TArray<FFunctionWrapperInfo>
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInCapturePointRadius { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bGodsMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
	}

	namespace n_UTgAnimBlendByPhase { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_LastPhase = 0x170; // int32_t
		constexpr auto m_CurrentPhase = 0x174; // int32_t
		constexpr auto m_bEnableTransitionAnims = 0x178; // uint32_t : 1
		constexpr auto m_PhaseProfiles = 0x17c; // TArray<Fm_PhaseProfile>
	}

	namespace n_UTgDeviceForm_RiderMovement { // : UTgDeviceForm
		constexpr auto m_vActiveCameraOffset = 0x28c; // FVector
		constexpr auto m_CachedRider = 0x298; // ObjectProperty
	}

	namespace n_UParticleModuleLocationStaticVertSurface { // : UParticleModuleLocationBase
		constexpr auto SourceType = 0x68; // ELocationStaticVertSurfaceSource
		constexpr auto UniversalOffset = 0x6c; // FVector
		constexpr auto bUpdatePositionEachFrame = 0x78; // uint32_t : 1
		constexpr auto bOrientMeshEmitters = 0x78; // uint32_t : 1
		constexpr auto bEnforceNormalCheck = 0x78; // uint32_t : 1
		constexpr auto StaticMeshActorParamName = 0x7c; // FName
		constexpr auto NormalToCompare = 0x84; // FVector
		constexpr auto NormalCheckToleranceDegrees = 0x90; // float
		constexpr auto NormalCheckTolerance = 0x94; // float
		constexpr auto ValidMaterialIndices = 0x98; // TArray<int32_t>
	}

	namespace n_UTgAnimNotify_ToggleInvisibleWall { // : UAnimNotify
		constexpr auto TurnWallOn = 0x68; // uint32_t : 1
		constexpr auto TurnOffOnCeaseRelevant = 0x68; // uint32_t : 1
		constexpr auto WallIndex = 0x6c; // int32_t
		constexpr auto WallPosition = 0x70; // FVector
		constexpr auto WallNormal = 0x7c; // FVector
		constexpr auto WallEnableBaseName = 0x88; // FName
		constexpr auto WallPositionBaseName = 0x90; // FName
		constexpr auto WallNormalBaseName = 0x98; // FName
	}

	namespace n_UTgDeviceForm_Smash { // : UTgDeviceForm
		constexpr auto m_SmashBlendList1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SmashBlendList3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_TyraInhand { // : ATgDevice
		constexpr auto m_bUltIsActive = 0xa08; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByInitialSpeed { // : UTgAnimNodeBlendList
		constexpr auto m_fInitialSpeed = 0x168; // float
		constexpr auto m_nStartingIndex = 0x16c; // int32_t
		constexpr auto m_bLoopChain = 0x170; // uint32_t : 1
		constexpr auto m_bAdvanceOnReplay = 0x170; // uint32_t : 1
		constexpr auto m_bAdvanceOnAnimEnd = 0x170; // uint32_t : 1
		constexpr auto m_ReplayedThisFrame = 0x170; // uint32_t : 1
		constexpr auto bUseAcceleration = 0x170; // uint32_t : 1
		constexpr auto Constraints = 0x174; // TArray<float>
	}

	namespace n_UTgAIBehaviorAction_UseConsumable { // : UTgAIBehaviorAction
		constexpr auto ConsumableType = 0x94; // EConsumableType
	}

	namespace n_ATgSpawnTeleporterEntrance { // : AVolume
		constexpr auto bEnabled = 0x2bc; // uint32_t : 1
	}

	namespace n_UTgGameplayCurvesSet_DamageFalloffAOE { // : UTgGameplayCurvesSet
		constexpr auto DamageFalloff = 0x64; // FRawDistributionFloat
		constexpr auto bIsRangeNormalized = 0x88; // uint32_t : 1
		constexpr auto bExcludeEffectiveRange = 0x88; // uint32_t : 1
	}

	namespace n_APComPerformanceCaptureGame { // : AGameInfo
		constexpr auto BasePerformanceCapture = 0x4cc; // ObjectProperty
		constexpr auto CurrentCaptureState = 0x4d4; // EPComPerformanceCaptureState
		constexpr auto NodesToCapture = 0x4d8; // TArray<ObjectProperty>
		constexpr auto StatsPerNode = 0x4e8; // TArray<FPComPerformanceCaptureStatsPerNode>
	}

	namespace n_UUIData_LoadoutItem { // : UUIData
		constexpr auto m_dwItemId = 0x64; // Fdword
		constexpr auto m_dwCount = 0x68; // Fdword
		constexpr auto m_dwSortOrder = 0x6c; // Fdword
		constexpr auto m_dwLoadoutItemType = 0x70; // Fdword
		constexpr auto m_qwLoadoutItemId = 0x74; // FQWord
		constexpr auto m_pOwningLoadout = 0x7c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_CurrentLevel { // : UTgAIBehaviorCondition
		constexpr auto LevelThreshold = 0x98; // int32_t
	}

	namespace n_UTgGamePhase_SetHUD { // : UTgGamePhase
		constexpr auto m_eHUDType = 0xb8; // EHUDType
	}

	namespace n_APComPlayerController { // : AGamePlayerController
		constexpr auto m_LastPendingPartyInviteId = 0x77c; // FUniqueNetId
		constexpr auto m_bPartySessionJoinInProgress = 0x784; // uint32_t : 1
		constexpr auto m_bPartySessionCreateInProgress = 0x784; // uint32_t : 1
		constexpr auto m_bPartyDestroyInProgress = 0x784; // uint32_t : 1
		constexpr auto m_bQuittingToMainMenu = 0x784; // uint32_t : 1
		constexpr auto m_bHasAcknowledgedPawn = 0x784; // uint32_t : 1
		constexpr auto m_bLastClientTokenRequestFailed = 0x784; // uint32_t : 1
		constexpr auto m_bKeepLoggedIn = 0x784; // uint32_t : 1
		constexpr auto m_dwPendingPartyId = 0x788; // Fdword
		constexpr auto m_nMaxPartyPublicConnections = 0x78c; // int32_t
		constexpr auto m_PendingInviteResult = 0x790; // FOnlineGameSearchResult
		constexpr auto PartySessionName = 0x7a0; // FName
		constexpr auto GameSessionName = 0x7a8; // FName
		constexpr auto m_dwLastLoginPortalId = 0x7b0; // Fdword
		constexpr auto m_dwLastLoginAccountId = 0x7b4; // Fdword
		constexpr auto m_sLastLoginAccessToken = 0x7b8; // FString
		constexpr auto m_sLastLoginAccessTokenExpiration = 0x7c8; // FString
	}

	namespace n_UPhysicalMaterial { // : UObject
		constexpr auto MaterialIndex = 0x60; // int32_t
		constexpr auto Friction = 0x64; // float
		constexpr auto Restitution = 0x68; // float
		constexpr auto bForceConeFriction = 0x6c; // uint32_t : 1
		constexpr auto bEnableAnisotropicFriction = 0x6c; // uint32_t : 1
		constexpr auto AnisoFrictionDir = 0x70; // FVector
		constexpr auto FrictionV = 0x7c; // float
		constexpr auto Density = 0x80; // float
		constexpr auto AngularDamping = 0x84; // float
		constexpr auto LinearDamping = 0x88; // float
		constexpr auto MagneticResponse = 0x8c; // float
		constexpr auto WindResponse = 0x90; // float
		constexpr auto ImpactThreshold = 0x94; // float
		constexpr auto ImpactReFireDelay = 0x98; // float
		constexpr auto ImpactEffect = 0x9c; // ObjectProperty
		constexpr auto ImpactSound = 0xa4; // ObjectProperty
		constexpr auto DeviceImpactSound = 0xac; // ObjectProperty
		constexpr auto SlideThreshold = 0xb4; // float
		constexpr auto SlideReFireDelay = 0xb8; // float
		constexpr auto SlideEffect = 0xbc; // ObjectProperty
		constexpr auto SlideSound = 0xc4; // ObjectProperty
		constexpr auto FractureSoundExplosion = 0xcc; // ObjectProperty
		constexpr auto FractureSoundSingle = 0xd4; // ObjectProperty
		constexpr auto MaterialTypeName = 0xdc; // FName
		constexpr auto FootstepParticleSystem = 0xe4; // ObjectProperty
		constexpr auto Parent = 0xec; // ObjectProperty
		constexpr auto PhysicalMaterialProperty = 0xf4; // ObjectProperty
	}

	namespace n_USeqAct_SetString { // : USeqAct_SetSequenceVariable
		constexpr auto Target = 0x108; // FString
		constexpr auto Value = 0x118; // FString
	}

	namespace n_UUIData_Site { // : UUIData
		constexpr auto m_dwSiteId = 0x64; // Fdword
	}

	namespace n_ABrush { // : AActor
		constexpr auto CsgOper = 0x280; // ECsgOper
		constexpr auto BrushColor = 0x284; // FColor
		constexpr auto PolyFlags = 0x288; // int32_t
		constexpr auto bColored = 0x28c; // uint32_t : 1
		constexpr auto bCuttingBrush = 0x28c; // uint32_t : 1
		constexpr auto bSolidWhenSelected = 0x28c; // uint32_t : 1
		constexpr auto bPlaceableFromClassBrowser = 0x28c; // uint32_t : 1
		constexpr auto Brush = 0x290; // ObjectProperty
		constexpr auto BrushComponent = 0x298; // ComponentProperty
		constexpr auto SavedSelections = 0x2a0; // TArray<FGeomSelection>
	}

	namespace n_UActorFactoryAI { // : UActorFactory
		constexpr auto ControllerClass = 0x9c; // AAIController*
		constexpr auto PawnClass = 0xa4; // APawn*
		constexpr auto PawnName = 0xac; // FString
		constexpr auto bGiveDefaultInventory = 0xbc; // uint32_t : 1
		constexpr auto InventoryList = 0xc0; // TArray<AInventory*>
		constexpr auto TeamIndex = 0xd0; // int32_t
	}

	namespace n_UTgAnimNotify_InterpolateMorphTargetWeight { // : UAnimNotify
		constexpr auto MorphNodePoseName = 0x68; // FName
		constexpr auto MorphTargetWeight = 0x70; // float
		constexpr auto OnInterruptBehavior = 0x74; // InterruptMorphTargetBehavior
		constexpr auto InterruptMorphTargetWeight = 0x78; // float
		constexpr auto InitialMorphTargetWeight = 0x7c; // float
	}

	namespace n_UUIComponent_ItemIconInventory { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcQuantity = 0x12c; // ObjectProperty
	}

	namespace n_AInternetLink { // : AInfo
		constexpr auto LinkMode = 0x280; // ELinkMode
		constexpr auto InLineMode = 0x281; // ELineMode
		constexpr auto OutLineMode = 0x282; // ELineMode
		constexpr auto ReceiveMode = 0x283; // EReceiveMode
		constexpr auto Socket = 0x284; // FPointer
		constexpr auto Port = 0x28c; // int32_t
		constexpr auto RemoteSocket = 0x290; // FPointer
		constexpr auto PrivateResolveInfo = 0x298; // FPointer
		constexpr auto DataPending = 0x2a0; // int32_t
	}

	namespace n_UNavMeshPath_SameCoverLink { // : UNavMeshPathConstraint
		constexpr auto TestLink = 0x78; // ObjectProperty
	}

	namespace n_UWebResponse { // : UObject
		constexpr auto Headers = 0x60; // TArray<FString>
		constexpr auto ReplacementMap = 0x70; // FMap_Mirror
		constexpr auto IncludePath = 0xb8; // FString
		constexpr auto CharSet = 0xc8; // FString
		constexpr auto Connection = 0xd8; // ObjectProperty
		constexpr auto bSentText = 0xe0; // uint32_t : 1
		constexpr auto bSentResponse = 0xe0; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_OutOfCombat { // : UTgInvListener
		constexpr auto m_bEffectIsApplied = 0xc4; // uint32_t : 1
	}

	namespace n_UUIComponent_HoldPrompt { // : UUIComponent_Display
		constexpr auto m_pGamepadKey = 0x124; // ObjectProperty
		constexpr auto m_mcRadialMask = 0x12c; // ObjectProperty
		constexpr auto m_mcTF = 0x134; // ObjectProperty
		constexpr auto m_fHoldTimer = 0x13c; // float
		constexpr auto m_fHoldDuration = 0x140; // float
		constexpr auto m_fFadeOutDelay = 0x144; // float
		constexpr auto m_fFadeOutDuration = 0x148; // float
		constexpr auto m_fFadeOutTimer = 0x14c; // float
		constexpr auto m_bHolding = 0x150; // uint32_t : 1
		constexpr auto m_bPrimed = 0x150; // uint32_t : 1
		constexpr auto m_PressAction = 0x154; // ObjectProperty
		constexpr auto m_ReleaseAction = 0x15c; // ObjectProperty
	}

	namespace n_UParticleModuleSizeMultiplyVelocity { // : UParticleModuleSizeBase
		constexpr auto VelocityMultiplier = 0x68; // FRawDistributionVector
		constexpr auto MultiplyX = 0x8c; // uint32_t : 1
		constexpr auto MultiplyY = 0x8c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x8c; // uint32_t : 1
		constexpr auto CapMaxSize = 0x90; // FVector
		constexpr auto CapMinSize = 0x9c; // FVector
	}

	namespace n_AStaticMeshCollectionActor { // : AStaticMeshActorBase
		constexpr auto StaticMeshComponents = 0x280; // TArray<ComponentProperty>
		constexpr auto MaxStaticMeshComponents = 0x290; // int32_t
	}

	namespace n_ATgActorFactory { // : AActor
		constexpr auto m_nMapObjectId = 0x280; // int32_t
		constexpr auto s_bAutoSpawn = 0x284; // uint32_t : 1
		constexpr auto s_nTeamNumber = 0x288; // int32_t
		constexpr auto s_nTaskForce = 0x28c; // char
		constexpr auto m_MinimapType = 0x28d; // MinimapFactoryType
		constexpr auto s_eSelectionMethod = 0x28e; // eSelectionMethod
		constexpr auto s_nSelectionListId = 0x290; // int32_t
		constexpr auto s_nSelectedObjectId = 0x294; // int32_t
		constexpr auto m_nSelectionListPropId = 0x298; // int32_t
		constexpr auto s_nNameId = 0x29c; // int32_t
		constexpr auto s_nFactoryId = 0x2a0; // int32_t
		constexpr auto m_FRI = 0x2a4; // ObjectProperty
		constexpr auto m_FRIClass = 0x2ac; // ATgRepInfo_Factory*
		constexpr auto s_nCurListIndex = 0x2b4; // int32_t
		constexpr auto m_WorldIconSprite = 0x2b8; // ComponentProperty
	}

	namespace n_UUIData_CustomMatch { // : UUIDataObject
		constexpr auto m_nId = 0x74; // int32_t
		constexpr auto m_nName = 0x78; // int32_t
		constexpr auto m_nDraft = 0x7c; // int32_t
		constexpr auto m_nTotal = 0x80; // int32_t
		constexpr auto m_nPlayers = 0x84; // int32_t
		constexpr auto m_nMaxPartySizeToJoin = 0x88; // int32_t
		constexpr auto m_dwRegion = 0x8c; // Fdword
		constexpr auto m_bPrivate = 0x90; // uint32_t : 1
		constexpr auto m_sName = 0x94; // FString
		constexpr auto m_sMap = 0xa4; // FString
		constexpr auto m_sGameMode = 0xb4; // FString
		constexpr auto m_sOwner = 0xc4; // FString
		constexpr auto m_sQueueName = 0xd4; // FString
		constexpr auto m_eGameType = 0xe4; // TG_GAME_TYPE
	}

	namespace n_UUIDataDirector { // : UUIDataObject
		constexpr auto m_AcquisitionQueues = 0x74; // TArray<ObjectProperty>
		constexpr auto m_AcquisitionQueueMap = 0x84; // TMap<None, None>
		constexpr auto m_UniqueSessionAcquisitions = 0xcc; // FSet_Mirror
		constexpr auto m_RedeemableAcquisitionMap = 0x114; // TMap<None, None>
	}

	namespace n_AVehicle { // : APawn
		constexpr auto Driver = 0x5a8; // ObjectProperty
		constexpr auto bDriving = 0x5b0; // uint32_t : 1
		constexpr auto bDriverIsVisible = 0x5b0; // uint32_t : 1
		constexpr auto bAttachDriver = 0x5b0; // uint32_t : 1
		constexpr auto bTurnInPlace = 0x5b0; // uint32_t : 1
		constexpr auto bSeparateTurretFocus = 0x5b0; // uint32_t : 1
		constexpr auto bFollowLookDir = 0x5b0; // uint32_t : 1
		constexpr auto bHasHandbrake = 0x5b0; // uint32_t : 1
		constexpr auto bScriptedRise = 0x5b0; // uint32_t : 1
		constexpr auto bDuckObstacles = 0x5b0; // uint32_t : 1
		constexpr auto bAvoidReversing = 0x5b0; // uint32_t : 1
		constexpr auto bRetryPathfindingWithDriver = 0x5b0; // uint32_t : 1
		constexpr auto bIgnoreStallZ = 0x5b0; // uint32_t : 1
		constexpr auto bDoExtraNetRelevancyTraces = 0x5b0; // uint32_t : 1
		constexpr auto ExitPositions = 0x5b4; // TArray<FVector>
		constexpr auto ExitRadius = 0x5c4; // float
		constexpr auto ExitOffset = 0x5c8; // FVector
		constexpr auto Steering = 0x5d4; // float
		constexpr auto Throttle = 0x5d8; // float
		constexpr auto Rise = 0x5dc; // float
		constexpr auto TargetLocationAdjustment = 0x5e0; // FVector
		constexpr auto DriverDamageMult = 0x5ec; // float
		constexpr auto MomentumMult = 0x5f0; // float
		constexpr auto CrushedDamageType = 0x5f4; // UDamageType*
		constexpr auto MinCrushSpeed = 0x5fc; // float
		constexpr auto ForceCrushPenetration = 0x600; // float
		constexpr auto StuckCount = 0x604; // char
		constexpr auto ThrottleTime = 0x608; // float
		constexpr auto StuckTime = 0x60c; // float
		constexpr auto OldSteering = 0x610; // float
		constexpr auto OnlySteeringStartTime = 0x614; // float
		constexpr auto OldThrottle = 0x618; // float
		constexpr auto AIMoveCheckTime = 0x61c; // float
		constexpr auto VehicleMovingTime = 0x620; // float
		constexpr auto TurnTime = 0x624; // float
	}

	namespace n_UUIScene_UIProfile { // : UUIScene
		constexpr auto m_MatchStats = 0x1cc; // ObjectProperty
		constexpr auto m_mcMatchStatsTabSelected = 0x1d4; // ObjectProperty [0x2]
		constexpr auto m_mcOverview = 0x1e4; // ObjectProperty
		constexpr auto m_grOverview = 0x1ec; // ObjectProperty
		constexpr auto m_OverviewLevelProgress = 0x1f4; // ObjectProperty
		constexpr auto m_mcOverviewRankedIcon = 0x1fc; // ObjectProperty
		constexpr auto m_mcOverviewRankedSeason = 0x204; // ObjectProperty
		constexpr auto m_mcOverviewRankedRound = 0x20c; // ObjectProperty
		constexpr auto m_mcOverviewRankedRoundRemaining = 0x214; // ObjectProperty
		constexpr auto m_mcOverviewLinkAccount = 0x21c; // ObjectProperty
		constexpr auto m_pCheckRewardsButton = 0x224; // ObjectProperty
		constexpr auto m_AccountLinkButtons = 0x22c; // ObjectProperty
		constexpr auto m_AccountLinkTooltip = 0x234; // ObjectProperty
		constexpr auto m_pOverviewRankedProgress = 0x23c; // ObjectProperty
		constexpr auto m_pOverviewRankedLeaderboardButton = 0x244; // ObjectProperty
		constexpr auto m_pOwnershipProgressList = 0x24c; // ObjectProperty
		constexpr auto m_pOverviewBoostButton = 0x254; // ObjectProperty
		constexpr auto m_ChampionList = 0x25c; // ObjectProperty
		constexpr auto m_pCommendations = 0x264; // ObjectProperty
	}

	namespace n_UUIResourceCombinationProvider { // : UUIDataProvider
		constexpr auto StaticDataProvider = 0x70; // ObjectProperty
		constexpr auto ProfileProvider = 0x78; // ObjectProperty
	}

	namespace n_ATgAIController_BehaviorGodDisconnected { // : ATgAIController_BehaviorGod
		constexpr auto bInitialController = 0x960; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_Exaction { // : UTgInventoryObject_Listen_FirstShotAfterMovementAbility
		constexpr auto m_CachedFiremode = 0xd4; // ObjectProperty
	}

	namespace n_UUIComponent_ItemCustomize { // : UUIComponent_Display
		constexpr auto m_pActiveButton = 0x124; // ObjectProperty
		constexpr auto m_pItem = 0x12c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x134; // ObjectProperty
		constexpr auto m_pButtonBattlePass = 0x13c; // ObjectProperty
		constexpr auto m_pButtonCollection = 0x144; // ObjectProperty
		constexpr auto m_pButtonChest = 0x14c; // ObjectProperty
		constexpr auto m_pButtonPurchase = 0x154; // ObjectProperty
		constexpr auto m_pButtonPrice = 0x15c; // ObjectProperty
		constexpr auto m_pButtonEquip = 0x164; // ObjectProperty
		constexpr auto m_bButtonAlwaysVisible = 0x16c; // uint32_t : 1
	}

	namespace n_UUIComponent_RewardPanelEntry { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcValue = 0x12c; // ObjectProperty
		constexpr auto m_mcMultiplier = 0x134; // ObjectProperty
		constexpr auto m_mcBoosterWeaponIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusIcon = 0x144; // ObjectProperty
		constexpr auto m_mcItemIcon = 0x14c; // ObjectProperty
		constexpr auto m_mcVIPIcon = 0x154; // ObjectProperty
		constexpr auto m_mcBonusIcon = 0x15c; // ObjectProperty
	}

	namespace n_UUIDataProvider_OnlinePlayerStorage { // : UUIDataProvider_OnlinePlayerDataBase
		constexpr auto Profile = 0x74; // ObjectProperty
		constexpr auto ProviderName = 0x7c; // FName
		constexpr auto bWasErrorLastRead = 0x84; // uint32_t : 1
		constexpr auto bIsExternalUIOpen = 0x84; // uint32_t : 1
		constexpr auto bNeedsDeferredRefresh = 0x84; // uint32_t : 1
		constexpr auto PlayerStorageArrayProviders = 0x88; // TArray<FPlayerStorageArrayProvider>
		constexpr auto DeviceStorageSizeNeeded = 0x98; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Conduit { // : UTgInvListener
		constexpr auto m_nDeviceIdShockPulseMain = 0xc4; // int32_t
		constexpr auto m_nDeviceIdShockPulseSupport = 0xc8; // int32_t
		constexpr auto m_EnemiesHitThisPulse = 0xcc; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceFire_CorvusBeacon { // : UTgDeviceFire
		constexpr auto m_fServerScaleBufferMult = 0x268; // float
		constexpr auto m_fBaseEncroachmentActorRange = 0x26c; // float
		constexpr auto m_fScaleYZ = 0x270; // float
	}

	namespace n_UUIInteractable_NavPanel { // : UUIComponent_Interactable
		constexpr auto m_mcHighlight = 0x140; // ObjectProperty
		constexpr auto m_mcTitle = 0x148; // ObjectProperty
		constexpr auto m_mcBattlePassCTA = 0x150; // ObjectProperty
		constexpr auto m_mcLoadoutCTA = 0x158; // ObjectProperty
		constexpr auto m_mcDailyRewardCTA = 0x160; // ObjectProperty
		constexpr auto m_mcSaleCTA = 0x168; // ObjectProperty
		constexpr auto m_pCTA = 0x170; // ObjectProperty
		constexpr auto m_mcLoading = 0x178; // ObjectProperty
	}

	namespace n_UUIComponent_ReferralReward { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcAddition = 0x134; // ObjectProperty
		constexpr auto m_mcCurrency = 0x13c; // ObjectProperty
		constexpr auto m_mcAmount = 0x144; // ObjectProperty
		constexpr auto m_mcFrame = 0x14c; // ObjectProperty
	}

	namespace n_ATgDevice_DemonTeleport { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_bCancelled = 0xa10; // uint32_t : 1
		constexpr auto m_bPhaseApplied = 0xa10; // uint32_t : 1
		constexpr auto m_bAllowTeleport = 0xa10; // uint32_t : 1
		constexpr auto m_fTeleportDelayTimer = 0xa14; // float
		constexpr auto m_vTeleportToLocation = 0xa18; // FVector
	}

	namespace n_AKAsset { // : AActor
		constexpr auto SkeletalMeshComponent = 0x280; // ComponentProperty
		constexpr auto bDamageAppliesImpulse = 0x288; // uint32_t : 1
		constexpr auto bWakeOnLevelStart = 0x288; // uint32_t : 1
		constexpr auto bBlockPawns = 0x288; // uint32_t : 1
		constexpr auto ReplicatedMesh = 0x28c; // ObjectProperty
		constexpr auto ReplicatedPhysAsset = 0x294; // ObjectProperty
	}

	namespace n_UUIDataObject { // : UUIData
		constexpr auto VfTable_ITgCallbackInterface = 0x64; // FPointer
		constexpr auto m_CallbackContainer = 0x6c; // ObjectProperty
	}

	namespace n_ANxTornadoForceField { // : ANxForceField
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto BSpecialRadialForceMode = 0x2f8; // uint32_t : 1
		constexpr auto Kernel = 0x2fc; // FPointer
	}

	namespace n_ATgSpectatorDirector { // : AInfo
		constexpr auto m_bIsActive = 0x280; // uint32_t : 1
		constexpr auto m_bIsPending = 0x280; // uint32_t : 1
		constexpr auto m_bAutoSwitchCameraViews = 0x280; // uint32_t : 1
		constexpr auto m_bForceThirdPersonView = 0x280; // uint32_t : 1
		constexpr auto m_fRemainingAutoUpdateCheckTime = 0x284; // float
		constexpr auto m_fTimeSinceViewSwitchedTeams = 0x288; // float
		constexpr auto m_fTimeSinceViewSwitchedMode = 0x28c; // float
		constexpr auto m_fRemainingAutoReturnCheckTime = 0x290; // float
		constexpr auto m_CurrentCameraMode = 0x294; // SpectatorCameraMode
		constexpr auto m_CurrentRatedViewTarget = 0x298; // FViewTargetInfo
		constexpr auto m_DemoRewindViewTarget = 0x2c4; // FViewTargetInfo
		constexpr auto m_v2dForcedDirectorLocation = 0x2f0; // FVector2D
		constexpr auto m_fForcedDirectorLocationTimestamp = 0x2f8; // float
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Drogoz { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_AmmoSkelControlNames = 0x544; // TArray<FName>
		constexpr auto m_AmmoSkelControls = 0x554; // TArray<ObjectProperty>
		constexpr auto m_CachedDrogozPawn = 0x564; // ObjectProperty
	}

	namespace n_ATgDevice_CorrupterSiphon { // : ATgDevice
		constexpr auto m_Corrupter = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceForm_SevenUlt { // : UTgDeviceForm
		constexpr auto m_Beam = 0x28c; // ObjectProperty
		constexpr auto m_CachedSeven = 0x294; // ObjectProperty
		constexpr auto m_Cached1PWepMesh = 0x29c; // ComponentProperty
	}

	namespace n_UBookMark { // : UObject
		constexpr auto Location = 0x60; // FVector
		constexpr auto Rotation = 0x6c; // FRotator
		constexpr auto HiddenLevels = 0x78; // TArray<FString>
	}

	namespace n_ATgDeploy_SaatiCoin { // : ATgDeploy_MatchParentFireMode
		constexpr auto m_bUseAoeFiremode = 0x46c; // uint32_t : 1
		constexpr auto m_AoeFiremode = 0x470; // ObjectProperty
		constexpr auto m_nCoinFlatDamageTaken = 0x478; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_IsLanepusherLastAttackerOfType { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_UTgDeviceFire_HammerSlam { // : UTgDeviceFire
		constexpr auto m_vBaseDimensions = 0x268; // FVector
		constexpr auto m_bBlockedByWorldOnly = 0x274; // uint32_t : 1
	}

	namespace n_UDrawConeComponent { // : UPrimitiveComponent
		constexpr auto ConeColor = 0x24c; // FColor
		constexpr auto ConeRadius = 0x250; // float
		constexpr auto ConeAngle = 0x254; // float
		constexpr auto ConeSides = 0x258; // int32_t
	}

	namespace n_UParticleModuleLocation_Seeded { // : UParticleModuleLocation
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_UTgAIBehaviorAction_UseDevice { // : UTgAIBehaviorAction
		constexpr auto DeviceToUse = 0x94; // TG_EQUIP_POINT
		constexpr auto aimType = 0x95; // EUseDeviceAimType
		constexpr auto bContinuousFire = 0x98; // uint32_t : 1
		constexpr auto bPayNoEnergy = 0x98; // uint32_t : 1
	}

	namespace n_ATgDevice_BarricadeDome { // : ATgDevice
		constexpr auto m_TurretSpawnLocation = 0xa08; // FVector
		constexpr auto m_FlameTurretID = 0xa14; // int32_t
	}

	namespace n_UTgInvListener_Scapegoat { // : UTgInvListener
		constexpr auto m_CachedShield = 0xc4; // ObjectProperty
	}

	namespace n_UParticleModuleSizeScaleByTime { // : UParticleModuleSizeBase
		constexpr auto SizeScaleByTime = 0x68; // FRawDistributionVector
		constexpr auto bEnableX = 0x8c; // uint32_t : 1
		constexpr auto bEnableY = 0x8c; // uint32_t : 1
		constexpr auto bEnableZ = 0x8c; // uint32_t : 1
	}

	namespace n_USeqAct_ConcatenateStrings { // : USequenceAction
		constexpr auto StrA = 0x108; // FString
		constexpr auto StrB = 0x118; // FString
		constexpr auto ConcatenateWithSpace = 0x128; // uint32_t : 1
		constexpr auto StrResult = 0x12c; // FString
	}

	namespace n_UTgInventoryObject_Listen_LastStand { // : UTgInventoryObject_Listen_ActiveDuringAbility
		constexpr auto m_bHealthInActiveRange = 0xd4; // uint32_t : 1
	}

	namespace n_ATgSkeletalMeshActor_Loader { // : ATgSkeletalMeshActor
		constexpr auto VfTable_ITgSkinnableInterface = 0x32c; // FPointer
		constexpr auto VfTable_ITgCallbackInterface = 0x334; // FPointer
		constexpr auto m_PendingMeshInfo = 0x33c; // ObjectProperty
		constexpr auto m_CurrentMeshInfo = 0x344; // ObjectProperty
		constexpr auto c_AssetManifestGroup = 0x34c; // ObjectProperty
		constexpr auto m_PendingBot = 0x354; // FPointer
		constexpr auto m_PendingSkin = 0x35c; // FPointer
		constexpr auto m_PendingDevice = 0x364; // FPointer
		constexpr auto m_PendingDeviceSkin = 0x36c; // FPointer
		constexpr auto m_PendingPose = 0x374; // LobbyAnimPose
		constexpr auto m_CurrentPose = 0x375; // LobbyAnimPose
		constexpr auto m_HighlightType = 0x376; // EModelHighlightType
		constexpr auto m_PendingMVPDevice = 0x378; // FPointer
		constexpr auto m_CurrentBot = 0x380; // FPointer
		constexpr auto m_CurrentSkin = 0x388; // FPointer
		constexpr auto m_CurrentDevice = 0x390; // FPointer
		constexpr auto m_CurrentDeviceSkin = 0x398; // FPointer
		constexpr auto m_CurrentMVPDevice = 0x3a0; // FPointer
		constexpr auto m_bIsActive = 0x3a8; // uint32_t : 1
		constexpr auto m_bWaitingForTextures = 0x3a8; // uint32_t : 1
		constexpr auto m_bIsAsyncLoading = 0x3a8; // uint32_t : 1
		constexpr auto m_bIsAsyncSimulating = 0x3a8; // uint32_t : 1
		constexpr auto m_bDeferAsyncSwap = 0x3a8; // uint32_t : 1
		constexpr auto m_bWaitingForAsyncSwap = 0x3a8; // uint32_t : 1
		constexpr auto m_bAllowOverlays = 0x3a8; // uint32_t : 1
		constexpr auto m_bUsesPreviewMesh = 0x3a8; // uint32_t : 1
		constexpr auto m_bOverrideLightingChannels = 0x3a8; // uint32_t : 1
		constexpr auto m_fAsyncSwapDelay = 0x3ac; // float
		constexpr auto m_fAsyncSwapTimer = 0x3b0; // float
		constexpr auto m_nAsyncLoadDelayTicksDefault = 0x3b4; // int32_t
		constexpr auto m_nAsyncLoadDelayTicks = 0x3b8; // int32_t
		constexpr auto m_PointLight = 0x3bc; // ComponentProperty
		constexpr auto m_ChildMeshes = 0x3c4; // TArray<ComponentProperty>
		constexpr auto m_SkinMeshes = 0x3d4; // TArray<ComponentProperty>
		constexpr auto m_BodyMesh = 0x3e4; // ComponentProperty
		constexpr auto m_HeadMesh = 0x3ec; // ComponentProperty
		constexpr auto m_WeaponMesh = 0x3f4; // ComponentProperty
		constexpr auto m_AlternateLightEnvironmentTemplate = 0x3fc; // ComponentProperty
		constexpr auto m_AlternateLightEnvironments = 0x404; // TArray<ComponentProperty>
		constexpr auto m_OverlayMaterial = 0x414; // ObjectProperty
		constexpr auto m_CustomCharacterComponent = 0x41c; // ComponentProperty
		constexpr auto m_MeshReplacementMICs = 0x424; // TArray<ObjectProperty>
		constexpr auto m_MeterBusses = 0x434; // TArray<FLobbySMAMeterBus>
		constexpr auto m_LightingChannels = 0x444; // FLightingChannelContainer
		constexpr auto NonHighlightMaterial = 0x448; // ObjectProperty
		constexpr auto m_EmoteAnimSet = 0x450; // ObjectProperty
		constexpr auto m_MVPAnimSet = 0x458; // ObjectProperty
		constexpr auto m_fBaseCollisionRadius = 0x460; // float
		constexpr auto m_fBaseCollisionHeight = 0x464; // float
		constexpr auto m_PawnMods = 0x468; // TArray<ObjectProperty>
		constexpr auto m_CallbackContainer = 0x478; // ObjectProperty
		constexpr auto m_CharacterSpecificData = 0x480; // FCharacterSpecificData
		constexpr auto m_fDigitizedSkinFaceSwapDelayTimer = 0x49c; // float
		constexpr auto __OnMeshUpdated__Delegate = 0x4a0; // DelegateProperty
	}

	namespace n_ATgSkeletalMeshActor_FlagStand { // : ATgSkeletalMeshActor_Loader
		constexpr auto m_FlagContentDataClassName = 0x4b0; // FString
		constexpr auto m_FlagContentData = 0x4c0; // ObjectProperty
		constexpr auto m_nGameTaskForce = 0x4c8; // int32_t
		constexpr auto m_nTeamIndex = 0x4cc; // int32_t
	}

	namespace n_UTgDeviceForm_Spite { // : UTgDeviceForm
		constexpr auto m_SpiteNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SpiteNodes1p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_DarklordNodes1p = 0x2ac; // TArray<ObjectProperty>
		constexpr auto bFOVZoomActive = 0x2bc; // uint32_t : 1
		constexpr auto m_fCameraFOVInterpolationTime = 0x2c0; // float
		constexpr auto m_fFOVModifier = 0x2c4; // float
	}

	namespace n_ATgDevice_SecondWind { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedHustleDevice = 0xa10; // ObjectProperty
		constexpr auto m_fSprintEndTimestamp = 0xa18; // float
	}

	namespace n_ATgTeamBlocker { // : ATgMeshAssembly
		constexpr auto m_bBlockFlagCarrier = 0x298; // uint32_t : 1
		constexpr auto m_bBlockFriendlyFire = 0x298; // uint32_t : 1
	}

	namespace n_ATgGame_Battle_Conquest_Erez { // : ATgGame_Battle_Conquest
		constexpr auto m_nSpawnSiegeWeaponThreshold = 0x76c; // int32_t
	}

	namespace n_UTgAnimMetaData_MaskingPlane { // : UTgAnimMetaData_MICScalarParameterExtended
		constexpr auto WallIndex = 0xc8; // int32_t
		constexpr auto WallNormal = 0xcc; // FVector
		constexpr auto WallPosition0 = 0xd8; // FVector
		constexpr auto WallPosition1 = 0xe4; // FVector
		constexpr auto WallEnableBaseName = 0xf0; // FName
		constexpr auto WallPositionBaseName = 0xf8; // FName
		constexpr auto WallNormalBaseName = 0x100; // FName
	}

	namespace n_UUIComponent_PlayRanked { // : UUIComponent_Display
		constexpr auto m_bPendingLoad = 0x124; // uint32_t : 1
		constexpr auto m_mcDailyQueueBonusNotification = 0x128; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusNotificationTF = 0x130; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusIcon = 0x138; // ObjectProperty
		constexpr auto m_pPanel = 0x140; // ObjectProperty
		constexpr auto m_pRankedSnapshot = 0x148; // ObjectProperty
		constexpr auto m_pJoinQueueButton = 0x150; // ObjectProperty
		constexpr auto m_pRankedInfoButton = 0x158; // ObjectProperty
		constexpr auto m_grInput = 0x160; // ObjectProperty
	}

	namespace n_USeqCond_IsLoggedIn { // : USequenceCondition
		constexpr auto NumNeededLoggedIn = 0xec; // int32_t
	}

	namespace n_USeqEvent_TakeDamage { // : USequenceEvent
		constexpr auto MinDamageAmount = 0x128; // float
		constexpr auto DamageThreshold = 0x12c; // float
		constexpr auto DamageTypes = 0x130; // TArray<UDamageType*>
		constexpr auto IgnoreDamageTypes = 0x140; // TArray<UDamageType*>
		constexpr auto CurrentDamage = 0x150; // float
		constexpr auto bResetDamageOnToggle = 0x154; // uint32_t : 1
	}

	namespace n_USkelControlBase { // : UAnimObject
		constexpr auto ControlName = 0x68; // FName
		constexpr auto ControlStrength = 0x70; // float
		constexpr auto BlendInTime = 0x74; // float
		constexpr auto BlendOutTime = 0x78; // float
		constexpr auto BlendType = 0x7c; // AlphaBlendType
		constexpr auto bPostPhysicsController = 0x80; // uint32_t : 1
		constexpr auto bSetStrengthFromAnimNode = 0x80; // uint32_t : 1
		constexpr auto bInvertStrengthFromAnimNode = 0x80; // uint32_t : 1
		constexpr auto bInitializedCachedNodeList = 0x80; // uint32_t : 1
		constexpr auto bControlledByAnimMetada = 0x80; // uint32_t : 1
		constexpr auto bInvertMetadataWeight = 0x80; // uint32_t : 1
		constexpr auto bPropagateSetActive = 0x80; // uint32_t : 1
		constexpr auto bIgnoreWhenNotRendered = 0x80; // uint32_t : 1
		constexpr auto bShouldTickInScript = 0x80; // uint32_t : 1
		constexpr auto bShouldTickOwner = 0x80; // uint32_t : 1
		constexpr auto bEnableEaseInOut = 0x80; // uint32_t : 1
		constexpr auto StrengthTarget = 0x84; // float
		constexpr auto BlendTimeToGo = 0x88; // float
		constexpr auto StrengthAnimNodeNameList = 0x8c; // TArray<FName>
		constexpr auto CachedNodeList = 0x9c; // TArray<ObjectProperty>
		constexpr auto AnimMetadataWeight = 0xac; // float
		constexpr auto AnimMetaDataUpdateTag = 0xb0; // int32_t
		constexpr auto BoneScale = 0xb4; // float
		constexpr auto ControlTickTag = 0xb8; // int32_t
		constexpr auto IgnoreAtOrAboveLOD = 0xbc; // int32_t
		constexpr auto NextControl = 0xc0; // ObjectProperty
		constexpr auto ControlPosX = 0xc8; // int32_t
		constexpr auto ControlPosY = 0xcc; // int32_t
	}

	namespace n_ASplineActor { // : AActor
		constexpr auto Connections = 0x280; // TArray<FSplineConnection>
		constexpr auto SplineActorTangent = 0x290; // FVector
		constexpr auto SplineColor = 0x29c; // FColor
		constexpr auto bDisableDestination = 0x2a0; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x2a0; // uint32_t : 1
		constexpr auto LinksFrom = 0x2a4; // TArray<ObjectProperty>
		constexpr auto nextOrdered = 0x2b4; // ObjectProperty
		constexpr auto prevOrdered = 0x2bc; // ObjectProperty
		constexpr auto previousPath = 0x2c4; // ObjectProperty
		constexpr auto bestPathWeight = 0x2cc; // int32_t
		constexpr auto visitedWeight = 0x2d0; // int32_t
		constexpr auto SplineVelocityOverTime = 0x2d4; // FInterpCurveFloat
	}

	namespace n_UUIComponent_EventChallengeRegion { // : UUIComponent_Display
		constexpr auto m_bShowingHubPanel = 0x124; // uint32_t : 1
		constexpr auto m_pHubs = 0x128; // ObjectProperty
		constexpr auto m_pRewards = 0x130; // ObjectProperty
		constexpr auto m_pHubPanel = 0x138; // ObjectProperty
		constexpr auto m_mcHubText = 0x140; // ObjectProperty
		constexpr auto m_mcRewardText = 0x148; // ObjectProperty
		constexpr auto m_mcRewardItemText = 0x150; // ObjectProperty [0x3]
		constexpr auto m_mcNextUnlock = 0x168; // ObjectProperty
		constexpr auto m_mcNextUnlockText = 0x170; // ObjectProperty
		constexpr auto m_mcNextUnlockTimeText = 0x178; // ObjectProperty
		constexpr auto m_mcScrollTop = 0x180; // ObjectProperty
		constexpr auto m_mcScrollBacking = 0x188; // ObjectProperty
		constexpr auto m_mcUnlockChallengeText = 0x190; // ObjectProperty
		constexpr auto m_mcUnlockTicketCountText = 0x198; // ObjectProperty
		constexpr auto m_HubInputGroup = 0x1a0; // ObjectProperty
	}

	namespace n_UUIComponent_MatchLobbyCustomize { // : UUIComponent
		constexpr auto m_mcChampionItemSelect = 0x118; // ObjectProperty
		constexpr auto m_PreviousButton = 0x120; // ObjectProperty
		constexpr auto m_NextButton = 0x128; // ObjectProperty
		constexpr auto m_BuyVoicepack = 0x130; // ObjectProperty
		constexpr auto m_InputBuyVoicePack = 0x138; // ObjectProperty
		constexpr auto m_InputSelectVoicePack = 0x140; // ObjectProperty
		constexpr auto m_EquipSlotList = 0x148; // ObjectProperty
		constexpr auto m_ItemList = 0x150; // ObjectProperty
		constexpr auto m_pEquipSlotNavLeft = 0x158; // ObjectProperty
		constexpr auto m_pEquipSlotNavRight = 0x160; // ObjectProperty
		constexpr auto m_VoiceDropdown = 0x168; // ObjectProperty
		constexpr auto m_pPurchase = 0x170; // ObjectProperty
		constexpr auto m_eState = 0x178; // UIChampionCustomizeState
		constexpr auto m_eSelectedSlot = 0x179; // UIChampionCustomizeState
		constexpr auto m_mcTooltip = 0x17c; // ObjectProperty
		constexpr auto m_pTooltipInfo = 0x184; // ObjectProperty
		constexpr auto m_pColorPicker = 0x18c; // ObjectProperty
	}

	namespace n_UCameraAnim { // : UObject
		constexpr auto CameraInterpGroup = 0x60; // ObjectProperty
		constexpr auto AnimLength = 0x68; // float
		constexpr auto BoundingBox = 0x6c; // FBox
		constexpr auto BasePPSettings = 0x88; // FPostProcessSettings
		constexpr auto BasePPSettingsAlpha = 0x208; // float
		constexpr auto BaseFOV = 0x20c; // float
	}

	namespace n_ATgDevice_AndroxusInhand { // : ATgDevice
		constexpr auto m_nAndroLeg2StackCount = 0xa08; // int32_t
		constexpr auto m_fQueueFireTime = 0xa0c; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xa10; // float
	}

	namespace n_UGFxInteraction { // : UInteraction
		constexpr auto VfTable_FCallbackEventDevice = 0xb0; // FPointer
		constexpr auto bFakeMobileTouches = 0xb8; // uint32_t : 1
	}

	namespace n_UOnlineSubsystem { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto AccountInterface = 0x68; // TScriptInterface<Class>
		constexpr auto PlayerInterface = 0x78; // TScriptInterface<Class>
		constexpr auto PlayerInterfaceEx = 0x88; // TScriptInterface<Class>
		constexpr auto MarketplaceInterface = 0x98; // TScriptInterface<Class>
		constexpr auto SystemInterface = 0xa8; // TScriptInterface<Class>
		constexpr auto GameInterface = 0xb8; // TScriptInterface<Class>
		constexpr auto ContentInterface = 0xc8; // TScriptInterface<Class>
		constexpr auto VoiceInterface = 0xd8; // TScriptInterface<Class>
		constexpr auto StatsInterface = 0xe8; // TScriptInterface<Class>
		constexpr auto NewsInterface = 0xf8; // TScriptInterface<Class>
		constexpr auto PartyChatInterface = 0x108; // TScriptInterface<Class>
		constexpr auto TitleFileInterface = 0x118; // TScriptInterface<Class>
		constexpr auto TitleFileCacheInterface = 0x128; // TScriptInterface<Class>
		constexpr auto UserCloudInterface = 0x138; // TScriptInterface<Class>
		constexpr auto SharedCloudInterface = 0x148; // TScriptInterface<Class>
		constexpr auto SocialInterface = 0x158; // TScriptInterface<Class>
		constexpr auto ChatInterface = 0x168; // TScriptInterface<Class>
		constexpr auto AuthInterface = 0x178; // TScriptInterface<Class>
		constexpr auto GameDVRInterface = 0x188; // TScriptInterface<Class>
		constexpr auto CommunityContentInterface = 0x198; // TScriptInterface<Class>
		constexpr auto OnLeaveStorefrontDelegates = 0x1a8; // TArray<DelegateProperty>
		constexpr auto LoggedInPlayerNetId = 0x1b8; // FUniqueNetId
		constexpr auto NamedInterfaces = 0x1c0; // TArray<FNamedInterface>
		constexpr auto NamedInterfaceDefs = 0x1d0; // TArray<FNamedInterfaceDef>
		constexpr auto Sessions = 0x1e0; // TArray<FNamedSession>
		constexpr auto PartyMemberList = 0x1f0; // TArray<FSessionMemberInfo>
		constexpr auto GameMemberList = 0x200; // TArray<FSessionMemberInfo>
		constexpr auto bCameFromAutoLogin = 0x210; // uint32_t : 1
		constexpr auto bUseBuildIdOverride = 0x210; // uint32_t : 1
		constexpr auto BuildIdOverride = 0x214; // int32_t
		constexpr auto IniLocPatcherClassName = 0x218; // FString
		constexpr auto Patcher = 0x228; // ObjectProperty
		constexpr auto AsyncMinCompletionTime = 0x230; // float
		constexpr auto DefaultSessionTemplateName = 0x234; // FString
		constexpr auto PartySessionTemplateName = 0x244; // FString
		constexpr auto __OnLeaveStorefront__Delegate = 0x254; // DelegateProperty
	}

	namespace n_ATgDevice_TiberiusBladeExplode { // : ATgDevice
		constexpr auto m_CachedTiberius = 0xa08; // ObjectProperty
	}

	namespace n_UUIScene_UICalendarEvent { // : UUIScene
		constexpr auto m_pEvents = 0x1cc; // ObjectProperty
		constexpr auto m_pOverview = 0x1d4; // ObjectProperty
		constexpr auto m_pRotator = 0x1dc; // ObjectProperty
	}

	namespace n_ATgDevice_FlakInhand { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_KineticDevice = 0xa10; // ObjectProperty
	}

	namespace n_ATgDevice_ShieldFernando { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedPawn = 0xa10; // ObjectProperty
		constexpr auto m_fManaGrace = 0xa18; // float
		constexpr auto m_fAegisShieldDestroyedLockOutTime = 0xa1c; // float
	}

	namespace n_ATgDeploy_GeometryBuck { // : ATgDeploy_Geometry
		constexpr auto m_bInteriorEffectApplied = 0x494; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_MoveToLanePusher { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_USaveGameSummary { // : UObject
		constexpr auto BaseLevel = 0x60; // FName
		constexpr auto Description = 0x68; // FString
	}

	namespace n_UTgAIUtilityFilter_CapturePoint { // : UTgAIUtilityFilter
		constexpr auto DistanceCutoff = 0xc0; // float
	}

	namespace n_UInterpTrackVectorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UMaterialExpressionConstantClamp { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Min = 0xe4; // float
		constexpr auto Max = 0xe8; // float
	}

	namespace n_UExponentialHeightFogComponent { // : UActorComponent
		constexpr auto bEnabled = 0x88; // uint32_t : 1
		constexpr auto bUseActorDirectionForLightDirection = 0x88; // uint32_t : 1
		constexpr auto FogHeight = 0x8c; // float
		constexpr auto FogDensity = 0x90; // float
		constexpr auto FogHeightFalloff = 0x94; // float
		constexpr auto FogMaxOpacity = 0x98; // float
		constexpr auto StartDistance = 0x9c; // float
		constexpr auto LightTerminatorAngle = 0xa0; // float
		constexpr auto OppositeLightBrightness = 0xa4; // float
		constexpr auto OppositeLightColor = 0xa8; // FColor
		constexpr auto LightInscatteringBrightness = 0xac; // float
		constexpr auto LightInscatteringColor = 0xb0; // FColor
		constexpr auto DominantDirectionalLightDirection = 0xb4; // FVector
	}

	namespace n_UTgBattleCheatManager { // : UPComCheatManager
		constexpr auto m_DebugCameraController = 0xa0; // ObjectProperty
		constexpr auto m_DebugPlayerStarts = 0xa8; // TArray<ObjectProperty>
		constexpr auto m_nLastSlomoWindowId = 0xb8; // int32_t
		constexpr auto m_bInfiniteEnergy = 0xbc; // uint32_t : 1
		constexpr auto m_bBaseAmmoRegenDisabled = 0xbc; // uint32_t : 1
		constexpr auto m_bLogAmmoRegen = 0xbc; // uint32_t : 1
	}

	namespace n_ATgPathfinderWalker { // : AActor
		constexpr auto m_Pathfinder = 0x280; // ObjectProperty
		constexpr auto m_CurrentSpline = 0x288; // ObjectProperty
		constexpr auto m_fCurrentSplineDist = 0x290; // float
		constexpr auto __OnFinishedPathing__Delegate = 0x294; // DelegateProperty
	}

	namespace n_UTgAIBehaviorComposite { // : UTgAIBehaviorNode
		constexpr auto Children = 0x94; // TArray<ObjectProperty>
		constexpr auto ChildrenIndices = 0xa4; // TArray<int32_t>
		constexpr auto bCompleteOnAll = 0xb4; // uint32_t : 1
		constexpr auto bFailsOnAll = 0xb4; // uint32_t : 1
		constexpr auto bRetryFailedChild = 0xb4; // uint32_t : 1
		constexpr auto bFixedChildrenSize = 0xb4; // uint32_t : 1
	}

	namespace n_USeqVar_RandomFloat { // : USeqVar_Float
		constexpr auto Min = 0xa4; // float
		constexpr auto Max = 0xa8; // float
	}

	namespace n_UUIData_CustomGameManager { // : UUIData
		constexpr auto sName = 0x64; // FString
		constexpr auto sDesc = 0x74; // FString
		constexpr auto nIcon = 0x84; // int32_t
	}

	namespace n_UMcpGroupsManager { // : UMcpGroupsBase
		constexpr auto CreateGroupUrl = 0x128; // FString
		constexpr auto DeleteGroupUrl = 0x138; // FString
		constexpr auto QueryGroupsUrl = 0x148; // FString
		constexpr auto QueryGroupMembersUrl = 0x158; // FString
		constexpr auto AddGroupMembersUrl = 0x168; // FString
		constexpr auto RemoveGroupMembersUrl = 0x178; // FString
		constexpr auto DeleteAllGroupsUrl = 0x188; // FString
		constexpr auto AcceptGroupInviteUrl = 0x198; // FString
		constexpr auto RejectGroupInviteUrl = 0x1a8; // FString
		constexpr auto __OnQueryGroupsRequestComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersRequestComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnAddGroupMembersRequestComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteRequestComplete__Delegate = 0x1e8; // DelegateProperty
	}

	namespace n_UGameMessage { // : ULocalMessage
		constexpr auto SwitchLevelMessage = 0x74; // FString
		constexpr auto LeftMessage = 0x84; // FString
		constexpr auto FailedTeamMessage = 0x94; // FString
		constexpr auto FailedPlaceMessage = 0xa4; // FString
		constexpr auto FailedSpawnMessage = 0xb4; // FString
		constexpr auto EnteredMessage = 0xc4; // FString
		constexpr auto MaxedOutMessage = 0xd4; // FString
		constexpr auto ArbitrationMessage = 0xe4; // FString
		constexpr auto OvertimeMessage = 0xf4; // FString
		constexpr auto GlobalNameChange = 0x104; // FString
		constexpr auto NewTeamMessage = 0x114; // FString
		constexpr auto NewTeamMessageTrailer = 0x124; // FString
		constexpr auto NoNameChange = 0x134; // FString
		constexpr auto VoteStarted = 0x144; // FString
		constexpr auto VotePassed = 0x154; // FString
		constexpr auto MustHaveStats = 0x164; // FString
		constexpr auto CantBeSpectator = 0x174; // FString
		constexpr auto CantBePlayer = 0x184; // FString
		constexpr auto BecameSpectator = 0x194; // FString
		constexpr auto NewPlayerMessage = 0x1a4; // FString
		constexpr auto KickWarning = 0x1b4; // FString
		constexpr auto NewSpecMessage = 0x1c4; // FString
		constexpr auto SpecEnteredMessage = 0x1d4; // FString
	}

	namespace n_UTgAnimNodeHitReactionOffset { // : UTgAnimNodeAimOffset_Base
		constexpr auto Owner = 0x170; // ObjectProperty
		constexpr auto m_vCurrentAngle = 0x178; // FVector2D
		constexpr auto m_bSecondaryReaction = 0x180; // uint32_t : 1
		constexpr auto m_fMaxReactionTime = 0x184; // float
		constexpr auto m_fMinTimeBetweenReactions = 0x188; // float
		constexpr auto m_ActiveReactions = 0x18c; // TArray<FHitReactionInfo>
	}

	namespace n_UInterpGroupCamera { // : UInterpGroup
		constexpr auto CameraAnimInst = 0x98; // ObjectProperty
		constexpr auto CompressTolerance = 0xa0; // float
	}

	namespace n_UTgAchievement_FastKillSequence { // : UTgAchievement
		constexpr auto m_fKillTimes = 0x94; // TArray<float>
	}

	namespace n_UPMESTG_LeaveADecalBase { // : UParticleModuleEventSendToGame
		constexpr auto PhysicalMaterialPropertyClass = 0x60; // UPhysicalMaterialPropertyBase*
	}

	namespace n_UTgDeviceFire_MirrorDamageToHealBlock { // : UTgDeviceFire
		constexpr auto m_fHealBlockAmount = 0x268; // float
	}

	namespace n_ATgDeploy_PoppyBomb { // : ATgDeployable
		constexpr auto r_bDetonated = 0x46c; // uint32_t : 1
		constexpr auto m_CachedPlayer = 0x470; // ObjectProperty
		constexpr auto r_HitNormal = 0x478; // FVector
		constexpr auto r_StuckCart = 0x484; // ObjectProperty
		constexpr auto r_StuckRotation = 0x48c; // FRotator
		constexpr auto r_CartOffset = 0x498; // FVector
	}

	namespace n_UTgCameraModule_FrontFacingCamera { // : UTgCameraModule_ThirdPerson
		constexpr auto m_rWorldRotationOffset = 0x118; // FRotator
		constexpr auto m_fFOV = 0x124; // float
	}

	namespace n_UTgDeviceForm_Tempest { // : UTgDeviceForm
		constexpr auto m_BeamTarget1 = 0x28c; // ObjectProperty
		constexpr auto m_BeamTarget2 = 0x294; // ObjectProperty
		constexpr auto m_bBeamActive1 = 0x29c; // uint32_t : 1
		constexpr auto m_bBeamActive2 = 0x29c; // uint32_t : 1
		constexpr auto m_bBeamDirty1 = 0x29c; // uint32_t : 1
		constexpr auto m_bBeamDirty2 = 0x29c; // uint32_t : 1
		constexpr auto m_fBeamStartTime1 = 0x2a0; // float
		constexpr auto m_fBeamStartTime2 = 0x2a4; // float
		constexpr auto m_fBeamOnTime = 0x2a8; // float
	}

	namespace n_ATgDevice_PrincessF { // : ATgDevice_Charge
		constexpr auto m_cachedSupportDevice = 0xa7c; // ObjectProperty
		constexpr auto m_nEyeheightAdjustmentWhileSliding = 0xa84; // int32_t
		constexpr auto m_fEyeHeightSmoothFactor = 0xa88; // float
	}

	namespace n_UTgDeviceForm_Thrust { // : UTgDeviceForm
		constexpr auto m_FlyingBlendList1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_FlyingBlendList3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_CycloneStrike { // : ATgDevice_HitPulse
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa10; // FPointer
		constexpr auto m_bLockInputOnPostFire = 0xa18; // uint32_t : 1
	}

	namespace n_ATgPlayerController { // : APComPlayerController
		constexpr auto VfTable_ITgPaladinsController = 0x7d8; // FPointer
		constexpr auto VfTable_ITgCallbackInterface = 0x7e0; // FPointer
		constexpr auto VfTable_ITgSoundNotifyActorInterface = 0x7e8; // FPointer
		constexpr auto ZombieInfo = 0x7f0; // FSZombieInfo
		constexpr auto m_nAnnouncerSeriesStep = 0x844; // int32_t [0x6]
		constexpr auto s_nPlayerId = 0x85c; // int32_t
		constexpr auto s_qwNetAccessFlags = 0x860; // FQWord
		constexpr auto r_nXp = 0x868; // int32_t
		constexpr auto r_nCurrency = 0x86c; // int32_t
		constexpr auto s_fCurrencyRemainder = 0x870; // float
		constexpr auto s_fXpRemainder = 0x874; // float
		constexpr auto s_fCurrencyMult = 0x878; // float
		constexpr auto r_bCanPurchaseItems = 0x87c; // uint32_t : 1
		constexpr auto r_bAutoPurchase = 0x87c; // uint32_t : 1
		constexpr auto r_bAutoSkillUp = 0x87c; // uint32_t : 1
		constexpr auto r_bToggleZoom = 0x87c; // uint32_t : 1
		constexpr auto s_bAutoBuyOnRespawn = 0x87c; // uint32_t : 1
		constexpr auto m_bBlockVGS = 0x87c; // uint32_t : 1
		constexpr auto s_bSentAutoKickAlert = 0x87c; // uint32_t : 1
		constexpr auto s_bAddDeadTimeStatsTracker = 0x87c; // uint32_t : 1
		constexpr auto c_bHUDHidden = 0x87c; // uint32_t : 1
		constexpr auto r_bLockYawRotation = 0x87c; // uint32_t : 1
		constexpr auto bPressingLeftMouseButton = 0x87c; // uint32_t : 1
		constexpr auto bPressingRightMouseButton = 0x87c; // uint32_t : 1
		constexpr auto bPressingMovementButton = 0x87c; // uint32_t : 1
		constexpr auto bPressingReloadButton = 0x87c; // uint32_t : 1
		constexpr auto m_bPendingReload = 0x87c; // uint32_t : 1
		constexpr auto r_bRove = 0x87c; // uint32_t : 1
		constexpr auto m_bNoSmoothedMovementCorrection = 0x87c; // uint32_t : 1
		constexpr auto c_bProcessedNoSmoothNotification = 0x87c; // uint32_t : 1
		constexpr auto s_bNoSmoothedMovementCorrectionRequested = 0x87c; // uint32_t : 1
		constexpr auto s_bIsNoSmoothMovementCorrectionManaged = 0x87c; // uint32_t : 1
		constexpr auto s_bClearAchievementIgnoreListsOnNextTick = 0x87c; // uint32_t : 1
		constexpr auto bDebugProjectileLagCompensation = 0x87c; // uint32_t : 1
		constexpr auto bDebugClientProjectileImpactVerification = 0x87c; // uint32_t : 1
		constexpr auto c_bAssistModeSublevelLoaded = 0x87c; // uint32_t : 1
		constexpr auto c_bAllowSpecialMaterialEffects = 0x87c; // uint32_t : 1
		constexpr auto m_bIgnoreSilhouettes = 0x87c; // uint32_t : 1
		constexpr auto c_bSilhouettesBlocked = 0x87c; // uint32_t : 1
		constexpr auto m_bForceSilhouettesOnVisibleGods = 0x87c; // uint32_t : 1
		constexpr auto m_bDetailedViewEnabled = 0x87c; // uint32_t : 1
		constexpr auto m_bShowPlayerCircles = 0x87c; // uint32_t : 1
		constexpr auto m_bAllowUndrawnPurchase = 0x87c; // uint32_t : 1
		constexpr auto m_bCanHearStealthPawns = 0x87c; // uint32_t : 1
		constexpr auto c_bShowFootstepInfoDebug = 0x880; // uint32_t : 1
		constexpr auto m_bDetailedDeviceLogging = 0x880; // uint32_t : 1
		constexpr auto m_bOutlineEnemies = 0x880; // uint32_t : 1
		constexpr auto m_bOutlineFriendlies = 0x880; // uint32_t : 1
		constexpr auto c_bEnablePathfinderGuide = 0x880; // uint32_t : 1
		constexpr auto m_fPathfinderEnabled = 0x880; // uint32_t : 1
		constexpr auto c_bIsPlayingFallWindSound = 0x880; // uint32_t : 1
		constexpr auto m_bJustDidJumpDoubleTap = 0x880; // uint32_t : 1
		constexpr auto m_bThreatSystemEnabled = 0x880; // uint32_t : 1
		constexpr auto m_bOcclusionSystemEnabled = 0x880; // uint32_t : 1
		constexpr auto m_bDebugThreatSystem = 0x880; // uint32_t : 1
		constexpr auto c_bMatchAlmostWonSwitchPrimed = 0x880; // uint32_t : 1
		constexpr auto m_IsTimeDilationInterpolating = 0x880; // uint32_t : 1
		constexpr auto m_IsDesaturationInterpolating = 0x880; // uint32_t : 1
		constexpr auto m_bIsTrackingAimTowardTargetLocation = 0x880; // uint32_t : 1
		constexpr auto bForcedTimelapseRequested = 0x880; // uint32_t : 1
		constexpr auto bForcedPlayOfGameRequested = 0x880; // uint32_t : 1
		constexpr auto m_bRewindMoversForReplaySavedMoves = 0x880; // uint32_t : 1
		constexpr auto m_bShowDebugRewindMovers = 0x880; // uint32_t : 1
		constexpr auto c_bCaptureProgressAkEventPlaying = 0x880; // uint32_t : 1
		constexpr auto m_bShowChampionOverviewTip = 0x880; // uint32_t : 1
		constexpr auto m_bEnableUltimateAkEventUnocclusion = 0x880; // uint32_t : 1
		constexpr auto c_bIsPlayOfTheGame = 0x880; // uint32_t : 1
		constexpr auto m_bHideReticle = 0x880; // uint32_t : 1
		constexpr auto m_bHideReticleAcc = 0x880; // uint32_t : 1
		constexpr auto m_bSupportsEffectSimulation = 0x880; // uint32_t : 1
		constexpr auto m_bForced3pOption = 0x880; // uint32_t : 1
		constexpr auto c_bForced3pFreeCam = 0x880; // uint32_t : 1
		constexpr auto c_fLastGoldNagTime = 0x884; // float
		constexpr auto m_nReviveBuybackCost = 0x888; // int32_t
		constexpr auto r_nStatPoints = 0x88c; // int32_t
		constexpr auto s_VGSFlood = 0x890; // FFLOOD
		constexpr auto s_PingFlood = 0x898; // FFLOOD
		constexpr auto c_aLastViewTarget = 0x8a0; // ObjectProperty
		constexpr auto m_CachedPlayerInput = 0x8a8; // ObjectProperty
		constexpr auto m_CachedSpectatorInput = 0x8b0; // ObjectProperty
		constexpr auto m_aHoverActor = 0x8b8; // ObjectProperty
		constexpr auto m_vHoverLocation = 0x8c0; // FVector
		constexpr auto m_fHoverActorActiveTime = 0x8cc; // float
		constexpr auto m_vWorldMapLocation = 0x8d0; // FVector
		constexpr auto m_WorldMapTargetRepInfos = 0x8dc; // TArray<ObjectProperty>
		constexpr auto m_vWorldMouseLocation = 0x8ec; // FVector
		constexpr auto m_vWorldMouseDirection = 0x8f8; // FVector
		constexpr auto c_fTimeTillAFK = 0x904; // float
		constexpr auto s_bAutoKickStartTime = 0x908; // float
		constexpr auto r_LastPurchasedItems = 0x90c; // FTG_LAST_PURCHASE [0x1a]
		constexpr auto s_LastPossessedPawn = 0x9dc; // ObjectProperty
		constexpr auto m_fRecentLostHealth = 0x9e4; // float
		constexpr auto m_fLastLostHealthTime = 0x9e8; // float
		constexpr auto s_fWaitForSpawnSecs = 0x9ec; // float
		constexpr auto c_fRespawnTime = 0x9f0; // float
		constexpr auto m_fDeathTime = 0x9f4; // float
		constexpr auto r_bInputEnabled = 0x9f8; // int32_t [0x14]
		constexpr auto ControlModule = 0xa48; // ObjectProperty
		constexpr auto DefaultControlModuleClass = 0xa50; // UTgControlModule*
		constexpr auto c_nCameraYawOffset = 0xa58; // int32_t
		constexpr auto m_nDevicesLockingInput = 0xa5c; // int32_t
		constexpr auto m_nDevicesLockingCamera = 0xa60; // int32_t
		constexpr auto m_nDevicesLockingRotation = 0xa64; // int32_t
		constexpr auto m_fPendingReloadTime = 0xa68; // float
		constexpr auto m_fPendingReloadMaxTime = 0xa6c; // float
		constexpr auto m_EndGameFocus = 0xa70; // ObjectProperty
		constexpr auto m_fLastVGS = 0xa78; // float
		constexpr auto m_vLastServerCorrectOrigPos = 0xa7c; // FVector
		constexpr auto s_fLastConfirmedSentSmoothedMovementTimestamp = 0xa88; // float
		constexpr auto c_fLastRecievedNoSmoothTimestamp = 0xa8c; // float
		constexpr auto m_byDesiredMoveSpeedReduction = 0xa90; // char
		constexpr auto c_eCameraPosture = 0xa91; // TG_CAMERAPOSTURE
		constexpr auto r_WatchOtherPlayer = 0xa92; // EWatchOtherPlayersMode
		constexpr auto c_GameWinState = 0xa93; // GAME_WIN_STATE
		constexpr auto m_bOldbRun = 0xa94; // char
		constexpr auto c_eCurrentOverlay = 0xa95; // EHUDOverlay
		constexpr auto m_eDetailedDeviceEqp = 0xa96; // TG_EQUIP_POINT
		constexpr auto m_LastEquipPoint = 0xa97; // TG_EQUIP_POINT
		constexpr auto c_LastSentClientRoll = 0xa98; // char
		constexpr auto m_UltHeld = 0xa99; // char
		constexpr auto m_JumpHeld = 0xa9a; // char
		constexpr auto m_JumpHeldAlt = 0xa9b; // char
		constexpr auto m_PerCharacterAlt = 0xa9c; // char
		constexpr auto c_CameraStack = 0xaa0; // TArray<FCameraStackInfo>
		constexpr auto c_nNextCameraStackId = 0xab0; // int32_t
		constexpr auto c_fDeathCamViewKillerDuration = 0xab4; // float
		constexpr auto m_fWatchOthersFadeToBlackCamTime = 0xab8; // float
		constexpr auto m_fWatchOthersFadeFromBlackCamTime = 0xabc; // float
		constexpr auto s_Achievements = 0xac0; // TArray<ObjectProperty>
		constexpr auto s_TickableAchievements = 0xad0; // TArray<ObjectProperty>
		constexpr auto c_TgAkAudio = 0xae0; // ObjectProperty
		constexpr auto r_nFlashProjectile = 0xae8; // int32_t [0x20]
		constexpr auto r_FlashProjectileEx = 0xb68; // FsSimProjectileFireInfo [0x20]
		constexpr auto r_nFirstValidProjIdx = 0x1368; // int32_t
		constexpr auto r_nFlashSimProjIdx = 0x136c; // int32_t
		constexpr auto c_nLastFlashSimProjIdx = 0x1370; // int32_t
		constexpr auto r_nPerkPointsAvail = 0x1374; // int32_t
		constexpr auto c_GameTipManager = 0x1378; // ObjectProperty
		constexpr auto s_pCombatMessages = 0x1380; // FPointer
		constexpr auto s_fLastCombatMessageProcess = 0x1388; // float
		constexpr auto c_nCurrentLevel = 0x138c; // int32_t
		constexpr auto c_TutorialAnnouncer = 0x1390; // ObjectProperty
		constexpr auto r_TutorialBlockedClientActions = 0x1398; // int32_t
		constexpr auto c_SubtitledMessages = 0x139c; // ObjectProperty
		constexpr auto c_DefaultSwitchValues = 0x13a4; // TArray<FDefaultAudioSwitch>
		constexpr auto CachedPRI = 0x13b4; // ObjectProperty
		constexpr auto m_OverlayPathMaterial = 0x13bc; // ObjectProperty
		constexpr auto m_HiddenPawns = 0x13c4; // TArray<ObjectProperty>
		constexpr auto c_AlertAudioComponent = 0x13d4; // ComponentProperty
		constexpr auto c_AlertAkEvent = 0x13dc; // ObjectProperty
		constexpr auto c_fDeathCamTurnToKillerInterpDuration = 0x13e4; // float
		constexpr auto c_fDeathCamDesaturationInterpDuration = 0x13e8; // float
		constexpr auto c_fDeathCamDesaturation = 0x13ec; // float
		constexpr auto c_fDeathCamCanSkipDelay = 0x13f0; // float
		constexpr auto c_KismetLoadedDevices = 0x13f4; // TArray<ObjectProperty>
		constexpr auto m_PreviewCameraShake = 0x1404; // ObjectProperty
		constexpr auto m_CapturePoints = 0x140c; // TArray<ObjectProperty>
		constexpr auto m_fPathfinderStreamTime = 0x141c; // float
		constexpr auto m_fPathfinderPulseTime = 0x1420; // float
		constexpr auto m_fPathfinderLifetime = 0x1424; // float
		constexpr auto m_fPathfinderSpeed = 0x1428; // float
		constexpr auto m_fPathfinderStartDist = 0x142c; // float
		constexpr auto c_LastSentMoveTimeStamp = 0x1430; // float
		constexpr auto c_LastSentMoveAcceleration = 0x1434; // FVector
		constexpr auto c_LastSentMoveCompressedFlags = 0x1440; // int32_t
		constexpr auto c_LastSentClientLoc = 0x1444; // FVector
		constexpr auto c_LastSentView = 0x1450; // int32_t
		constexpr auto c_FallWindSoundPlay = 0x1454; // ObjectProperty
		constexpr auto c_FallWindSoundStop = 0x145c; // ObjectProperty
		constexpr auto m_nKillCamTargetId = 0x1464; // int32_t
		constexpr auto m_nKillCamTargetBackupId = 0x1468; // int32_t
		constexpr auto r_fServerTimeStamp = 0x146c; // float
		constexpr auto m_fLastJumpTapTime = 0x1470; // float
		constexpr auto m_fMaxJumpDoubleTapTime = 0x1474; // float
		constexpr auto m_PawnsWithThreatLevels = 0x1478; // TArray<ObjectProperty>
		constexpr auto m_Pathfinder = 0x1488; // ObjectProperty
		constexpr auto m_fThreatCoefficientProximity = 0x1490; // float
		constexpr auto m_fThreatCoefficientOcclusion = 0x1494; // float
		constexpr auto m_fThreatCoefficientBinnedOcclusion = 0x1498; // float
		constexpr auto m_fThreatCoefficientUlt = 0x149c; // float
		constexpr auto m_fThreatCoefficientShotAt = 0x14a0; // float
		constexpr auto m_fThreatCoefficientSeenBy = 0x14a4; // float
		constexpr auto m_fThreatCoefficientDamaged = 0x14a8; // float
		constexpr auto m_fThreatCoefficientFocused = 0x14ac; // float
		constexpr auto m_fThreatCoefficientFocusTarget = 0x14b0; // float
		constexpr auto m_fThreatCoefficientBehind = 0x14b4; // float
		constexpr auto m_fThreatCoefficientInEffectiveRange = 0x14b8; // float
		constexpr auto m_fThreatDecayCoefficientShotAt = 0x14bc; // float
		constexpr auto m_fThreatDecayCoefficientSeenBy = 0x14c0; // float
		constexpr auto m_fThreatDecayCoefficientUlt = 0x14c4; // float
		constexpr auto m_DebugThreatSystemChannel = 0x14c8; // FString
		constexpr auto m_fFFBDamageFloor = 0x14d8; // float
		constexpr auto m_fFFBDamageCeiling = 0x14dc; // float
		constexpr auto m_fFFBIntensityFloor = 0x14e0; // float
		constexpr auto m_fFFBIntensityCeiling = 0x14e4; // float
		constexpr auto m_fFFBDurationFloor = 0x14e8; // float
		constexpr auto m_fFFBDurationCeiling = 0x14ec; // float
		constexpr auto m_TakeDamageWaveform = 0x14f0; // ObjectProperty
		constexpr auto m_CurrentMusicEventName = 0x14f8; // FString
		constexpr auto m_nameBuyBurnCardsTimer = 0x1508; // FName
		constexpr auto m_TimeDilationFromTo = 0x1510; // FVector2D
		constexpr auto m_TimeDilationInterpolateSeconds = 0x1518; // float
		constexpr auto m_TimeDilationUsedSeconds = 0x151c; // float
		constexpr auto m_DesaturationFromTo = 0x1520; // FVector2D
		constexpr auto m_DesaturationInterpolateSeconds = 0x1528; // float
		constexpr auto m_DesaturationUsedSeconds = 0x152c; // float
		constexpr auto m_EnergyLastFrame = 0x1530; // int32_t
		constexpr auto m_TrackingTargetLocation = 0x1534; // FVector
		constexpr auto m_fTrackingTargetMaxAimDistDiff = 0x1540; // float
		constexpr auto m_RoundEndAlert = 0x1544; // ObjectProperty
		constexpr auto m_akAnnouncerQueue = 0x154c; // TArray<FAnnouncerEvent>
		constexpr auto m_fTimeToPlayQueuedAnnouncer = 0x155c; // float
		constexpr auto m_CurrentDirectorMatinee = 0x1560; // ObjectProperty
		constexpr auto m_CaptureProgressPlayAkEvent = 0x1568; // ObjectProperty
		constexpr auto m_CaptureProgressStopAkEvent = 0x1570; // ObjectProperty
		constexpr auto m_fCachedCaptureProgress = 0x1578; // float
		constexpr auto m_PointGettingCapturedPlayAkEvent = 0x157c; // ObjectProperty
		constexpr auto m_nPointGettingCapturedPlayCount = 0x1584; // int32_t
		constexpr auto m_fShowChampionOverviewTipDelay = 0x1588; // float
		constexpr auto s_nRoundsIdle = 0x158c; // int32_t
		constexpr auto s_fIdleTimeReduction = 0x1590; // float
		constexpr auto c_nLeadingTeam = 0x1594; // int32_t
		constexpr auto c_nLeadingTeamTicketAmount = 0x1598; // int32_t
		constexpr auto m_CallbackContainer = 0x159c; // ObjectProperty
		constexpr auto m_nReticleColorOverride = 0x15a4; // int32_t
		constexpr auto m_cReticleColor = 0x15a8; // FLinearColor
		constexpr auto m_fAchievementPollRate = 0x15b8; // float
		constexpr auto m_fAchievementPollElapsed = 0x15bc; // float
		constexpr auto s_nTeamMateHealMeVisibilityTest = 0x15c0; // int32_t
		constexpr auto c_fForced3pFOV = 0x15c4; // float
		constexpr auto c_fForced3pFreeCamEaseOutDuration = 0x15c8; // float
		constexpr auto c_fForced3pFreeCamEaseOutTimer = 0x15cc; // float
		constexpr auto c_rForced3pFreeCamEaseOutStartRotation = 0x15d0; // FRotator
		constexpr auto m_vLastPOVLocation = 0x15dc; // FVector
		constexpr auto m_rLastPOVRotation = 0x15e8; // FRotator
		constexpr auto c_ChampionTickManager = 0x15f4; // ObjectProperty
		constexpr auto c_SoundEventsManager = 0x15fc; // ObjectProperty
		constexpr auto c_OccupiedMapCalloutVolumes = 0x1604; // TArray<ObjectProperty>
		constexpr auto m_sLastSelectedStoreProductSKU = 0x1614; // FString
		constexpr auto m_nLastSelectedStoreLootID = 0x1624; // int32_t
	}

	namespace n_UUIDataProvider_PlayerAchievements { // : UUIDataProvider_OnlinePlayerDataBase
		constexpr auto Achievements = 0x74; // TArray<FAchievementDetails>
	}

	namespace n_ATgPhysAnimTestActor { // : AActor
		constexpr auto LowerBoneNames = 0x280; // TArray<FName>
		constexpr auto LinearBoneSpringNames = 0x290; // TArray<FName>
		constexpr auto AngularBoneSpringNames = 0x2a0; // TArray<FName>
		constexpr auto SkeletalMeshComponent = 0x2b0; // ComponentProperty
		constexpr auto CurrentState = 0x2b8; // EPATAState
		constexpr auto bBlendToGetUp = 0x2bc; // uint32_t : 1
		constexpr auto bBlendingBack = 0x2bc; // uint32_t : 1
		constexpr auto bRampingDownMotors = 0x2bc; // uint32_t : 1
		constexpr auto bNextPokeKnocksDown = 0x2bc; // uint32_t : 1
		constexpr auto GetUpBlendStartTime = 0x2c0; // float
		constexpr auto GetUpBlendTime = 0x2c4; // float
		constexpr auto GetUpToIdleTime = 0x2c8; // float
		constexpr auto ActorOriginHeight = 0x2cc; // float
		constexpr auto PokePauseTime = 0x2d0; // float
		constexpr auto PokeBlendTime = 0x2d4; // float
		constexpr auto BlendBackStartTime = 0x2d8; // float
		constexpr auto MotorDownStartTime = 0x2dc; // float
		constexpr auto MotorDownTime = 0x2e0; // float
		constexpr auto MotorDownAnimTime = 0x2e4; // float
		constexpr auto BlendStaggerAnimTime = 0x2e8; // float
		constexpr auto StaggerSpeedAdj = 0x2ec; // float
		constexpr auto StaggerVel = 0x2f0; // float
		constexpr auto MoveDir = 0x2f4; // FVector
		constexpr auto AngularHipDriveScale = 0x300; // float
		constexpr auto StaggerMuscleScale = 0x304; // float
		constexpr auto BlendNode = 0x308; // ObjectProperty
		constexpr auto GetUpNode = 0x310; // ObjectProperty
		constexpr auto RunNode = 0x318; // ObjectProperty
		constexpr auto HipBody = 0x320; // ObjectProperty
	}

	namespace n_AFluidInfluenceActor { // : AActor
		constexpr auto FlowDirection = 0x280; // ComponentProperty
		constexpr auto Sprite = 0x288; // ComponentProperty
		constexpr auto InfluenceComponent = 0x290; // ComponentProperty
		constexpr auto bActive = 0x298; // uint32_t : 1
		constexpr auto bToggled = 0x298; // uint32_t : 1
	}

	namespace n_ARB_LineImpulseActor { // : ARigidBodyBase
		constexpr auto ImpulseStrength = 0x280; // float
		constexpr auto ImpulseRange = 0x284; // float
		constexpr auto bVelChange = 0x288; // uint32_t : 1
		constexpr auto bStopAtFirstHit = 0x288; // uint32_t : 1
		constexpr auto bCauseFracture = 0x288; // uint32_t : 1
		constexpr auto Arrow = 0x28c; // ComponentProperty
		constexpr auto ImpulseCount = 0x294; // char
	}

	namespace n_ATgDeploy_CommanderUlt { // : ATgDeploy_EffectField
		constexpr auto m_CameraShake = 0x4a0; // ObjectProperty
	}

	namespace n_UUIComponent_IconTF { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
	}

	namespace n_ATgDestructible { // : ASkeletalMeshActor
		constexpr auto r_EffectManager = 0x2e8; // ObjectProperty
		constexpr auto r_nMaxHealth = 0x2f0; // int32_t
		constexpr auto m_bDisplayHealth = 0x2f4; // uint32_t : 1
		constexpr auto m_bDestroyed = 0x2f4; // uint32_t : 1
		constexpr auto m_bInitialized = 0x2f4; // uint32_t : 1
		constexpr auto m_bFogOfWarBlocker = 0x2f4; // uint32_t : 1
		constexpr auto m_bOneDirectional = 0x2f4; // uint32_t : 1
		constexpr auto m_nPhysicalType = 0x2f8; // int32_t
		constexpr auto m_nTaskForce = 0x2fc; // char
		constexpr auto r_nHealth = 0x300; // int32_t
		constexpr auto r_nActorInstanceId = 0x304; // int32_t
	}

	namespace n_UTgControlModule_Free { // : UTgControlModule
		constexpr auto CameraYawOffset = 0x6c; // int32_t
	}

	namespace n_UTgAIBehaviorAction_MoveBase { // : UTgAIBehaviorAction
		constexpr auto bSubtractPawnRadius = 0x94; // uint32_t : 1
		constexpr auto bSubtractTargetPawnRadius = 0x94; // uint32_t : 1
		constexpr auto bLookAtTarget = 0x94; // uint32_t : 1
		constexpr auto bMustHaveLOS = 0x94; // uint32_t : 1
		constexpr auto MoveTolerance = 0x98; // float
	}

	namespace n_UUIScene_UICompetitive { // : UUIScene
		constexpr auto m_mcTiers = 0x1cc; // ObjectProperty
		constexpr auto m_TierTagList = 0x1d4; // ObjectProperty
		constexpr auto m_TierList = 0x1dc; // ObjectProperty
		constexpr auto m_TierListData = 0x1e4; // TArray<ObjectProperty>
		constexpr auto m_TierTagData = 0x1f4; // TArray<ObjectProperty>
		constexpr auto m_mcOverview = 0x204; // ObjectProperty
		constexpr auto m_mcOverviewTitle = 0x20c; // ObjectProperty [0x4]
		constexpr auto m_mcOverviewRankIcon = 0x22c; // ObjectProperty
		constexpr auto m_pOverviewProgress = 0x234; // ObjectProperty
		constexpr auto m_pButtonLeaderboard = 0x23c; // ObjectProperty
		constexpr auto m_pButtonPlay = 0x244; // ObjectProperty
		constexpr auto m_mcRewards = 0x24c; // ObjectProperty
		constexpr auto m_RewardsList = 0x254; // ObjectProperty
		constexpr auto m_RewardsPortraitList = 0x25c; // ObjectProperty
		constexpr auto m_mcRewardsTitle = 0x264; // ObjectProperty [0x4]
		constexpr auto m_pPlayAction = 0x284; // ObjectProperty
		constexpr auto m_pLeaderboardAction = 0x28c; // ObjectProperty
	}

	namespace n_UMaterialExpressionLinearInterpolate { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
		constexpr auto Alpha = 0x118; // FExpressionInput
	}

	namespace n_UGameFixedCamera { // : UGameCameraBase
		constexpr auto DefaultFOV = 0x6c; // float
	}

	namespace n_ATgDeploy_DredgeF { // : ATgDeployable
		constexpr auto r_ConnectedPortal = 0x46c; // ObjectProperty
		constexpr auto m_bPortalActive = 0x474; // uint32_t : 1
		constexpr auto s_PendingTeleports = 0x478; // TArray<FTargetToTeleport>
		constexpr auto s_RecentAllyTeleports = 0x488; // TArray<FTargetToTeleport>
	}

	namespace n_UMobileMenuBarItem { // : UObject
		constexpr auto Width = 0x60; // int32_t
		constexpr auto Height = 0x64; // int32_t
		constexpr auto VpPos = 0x68; // FVector2D
	}

	namespace n_UAnimNodeBlendBySpeed { // : UAnimNodeBlendList
		constexpr auto Speed = 0x144; // float
		constexpr auto LastChannel = 0x148; // int32_t
		constexpr auto BlendUpTime = 0x14c; // float
		constexpr auto BlendDownTime = 0x150; // float
		constexpr auto BlendDownPerc = 0x154; // float
		constexpr auto Constraints = 0x158; // TArray<float>
		constexpr auto bUseAcceleration = 0x168; // uint32_t : 1
		constexpr auto BlendUpDelay = 0x16c; // float
		constexpr auto BlendDownDelay = 0x170; // float
		constexpr auto BlendDelayRemaining = 0x174; // float
	}

	namespace n_UTgGameplayCurves { // : UObject
		constexpr auto CurveSets = 0x60; // TArray<ObjectProperty>
		constexpr auto InheritedCurves = 0x70; // TArray<ObjectProperty>
		constexpr auto bShowInheritedCurves = 0x80; // uint32_t : 1
		constexpr auto bInheritedCurvesShareEditorTab = 0x80; // uint32_t : 1
		constexpr auto CurveEdSetup = 0x84; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetTaskforce { // : USequenceAction
		constexpr auto TaskForceNumber = 0x108; // int32_t
	}

	namespace n_UUIScene_UIBattlePassLevelUp { // : UUIScene
		constexpr auto VfTable_IAcquisitionHandler = 0x1cc; // FPointer
		constexpr auto m_nBPItemsShown = 0x1d4; // int32_t
		constexpr auto m_UnlockedItems = 0x1d8; // TArray<ObjectProperty>
		constexpr auto m_grGroup = 0x1e8; // ObjectProperty
		constexpr auto m_mcIcon = 0x1f0; // ObjectProperty
		constexpr auto m_mcTF0 = 0x1f8; // ObjectProperty
		constexpr auto m_mcTF1 = 0x200; // ObjectProperty
		constexpr auto m_mcRewardTF = 0x208; // ObjectProperty
		constexpr auto m_pFreePassReward = 0x210; // ObjectProperty
		constexpr auto m_mcPurchasePrompt = 0x218; // ObjectProperty
		constexpr auto m_List = 0x220; // ObjectProperty
		constexpr auto m_pUpgradeButton = 0x228; // ObjectProperty
		constexpr auto m_pCloseButton = 0x230; // ObjectProperty
		constexpr auto m_pEquipAllButton = 0x238; // ObjectProperty
		constexpr auto m_mcCheckmark = 0x240; // ObjectProperty
	}

	namespace n_UTgAnimSequenceChain { // : UTgAnimNodeBlendList
		constexpr auto m_bLoopChain = 0x168; // uint32_t : 1
		constexpr auto m_bResetOnRelevant = 0x168; // uint32_t : 1
		constexpr auto m_bDelayBlendOutToPlayAnim = 0x168; // uint32_t : 1
		constexpr auto m_bAdvanceOnReplay = 0x168; // uint32_t : 1
		constexpr auto m_bAdvanceOnAnimEnd = 0x168; // uint32_t : 1
		constexpr auto m_bIsAllowedToBlendOut = 0x168; // uint32_t : 1
		constexpr auto m_ReplayedThisFrame = 0x168; // uint32_t : 1
	}

	namespace n_UTgSeqAct_SetCreditGainBlock { // : USequenceAction
		constexpr auto m_bBlockCreditGain = 0x108; // int32_t
	}

	namespace n_UTgDataChunk { // : UGFxObject
		constexpr auto m_DataHandler = 0x104; // ObjectProperty
		constexpr auto m_ParentChunk = 0x10c; // ObjectProperty
		constexpr auto m_DataList = 0x114; // TArray<FDataField>
		constexpr auto m_ChildChunks = 0x124; // TArray<ObjectProperty>
		constexpr auto m_bIsDirty = 0x134; // uint32_t : 1
		constexpr auto m_bIsSubscribed = 0x134; // uint32_t : 1
		constexpr auto m_bClearOnMapChange = 0x134; // uint32_t : 1
		constexpr auto __usc_Subscribe_Delegate__Delegate = 0x138; // DelegateProperty
		constexpr auto __usc_Unsubscribe_Delegate__Delegate = 0x148; // DelegateProperty
	}

	namespace n_UPBRuleNodeExtractTopBottom { // : UPBRuleNodeBase
		constexpr auto ExtractTopZ = 0x70; // float
		constexpr auto ExtractNotTopZ = 0x74; // float
		constexpr auto ExtractBottomZ = 0x78; // float
		constexpr auto ExtractNotBottomZ = 0x7c; // float
	}

	namespace n_UTgAnimBlendByTeleportBeacon { // : UTgAnimNodeBlendList
		constexpr auto m_bDeployed = 0x168; // uint32_t : 1
	}

	namespace n_USeqAct_AkPostEvent { // : USeqAct_Latent
		constexpr auto Signal = 0x120; // int32_t
		constexpr auto Event = 0x124; // ObjectProperty
	}

	namespace n_UTgGameDC_Player { // : UTgGameDC_MapEntity
		constexpr auto m_nStatCount = 0x15c; // int32_t
		constexpr auto m_ReviveTimer = 0x160; // ObjectProperty
		constexpr auto m_UltimateTimer = 0x168; // ObjectProperty
		constexpr auto m_PrevUltTimer = 0x170; // float
		constexpr auto m_StatsArray = 0x174; // ObjectProperty
		constexpr auto m_ItemStoreArray = 0x17c; // ObjectProperty
		constexpr auto m_ActiveItemArray = 0x184; // ObjectProperty
		constexpr auto m_ConsumableArray = 0x18c; // ObjectProperty
		constexpr auto __USC_ForceStatsUpdate_Delegate__Delegate = 0x194; // DelegateProperty
	}

	namespace n_UUIComponent_ChampionRankRow { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcType = 0x12c; // ObjectProperty
		constexpr auto m_mcWins = 0x134; // ObjectProperty
		constexpr auto m_mcLosses = 0x13c; // ObjectProperty
		constexpr auto m_mcRank = 0x144; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x14c; // ObjectProperty
		constexpr auto m_mcMasteryTitle = 0x154; // ObjectProperty
		constexpr auto m_MasteryProgress = 0x15c; // ObjectProperty
		constexpr auto m_pDetailsButton = 0x164; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByBlink { // : UAnimNodeBlendPerBone
		constexpr auto m_TgPawn = 0x158; // ObjectProperty
		constexpr auto m_SkelMesh = 0x160; // ComponentProperty
		constexpr auto m_fBlinkAnimRate = 0x168; // float
		constexpr auto m_vTimeBetweenBlinks = 0x16c; // FVector2D
		constexpr auto m_fTimeTillNextBlink = 0x174; // float
		constexpr auto m_DisableBlinkingAnimNodeNameList = 0x178; // TArray<FName>
		constexpr auto m_CachedNodeList = 0x188; // TArray<ObjectProperty>
		constexpr auto m_bInitializedCachedNodeList = 0x198; // uint32_t : 1
	}

	namespace n_UTgAnimNodeBlendByGameState { // : UTgAnimNodeBlendList
		constexpr auto PawnOwner = 0x168; // ObjectProperty
	}

	namespace n_UTexture { // : USurface
		constexpr auto SRGB = 0x60; // uint32_t : 1
		constexpr auto RGBE = 0x60; // uint32_t : 1
		constexpr auto bIsSourceArtUncompressed = 0x60; // uint32_t : 1
		constexpr auto CompressionNoAlpha = 0x60; // uint32_t : 1
		constexpr auto CompressionNone = 0x60; // uint32_t : 1
		constexpr auto CompressionNoMipmaps = 0x60; // uint32_t : 1
		constexpr auto CompressionFullDynamicRange = 0x60; // uint32_t : 1
		constexpr auto DeferCompression = 0x60; // uint32_t : 1
		constexpr auto NeverStream = 0x60; // uint32_t : 1
		constexpr auto bDitherMipMapAlpha = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderR = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderG = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderB = 0x60; // uint32_t : 1
		constexpr auto bPreserveBorderA = 0x60; // uint32_t : 1
		constexpr auto bNoTiling = 0x60; // uint32_t : 1
		constexpr auto bForcePVRTC4 = 0x60; // uint32_t : 1
		constexpr auto bAsyncResourceReleaseHasBeenStarted = 0x60; // uint32_t : 1
		constexpr auto bUseCinematicMipLevels = 0x60; // uint32_t : 1
		constexpr auto UnpackMin = 0x64; // float [0x4]
		constexpr auto UnpackMax = 0x74; // float [0x4]
		constexpr auto SourceArt = 0x84; // FUntypedBulkData_Mirror
		constexpr auto CompressionSettings = 0xc4; // TextureCompressionSettings
		constexpr auto Filter = 0xc5; // TextureFilter
		constexpr auto LODGroup = 0xc6; // TextureGroup
		constexpr auto CachedLODGroup = 0xc7; // TextureGroup
		constexpr auto MipGenSettings = 0xc8; // TextureMipGenSettings
		constexpr auto LODBias = 0xcc; // int32_t
		constexpr auto CachedCombinedLODBias = 0xd0; // int32_t
		constexpr auto NumCinematicMipLevels = 0xd4; // int32_t
		constexpr auto Resource = 0xd8; // FPointer
		constexpr auto AdjustBrightness = 0xe0; // float
		constexpr auto AdjustBrightnessCurve = 0xe4; // float
		constexpr auto AdjustVibrance = 0xe8; // float
		constexpr auto AdjustSaturation = 0xec; // float
		constexpr auto AdjustRGBCurve = 0xf0; // float
		constexpr auto AdjustHue = 0xf4; // float
		constexpr auto InternalFormatLODBias = 0xf8; // int32_t
		constexpr auto RequiredCreationFlags = 0xfc; // int32_t
	}

	namespace n_UParticleModuleLocationEmitter { // : UParticleModuleLocationBase
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto SelectionMethod = 0x70; // ELocationEmitterSelectionMethod
		constexpr auto InheritSourceVelocity = 0x74; // uint32_t : 1
		constexpr auto bInheritSourceRotation = 0x74; // uint32_t : 1
		constexpr auto InheritSourceVelocityScale = 0x78; // float
		constexpr auto InheritSourceRotationScale = 0x7c; // float
	}

	namespace n_UTgSkelControlSingleBone_PistonBarrel { // : UTgSkelControlSingleBone
		constexpr auto m_nDepressDistance = 0x124; // float
		constexpr auto m_nReturnSpeed = 0x128; // float
	}

	namespace n_UParticleModuleMeshRotationRate_Seeded { // : UParticleModuleMeshRotationRate
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_ATgDevice_Billow { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UTgDeviceForm_Transporter { // : UTgDeviceForm
		constexpr auto c_TargetingModeMeshIndicator2 = 0x28c; // ObjectProperty
		constexpr auto c_TargetingModeFx2 = 0x294; // ObjectProperty
		constexpr auto c_TargetingModeFx2Location = 0x29c; // FVector
		constexpr auto c_nTargetingModeFx2Id = 0x2a8; // int32_t
	}

	namespace n_UGameAICommand { // : UAICommandBase
		constexpr auto ChildCommand = 0x60; // ObjectProperty
		constexpr auto ChildStatus = 0x68; // FName
		constexpr auto GameAIOwner = 0x70; // ObjectProperty
		constexpr auto Status = 0x78; // FName
		constexpr auto bAllowNewSameClassInstance = 0x80; // uint32_t : 1
		constexpr auto bReplaceActiveSameClassInstance = 0x80; // uint32_t : 1
		constexpr auto bAborted = 0x80; // uint32_t : 1
		constexpr auto bIgnoreNotifies = 0x80; // uint32_t : 1
		constexpr auto bIgnoreStepAside = 0x80; // uint32_t : 1
		constexpr auto bPendingPop = 0x80; // uint32_t : 1
	}

	namespace n_AGameCrowdBehaviorPoint { // : AGameCrowdInteractionPoint
		constexpr auto RadiusOfBehaviorEvent = 0x28c; // float
		constexpr auto DurationOfBehaviorEvent = 0x290; // float
		constexpr auto EventType = 0x294; // ECrowdBehaviorEvent
		constexpr auto bRequireLOS = 0x298; // uint32_t : 1
		constexpr auto Initiator = 0x29c; // ObjectProperty
	}

	namespace n_UAnimSet { // : UObject
		constexpr auto bAnimRotationOnly = 0x60; // uint32_t : 1
		constexpr auto m_bUsesHandIK = 0x60; // uint32_t : 1
		constexpr auto m_bCompressOutFacialBones = 0x60; // uint32_t : 1
		constexpr auto m_bHasStrippedBones = 0x60; // uint32_t : 1
		constexpr auto TrackBoneNames = 0x64; // TArray<FName>
		constexpr auto Sequences = 0x74; // TArray<ObjectProperty>
		constexpr auto SequenceCache = 0x84; // TMap<None, None>
		constexpr auto LinkupCache = 0xcc; // TArray<FAnimSetMeshLinkup>
		constexpr auto BoneUseAnimTranslation = 0xdc; // TArray<char>
		constexpr auto ForceUseMeshTranslation = 0xec; // TArray<char>
		constexpr auto UseTranslationBoneNames = 0xfc; // TArray<FName>
		constexpr auto ForceMeshTranslationBoneNames = 0x10c; // TArray<FName>
		constexpr auto PreviewSkelMeshName = 0x11c; // FName
		constexpr auto BestRatioSkelMeshName = 0x124; // FName
		constexpr auto m_FacialFilteredBones = 0x12c; // TArray<FName>
	}

	namespace n_ATgDevice_FaeFlight { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UTgDeviceFire_TheLaw { // : UTgDeviceFire
		constexpr auto m_pCachedLexWeaponMeshActor = 0x268; // ObjectProperty
	}

	namespace n_ATgPawn_Rider { // : ATgPawn_Character
		constexpr auto m_CachedRiderUlt = 0x3164; // ObjectProperty
		constexpr auto m_CachedRiderMovement = 0x316c; // ObjectProperty
		constexpr auto m_fLastSelfShieldFxTimestamp = 0x3174; // float
		constexpr auto m_bUseCameraOffsetOverride = 0x3178; // uint32_t : 1
		constexpr auto m_vCameraOffsetOverride = 0x317c; // FVector
		constexpr auto m_fVelocityLag = 0x3188; // float
		constexpr auto m_fPrevSpeed = 0x318c; // float
		constexpr auto m_fVelocityLagRecoverySpeed = 0x3190; // float
		constexpr auto m_fVelocityLagStrength = 0x3194; // float
		constexpr auto m_fSmoothedVelocityLag = 0x3198; // float
		constexpr auto m_fSmoothedVelocityLagSpeed = 0x319c; // float
		constexpr auto m_fDeathFadeMaterialEndTimestamp = 0x31a0; // float
		constexpr auto m_fDeathFadeMaterialTime = 0x31a4; // float
		constexpr auto m_vLastAccelDir = 0x31a8; // FVector
		constexpr auto m_fMaxMovementDegPerSec = 0x31b4; // float
		constexpr auto m_fGreaterGoodLifesteal = 0x31b8; // float
		constexpr auto r_RiderMarkedTargets = 0x31bc; // FRiderMarkedTargetInfo [0x5]
		constexpr auto r_RiderLastMaxMarkedTarget = 0x31e4; // FRiderLastMaxMarkedTarget
	}

	namespace n_ATgDevice_AtlasF { // : ATgDevice
		constexpr auto VfTable_ITgCallbackInterface = 0xa08; // FPointer
		constexpr auto m_CachedAtlas = 0xa10; // ObjectProperty
		constexpr auto m_CallbackContainer = 0xa18; // ObjectProperty
	}

	namespace n_UUIComponent_BattlePassChallenge { // : UUIComponent_Display
		constexpr auto m_bGated = 0x124; // uint32_t : 1
		constexpr auto m_bCompleted = 0x124; // uint32_t : 1
		constexpr auto m_mcExpanded = 0x128; // ObjectProperty
		constexpr auto m_mcExpandedIcon = 0x130; // ObjectProperty
		constexpr auto m_mcExpandedTitle = 0x138; // ObjectProperty
		constexpr auto m_mcExpandedRewardLabel = 0x140; // ObjectProperty
		constexpr auto m_mcExpandedRewardTF = 0x148; // ObjectProperty
		constexpr auto m_mcTierTF = 0x150; // ObjectProperty
		constexpr auto m_pGoalList = 0x158; // ObjectProperty
		constexpr auto m_mcCollapsed = 0x160; // ObjectProperty
		constexpr auto m_mcCollapsedIcon = 0x168; // ObjectProperty
		constexpr auto m_mcCollapsedTitle = 0x170; // ObjectProperty
		constexpr auto m_mcCollapsedRewardLabel = 0x178; // ObjectProperty
		constexpr auto m_mcCollapsedRewardTF = 0x180; // ObjectProperty
		constexpr auto m_mcLockedTF = 0x188; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_LoogieExplodedHit { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bNeedToApplyCooldown = 0xcc; // uint32_t : 1
	}

	namespace n_UMaterialExpressionTerrainLayerCoords { // : UMaterialExpression
		constexpr auto MappingType = 0xb0; // ETerrainCoordMappingType
		constexpr auto MappingScale = 0xb4; // float
		constexpr auto MappingRotation = 0xb8; // float
		constexpr auto MappingPanU = 0xbc; // float
		constexpr auto MappingPanV = 0xc0; // float
	}

	namespace n_UInterpFilter { // : UObject
		constexpr auto Caption = 0x60; // FString
	}

	namespace n_ATgMidnightFogVolumeDensityInfo { // : AFogVolumeSphericalDensityInfo
		constexpr auto m_bFogOn = 0x294; // uint32_t : 1
		constexpr auto m_bFogUpdateNeeded = 0x294; // uint32_t : 1
		constexpr auto m_bIsFadingOut = 0x294; // uint32_t : 1
		constexpr auto m_fCurrentStartDistance = 0x298; // float
		constexpr auto m_fFadeOutDuration = 0x29c; // float
		constexpr auto m_fFadeOutTimer = 0x2a0; // float
		constexpr auto m_fTargetMaxDensity = 0x2a4; // float
		constexpr auto m_fDestroyTimer = 0x2a8; // float
		constexpr auto SphericalDensityComponent = 0x2ac; // ComponentProperty
	}

	namespace n_ATgDevice_CommanderScope { // : ATgDevice_ToggleADS
		constexpr auto m_CachedInhandDev = 0xa20; // ObjectProperty
	}

	namespace n_UTgGamePhase_Branch { // : UTgGamePhase
		constexpr auto m_bConditionMet = 0xb8; // uint32_t : 1
	}

	namespace n_UParticleModuleSizeScaleOverDensity { // : UParticleModuleSizeBase
		constexpr auto SizeScaleOverDensity = 0x68; // FRawDistributionVector
	}

	namespace n_UUIDataChampions { // : UUIDataObject
		constexpr auto m_pActiveChampion = 0x74; // ObjectProperty
		constexpr auto m_Champions = 0x7c; // TArray<ObjectProperty>
		constexpr auto m_InstallingChampions = 0x8c; // TArray<ObjectProperty>
		constexpr auto m_PvEChampions = 0x9c; // TArray<ObjectProperty>
		constexpr auto m_Collections = 0xac; // TArray<ObjectProperty>
		constexpr auto m_PerChampionCollections = 0xbc; // TMap<None, None>
		constexpr auto m_ChampionIdToData = 0x104; // TMap<None, None>
		constexpr auto m_BotIdToVoicePackId = 0x14c; // TMap<None, None>
		constexpr auto m_dwStoreVendorsRequestId = 0x194; // Fdword
		constexpr auto m_dwRotationVendorRequestId = 0x198; // Fdword
		constexpr auto m_fInstallCheckTimer = 0x19c; // float
		constexpr auto m_fInstallCheckInterval = 0x1a0; // float
		constexpr auto m_bRotationVendorFullyLoadedCalled = 0x1a4; // uint32_t : 1
		constexpr auto m_bStoreChampionsCalled = 0x1a4; // uint32_t : 1
	}

	namespace n_UUIComponent_EndTimesEventRewards { // : UUIComponent_Display
		constexpr auto m_mcUnlocksAtTF = 0x124; // ObjectProperty
		constexpr auto m_pRewards = 0x12c; // ObjectProperty
		constexpr auto m_pOwnedCurrency = 0x134; // ObjectProperty
		constexpr auto m_pUnlocksAtCurrency = 0x13c; // ObjectProperty
		constexpr auto m_pPreviewStack = 0x144; // ObjectProperty
		constexpr auto m_grInput = 0x14c; // ObjectProperty
	}

	namespace n_UGameplayEventsWriterBase { // : UGameplayEvents
		constexpr auto Game = 0x1c0; // ObjectProperty
	}

	namespace n_UMaterialExpressionSceneTexture { // : UMaterialExpression
		constexpr auto Coordinates = 0xb0; // FExpressionInput
		constexpr auto SceneTextureType = 0xe4; // ESceneTextureType
		constexpr auto ScreenAlign = 0xe8; // uint32_t : 1
	}

	namespace n_UTgDeviceFire_DeployOnLocation { // : UTgDeviceFire
		constexpr auto m_TargetLocation = 0x268; // FVector
		constexpr auto m_bSetRotation = 0x274; // uint32_t : 1
		constexpr auto m_TargetRotation = 0x278; // FRotator
	}

	namespace n_USeqAct_GetLocationAndRotation { // : USequenceAction
		constexpr auto Location = 0x108; // FVector
		constexpr auto RotationVector = 0x114; // FVector
		constexpr auto Rotation = 0x120; // FVector
		constexpr auto SocketOrBoneName = 0x12c; // FName
	}

	namespace n_USeqAct_Teleport { // : USequenceAction
		constexpr auto bUpdateRotation = 0x108; // uint32_t : 1
		constexpr auto bCheckOverlap = 0x108; // uint32_t : 1
		constexpr auto bResetVelocity = 0x108; // uint32_t : 1
		constexpr auto TeleportDistance = 0x10c; // float
		constexpr auto TeleportVolumes = 0x110; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIHudRecap { // : UUIScene
		constexpr auto m_bHaveDeathData = 0x1cc; // uint32_t : 1
		constexpr auto m_pPlayerList = 0x1d0; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_OwlInhand { // : ATgWeaponMeshActor
		constexpr auto m_CachedOwl = 0x450; // ObjectProperty
	}

	namespace n_UTgAnimBlendByPaladinsCharacter { // : UTgAnimNodeBlendList
		constexpr auto m_WeaponMeshActor = 0x168; // ObjectProperty
		constexpr auto m_SubNodeEquipSlot = 0x170; // TG_EQUIP_POINT
		constexpr auto m_ChildParams = 0x174; // FChildAnimParameters [0x11]
		constexpr auto m_nChildAnimStack = 0x52c; // TArray<EPalCharParams>
		constexpr auto m_nCustomRetrieveIndex = 0x53c; // int32_t
		constexpr auto m_bBlendToIdleOnInterruptInspect = 0x540; // uint32_t : 1
	}

	namespace n_UAnimNotify_ForceField { // : UAnimNotify
		constexpr auto ForceFieldComponent = 0x68; // ComponentProperty
		constexpr auto bAttach = 0x70; // uint32_t : 1
		constexpr auto SocketName = 0x74; // FName
		constexpr auto BoneName = 0x7c; // FName
	}

	namespace n_UCodecMovieFallback { // : UCodecMovie
		constexpr auto CurrentTime = 0x64; // float
	}

	namespace n_USeqVar_Object { // : USequenceVariable
		constexpr auto ObjValue = 0xa0; // ObjectProperty
		constexpr auto ActorLocation = 0xa8; // FVector
		constexpr auto SupportedClasses = 0xb4; // TArray<UObject*>
	}

	namespace n_UTgAnimBlendByPosture { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_TgPostureMesh = 0x170; // ObjectProperty
		constexpr auto m_LastPosture = 0x178; // TG_POSTURE
		constexpr auto m_CurrentPosture = 0x179; // TG_POSTURE
		constexpr auto m_TransitionFromPosture = 0x17a; // TG_POSTURE
		constexpr auto m_bEnableTransitionAnims = 0x17c; // uint32_t : 1
		constexpr auto m_bCheckLowerPriorityPostures = 0x17c; // uint32_t : 1
		constexpr auto m_CurrentPostureChildIndex = 0x180; // int32_t
		constexpr auto m_PostureProfiles = 0x184; // TArray<Fm_PostureProfile>
		constexpr auto m_TransitionAnimNodeSeq = 0x194; // ObjectProperty
	}

	namespace n_UUIScene_UIStoreDetail { // : UUIScene
		constexpr auto m_nInventoryUpdateCallbackHandle = 0x1cc; // int32_t
		constexpr auto m_mcTitleTF = 0x1d0; // ObjectProperty
		constexpr auto m_mcDescTF = 0x1d8; // ObjectProperty
		constexpr auto m_mcDLCTexture = 0x1e0; // ObjectProperty
		constexpr auto m_pItemPreview = 0x1e8; // ObjectProperty
		constexpr auto m_pItemList = 0x1f0; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x1f8; // ObjectProperty
		constexpr auto m_pBack = 0x200; // ObjectProperty
		constexpr auto m_pTextBox = 0x208; // ObjectProperty
		constexpr auto m_pRotator = 0x210; // ObjectProperty
	}

	namespace n_UUIComponent_Talent { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcUnlockText = 0x134; // ObjectProperty
		constexpr auto m_mcFrame = 0x13c; // ObjectProperty
		constexpr auto m_mcIcon = 0x144; // ObjectProperty
		constexpr auto m_mcIconGlow = 0x14c; // ObjectProperty
		constexpr auto m_mcIconTexture = 0x154; // ObjectProperty
		constexpr auto m_mcIconLock = 0x15c; // ObjectProperty
		constexpr auto m_mcCooldown = 0x164; // ObjectProperty
		constexpr auto m_mcCooldownTF = 0x16c; // ObjectProperty
	}

	namespace n_UTgAchievement_DeviceHitCombo { // : UTgAchievement
		constexpr auto m_Entries = 0x94; // TArray<FDeviceHitComboEntry>
	}

	namespace n_UAnimNotify { // : UObject
		constexpr auto ShouldDeferIssue = 0x60; // uint32_t : 1
		constexpr auto DetailMode = 0x64; // EDetailMode
	}

	namespace n_UTgAIBehaviorCondition_IsMetaGameState { // : UTgAIBehaviorCondition
		constexpr auto TestGameState = 0x98; // EMetaGameState
	}

	namespace n_ATgSkeletalMeshActor_DestructibleTowerChunk { // : ATgSkeletalMeshActorSpawnable
		constexpr auto TgSkeletalMeshComp = 0x32c; // ComponentProperty
	}

	namespace n_UUIData_SearchListEntry { // : UUIData
		constexpr auto m_nPlayerRank = 0x64; // int32_t
		constexpr auto m_sPlayerName = 0x68; // FString
		constexpr auto m_dwPlayerId = 0x78; // Fdword
		constexpr auto m_dwAvatarId = 0x7c; // Fdword
		constexpr auto m_PlayerNetId = 0x80; // FUniqueNetId
	}

	namespace n_UTgDeviceForm_AtlasF { // : UTgDeviceForm
		constexpr auto m_AnimNodeAtlasF1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_AnimNodeAtlasF3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_ItemTooltip { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcDescription = 0x134; // ObjectProperty
		constexpr auto m_nLastSetItemID = 0x13c; // int32_t
	}

	namespace n_ATgBotFactory_Minions { // : ATgBotFactory
		constexpr auto m_eFactoryType = 0x370; // MinionFactoryType
		constexpr auto m_OverrideShouldSpawnSuperMinions = 0x374; // uint32_t : 1
		constexpr auto m_nWaveNumber = 0x378; // int32_t
		constexpr auto m_nLastBonusWave = 0x37c; // int32_t
		constexpr auto m_nLanePushersInQueue = 0x380; // int32_t
		constexpr auto m_fLastBonusActivationTime = 0x384; // float
		constexpr auto m_fSuperMinionEndTime = 0x388; // float
	}

	namespace n_UTgEffectModifyProperty_Inhand { // : UTgEffectModifyProperty
		constexpr auto m_LastRetrievedOverrides = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleLocationWorldOffset_Seeded { // : UParticleModuleLocationWorldOffset
		constexpr auto RandomSeedInfo = 0x94; // FParticleRandomSeedInfo
	}

	namespace n_UUIComponent_Button_LoadoutDeathStamp { // : UUIComponent_Display
		constexpr auto m_mcCardIcon = 0x124; // ObjectProperty
		constexpr auto m_mcFrame = 0x12c; // ObjectProperty
		constexpr auto m_mcRarity = 0x134; // ObjectProperty
		constexpr auto m_mcName = 0x13c; // ObjectProperty
	}

	namespace n_UParticleModuleBeamModifier { // : UParticleModuleBeamBase
		constexpr auto ModifierType = 0x68; // BeamModifierType
		constexpr auto PositionOptions = 0x6c; // FBeamModifierOptions
		constexpr auto Position = 0x70; // FRawDistributionVector
		constexpr auto TangentOptions = 0x94; // FBeamModifierOptions
		constexpr auto Tangent = 0x98; // FRawDistributionVector
		constexpr auto bAbsoluteTangent = 0xbc; // uint32_t : 1
		constexpr auto StrengthOptions = 0xc0; // FBeamModifierOptions
		constexpr auto Strength = 0xc4; // FRawDistributionFloat
	}

	namespace n_UParticleModuleTypeDataMeshPhysX { // : UParticleModuleTypeDataMesh
		constexpr auto PhysXParSys = 0x84; // ObjectProperty
		constexpr auto PhysXRotationMethod = 0x8c; // EPhysXMeshRotationMethod
		constexpr auto FluidRotationCoefficient = 0x90; // float
		constexpr auto VerticalLod = 0x94; // FPhysXEmitterVerticalLodProperties
		constexpr auto ZOffset = 0xa4; // float
	}

	namespace n_AStaticMeshActorBasedOnExtremeContent { // : AActor
		constexpr auto StaticMeshComponent = 0x280; // ComponentProperty
		constexpr auto ExtremeContent = 0x288; // TArray<FSMMaterialSetterDatum>
		constexpr auto NonExtremeContent = 0x298; // TArray<FSMMaterialSetterDatum>
	}

	namespace n_AGameCrowdAgent { // : ACrowdAgentBase
		constexpr auto VfTable_IInterface_RVO = 0x288; // FPointer
		constexpr auto MyGroup = 0x290; // ObjectProperty
		constexpr auto PreferredVelocity = 0x298; // FVector
		constexpr auto PendingVelocity = 0x2a4; // FVector
		constexpr auto CurrentDestination = 0x2b0; // ObjectProperty
		constexpr auto BehaviorDestination = 0x2b8; // ObjectProperty
		constexpr auto PreviousDestination = 0x2c0; // ObjectProperty
		constexpr auto InterpZTranslation = 0x2c8; // float
		constexpr auto Health = 0x2cc; // int32_t
		constexpr auto DeadBodyDuration = 0x2d0; // float
		constexpr auto LightEnvironment = 0x2d4; // ComponentProperty
		constexpr auto ConformTraceFrameCount = 0x2dc; // int32_t
		constexpr auto NearbyDynamics = 0x2e0; // TArray<FNearbyDynamicItem>
		constexpr auto bUniformScale = 0x2f0; // uint32_t : 1
		constexpr auto bCheckForObstacles = 0x2f0; // uint32_t : 1
		constexpr auto bUseNavMeshPathing = 0x2f0; // uint32_t : 1
		constexpr auto bWantsSeePlayerNotification = 0x2f0; // uint32_t : 1
		constexpr auto bAllowPitching = 0x2f0; // uint32_t : 1
		constexpr auto bHitObstacle = 0x2f0; // uint32_t : 1
		constexpr auto bBadHitNormal = 0x2f0; // uint32_t : 1
		constexpr auto bSimulateThisTick = 0x2f0; // uint32_t : 1
		constexpr auto bPotentialEncounter = 0x2f0; // uint32_t : 1
		constexpr auto bIsPanicked = 0x2f0; // uint32_t : 1
		constexpr auto bWantsGroupIdle = 0x2f0; // uint32_t : 1
		constexpr auto bPreferVisibleDestination = 0x2f0; // uint32_t : 1
		constexpr auto bPreferVisibleDestinationOnSpawn = 0x2f0; // uint32_t : 1
		constexpr auto bHasNotifiedSpawner = 0x2f0; // uint32_t : 1
		constexpr auto bIsInSpawnPool = 0x2f0; // uint32_t : 1
		constexpr auto bPaused = 0x2f0; // uint32_t : 1
		constexpr auto ConformType = 0x2f4; // EConformType
		constexpr auto ConformTraceDist = 0x2f8; // float
		constexpr auto ConformTraceInterval = 0x2fc; // int32_t
		constexpr auto CurrentConformTraceInterval = 0x300; // int32_t
		constexpr auto LastGroundZ = 0x304; // float
		constexpr auto AwareRadius = 0x308; // float
		constexpr auto AvoidOtherRadius = 0x30c; // float
		constexpr auto AvoidOtherSampleList = 0x310; // TArray<FAvoidOtherSampleItem>
		constexpr auto PENALTY_COEFF_ANGLETOGOAL = 0x320; // float
		constexpr auto PENALTY_COEFF_ANGLETOVEL = 0x324; // float
		constexpr auto PENALTY_COEFF_MAG = 0x328; // float
		constexpr auto MIN_PENALTY_THRESHOLD = 0x32c; // float
		constexpr auto LastProgressTime = 0x330; // float
		constexpr auto LastFallbackActiveTime = 0x334; // float
		constexpr auto MaxPathLaneValue = 0x338; // float
		constexpr auto CurrentPathLaneValue = 0x33c; // float
		constexpr auto ExtraPathCost = 0x340; // int32_t
		constexpr auto RotateToTargetSpeed = 0x344; // float
		constexpr auto MaxYawRate = 0x348; // float
		constexpr auto MeshMinScale3D = 0x34c; // FVector
		constexpr auto MeshMaxScale3D = 0x358; // FVector
		constexpr auto EyeZOffset = 0x364; // float
		constexpr auto ProximityLODDist = 0x368; // float
		constexpr auto VisibleProximityLODDist = 0x36c; // float
		constexpr auto LastKnownGoodPosition = 0x370; // FVector
		constexpr auto GroundOffset = 0x37c; // float
		constexpr auto IntermediatePoint = 0x380; // FVector
		constexpr auto SearchExtent = 0x38c; // FVector
		constexpr auto NavigationHandleClass = 0x398; // UNavigationHandle*
		constexpr auto NavigationHandle = 0x3a0; // ObjectProperty
		constexpr auto ObstacleCheckCount = 0x3a8; // int32_t
		constexpr auto WalkableFloorZ = 0x3ac; // float
		constexpr auto LastPathingAttempt = 0x3b0; // float
		constexpr auto LastUpdateTime = 0x3b4; // float
		constexpr auto NotVisibleLifeSpan = 0x3b8; // float
		constexpr auto MyArchetype = 0x3bc; // ObjectProperty
		constexpr auto MaxWalkingSpeed = 0x3c4; // float
		constexpr auto MaxRunningSpeed = 0x3c8; // float
		constexpr auto MaxSpeed = 0x3cc; // float
		constexpr auto RecentInteractions = 0x3d0; // TArray<FRecentInteraction>
		constexpr auto BeaconMaxDist = 0x3e0; // float
		constexpr auto BeaconOffset = 0x3e4; // FVector
		constexpr auto BeaconTexture = 0x3f0; // ObjectProperty
		constexpr auto BeaconColor = 0x3f8; // FLinearColor
		constexpr auto AmbientSoundCue = 0x408; // ObjectProperty
		constexpr auto AmbientSoundComponent = 0x410; // ComponentProperty
		constexpr auto CurrentBehavior = 0x418; // ObjectProperty
		constexpr auto CurrentBehaviorActivationTime = 0x420; // float
		constexpr auto EncounterAgentBehaviors = 0x424; // TArray<FBehaviorEntry>
		constexpr auto SeePlayerBehaviors = 0x434; // TArray<FBehaviorEntry>
		constexpr auto MaxSeePlayerDistSq = 0x444; // float
		constexpr auto SeePlayerInterval = 0x448; // float
		constexpr auto SpawnBehaviors = 0x44c; // TArray<FBehaviorEntry>
		constexpr auto UneasyBehaviors = 0x45c; // TArray<FBehaviorEntry>
		constexpr auto AlertBehaviors = 0x46c; // TArray<FBehaviorEntry>
		constexpr auto PanicBehaviors = 0x47c; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviors = 0x48c; // TArray<FBehaviorEntry>
		constexpr auto TakeDamageBehaviors = 0x49c; // TArray<FBehaviorEntry>
		constexpr auto RandomBehaviorInterval = 0x4ac; // float
		constexpr auto ForceUpdateTime = 0x4b0; // float
		constexpr auto ReachThreshold = 0x4b4; // float
		constexpr auto GroupWaitingBehaviors = 0x4b8; // TArray<FBehaviorEntry>
		constexpr auto DesiredGroupRadius = 0x4c8; // float
		constexpr auto DesiredGroupRadiusSq = 0x4cc; // float
		constexpr auto MaxLOSLifeDistanceSq = 0x4d0; // float
		constexpr auto MySpawner = 0x4d4; // TScriptInterface<Class>
		constexpr auto SpawnOffset = 0x4e4; // FVector
		constexpr auto InitialLastRenderTime = 0x4f0; // float
		constexpr auto DebugAgentColor = 0x4f4; // FColor
		constexpr auto DebugSpawnDest = 0x4f8; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_MoveToCapturePoint { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto Arbitrator = 0x9c; // ESelectionArbitrator
		constexpr auto bTeleport = 0xa0; // uint32_t : 1
	}

	namespace n_ATgEmitter_CameraEffect_LowHealth { // : ATgEmitter_CameraEffect
		constexpr auto m_fFade = 0x2c0; // float
	}

	namespace n_UTgGamePhase_EndWhenScoreReached { // : UTgGamePhase
		constexpr auto m_nScore = 0xb8; // int32_t
	}

	namespace n_UUIComponent_GemPack { // : UUIComponent_Display
		constexpr auto m_pPrice = 0x124; // ObjectProperty
		constexpr auto m_pCrystalAmount = 0x12c; // ObjectProperty
		constexpr auto m_pButtonPrice = 0x134; // ObjectProperty
		constexpr auto m_pBuyNowButton = 0x13c; // ObjectProperty
		constexpr auto m_nPackId = 0x144; // int32_t
		constexpr auto m_fSeasonPassCrystalMultiplier = 0x148; // float
	}

	namespace n_ATgWeaponMeshActor_OracleInhand { // : ATgWeaponMeshActor
		constexpr auto m_LastRestoreSoulTarget = 0x450; // ObjectProperty
	}

	namespace n_UUIComponent_ChampionSelectChampion { // : UUIComponent_Display
		constexpr auto m_mcLoading = 0x124; // ObjectProperty
		constexpr auto m_mcNameTF = 0x12c; // ObjectProperty
		constexpr auto m_mcMasteryTF = 0x134; // ObjectProperty
		constexpr auto m_mcRotation = 0x13c; // ObjectProperty
		constexpr auto m_mcLock = 0x144; // ObjectProperty
		constexpr auto m_mcNew = 0x14c; // ObjectProperty
		constexpr auto m_mcRented = 0x154; // ObjectProperty
		constexpr auto m_mcRoleTF = 0x15c; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x164; // ObjectProperty
		constexpr auto m_mcIcon = 0x16c; // ObjectProperty
		constexpr auto m_mcLoadoutCTA = 0x174; // ObjectProperty
		constexpr auto m_pCTA = 0x17c; // ObjectProperty
		constexpr auto m_pProgress = 0x184; // ObjectProperty
	}

	namespace n_UUIComponent_ItemRadialMenu { // : UUIComponent_Display
		constexpr auto m_pIcon = 0x124; // ObjectProperty
		constexpr auto m_pText = 0x12c; // ObjectProperty
		constexpr auto m_bLocked = 0x134; // uint32_t : 1
	}

	namespace n_UMaterialExpressionScreenPosition { // : UMaterialExpression
		constexpr auto ScreenAlign = 0xb0; // uint32_t : 1
	}

	namespace n_UUIDataProvider_OnlinePlayerDataBase { // : UUIDataProvider
		constexpr auto PlayerControllerId = 0x70; // int32_t
	}

	namespace n_UPBRuleNodeRandom { // : UPBRuleNodeBase
		constexpr auto NumOutputs = 0x70; // int32_t
		constexpr auto MinNumExecuted = 0x74; // int32_t
		constexpr auto MaxNumExecuted = 0x78; // int32_t
	}

	namespace n_UUIComponent_Button_LoadoutCategory { // : UUIComponent_Display
		constexpr auto m_nCategory = 0x124; // int32_t
		constexpr auto m_mcTitle = 0x128; // ObjectProperty
		constexpr auto m_mcRarity = 0x130; // ObjectProperty
		constexpr auto m_pItemPreview = 0x138; // ObjectProperty
	}

	namespace n_ATgDevice_YagoPoisonMod { // : ATgDevice
		constexpr auto m_ImmuneTargets = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_ImmuneTimes = 0xa18; // TArray<float>
	}

	namespace n_UTgAIBehaviorCondition_HasActive { // : UTgAIBehaviorCondition
		constexpr auto ActiveType = 0x98; // EActiveType
	}

	namespace n_ATgDevice_CorrupterPassive { // : ATgDevice
		constexpr auto m_Corrupter = 0xa08; // ObjectProperty
		constexpr auto nChainMax = 0xa10; // int32_t
	}

	namespace n_UUIComponent_LevelProgress { // : UUIComponent_Display
		constexpr auto m_mcLevel = 0x124; // ObjectProperty
		constexpr auto m_mcNextLevelXP = 0x12c; // ObjectProperty
		constexpr auto m_mcTimePlayed = 0x134; // ObjectProperty
		constexpr auto m_mcWins = 0x13c; // ObjectProperty
		constexpr auto m_mcTotalXP = 0x144; // ObjectProperty
		constexpr auto m_mcProgress = 0x14c; // ObjectProperty
	}

	namespace n_UTgPawnMod_FxAudio_EDMStrix { // : UTgPawnMod_FxAudio
		constexpr auto m_fGlowMultBass = 0xac; // float
	}

	namespace n_ANxGenericForceFieldBrush { // : AVolume
		constexpr auto ExcludeChannel = 0x2bc; // int32_t
		constexpr auto CollideWithChannels = 0x2c0; // FRBCollisionChannelContainer
		constexpr auto RBChannel = 0x2c4; // ERBCollisionChannel
		constexpr auto Coordinates = 0x2c5; // FFB_ForceFieldCoordinates
		constexpr auto Constant = 0x2c8; // FVector
		constexpr auto PositionMultiplierX = 0x2d4; // FVector
		constexpr auto PositionMultiplierY = 0x2e0; // FVector
		constexpr auto PositionMultiplierZ = 0x2ec; // FVector
		constexpr auto PositionTarget = 0x2f8; // FVector
		constexpr auto VelocityMultiplierX = 0x304; // FVector
		constexpr auto VelocityMultiplierY = 0x310; // FVector
		constexpr auto VelocityMultiplierZ = 0x31c; // FVector
		constexpr auto VelocityTarget = 0x328; // FVector
		constexpr auto Noise = 0x334; // FVector
		constexpr auto FalloffLinear = 0x340; // FVector
		constexpr auto FalloffQuadratic = 0x34c; // FVector
		constexpr auto TorusRadius = 0x358; // float
		constexpr auto ForceField = 0x35c; // FPointer
		constexpr auto ConvexMeshes = 0x364; // TArray<FPointer>
		constexpr auto ExclusionShapes = 0x374; // TArray<FPointer>
		constexpr auto ExclusionShapePoses = 0x384; // TArray<FPointer>
		constexpr auto LinearKernel = 0x394; // FPointer
	}

	namespace n_UUIScene_UIPopupTwitchPrime { // : UUIScene
		constexpr auto m_pTwitchPrime = 0x1cc; // ObjectProperty
		constexpr auto m_fPushDelay = 0x1d4; // float
	}

	namespace n_ATgDevice_AzaanWalls { // : ATgDevice
		constexpr auto m_nWallMeshId = 0xa08; // int32_t
		constexpr auto m_pAzaan = 0xa0c; // ObjectProperty
		constexpr auto m_bWasAboveThreshold = 0xa14; // uint32_t : 1
		constexpr auto m_fWallDistToFocalPoint = 0xa18; // float
		constexpr auto m_fWallSpread = 0xa1c; // float
		constexpr auto m_fWallDepthCheck = 0xa20; // float
		constexpr auto m_fWallZForgiveness = 0xa24; // float
		constexpr auto m_rCachedWallAim = 0xa28; // FRotator
		constexpr auto m_vOpenSpotExtent = 0xa34; // FVector
		constexpr auto m_vCachedWallFocus = 0xa40; // FVector
		constexpr auto m_nNumberOfWalls = 0xa4c; // int32_t
		constexpr auto r_nActiveDeployableWalls = 0xa50; // int32_t
		constexpr auto s_ActiveDeployables = 0xa54; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceForm_SilenceBeam { // : UTgDeviceForm_SpinnerWhileFiring
		constexpr auto m_pCachedGauntlet = 0x2b8; // ObjectProperty
	}

	namespace n_UUIInteractable_HighlightSizeOnly { // : UUIComponent_Interactable
		constexpr auto m_fHighlightScaleMultiplier = 0x140; // float
		constexpr auto m_fRestingScaleMultiplier = 0x144; // float
	}

	namespace n_AMaterialInstanceActor { // : AActor
		constexpr auto MatInst = 0x280; // ObjectProperty
	}

	namespace n_ATgDevice_Latch { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_FinalLatchTargeting = 0xa10; // FAimData
		constexpr auto m_bIsPulling = 0xa44; // uint32_t : 1
		constexpr auto m_bHasPulledOnce = 0xa44; // uint32_t : 1
		constexpr auto m_bCanApplyPull = 0xa44; // uint32_t : 1
		constexpr auto m_bTeleportedAfterFiring = 0xa44; // uint32_t : 1
		constexpr auto m_nHoverState = 0xa48; // int32_t
		constexpr auto m_fKillHoverFailsafe = 0xa4c; // float
	}

	namespace n_USeqEvent_MobileButton { // : USeqEvent_MobileZoneBase
		constexpr auto bWasActiveLastFrame = 0x138; // uint32_t : 1
		constexpr auto bSendPressedOnlyOnTouchDown = 0x138; // uint32_t : 1
		constexpr auto bSendPressedOnlyOnTouchUp = 0x138; // uint32_t : 1
	}

	namespace n_UUIData_PortalAccount { // : UUIDataObject
		constexpr auto m_dwPortalId = 0x74; // Fdword
		constexpr auto m_bLinked = 0x78; // uint32_t : 1
		constexpr auto m_bLinkSilentCheck = 0x78; // uint32_t : 1
	}

	namespace n_UUIScene_UIStreetStyleEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pHome = 0x1dc; // ObjectProperty
		constexpr auto m_pRewards = 0x1e4; // ObjectProperty
		constexpr auto m_pQuests = 0x1ec; // ObjectProperty
		constexpr auto m_pOverview = 0x1f4; // ObjectProperty
		constexpr auto m_pRotator = 0x1fc; // ObjectProperty
	}

	namespace n_UDistributionFloatConstantCurve { // : UDistributionFloat
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveFloat
	}

	namespace n_UUIComponent_BurnCard { // : UUIComponent_Display
		constexpr auto m_mcLevel = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
	}

	namespace n_UUIComponent_EventBundlePanel { // : UUIComponent_Display
		constexpr auto m_mcTitleTF = 0x124; // ObjectProperty
		constexpr auto m_mcUnlockTF = 0x12c; // ObjectProperty
		constexpr auto m_pBundleItems = 0x134; // ObjectProperty
		constexpr auto m_pUnlockButton = 0x13c; // ObjectProperty
	}

	namespace n_UUIComponent_ReportPopup { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcReportInput = 0x12c; // ObjectProperty
		constexpr auto m_pReportReasons = 0x134; // ObjectProperty
		constexpr auto m_pBack = 0x13c; // ObjectProperty
		constexpr auto m_grPopup = 0x144; // ObjectProperty
	}

	namespace n_UUIScene_UIAsiaticEvent { // : UUIScene
		constexpr auto m_bInsideRotator = 0x1cc; // uint32_t : 1
		constexpr auto m_bIsRotating = 0x1cc; // uint32_t : 1
		constexpr auto m_fPrevMouseXPos = 0x1d0; // float
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pTabs = 0x1dc; // ObjectProperty
		constexpr auto m_pRotator = 0x1e4; // ObjectProperty
		constexpr auto m_pHome = 0x1ec; // ObjectProperty
		constexpr auto m_pQuests = 0x1f4; // ObjectProperty
		constexpr auto m_pInfo = 0x1fc; // ObjectProperty
		constexpr auto m_pHomePurchase = 0x204; // ObjectProperty
	}

	namespace n_ATgPawn_Druid { // : ATgPawn_Character
		constexpr auto m_CachedRMBTargeting = 0x3164; // ObjectProperty
		constexpr auto m_CachedRMB = 0x316c; // ObjectProperty
		constexpr auto m_CachedSpawnFox = 0x3174; // ObjectProperty
		constexpr auto m_GuidedArrowTarget = 0x317c; // ObjectProperty
		constexpr auto r_ActiveFox = 0x3184; // ObjectProperty
		constexpr auto r_fRMBProjectileSpeed = 0x318c; // float
		constexpr auto r_fLastStandAnimTime = 0x3190; // float
		constexpr auto r_nFoxActivityNonce = 0x3194; // int32_t
		constexpr auto m_sDeployRedeployIconOverride = 0x3198; // FString
		constexpr auto c_bAcknowledgedIsLeaping = 0x31a8; // uint32_t : 1
	}

	namespace n_UBookMark2D { // : UObject
		constexpr auto Zoom2D = 0x60; // float
		constexpr auto Location = 0x64; // FIntPoint
	}

	namespace n_ATgDevice_Whirlwind2 { // : ATgDevice_ActiveAura
		constexpr auto c_fOverrideUltEnergy = 0xa68; // float
	}

	namespace n_ATgDevice_MinigunSpinUp { // : ATgDevice
		constexpr auto m_CachedRuckusInhand = 0xa08; // ObjectProperty
	}

	namespace n_UInterpTrackAkEvent { // : UInterpTrack
		constexpr auto AkEvents = 0xa0; // TArray<FAkEventTrackKey>
	}

	namespace n_UTgAIUtilityFunction { // : UTgAIUtility
		constexpr auto MinInput = 0xbc; // float
		constexpr auto MaxInput = 0xc0; // float
		constexpr auto FunctionType = 0xc4; // EGraphType
		constexpr auto DesiredValue = 0xc8; // float
		constexpr auto UtilityScale = 0xcc; // float
		constexpr auto bInvert = 0xd0; // uint32_t : 1
	}

	namespace n_UUIComponent_HudScoreTDM { // : UUIComponent_Display
		constexpr auto m_nTimeRemaining = 0x124; // int32_t
		constexpr auto m_nMaxScore = 0x128; // int32_t
		constexpr auto m_nScoreA = 0x12c; // int32_t
		constexpr auto m_nScoreB = 0x130; // int32_t
		constexpr auto m_bFlashWhenUnderTenSeconds = 0x134; // uint32_t : 1
		constexpr auto m_bOvertime = 0x134; // uint32_t : 1
		constexpr auto m_bFriendlyTaskForceClose = 0x134; // uint32_t : 1
		constexpr auto m_bEnemyTaskForceClose = 0x134; // uint32_t : 1
		constexpr auto m_bForceTDMHUD = 0x134; // uint32_t : 1
		constexpr auto m_mcTDMTitle = 0x138; // ObjectProperty
		constexpr auto m_mcTDMTime = 0x140; // ObjectProperty
		constexpr auto m_mcTDMSubtitle = 0x148; // ObjectProperty
		constexpr auto m_mcTDMScoreA = 0x150; // ObjectProperty
		constexpr auto m_mcTDMScoreAScore = 0x158; // ObjectProperty
		constexpr auto m_mcTDMScoreAScoreTextAnim = 0x160; // ObjectProperty
		constexpr auto m_mcTDMScoreAScoreTF = 0x168; // ObjectProperty
		constexpr auto m_mcTDMScoreAScoreAnim = 0x170; // ObjectProperty
		constexpr auto m_mcTDMScoreAProgress = 0x178; // ObjectProperty
		constexpr auto m_mcTDMScoreAProgressAnim = 0x180; // ObjectProperty
		constexpr auto m_mcTDMScoreAProgressAnimAnim = 0x188; // ObjectProperty
		constexpr auto m_mcTDMScoreB = 0x190; // ObjectProperty
		constexpr auto m_mcTDMScoreBScore = 0x198; // ObjectProperty
		constexpr auto m_mcTDMScoreBScoreTextAnim = 0x1a0; // ObjectProperty
		constexpr auto m_mcTDMScoreBScoreTF = 0x1a8; // ObjectProperty
		constexpr auto m_mcTDMScoreBScoreAnim = 0x1b0; // ObjectProperty
		constexpr auto m_mcTDMScoreBProgress = 0x1b8; // ObjectProperty
		constexpr auto m_mcTDMScoreBProgressAnim = 0x1c0; // ObjectProperty
		constexpr auto m_mcTDMScoreBProgressAnimAnim = 0x1c8; // ObjectProperty
		constexpr auto m_mcOvertime = 0x1d0; // ObjectProperty
		constexpr auto m_mcOvertimeTF = 0x1d8; // ObjectProperty
		constexpr auto m_mcOvertimeBar = 0x1e0; // ObjectProperty
		constexpr auto m_mcOvertimeFrame = 0x1e8; // ObjectProperty
		constexpr auto m_fTDMScoreATextAnchorX = 0x1f0; // float
		constexpr auto m_fTDMScoreBTextAnchorX = 0x1f4; // float
		constexpr auto m_nOvertimeStateAck = 0x1f8; // int32_t
		constexpr auto m_fOvertimeStart = 0x1fc; // float
		constexpr auto m_fOvertimeDuration = 0x200; // float
		constexpr auto m_fOvertimeFrequency = 0x204; // float
		constexpr auto m_nTaskForceAhead = 0x208; // int32_t
		constexpr auto m_MatchAlmostOverAkEvent = 0x20c; // ObjectProperty
	}

	namespace n_UActorFactoryStaticMesh { // : UActorFactory
		constexpr auto StaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_USeqAct_LevelStreaming { // : USeqAct_LevelStreamingBase
		constexpr auto Level = 0x124; // ObjectProperty
		constexpr auto LevelName = 0x12c; // FName
		constexpr auto bStatusIsOk = 0x134; // uint32_t : 1
	}

	namespace n_ATgDevice_Weightless { // : ATgDevice
		constexpr auto r_fSprintHorizontalSpeedMod = 0xa08; // float
		constexpr auto r_fSprintJumpSpeedMod = 0xa0c; // float
	}

	namespace n_ATgDevice_AuraPerTarget { // : ATgDevice_PassiveAura
		constexpr auto m_nAppliedStacks = 0xa68; // int32_t
	}

	namespace n_UUIComponent_CommendationToastEntry { // : UUIComponent_Display
		constexpr auto m_mcItemIcon = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcDesc = 0x134; // ObjectProperty
		constexpr auto m_mcPointsAmountTF = 0x13c; // ObjectProperty
		constexpr auto m_pCloseButton = 0x144; // ObjectProperty
		constexpr auto m_fOriginalXPos = 0x14c; // float
		constexpr auto m_fWidth = 0x150; // float
		constexpr auto m_bInitialized = 0x154; // uint32_t : 1
		constexpr auto m_bAnimating = 0x154; // uint32_t : 1
		constexpr auto m_eAnimSequence = 0x158; // ToastSequence
		constexpr auto m_fAnimationTime = 0x15c; // float
	}

	namespace n_UTgAIBehaviorCondition_IsActiveReady { // : UTgAIBehaviorCondition
		constexpr auto ActiveType = 0x98; // EActiveType
	}

	namespace n_ATgBotEncounterVolume { // : AVolume
		constexpr auto m_Factories = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_nPlayers = 0x2cc; // int32_t
	}

	namespace n_UGameWaveForms { // : UObject
		constexpr auto CameraShakeMediumShort = 0x60; // ObjectProperty
		constexpr auto CameraShakeMediumLong = 0x68; // ObjectProperty
		constexpr auto CameraShakeBigShort = 0x70; // ObjectProperty
		constexpr auto CameraShakeBigLong = 0x78; // ObjectProperty
	}

	namespace n_USequenceFrame { // : USequenceObject
		constexpr auto SizeX = 0x98; // int32_t
		constexpr auto SizeY = 0x9c; // int32_t
		constexpr auto BorderWidth = 0xa0; // int32_t
		constexpr auto bDrawBox = 0xa4; // uint32_t : 1
		constexpr auto bFilled = 0xa4; // uint32_t : 1
		constexpr auto bTileFill = 0xa4; // uint32_t : 1
		constexpr auto BorderColor = 0xa8; // FColor
		constexpr auto FillColor = 0xac; // FColor
	}

	namespace n_UFluidSurfaceComponent { // : UPrimitiveComponent
		constexpr auto FluidMaterial = 0x24c; // ObjectProperty
		constexpr auto LightMapResolution = 0x254; // int32_t
		constexpr auto LightmassSettings = 0x258; // FLightmassPrimitiveSettings
		constexpr auto EnableSimulation = 0x274; // uint32_t : 1
		constexpr auto EnableDetail = 0x274; // uint32_t : 1
		constexpr auto bTiling = 0x274; // uint32_t : 1
		constexpr auto bPause = 0x274; // uint32_t : 1
		constexpr auto bShowSimulationNormals = 0x274; // uint32_t : 1
		constexpr auto bShowSimulationPosition = 0x274; // uint32_t : 1
		constexpr auto bShowDetailNormals = 0x274; // uint32_t : 1
		constexpr auto bShowDetailPosition = 0x274; // uint32_t : 1
		constexpr auto bShowFluidSimulation = 0x274; // uint32_t : 1
		constexpr auto bShowFluidDetail = 0x274; // uint32_t : 1
		constexpr auto bTestRipple = 0x274; // uint32_t : 1
		constexpr auto bTestRippleCenterOnDetail = 0x274; // uint32_t : 1
		constexpr auto SimulationQuadsX = 0x278; // int32_t
		constexpr auto SimulationQuadsY = 0x27c; // int32_t
		constexpr auto GridSpacing = 0x280; // float
		constexpr auto GridSpacingLowRes = 0x284; // float
		constexpr auto TargetSimulation = 0x288; // ObjectProperty
		constexpr auto GPUTessellationFactor = 0x290; // float
		constexpr auto FluidDamping = 0x294; // float
		constexpr auto FluidTravelSpeed = 0x298; // float
		constexpr auto FluidHeightScale = 0x29c; // float
		constexpr auto FluidUpdateRate = 0x2a0; // float
		constexpr auto ForceImpact = 0x2a4; // float
		constexpr auto ForceContinuous = 0x2a8; // float
		constexpr auto LightingContrast = 0x2ac; // float
		constexpr auto TargetDetail = 0x2b0; // ObjectProperty
		constexpr auto DeactivationDistance = 0x2b8; // float
		constexpr auto DetailResolution = 0x2bc; // int32_t
		constexpr auto DetailSize = 0x2c0; // float
		constexpr auto DetailDamping = 0x2c4; // float
		constexpr auto DetailTravelSpeed = 0x2c8; // float
		constexpr auto DetailTransfer = 0x2cc; // float
		constexpr auto DetailHeightScale = 0x2d0; // float
		constexpr auto DetailUpdateRate = 0x2d4; // float
		constexpr auto NormalLength = 0x2d8; // float
		constexpr auto TestRippleSpeed = 0x2dc; // float
		constexpr auto TestRippleFrequency = 0x2e0; // float
		constexpr auto TestRippleRadius = 0x2e4; // float
		constexpr auto FluidWidth = 0x2e8; // float
		constexpr auto FluidHeight = 0x2ec; // float
		constexpr auto TestRippleTime = 0x2f0; // float
		constexpr auto TestRippleAngle = 0x2f4; // float
		constexpr auto DeactivationTimer = 0x2f8; // float
		constexpr auto ViewDistance = 0x2fc; // float
		constexpr auto SimulationPosition = 0x300; // FVector
		constexpr auto DetailPosition = 0x30c; // FVector
		constexpr auto ClampMap = 0x318; // TArray<char>
		constexpr auto ShadowMaps = 0x328; // TArray<ObjectProperty>
		constexpr auto LightMap = 0x338; // FLightMapRef
		constexpr auto FluidSimulation = 0x340; // FPointer
	}

	namespace n_UTgDeviceMod_TargetingAimForwarder { // : UObject
		constexpr auto m_ForwardDev = 0x60; // ObjectProperty
	}

	namespace n_ATgDevice_Telepunch { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedDemon = 0xa10; // ObjectProperty
		constexpr auto m_HitCharacter = 0xa18; // ObjectProperty
		constexpr auto m_bLiftApplied = 0xa20; // uint32_t : 1
		constexpr auto m_bStealthApplied = 0xa20; // uint32_t : 1
		constexpr auto m_fLerpTime = 0xa24; // float
		constexpr auto m_vHitCharacterInitialLocation = 0xa28; // FVector
		constexpr auto m_fHorizontalHitMaxDist = 0xa34; // float
		constexpr auto m_fVerticalHitMaxDist = 0xa38; // float
		constexpr auto m_fTeleportPreferedDistance = 0xa3c; // float
		constexpr auto m_fTargetLockTime = 0xa40; // float
	}

	namespace n_AGameCrowdDestinationQueuePoint { // : AGameCrowdInteractionPoint
		constexpr auto NextQueuePosition = 0x28c; // ObjectProperty
		constexpr auto PreviousQueuePosition = 0x294; // ObjectProperty
		constexpr auto QueuedAgent = 0x29c; // ObjectProperty
		constexpr auto QueueDestination = 0x2a4; // ObjectProperty
		constexpr auto bClearingQueue = 0x2ac; // uint32_t : 1
		constexpr auto bPendingAdvance = 0x2ac; // uint32_t : 1
		constexpr auto AverageReactionTime = 0x2b0; // float
		constexpr auto QueueBehaviorClass = 0x2b4; // UGameCrowdBehavior_WaitInQueue*
	}

	namespace n_ATgDeploy_BombQueenBombBag { // : ATgDeployable
		constexpr auto m_BurstMod = 0x46c; // ObjectProperty
		constexpr auto m_nDeployIndices = 0x474; // TArray<int32_t>
		constexpr auto m_vDeployLocations = 0x484; // TArray<FVector>
		constexpr auto m_fZOffSet = 0x494; // float
		constexpr auto m_vSpawnFocusOffset = 0x498; // FVector
		constexpr auto m_nRandIterations = 0x4a4; // int32_t
		constexpr auto m_fRandOffsetMult = 0x4a8; // float
		constexpr auto m_fMaxSeedRange = 0x4ac; // float
		constexpr auto m_fSeed = 0x4b0; // float
		constexpr auto m_SpawnerDevice = 0x4b4; // ObjectProperty
		constexpr auto m_RandomShotSpreadStream = 0x4bc; // FPointer
	}

	namespace n_UTgControlModule_Stoker { // : UTgControlModule_ThirdPerson
		constexpr auto m_CachedStokerPawn = 0xcc; // ObjectProperty
	}

	namespace n_ANxForceFieldGeneric { // : ANxForceField
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto RoughExtentX = 0x2e4; // float
		constexpr auto RoughExtentY = 0x2e8; // float
		constexpr auto RoughExtentZ = 0x2ec; // float
		constexpr auto Coordinates = 0x2f0; // FFG_ForceFieldCoordinates
		constexpr auto Constant = 0x2f4; // FVector
		constexpr auto PositionMultiplierX = 0x300; // FVector
		constexpr auto PositionMultiplierY = 0x30c; // FVector
		constexpr auto PositionMultiplierZ = 0x318; // FVector
		constexpr auto PositionTarget = 0x324; // FVector
		constexpr auto VelocityMultiplierX = 0x330; // FVector
		constexpr auto VelocityMultiplierY = 0x33c; // FVector
		constexpr auto VelocityMultiplierZ = 0x348; // FVector
		constexpr auto VelocityTarget = 0x354; // FVector
		constexpr auto Noise = 0x360; // FVector
		constexpr auto FalloffLinear = 0x36c; // FVector
		constexpr auto FalloffQuadratic = 0x378; // FVector
		constexpr auto TorusRadius = 0x384; // float
		constexpr auto LinearKernel = 0x388; // FPointer
	}

	namespace n_ATgDevice_Scout { // : ATgDevice
		constexpr auto m_CachedPawnOwner = 0xa08; // ObjectProperty
		constexpr auto m_AlliesScouted = 0xa10; // TArray<ObjectProperty>
		constexpr auto m_EnemiesScouted = 0xa20; // TArray<ObjectProperty>
		constexpr auto m_fScoutRefreshTime = 0xa30; // float
	}

	namespace n_ATgDevice_ImaniDragonInhand { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedImaniAvatar = 0xa10; // ObjectProperty
	}

	namespace n_UTgSeqAct_SetMissionTime { // : USequenceAction
		constexpr auto m_fMissionTimeSecs = 0x108; // float
		constexpr auto m_fIncrementSecs = 0x10c; // float
		constexpr auto m_fMissionTimeRemaining = 0x110; // float
	}

	namespace n_ATgDeploy_IllusionLongbow { // : ATgDeployable
		constexpr auto c_nDefaultBodyMeshId = 0x46c; // int32_t
		constexpr auto c_nDefaultHeadMeshId = 0x470; // int32_t
		constexpr auto c_nDefaultWeaponMeshId = 0x474; // int32_t
		constexpr auto m_BodyMesh = 0x478; // ComponentProperty
		constexpr auto m_HeadMesh = 0x480; // ComponentProperty
		constexpr auto m_WeaponMesh = 0x488; // ComponentProperty
		constexpr auto m_bodyReplacementMICs = 0x490; // TArray<ObjectProperty>
		constexpr auto m_headReplacementMICs = 0x4a0; // TArray<ObjectProperty>
		constexpr auto m_weaponReplacementMICs = 0x4b0; // TArray<ObjectProperty>
		constexpr auto m_bFadingAway = 0x4c0; // uint32_t : 1
		constexpr auto m_fLifeAfterDeathOverride = 0x4c4; // float
		constexpr auto m_FxCollisionProxy = 0x4c8; // ObjectProperty
		constexpr auto m_fCollisionRadius = 0x4d0; // float
	}

	namespace n_UInterpGroupInstAI { // : UInterpGroupInst
		constexpr auto AIGroup = 0x88; // ObjectProperty
		constexpr auto SavedPhysics = 0x90; // EPhysics
		constexpr auto bSavedNoEncroachCheck = 0x94; // uint32_t : 1
		constexpr auto bSavedCollideActors = 0x94; // uint32_t : 1
		constexpr auto bSavedBlockActors = 0x94; // uint32_t : 1
		constexpr auto StageMarkActor = 0x98; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_DistanceFromObjectiveOutOfCombat { // : UTgInventoryObject_Listen_DistanceFromObjective
		constexpr auto m_bInCombat = 0xd8; // uint32_t : 1
	}

	namespace n_UTgControlModule { // : UObject
		constexpr auto Controller = 0x60; // ObjectProperty
		constexpr auto m_bIsActive = 0x68; // uint32_t : 1
	}

	namespace n_UActorFactoryApexDestructible { // : UActorFactory
		constexpr auto bStartAwake = 0x9c; // uint32_t : 1
		constexpr auto RBChannel = 0xa0; // ERBCollisionChannel
		constexpr auto CollideWithChannels = 0xa4; // FRBCollisionChannelContainer
		constexpr auto DestructibleAsset = 0xa8; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NearbyAllyAttacked { // : UTgAIBehaviorCondition
		constexpr auto TimeThreshold = 0x98; // float
		constexpr auto AllyDistanceThreshold = 0x9c; // float
		constexpr auto AttackerDistanceThreshold = 0xa0; // float
	}

	namespace n_ATgProj_BombBagSpawn { // : ATgProj_FreeGrenade
		constexpr auto m_SpawnedDeployable = 0x580; // ObjectProperty
	}

	namespace n_UUISimulMedia { // : UTgGfxScene
		constexpr auto m_fOpportunityCheckDelay = 0x1ec; // float
		constexpr auto m_bOpportunityFound = 0x1f0; // uint32_t : 1
		constexpr auto m_nSimulmediaActivityId = 0x1f4; // int32_t
		constexpr auto m_nSimulmediaGoalGroupId = 0x1f8; // int32_t
		constexpr auto m_nSimulmediaDailyCapActivityId = 0x1fc; // int32_t
		constexpr auto m_nSimulmediaDailyCapGoalId = 0x200; // int32_t
	}

	namespace n_UAnimNodeSequenceBlendByAim { // : UAnimNodeSequenceBlendBase
		constexpr auto Aim = 0x1bc; // FVector2D
		constexpr auto PreviousAim = 0x1c4; // FVector2D
		constexpr auto HorizontalRange = 0x1cc; // FVector2D
		constexpr auto VerticalRange = 0x1d4; // FVector2D
		constexpr auto AngleOffset = 0x1dc; // FVector2D
		constexpr auto AnimName_LU = 0x1e4; // FName
		constexpr auto AnimName_LC = 0x1ec; // FName
		constexpr auto AnimName_LD = 0x1f4; // FName
		constexpr auto AnimName_CU = 0x1fc; // FName
		constexpr auto AnimName_CC = 0x204; // FName
		constexpr auto AnimName_CD = 0x20c; // FName
		constexpr auto AnimName_RU = 0x214; // FName
		constexpr auto AnimName_RC = 0x21c; // FName
		constexpr auto AnimName_RD = 0x224; // FName
	}

	namespace n_ARB_ForceFieldExcludeVolume { // : AVolume
		constexpr auto ForceFieldChannel = 0x2bc; // int32_t
		constexpr auto SceneIndex = 0x2c0; // int32_t
	}

	namespace n_ATgModifyPawnPropertiesVolume { // : AVolume
		constexpr auto m_nMapObjectId = 0x2bc; // int32_t
		constexpr auto m_bDisableJump = 0x2c0; // uint32_t : 1
		constexpr auto m_bDisableBlockActors = 0x2c0; // uint32_t : 1
		constexpr auto m_bDisableHanging = 0x2c0; // uint32_t : 1
		constexpr auto m_bDisableAllDevices = 0x2c0; // uint32_t : 1
		constexpr auto m_bTriggerUseEvent = 0x2c0; // uint32_t : 1
		constexpr auto m_bOneWayMovement = 0x2c0; // uint32_t : 1
		constexpr auto m_vOnewWay = 0x2c4; // FRotator
		constexpr auto m_DirArrow = 0x2d0; // ComponentProperty
		constexpr auto s_nLootTableId = 0x2d8; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Thunderstruck { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_UniqueTargets = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_bCachedIsArcing = 0xdc; // uint32_t : 1
	}

	namespace n_UTgGamePhase_SendMessageToClients { // : UTgGamePhase
		constexpr auto m_nMsgId = 0xb8; // int32_t
	}

	namespace n_UUIComponent_Item_Card { // : UUIComponent_Item
		constexpr auto m_mcCooldown = 0x190; // ObjectProperty
		constexpr auto m_mcChampion = 0x198; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x1a0; // ObjectProperty
		constexpr auto m_mcRank = 0x1a8; // ObjectProperty
		constexpr auto m_mcRarity = 0x1b0; // ObjectProperty
		constexpr auto m_mcProgressBack = 0x1b8; // ObjectProperty
		constexpr auto m_pProgress = 0x1c0; // ObjectProperty
		constexpr auto m_bShowChampion = 0x1c8; // uint32_t : 1
		constexpr auto m_nCardLevel = 0x1cc; // int32_t
	}

	namespace n_UTgAnimBlendByStartingPosture { // : UTgAnimNodeBlendList
		constexpr auto m_TgPawn = 0x168; // ObjectProperty
		constexpr auto m_StartingPosture = 0x170; // TG_POSTURE
		constexpr auto m_bExpired = 0x174; // uint32_t : 1
	}

	namespace n_UPBRuleNodeSize { // : UPBRuleNodeBase
		constexpr auto SizeAxis = 0x70; // EProcBuildingAxis
		constexpr auto DecisionSize = 0x74; // float
		constexpr auto bUseTopLevelScopeSize = 0x78; // uint32_t : 1
	}

	namespace n_UUIWebBrowser { // : UTgGfxScene
		constexpr auto m_bAutoClose = 0x1ec; // uint32_t : 1
		constexpr auto m_bDrawBorder = 0x1ec; // uint32_t : 1
		constexpr auto m_mcFrame = 0x1f0; // ObjectProperty
		constexpr auto m_mcBrowserShape = 0x1f8; // ObjectProperty
		constexpr auto m_mcBackButton = 0x200; // ObjectProperty
		constexpr auto m_mcForwardButton = 0x208; // ObjectProperty
		constexpr auto m_mcCloseButton = 0x210; // ObjectProperty
	}

	namespace n_USeqAct_AssignController { // : USequenceAction
		constexpr auto ControllerClass = 0x108; // AController*
	}

	namespace n_ATgPawn_BombKing { // : ATgPawn_Character
		constexpr auto m_fBounceDampingVertMin = 0x3164; // float
		constexpr auto m_fBounceDampingVertMax = 0x3168; // float
		constexpr auto m_fBounceDampingHorizMin = 0x316c; // float
		constexpr auto m_fBounceDampingHorizMax = 0x3170; // float
		constexpr auto c_bRenderKingBombMesh = 0x3174; // uint32_t : 1
		constexpr auto m_bForced3PDuringKingBomb = 0x3174; // uint32_t : 1
		constexpr auto c_nKingBombMeshID = 0x3178; // int32_t
		constexpr auto m_fKingBombCameraOffset = 0x317c; // FVector
		constexpr auto r_weaponMeshState = 0x3188; // EWeaponMeshState
		constexpr auto m_nInhandID = 0x318c; // int32_t
		constexpr auto m_nGrumpyBombID = 0x3190; // int32_t
		constexpr auto m_nPoppyBombID = 0x3194; // int32_t
		constexpr auto r_fJoltKnockback = 0x3198; // float
		constexpr auto m_InhandClass = 0x319c; // ATgDevice*
		constexpr auto m_GrumpyBombClass = 0x31a4; // ATgDevice*
		constexpr auto m_PoppyBombClass = 0x31ac; // ATgDevice*
	}

	namespace n_UTgInvListener_AzaanIreConsumed { // : UTgInvListener
		constexpr auto m_CachedAzaan = 0xc4; // ObjectProperty
		constexpr auto m_nPercentMultiplier = 0xcc; // int32_t
	}

	namespace n_UInterpTrackInstParticleReplay { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_USeqAct_SetMesh { // : USequenceAction
		constexpr auto NewSkeletalMesh = 0x108; // ObjectProperty
		constexpr auto NewStaticMesh = 0x110; // ObjectProperty
		constexpr auto MeshType = 0x118; // EMeshType
		constexpr auto bIsAllowedToMove = 0x11c; // uint32_t : 1
		constexpr auto bAllowDecalsToReattach = 0x11c; // uint32_t : 1
	}

	namespace n_USkeletalMeshComponent { // : UMeshComponent
		constexpr auto SkeletalMesh = 0x294; // ObjectProperty
		constexpr auto AttachedToSkelComponent = 0x29c; // ComponentProperty
		constexpr auto AnimTreeTemplate = 0x2a4; // ObjectProperty
		constexpr auto Animations = 0x2ac; // ObjectProperty
		constexpr auto AnimTickArray = 0x2b4; // TArray<ObjectProperty>
		constexpr auto AnimAlwaysTickArray = 0x2c4; // TArray<ObjectProperty>
		constexpr auto AnimTickRelevancyArray = 0x2d4; // TArray<int32_t>
		constexpr auto AnimTickWeightsArray = 0x2e4; // TArray<float>
		constexpr auto SkelControlTickArray = 0x2f4; // TArray<ObjectProperty>
		constexpr auto PhysicsAsset = 0x304; // ObjectProperty
		constexpr auto PhysicsAssetInstance = 0x30c; // ObjectProperty
		constexpr auto ApexClothing = 0x314; // FPointer
		constexpr auto PhysicsWeight = 0x31c; // float
		constexpr auto GlobalAnimRateScale = 0x320; // float
		constexpr auto StreamingDistanceMultiplier = 0x324; // float
		constexpr auto MeshObject = 0x328; // FPointer
		constexpr auto WireframeColor = 0x330; // FColor
		constexpr auto SpaceBases = 0x334; // TArray<FBoneAtom>
		constexpr auto m_AnimBases = 0x344; // TArray<FMatrix>
		constexpr auto LocalAtoms = 0x354; // TArray<FBoneAtom>
		constexpr auto CachedLocalAtoms = 0x364; // TArray<FBoneAtom>
		constexpr auto CachedSpaceBases = 0x374; // TArray<FBoneAtom>
		constexpr auto LowUpdateFrameRate = 0x384; // int32_t
		constexpr auto RequiredBones = 0x388; // TArray<char>
		constexpr auto ComposeOrderedRequiredBones = 0x398; // TArray<char>
		constexpr auto ParentAnimComponent = 0x3a8; // ComponentProperty
		constexpr auto ParentBoneMap = 0x3b0; // TArray<int32_t>
		constexpr auto AnimSets = 0x3c0; // TArray<ObjectProperty>
		constexpr auto TemporarySavedAnimSets = 0x3d0; // TArray<ObjectProperty>
		constexpr auto MorphSets = 0x3e0; // TArray<ObjectProperty>
		constexpr auto ActiveMorphs = 0x3f0; // TArray<FActiveMorph>
		constexpr auto ActiveCurveMorphs = 0x400; // TArray<FActiveMorph>
		constexpr auto MorphTargetIndexMap = 0x410; // TMap<None, None>
		constexpr auto Attachments = 0x458; // TArray<FAttachment>
		constexpr auto SkelControlIndex = 0x468; // TArray<char>
		constexpr auto PostPhysSkelControlIndex = 0x478; // TArray<char>
		constexpr auto ForcedLodModel = 0x488; // int32_t
		constexpr auto MinLodModel = 0x48c; // int32_t
		constexpr auto PredictedLODLevel = 0x490; // int32_t
		constexpr auto OldPredictedLODLevel = 0x494; // int32_t
		constexpr auto AnimationLODDistanceFactor = 0x498; // float
		constexpr auto AnimationLODFrameRate = 0x49c; // int32_t
		constexpr auto MaxDistanceFactor = 0x4a0; // float
		constexpr auto bForceWireframe = 0x4a4; // int32_t
		constexpr auto bForceRefpose = 0x4a8; // int32_t
		constexpr auto bOldForceRefPose = 0x4ac; // int32_t
		constexpr auto bNoSkeletonUpdate = 0x4b0; // uint32_t : 1
		constexpr auto bDisplayBones = 0x4b4; // int32_t
		constexpr auto bShowPrePhysBones = 0x4b8; // int32_t
		constexpr auto bHideSkin = 0x4bc; // int32_t
		constexpr auto bForceRawOffset = 0x4c0; // int32_t
		constexpr auto bIgnoreControllers = 0x4c4; // int32_t
		constexpr auto bTransformFromAnimParent = 0x4c8; // int32_t
		constexpr auto TickTag = 0x4cc; // int32_t
		constexpr auto InitTag = 0x4d0; // int32_t
		constexpr auto CachedAtomsTag = 0x4d4; // int32_t
		constexpr auto bUseSingleBodyPhysics = 0x4d8; // int32_t
		constexpr auto bRequiredBonesUpToDate = 0x4dc; // int32_t
		constexpr auto MinDistFactorForKinematicUpdate = 0x4e0; // float
		constexpr auto FramesPhysicsAsleep = 0x4e4; // int32_t
		constexpr auto SkipRateForTickAnimNodesAndGetBoneAtoms = 0x4e8; // int32_t
		constexpr auto bSkipTickAnimNodes = 0x4ec; // uint32_t : 1
		constexpr auto bSkipGetBoneAtoms = 0x4ec; // uint32_t : 1
		constexpr auto bInterpolateBoneAtoms = 0x4ec; // uint32_t : 1
		constexpr auto bHasValidBodies = 0x4ec; // uint32_t : 1
		constexpr auto bSkipAllUpdateWhenPhysicsAsleep = 0x4ec; // uint32_t : 1
		constexpr auto bComponentUseFixedSkelBounds = 0x4ec; // uint32_t : 1
		constexpr auto bUseBoundsFromParentAnimComponent = 0x4ec; // uint32_t : 1
		constexpr auto bConsiderAllBodiesForBounds = 0x4ec; // uint32_t : 1
		constexpr auto bUpdateSkelWhenNotRendered = 0x4ec; // uint32_t : 1
		constexpr auto bIgnoreControllersWhenNotRendered = 0x4ec; // uint32_t : 1
		constexpr auto bTickAnimNodesWhenNotRendered = 0x4ec; // uint32_t : 1
		constexpr auto bNotUpdatingKinematicDueToDistance = 0x4ec; // uint32_t : 1
		constexpr auto bForceDiscardRootMotion = 0x4ec; // uint32_t : 1
		constexpr auto bNotifyRootMotionProcessed = 0x4ec; // uint32_t : 1
		constexpr auto bRootMotionModeChangeNotify = 0x4ec; // uint32_t : 1
		constexpr auto bRootMotionExtractedNotify = 0x4ec; // uint32_t : 1
		constexpr auto bProcessingRootMotion = 0x4ec; // uint32_t : 1
		constexpr auto bDisableFaceFXMaterialInstanceCreation = 0x4ec; // uint32_t : 1
		constexpr auto bDisableFaceFX = 0x4ec; // uint32_t : 1
		constexpr auto bAnimTreeInitialised = 0x4ec; // uint32_t : 1
		constexpr auto bForceMeshObjectUpdate = 0x4ec; // uint32_t : 1
		constexpr auto bHasPhysicsAssetInstance = 0x4ec; // uint32_t : 1
		constexpr auto bUpdateKinematicBonesFromAnimation = 0x4ec; // uint32_t : 1
		constexpr auto bUpdateJointsFromAnimation = 0x4ec; // uint32_t : 1
		constexpr auto bSkelCompFixed = 0x4ec; // uint32_t : 1
		constexpr auto bHasHadPhysicsBlendedIn = 0x4ec; // uint32_t : 1
		constexpr auto bForceUpdateAttachmentsInTick = 0x4ec; // uint32_t : 1
		constexpr auto bEnableFullAnimWeightBodies = 0x4ec; // uint32_t : 1
		constexpr auto bPerBoneVolumeEffects = 0x4ec; // uint32_t : 1
		constexpr auto bPerBoneMotionBlur = 0x4ec; // uint32_t : 1
		constexpr auto bSyncActorLocationToRootRigidBody = 0x4ec; // uint32_t : 1
		constexpr auto bUseRawData = 0x4ec; // uint32_t : 1
		constexpr auto bDisableWarningWhenAnimNotFound = 0x4f0; // uint32_t : 1
		constexpr auto bOverrideAttachmentOwnerVisibility = 0x4f0; // uint32_t : 1
		constexpr auto bOverrideAttachmentDepthPriorityGroup = 0x4f0; // uint32_t : 1
		constexpr auto bNeedsToDeleteHitMask = 0x4f0; // uint32_t : 1
		constexpr auto bPauseAnims = 0x4f0; // uint32_t : 1
		constexpr auto bPauseSkelControls = 0x4f0; // uint32_t : 1
		constexpr auto bChartDistanceFactor = 0x4f0; // uint32_t : 1
		constexpr auto bEnableLineCheckWithBounds = 0x4f0; // uint32_t : 1
		constexpr auto bCanHighlightSelectedSections = 0x4f0; // uint32_t : 1
		constexpr auto bUpdateMorphWhenParentAnimComponentExists = 0x4f0; // uint32_t : 1
		constexpr auto LineCheckBoundsScale = 0x4f4; // FVector
		constexpr auto bEnableClothSimulation = 0x500; // uint32_t : 1
		constexpr auto bDisableClothCollision = 0x500; // uint32_t : 1
		constexpr auto bClothFrozen = 0x500; // uint32_t : 1
		constexpr auto bAutoFreezeClothWhenNotRendered = 0x500; // uint32_t : 1
		constexpr auto bClothAwakeOnStartup = 0x500; // uint32_t : 1
		constexpr auto bClothBaseVelClamp = 0x500; // uint32_t : 1
		constexpr auto bClothBaseVelInterp = 0x500; // uint32_t : 1
		constexpr auto bAttachClothVertsToBaseBody = 0x500; // uint32_t : 1
		constexpr auto bIsClothOnStaticObject = 0x500; // uint32_t : 1
		constexpr auto bUpdatedFixedClothVerts = 0x500; // uint32_t : 1
		constexpr auto bClothPositionalDampening = 0x500; // uint32_t : 1
		constexpr auto bClothWindRelativeToOwner = 0x500; // uint32_t : 1
		constexpr auto bRecentlyRendered = 0x500; // uint32_t : 1
		constexpr auto bCacheAnimSequenceNodes = 0x500; // uint32_t : 1
		constexpr auto bNeedsInstanceWeightUpdate = 0x500; // uint32_t : 1
		constexpr auto bAlwaysUseInstanceWeights = 0x500; // uint32_t : 1
		constexpr auto bUpdateComposeSkeletonPasses = 0x500; // uint32_t : 1
		constexpr auto bValidTemporarySavedAnimSets = 0x500; // uint32_t : 1
		constexpr auto bHasDeferredPoseUpdate = 0x504; // int32_t
		constexpr auto c_nOverrideSkinId = 0x508; // int32_t
		constexpr auto c_nOverrideSkinLevel = 0x50c; // int32_t
		constexpr auto InstanceVertexWeightBones = 0x510; // TArray<FBonePair>
		constexpr auto LODInfo = 0x520; // TArray<FSkelMeshComponentLODInfo>
		constexpr auto FrozenLocalToWorldPos = 0x530; // FVector
		constexpr auto FrozenLocalToWorldRot = 0x53c; // FRotator
		constexpr auto ClothExternalForce = 0x548; // FVector
		constexpr auto ClothWind = 0x554; // FVector
		constexpr auto ClothBaseVelClampRange = 0x560; // FVector
		constexpr auto ClothBlendWeight = 0x56c; // float
		constexpr auto ClothDynamicBlendWeight = 0x570; // float
		constexpr auto ClothBlendMinDistanceFactor = 0x574; // float
		constexpr auto ClothBlendMaxDistanceFactor = 0x578; // float
		constexpr auto MinPosDampRange = 0x57c; // FVector
		constexpr auto MaxPosDampRange = 0x588; // FVector
		constexpr auto MinPosDampScale = 0x594; // FVector
		constexpr auto MaxPosDampScale = 0x5a0; // FVector
		constexpr auto ClothSim = 0x5ac; // FPointer
		constexpr auto SceneIndex = 0x5b4; // int32_t
		constexpr auto ClothMeshPosData = 0x5b8; // TArray<FVector>
		constexpr auto ClothMeshNormalData = 0x5c8; // TArray<FVector>
		constexpr auto ClothMeshIndexData = 0x5d8; // TArray<int32_t>
		constexpr auto NumClothMeshVerts = 0x5e8; // int32_t
		constexpr auto NumClothMeshIndices = 0x5ec; // int32_t
		constexpr auto ClothMeshParentData = 0x5f0; // TArray<int32_t>
		constexpr auto NumClothMeshParentIndices = 0x600; // int32_t
		constexpr auto ClothMeshWeldedPosData = 0x604; // TArray<FVector>
		constexpr auto ClothMeshWeldedNormalData = 0x614; // TArray<FVector>
		constexpr auto ClothMeshWeldedIndexData = 0x624; // TArray<int32_t>
		constexpr auto ClothDirtyBufferFlag = 0x634; // int32_t
		constexpr auto ClothRBChannel = 0x638; // ERBCollisionChannel
		constexpr auto ClothRBCollideWithChannels = 0x63c; // FRBCollisionChannelContainer
		constexpr auto ClothForceScale = 0x640; // float
		constexpr auto ClothImpulseScale = 0x644; // float
		constexpr auto ClothAttachmentTearFactor = 0x648; // float
		constexpr auto bClothUseCompartment = 0x64c; // uint32_t : 1
		constexpr auto MinDistanceForClothReset = 0x650; // float
		constexpr auto LastClothLocation = 0x654; // FVector
		constexpr auto ApexClothingRBChannel = 0x660; // ERBCollisionChannel
		constexpr auto ApexClothingRBCollideWithChannels = 0x664; // FRBCollisionChannelContainer
		constexpr auto ApexClothingCollisionRBChannel = 0x668; // ERBCollisionChannel
		constexpr auto bAutoFreezeApexClothingWhenNotRendered = 0x66c; // uint32_t : 1
		constexpr auto bLocalSpaceWind = 0x66c; // uint32_t : 1
		constexpr auto WindVelocity = 0x670; // FVector
		constexpr auto WindVelocityBlendTime = 0x67c; // float
		constexpr auto bSkipInitClothing = 0x680; // uint32_t : 1
		constexpr auto SoftBodySim = 0x684; // FPointer
		constexpr auto SoftBodySceneIndex = 0x68c; // int32_t
		constexpr auto bEnableSoftBodySimulation = 0x690; // uint32_t : 1
		constexpr auto SoftBodyTetraPosData = 0x694; // TArray<FVector>
		constexpr auto SoftBodyTetraIndexData = 0x6a4; // TArray<int32_t>
		constexpr auto NumSoftBodyTetraVerts = 0x6b4; // int32_t
		constexpr auto NumSoftBodyTetraIndices = 0x6b8; // int32_t
		constexpr auto SoftBodyImpulseScale = 0x6bc; // float
		constexpr auto bSoftBodyFrozen = 0x6c0; // uint32_t : 1
		constexpr auto bAutoFreezeSoftBodyWhenNotRendered = 0x6c0; // uint32_t : 1
		constexpr auto bSoftBodyAwakeOnStartup = 0x6c0; // uint32_t : 1
		constexpr auto bSoftBodyUseCompartment = 0x6c0; // uint32_t : 1
		constexpr auto SoftBodyRBChannel = 0x6c4; // ERBCollisionChannel
		constexpr auto SoftBodyRBCollideWithChannels = 0x6c8; // FRBCollisionChannelContainer
		constexpr auto SoftBodyASVPlane = 0x6cc; // FPointer
		constexpr auto LimitMaterial = 0x6d4; // ObjectProperty
		constexpr auto RootMotionDelta = 0x6e0; // FBoneAtom
		constexpr auto RootMotionVelocity = 0x700; // FVector
		constexpr auto RootBoneTranslation = 0x70c; // FVector
		constexpr auto RootMotionAccelScale = 0x718; // FVector
		constexpr auto RootMotionMode = 0x724; // ERootMotionMode
		constexpr auto PreviousRMM = 0x725; // ERootMotionMode
		constexpr auto PendingRMM = 0x726; // ERootMotionMode
		constexpr auto OldPendingRMM = 0x727; // ERootMotionMode
		constexpr auto bRMMOneFrameDelay = 0x728; // int32_t
		constexpr auto RootMotionRotationMode = 0x72c; // ERootMotionRotationMode
		constexpr auto AnimRotationOnly = 0x72d; // EAnimRotationOnly
		constexpr auto FaceFXBlendMode = 0x72e; // EFaceFXBlendMode
		constexpr auto FaceFXActorInstance = 0x730; // FPointer
		constexpr auto CachedFaceFXAudioComp = 0x738; // ComponentProperty
		constexpr auto BoneVisibilityStates = 0x740; // TArray<char>
		constexpr auto CachedFaceFxAkEvent = 0x750; // ObjectProperty
		constexpr auto LocalToWorldBoneAtom = 0x760; // FBoneAtom
		constexpr auto ProgressiveDrawingFraction = 0x780; // float
		constexpr auto CustomSortAlternateIndexMode = 0x784; // char
		constexpr auto MorphTargetsQueried = 0x788; // TArray<FName>
		constexpr auto bUseTickOptimization = 0x798; // uint32_t : 1
		constexpr auto TickCount = 0x79c; // int32_t
		constexpr auto LastDropRate = 0x7a0; // int32_t
		constexpr auto LastDropRateChange = 0x7a4; // float
		constexpr auto AccumulatedDroppedDeltaTime = 0x7a8; // float
		constexpr auto ComponentDroppedDeltaTime = 0x7ac; // float
		constexpr auto FOV = 0x7b0; // float
	}

	namespace n_UUIComponent_CustomizeSlot { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcLock = 0x134; // ObjectProperty
		constexpr auto m_pAvatar = 0x13c; // ObjectProperty
		constexpr auto m_pIcon = 0x144; // ObjectProperty
		constexpr auto m_pObtainability = 0x14c; // ObjectProperty
	}

	namespace n_UMaterialExpressionCrossProduct { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_USVehicleSimBase { // : UActorComponent
		constexpr auto WheelSuspensionStiffness = 0x88; // float
		constexpr auto WheelSuspensionDamping = 0x8c; // float
		constexpr auto WheelSuspensionBias = 0x90; // float
		constexpr auto WheelLongExtremumSlip = 0x94; // float
		constexpr auto WheelLongExtremumValue = 0x98; // float
		constexpr auto WheelLongAsymptoteSlip = 0x9c; // float
		constexpr auto WheelLongAsymptoteValue = 0xa0; // float
		constexpr auto WheelLatExtremumSlip = 0xa4; // float
		constexpr auto WheelLatExtremumValue = 0xa8; // float
		constexpr auto WheelLatAsymptoteSlip = 0xac; // float
		constexpr auto WheelLatAsymptoteValue = 0xb0; // float
		constexpr auto WheelInertia = 0xb4; // float
		constexpr auto bWheelSpeedOverride = 0xb8; // uint32_t : 1
		constexpr auto bClampedFrictionModel = 0xb8; // uint32_t : 1
		constexpr auto bAutoDrive = 0xb8; // uint32_t : 1
		constexpr auto AutoDriveSteer = 0xbc; // float
	}

	namespace n_UParticleModuleEventReceiverSpawn { // : UParticleModuleEventReceiverBase
		constexpr auto SpawnCount = 0x74; // FRawDistributionFloat
		constexpr auto bUseParticleTime = 0x98; // uint32_t : 1
		constexpr auto bUsePSysLocation = 0x98; // uint32_t : 1
		constexpr auto bInheritVelocity = 0x98; // uint32_t : 1
		constexpr auto InheritVelocityScale = 0x9c; // FRawDistributionVector
	}

	namespace n_UTgInventoryObject_Listen_ProcOnDamageThreshold { // : UTgInventoryObject_Listen_AbilityInstant
		constexpr auto m_fAccumulatedDamage = 0xcc; // float
		constexpr auto m_bAppliedSinceLastFire = 0xd0; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_CreditDamageOnHeal { // : UTgInvListener
		constexpr auto m_fLastHealTimeStamp = 0xc4; // float
	}

	namespace n_USeqAct_SetFloat { // : USeqAct_SetSequenceVariable
		constexpr auto Target = 0x108; // float
		constexpr auto Value = 0x10c; // TArray<float>
	}

	namespace n_UTgAnimTurnInPlace_Player { // : UAnimNodeSequence
		constexpr auto TIP_Transitions = 0x1ac; // TArray<FTIP_Transition>
	}

	namespace n_USeqEvent_ParticleEvent { // : USequenceEvent
		constexpr auto EventType = 0x128; // EParticleEventOutputType
		constexpr auto EventPosition = 0x12c; // FVector
		constexpr auto EventEmitterTime = 0x138; // float
		constexpr auto EventVelocity = 0x13c; // FVector
		constexpr auto EventParticleTime = 0x148; // float
		constexpr auto EventNormal = 0x14c; // FVector
		constexpr auto UseRelfectedImpactVector = 0x158; // uint32_t : 1
	}

	namespace n_UTgAchievement_Damage { // : UTgAchievement
		constexpr auto m_fDamageDealt = 0x94; // float
	}

	namespace n_USeqAct_Interp { // : USeqAct_Latent
		constexpr auto SavedActorTransforms = 0x120; // TMap<None, None>
		constexpr auto SavedActorVisibilities = 0x168; // TMap<None, None>
		constexpr auto PlayRate = 0x1b0; // float
		constexpr auto Position = 0x1b4; // float
		constexpr auto ForceStartPosition = 0x1b8; // float
		constexpr auto bIsPlaying = 0x1bc; // uint32_t : 1
		constexpr auto bPaused = 0x1bc; // uint32_t : 1
		constexpr auto bIsBeingEdited = 0x1bc; // uint32_t : 1
		constexpr auto bLooping = 0x1bc; // uint32_t : 1
		constexpr auto bRewindOnPlay = 0x1bc; // uint32_t : 1
		constexpr auto bNoResetOnRewind = 0x1bc; // uint32_t : 1
		constexpr auto bRewindIfAlreadyPlaying = 0x1bc; // uint32_t : 1
		constexpr auto bReversePlayback = 0x1bc; // uint32_t : 1
		constexpr auto bInterpForPathBuilding = 0x1bc; // uint32_t : 1
		constexpr auto bForceStartPos = 0x1bc; // uint32_t : 1
		constexpr auto bDisableRadioFilter = 0x1bc; // uint32_t : 1
		constexpr auto bClientSideOnly = 0x1bc; // uint32_t : 1
		constexpr auto bSkipUpdateIfNotVisible = 0x1bc; // uint32_t : 1
		constexpr auto bIsSkippable = 0x1bc; // uint32_t : 1
		constexpr auto bShouldShowGore = 0x1bc; // uint32_t : 1
		constexpr auto LinkedCover = 0x1c0; // TArray<ObjectProperty>
		constexpr auto InterpData = 0x1d0; // ObjectProperty
		constexpr auto GroupInst = 0x1d8; // TArray<ObjectProperty>
		constexpr auto ReplicatedActorClass = 0x1e8; // AMatineeActor*
		constexpr auto ReplicatedActor = 0x1f0; // ObjectProperty
		constexpr auto PreferredSplitScreenNum = 0x1f8; // int32_t
		constexpr auto CameraCuts = 0x1fc; // TArray<FCameraCutInfo>
		constexpr auto TerminationTime = 0x20c; // float
		constexpr auto RenderingOverrides = 0x210; // FRenderingPerformanceOverrides
		constexpr auto ConstantCameraAnim = 0x214; // char
		constexpr auto ConstantCameraAnimRate = 0x218; // float
	}

	namespace n_ATgDevice_DredgeRMB { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
		constexpr auto m_RevealDev = 0xa10; // ObjectProperty
	}

	namespace n_ATgDevice_BunnyDefense { // : ATgDevice
		constexpr auto m_CachedBunny = 0xa08; // ObjectProperty
		constexpr auto m_fAoEPeriod = 0xa10; // float
		constexpr auto m_fAoEProcTimeRemaining = 0xa14; // float
		constexpr auto m_bAoEPostFireOnly = 0xa18; // uint32_t : 1
		constexpr auto m_bEnemyEffectsApplied = 0xa18; // uint32_t : 1
	}

	namespace n_ATgAIController_BehaviorPet { // : ATgAIController_Behavior
		constexpr auto OwnerCombatTarget = 0x930; // ObjectProperty
	}

	namespace n_ATgProj_NonSimulated { // : ATgProjectile
		constexpr auto m_LagCompStep = 0x450; // float
		constexpr auto m_bPerformingLagCompensation = 0x454; // uint32_t : 1
		constexpr auto m_bProcessingLagCompedTouches = 0x454; // uint32_t : 1
		constexpr auto m_LagCompedQueuedHits = 0x458; // TArray<FLagCompedQueuedHitInfo>
	}

	namespace n_ALadder { // : ANavigationPoint
		constexpr auto MyLadder = 0x378; // ObjectProperty
		constexpr auto LadderList = 0x380; // ObjectProperty
	}

	namespace n_UEdCoordSystem { // : UObject
		constexpr auto M = 0x60; // FMatrix
		constexpr auto Desc = 0xa0; // FString
	}

	namespace n_UTgSpecialFx { // : UObject
		constexpr auto c_nFxId = 0x60; // int32_t
		constexpr auto c_OwnerMesh = 0x64; // ComponentProperty
		constexpr auto c_Owner = 0x6c; // ObjectProperty
		constexpr auto c_bAttached = 0x74; // uint32_t : 1
		constexpr auto c_bAppliesToAllModes = 0x74; // uint32_t : 1
		constexpr auto c_bSelfManage = 0x74; // uint32_t : 1
		constexpr auto c_bFromEffectForm = 0x74; // uint32_t : 1
		constexpr auto c_bVisualComplete = 0x74; // uint32_t : 1
		constexpr auto c_bAudioComplete = 0x74; // uint32_t : 1
		constexpr auto c_bMuteSound = 0x74; // uint32_t : 1
		constexpr auto c_bIsDebuff = 0x74; // uint32_t : 1
		constexpr auto c_bHasTeamMaterials = 0x74; // uint32_t : 1
		constexpr auto c_bActive = 0x74; // uint32_t : 1
		constexpr auto c_bSoundActive = 0x74; // uint32_t : 1
		constexpr auto c_bIsSpawnFx = 0x74; // uint32_t : 1
		constexpr auto c_bUseBeam = 0x74; // uint32_t : 1
		constexpr auto c_bLifetimeManagedExternally = 0x74; // uint32_t : 1
		constexpr auto c_bLocalPawnIsOwner = 0x74; // uint32_t : 1
		constexpr auto m_bMatLoaded = 0x74; // uint32_t : 1
		constexpr auto m_bMatLoadedFriendly = 0x74; // uint32_t : 1
		constexpr auto m_bMatLoadedLocal = 0x74; // uint32_t : 1
		constexpr auto m_bDecalMatLoaded = 0x74; // uint32_t : 1
		constexpr auto m_bDecalMatLoadedFriendly = 0x74; // uint32_t : 1
		constexpr auto m_bDecalMatLoadedLocal = 0x74; // uint32_t : 1
		constexpr auto c_nPriorityType = 0x78; // int32_t
		constexpr auto c_nPrioritySort = 0x7c; // int32_t
		constexpr auto c_nmSocket = 0x80; // FName
		constexpr auto c_nmDisplayGroup = 0x88; // FName
		constexpr auto c_nDisplayMode = 0x90; // int32_t
		constexpr auto c_nIndex = 0x94; // int32_t
		constexpr auto c_nEquipSlot = 0x98; // int32_t
		constexpr auto c_MaterialInstance = 0x9c; // ObjectProperty
		constexpr auto c_fTransition = 0xa4; // float
		constexpr auto c_nHitEffectBase = 0xa8; // int32_t
		constexpr auto c_fMaxEffectDistance = 0xac; // float
		constexpr auto c_ParticleChannelOverride = 0xb0; // FParticleChannelContainer
		constexpr auto c_nSortPriorityOverride = 0xb4; // int32_t
		constexpr auto c_LightComponentState = 0xb8; // ELightFxState
		constexpr auto c_LightComponent = 0xbc; // ComponentProperty
		constexpr auto c_ManagedLightEmitter = 0xc4; // FPointer
		constexpr auto c_SoundList = 0xcc; // TArray<FFx_Sound>
		constexpr auto c_PSCList = 0xdc; // TArray<FFx_PSC>
		constexpr auto c_MaterialList = 0xec; // TArray<FFx_Material>
		constexpr auto c_DecalList = 0xfc; // TArray<FFx_Decal>
		constexpr auto c_CameraShake = 0x10c; // ObjectProperty
		constexpr auto c_ActiveTimer = 0x114; // ObjectProperty
		constexpr auto m_AppliedMaterials = 0x11c; // TArray<FAppliedMaterialHandle>
	}

	namespace n_ATgPawn_Lazarus { // : ATgPawn_Character
		constexpr auto m_pCrystalDeployable = 0x3164; // ObjectProperty
		constexpr auto m_SelfResurrectionDevice = 0x316c; // ObjectProperty
		constexpr auto m_AbsorptionFieldDevice = 0x3174; // ObjectProperty
		constexpr auto m_ChargeBurstDevice = 0x317c; // ObjectProperty
		constexpr auto m_ShatterfallDevice = 0x3184; // ObjectProperty
		constexpr auto m_SeethingRageCard = 0x318c; // ObjectProperty
		constexpr auto m_PlayingGodCard = 0x3194; // ObjectProperty
		constexpr auto m_ItWaitsCard = 0x319c; // ObjectProperty
		constexpr auto m_StoneStrengthCard = 0x31a4; // ObjectProperty
		constexpr auto m_ItFollowsCard = 0x31ac; // ObjectProperty
		constexpr auto m_CameraShake = 0x31b4; // ObjectProperty
		constexpr auto m_CameraShakeOwner = 0x31bc; // ObjectProperty
		constexpr auto m_InhandShake0 = 0x31c4; // ObjectProperty
		constexpr auto m_InhandShake1 = 0x31cc; // ObjectProperty
		constexpr auto m_UltimateShake = 0x31d4; // ObjectProperty
		constexpr auto m_Killer = 0x31dc; // ObjectProperty
		constexpr auto r_bShouldRez = 0x31e4; // uint32_t : 1
		constexpr auto m_bUseShatterFallZoom = 0x31e4; // uint32_t : 1
		constexpr auto m_bUsingDeathMesh = 0x31e4; // uint32_t : 1
		constexpr auto r_fEnergy = 0x31e8; // float
		constexpr auto r_fAccumulatedDamage = 0x31ec; // float
		constexpr auto r_mCurrentState = 0x31f0; // ResurrectionState
		constexpr auto m_nChargeNumber = 0x31f4; // int32_t
		constexpr auto m_PreviousZHeight = 0x31f8; // float
		constexpr auto m_GravityMultiplier = 0x31fc; // float
		constexpr auto m_fItWaitsTimer = 0x3200; // float
		constexpr auto m_fItFollowsMovementSpeedMult = 0x3204; // float
		constexpr auto m_fStrengthOfStoneDamageReduction = 0x3208; // float
		constexpr auto m_nDeathMeshAsmId = 0x320c; // int32_t
		constexpr auto m_nQueuedFireDevice = 0x3210; // int32_t
		constexpr auto m_BloodStoneTargets = 0x3214; // TArray<FBloodStoneTarget>
	}

	namespace n_ATgDefensePoint { // : ATgNavigationPoint
		constexpr auto CurrentUser = 0x37c; // ObjectProperty
		constexpr auto NextDefensePoint = 0x384; // ObjectProperty
		constexpr auto bFirstScript = 0x38c; // uint32_t : 1
		constexpr auto bSniping = 0x38c; // uint32_t : 1
		constexpr auto bDontChangePosition = 0x38c; // uint32_t : 1
		constexpr auto bAvoid = 0x38c; // uint32_t : 1
		constexpr auto bDisabled = 0x38c; // uint32_t : 1
		constexpr auto bNotInVehicle = 0x38c; // uint32_t : 1
		constexpr auto Priority = 0x390; // char
		constexpr auto WeaponPreference = 0x394; // AWeapon*
		constexpr auto NumChecked = 0x39c; // float
	}

	namespace n_USeqAct_SetMatInstScalarParam { // : USequenceAction
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto ParamName = 0x110; // FName
		constexpr auto ScalarValue = 0x118; // float
	}

	namespace n_UTgAnimMetaData_SkelControl_BoneScale { // : UAnimMetaData
		constexpr auto SkelControlNameList = 0x60; // TArray<FName>
		constexpr auto BoneScale = 0x70; // float
		constexpr auto bFullControlOverController = 0x74; // uint32_t : 1
		constexpr auto SkelControlName = 0x78; // FName
	}

	namespace n_UTgEffectForm_BuffBelt { // : UTgEffectForm
		constexpr auto VfTable_FTickableObject = 0xfc; // FPointer
		constexpr auto m_OrbitAngleYawOffset = 0x104; // float
		constexpr auto m_OrbitHeightOffset = 0x108; // float
		constexpr auto m_bFirstUpdate = 0x10c; // uint32_t : 1
		constexpr auto m_OrbitRotationSpeed = 0x110; // float
	}

	namespace n_UUIScene_UIHudMap { // : UUIScene
		constexpr auto m_pGamepadSelectAction = 0x1cc; // ObjectProperty
	}

	namespace n_ATgCapturePoint { // : AActor
		constexpr auto s_CollisionProxy = 0x280; // ObjectProperty
		constexpr auto r_RepInfo = 0x288; // ObjectProperty
		constexpr auto m_fCollisionProxyRadius = 0x290; // float
		constexpr auto m_fCollisionProxyHeight = 0x294; // float
		constexpr auto m_fBaseTransitionSpeed = 0x298; // float
		constexpr auto m_fTransitionSpeedBuff = 0x29c; // float
		constexpr auto m_fCurrentTransitionSpeed = 0x2a0; // float
		constexpr auto c_OwnershipChangedKismetNode = 0x2a4; // ObjectProperty
		constexpr auto s_BotSpawners = 0x2ac; // ObjectProperty [0x2]
		constexpr auto m_CurrentBotSpawners = 0x2bc; // ObjectProperty [0x2]
		constexpr auto s_NeutralBotSpawner = 0x2cc; // ObjectProperty
		constexpr auto m_CapturePointIndex = 0x2d4; // int32_t
		constexpr auto s_fReplenishBotTime = 0x2d8; // float
		constexpr auto s_fRemainingReplenishBotTime = 0x2dc; // float
		constexpr auto s_fFriendlyReplenishBuffPct = 0x2e0; // float
		constexpr auto m_fRegenUpdateTimer = 0x2e4; // float
		constexpr auto m_fOwnedManaRegen = 0x2e8; // float
		constexpr auto m_fOwnedHealthRegen = 0x2ec; // float
		constexpr auto s_GameInfo = 0x2f0; // ObjectProperty
		constexpr auto m_nTF1Count = 0x2f8; // int32_t
		constexpr auto m_nTF2Count = 0x2fc; // int32_t
		constexpr auto m_fLastEnemyKillVoxTimestamp = 0x300; // float
		constexpr auto m_nLaneNumber = 0x304; // int32_t
		constexpr auto m_WorldIconSprite = 0x308; // ComponentProperty
	}

	namespace n_UTgDeviceForm_ShadowUlt { // : UTgDeviceForm
		constexpr auto m_pBeam = 0x28c; // ObjectProperty
		constexpr auto m_pShadow = 0x294; // ObjectProperty
		constexpr auto m_VatuUltNodes3p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_VatuUltNodes1p = 0x2ac; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_MatchLobbyChampionList { // : UUIComponent_Display
		constexpr auto m_mcPick = 0x124; // ObjectProperty
		constexpr auto m_mcPickAnimA = 0x12c; // ObjectProperty
		constexpr auto m_mcPickAnimB = 0x134; // ObjectProperty
		constexpr auto m_mcDimmer = 0x13c; // ObjectProperty
		constexpr auto m_ChampionList = 0x144; // ObjectProperty
		constexpr auto m_RoleTabs = 0x14c; // ObjectProperty
		constexpr auto m_TabLeft = 0x154; // ObjectProperty
		constexpr auto m_TabRight = 0x15c; // ObjectProperty
		constexpr auto m_bChampionsShown = 0x164; // uint32_t : 1
		constexpr auto m_bChampionsEnabled = 0x164; // uint32_t : 1
	}

	namespace n_AFrameworkGame { // : AGameInfo
		constexpr auto RequiredMobileInputConfigs = 0x4cc; // TArray<FRequiredMobileInputConfig>
	}

	namespace n_UDistributionFloatConstant { // : UDistributionFloat
		constexpr auto Constant = 0x7c; // float
	}

	namespace n_UTgGamePhase_CreditsOnPointTick { // : UTgGamePhase
		constexpr auto m_nCreditsPerTick = 0xb8; // int32_t
	}

	namespace n_UPhysicsLODVerticalEmitter { // : UObject
		constexpr auto ParticlePercentage = 0x60; // int32_t
	}

	namespace n_USystem { // : USubsystem
		constexpr auto StaleCacheDays = 0x68; // int32_t
		constexpr auto MaxStaleCacheSize = 0x6c; // int32_t
		constexpr auto MaxOverallCacheSize = 0x70; // int32_t
		constexpr auto PackageSizeSoftLimit = 0x74; // int32_t
		constexpr auto AsyncIOBandwidthLimit = 0x78; // float
		constexpr auto SavePath = 0x7c; // FString
		constexpr auto CachePath = 0x8c; // FString
		constexpr auto CacheExt = 0x9c; // FString
		constexpr auto Paths = 0xac; // TArray<FString>
		constexpr auto SeekFreePCPaths = 0xbc; // TArray<FString>
		constexpr auto ScriptPaths = 0xcc; // TArray<FString>
		constexpr auto FRScriptPaths = 0xdc; // TArray<FString>
		constexpr auto CutdownPaths = 0xec; // TArray<FString>
		constexpr auto Suppress = 0xfc; // TArray<FName>
		constexpr auto Extensions = 0x10c; // TArray<FString>
		constexpr auto SeekFreePCExtensions = 0x11c; // TArray<FString>
		constexpr auto LocalizationPaths = 0x12c; // TArray<FString>
		constexpr auto ArchivePaths = 0x13c; // TArray<FString>
		constexpr auto TextureFileCacheExtension = 0x14c; // FString
	}

	namespace n_APylonSeed { // : AActor
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x280; // FPointer
	}

	namespace n_UMaterialExpressionTextureCoordinate { // : UMaterialExpression
		constexpr auto CoordinateIndex = 0xb0; // int32_t
		constexpr auto UTiling = 0xb4; // float
		constexpr auto VTiling = 0xb8; // float
		constexpr auto UnMirrorU = 0xbc; // uint32_t : 1
		constexpr auto UnMirrorV = 0xbc; // uint32_t : 1
	}

	namespace n_USeqAct_CameraFade { // : USequenceAction
		constexpr auto FadeColor = 0x108; // FColor
		constexpr auto FadeAlpha = 0x10c; // FVector2D
		constexpr auto FadeOpacity = 0x114; // float
		constexpr auto FadeTime = 0x118; // float
		constexpr auto bPersistFade = 0x11c; // uint32_t : 1
		constexpr auto bFadeAudio = 0x11c; // uint32_t : 1
		constexpr auto FadeTimeRemaining = 0x120; // float
		constexpr auto CachedPCs = 0x124; // TArray<ObjectProperty>
	}

	namespace n_UUIData_PlayerMatchRecord { // : UUIData
		constexpr auto VfTable_IUIDataInterface_Name = 0x64; // FPointer
		constexpr auto nBotId = 0x6c; // int32_t
		constexpr auto nPlayerId = 0x70; // int32_t
		constexpr auto dwCharacterId = 0x74; // Fdword
		constexpr auto nLevel = 0x78; // int32_t
		constexpr auto nKills = 0x7c; // int32_t
		constexpr auto nDeaths = 0x80; // int32_t
		constexpr auto nAssists = 0x84; // int32_t
		constexpr auto nEarnedCredits = 0x88; // int32_t
		constexpr auto nHealingPlayer = 0x8c; // int32_t
		constexpr auto nHealingBot = 0x90; // int32_t
		constexpr auto nHealingTotal = 0x94; // int32_t
		constexpr auto nSelfHealing = 0x98; // int32_t
		constexpr auto nDmgTaken = 0x9c; // int32_t
		constexpr auto nDmgPlayer = 0xa0; // int32_t
		constexpr auto nDmgBot = 0xa4; // int32_t
		constexpr auto nDmgTotal = 0xa8; // int32_t
		constexpr auto nSoloKills = 0xac; // int32_t
		constexpr auto nFlankKills = 0xb0; // int32_t
		constexpr auto nMultikill = 0xb4; // int32_t
		constexpr auto nKillstreak = 0xb8; // int32_t
		constexpr auto nDmgStructure = 0xbc; // int32_t
		constexpr auto nDmgMitigated = 0xc0; // int32_t
		constexpr auto nObjectiveTime = 0xc4; // int32_t
		constexpr auto nCards = 0xc8; // int32_t [0x5]
		constexpr auto nCardLevels = 0xdc; // int32_t [0x5]
		constexpr auto nLegendary = 0xf0; // int32_t
		constexpr auto nLegendaryLevel = 0xf4; // int32_t
		constexpr auto nPassive = 0xf8; // int32_t
		constexpr auto nPassiveLevel = 0xfc; // int32_t
		constexpr auto nPurchasedItems = 0x100; // int32_t [0x4]
		constexpr auto nPurchasedItemLevels = 0x110; // int32_t [0x4]
		constexpr auto nMountItemId = 0x120; // int32_t
		constexpr auto nEmoteItemId = 0x124; // int32_t
		constexpr auto nMVPPoseItemId = 0x128; // int32_t
		constexpr auto nSprayItemId = 0x12c; // int32_t
		constexpr auto nTitleItemId = 0x130; // int32_t
		constexpr auto nTaskForce = 0x134; // int32_t
		constexpr auto bAlly = 0x138; // uint32_t : 1
		constexpr auto bLocal = 0x138; // uint32_t : 1
		constexpr auto bReported = 0x138; // uint32_t : 1
		constexpr auto bIsPaidBattlePass = 0x138; // uint32_t : 1
		constexpr auto bIsVerifiedPlayer = 0x138; // uint32_t : 1
		constexpr auto m_bPendingFilterRequest = 0x138; // uint32_t : 1
		constexpr auto sPlayer = 0x13c; // FString
		constexpr auto ConsoleUniqueId = 0x14c; // FUniqueNetId
		constexpr auto dwPortalId = 0x154; // Fdword
		constexpr auto dwBattlePassXp = 0x158; // Fdword
	}

	namespace n_UUIData_Accolade { // : UUIData
		constexpr auto m_nIconFrame = 0x64; // int32_t
		constexpr auto m_nValue = 0x68; // int32_t
		constexpr auto m_nTitleId = 0x6c; // int32_t
	}

	namespace n_USeqAct_GetVectorComponents { // : USequenceAction
		constexpr auto InVector = 0x108; // FVector
		constexpr auto X = 0x114; // float
		constexpr auto Y = 0x118; // float
		constexpr auto Z = 0x11c; // float
	}

	namespace n_UAnimNode_MultiBlendPerBone { // : UAnimNodeBlendBase
		constexpr auto PawnOwner = 0x114; // ObjectProperty
		constexpr auto MaskList = 0x11c; // TArray<FPerBoneMaskInfo>
		constexpr auto RotationBlendType = 0x12c; // EBlendType
	}

	namespace n_UExporter { // : UObject
		constexpr auto FormatExtension = 0x68; // TArray<FString>
		constexpr auto FormatDescription = 0x78; // TArray<FString>
	}

	namespace n_UUIComponent_LoadoutImportPlayerEntry { // : UUIComponent_Display
		constexpr auto m_mcRank = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
		constexpr auto m_mcAvatarIcon = 0x134; // ObjectProperty
		constexpr auto m_Import = 0x13c; // ObjectProperty
	}

	namespace n_UDistributionFloatParameterBase { // : UDistributionFloatConstant
		constexpr auto ParameterName = 0x80; // FName
		constexpr auto MinInput = 0x88; // float
		constexpr auto MaxInput = 0x8c; // float
		constexpr auto MinOutput = 0x90; // float
		constexpr auto MaxOutput = 0x94; // float
		constexpr auto ParamMode = 0x98; // DistributionParamMode
	}

	namespace n_UUIData_RadialEquipMenu { // : UUIData
		constexpr auto m_bEmoteDisplay = 0x64; // uint32_t : 1
		constexpr auto m_SlotData = 0x68; // TArray<ObjectProperty>
	}

	namespace n_UFailedConnect { // : ULocalMessage
		constexpr auto FailMessage = 0x74; // FString [0x4]
	}

	namespace n_UTgAnimBlendByWeaponSkin { // : UTgAnimNodeBlendList
		constexpr auto m_SkinMap = 0x168; // TArray<FWeaponSkinChildInfo>
	}

	namespace n_UTgSkelCon_AstroSpinner { // : UTgSkelCon_Spinner
		constexpr auto m_PawnOwner = 0x144; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_AdrenalineJunkie { // : UTgInvListener
		constexpr auto m_CachedRestoreStaminaDevice = 0xc4; // ObjectProperty
		constexpr auto m_CachedNinjaSMG = 0xcc; // ObjectProperty
		constexpr auto m_DamageRemainder = 0xd4; // float
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInTowerRadius { // : UTgAIBehaviorCondition
		constexpr auto bGodsMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto bTowerMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto GodThreshold = 0x9c; // int32_t
	}

	namespace n_ATgHoldSpot { // : ATgDefensePoint
		constexpr auto HoldVehicle = 0x3a0; // ObjectProperty
	}

	namespace n_UTgDeviceForm_VanguardUlt { // : UTgDeviceForm
		constexpr auto m_PullBeam = 0x28c; // ObjectProperty
		constexpr auto m_VanguardUltNodes3p = 0x294; // TArray<ObjectProperty>
		constexpr auto m_VanguardUltNodes1p = 0x2a4; // TArray<ObjectProperty>
		constexpr auto m_Target = 0x2b4; // ObjectProperty
		constexpr auto m_nPosture = 0x2bc; // int32_t
		constexpr auto m_eVanguardUltAnimState = 0x2c0; // VanguardUltAnimUpdate
	}

	namespace n_ATgDeploy_EffectTrail { // : ATgDeploy_MatchParentFireMode
		constexpr auto r_TrailPawn = 0x46c; // ObjectProperty
		constexpr auto m_TrailEffectID = 0x474; // int32_t
		constexpr auto m_TrailEffects = 0x478; // ObjectProperty
		constexpr auto m_bHasInitialPoint = 0x480; // uint32_t : 1
		constexpr auto r_bInDeployMode = 0x480; // uint32_t : 1
		constexpr auto m_fPointDistance = 0x484; // float
		constexpr auto m_fPointLifetime = 0x488; // float
		constexpr auto m_nNextPointIndex = 0x48c; // int32_t
		constexpr auto m_nTailPointIndex = 0x490; // int32_t
		constexpr auto m_TrailPoints = 0x494; // FVector [0x14]
		constexpr auto m_ParticleSystemOffsets = 0x584; // FVector [0x14]
		constexpr auto m_TrailTimes = 0x674; // float [0x14]
		constexpr auto m_CollisionProxies = 0x6c4; // ObjectProperty [0x14]
		constexpr auto m_Decals = 0x764; // ComponentProperty [0x14]
	}

	namespace n_UNavMeshGoalFilter_OutSideOfDotProductWedge { // : UNavMeshGoal_Filter
		constexpr auto Location = 0x6c; // FVector
		constexpr auto Rotation = 0x78; // FVector
		constexpr auto Epsilon = 0x84; // float
	}

	namespace n_USeqAct_GetProperty { // : USequenceAction
		constexpr auto PropertyName = 0x108; // FName
	}

	namespace n_UMcpUserManager { // : UMcpUserManagerBase
		constexpr auto UserStatuses = 0xb8; // TArray<FMcpUserStatus>
		constexpr auto RegisterUserMcpUrl = 0xc8; // FString
		constexpr auto RegisterUserEmailUrl = 0xd8; // FString
		constexpr auto RegisterUserFacebookUrl = 0xe8; // FString
		constexpr auto QueryUserUrl = 0xf8; // FString
		constexpr auto QueryUsersUrl = 0x108; // FString
		constexpr auto DeleteUserUrl = 0x118; // FString
		constexpr auto RegisterUserRequests = 0x128; // TArray<FRegisterUserRequest>
		constexpr auto QueryUsersRequests = 0x138; // TArray<ObjectProperty>
		constexpr auto DeleteUserRequests = 0x148; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SetHexState { // : USequenceAction
		constexpr auto m_bChallengerWon = 0x108; // uint32_t : 1
	}

	namespace n_UTgEffectForm_Maeve_Midnight { // : UTgEffectForm
		constexpr auto m_nEndFXId = 0xfc; // int32_t
		constexpr auto m_pEndFX = 0x100; // ObjectProperty
		constexpr auto m_pCameraEffect = 0x108; // ObjectProperty
		constexpr auto m_fEndFXKillTime = 0x110; // float
	}

	namespace n_UTgSeqAct_TutorialInstruction { // : USequenceAction
		constexpr auto nMsgId = 0x108; // int32_t
	}

	namespace n_USoundNodeModulatorContinuous { // : USoundNode
		constexpr auto PitchModulation = 0x74; // FRawDistributionFloat
		constexpr auto VolumeModulation = 0x98; // FRawDistributionFloat
	}

	namespace n_ATgDoorMarker { // : ATgTeamBlocker
		constexpr auto r_eStatus = 0x29c; // DoorStatus
		constexpr auto m_eInitStatus = 0x29d; // DoorStatus
		constexpr auto s_CollisionProxy = 0x2a0; // ObjectProperty
		constexpr auto m_fProximity = 0x2a8; // float
		constexpr auto m_nTeamThatControlsDoor = 0x2ac; // int32_t
		constexpr auto m_nMeshAssemblyId = 0x2b0; // int32_t
		constexpr auto m_DoorSMC = 0x2b4; // ComponentProperty
	}

	namespace n_UUIComponent_Button_LoadoutTitle { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcRarityText = 0x12c; // ObjectProperty
		constexpr auto m_mcFade = 0x134; // ObjectProperty
		constexpr auto m_mcColorBlock = 0x13c; // ObjectProperty
	}

	namespace n_UMaterialExpressionOneMinus { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgDeviceForm_TurtlePower { // : UTgDeviceForm
		constexpr auto m_bShouldBeActive = 0x28c; // uint32_t : 1
		constexpr auto m_fRageActivationTime = 0x290; // float
		constexpr auto m_fRageActivationPercent = 0x294; // float
	}

	namespace n_ATgPickupFactory_Item { // : ATgPickupFactory
		constexpr auto PickupSound = 0x3d4; // ObjectProperty
		constexpr auto PickupMessage = 0x3dc; // FString
		constexpr auto RespawnTime = 0x3ec; // float
	}

	namespace n_UTgSeqAct_BeaconEntranceSetActive { // : USequenceAction
		constexpr auto m_bSetActive = 0x108; // uint32_t : 1
	}

	namespace n_ATgPawn_Azaan { // : ATgPawn_Character
		constexpr auto r_fIreBuff = 0x3164; // float
		constexpr auto m_fMaxIre = 0x3168; // float
		constexpr auto m_fIreDamagePercent = 0x316c; // float
		constexpr auto m_fIreDamageDonePercent = 0x3170; // float
		constexpr auto s_fIreDecayStartTime = 0x3174; // float
		constexpr auto m_fIreThreshold = 0x3178; // float
		constexpr auto m_fDRAtMax = 0x317c; // float
		constexpr auto m_fIreDecayDelay = 0x3180; // float
		constexpr auto m_fIreDecayRate = 0x3184; // float
		constexpr auto m_fIreDamageIncreasePercent = 0x3188; // float
		constexpr auto m_fIreDamageDecreasePercent = 0x318c; // float
		constexpr auto m_fFrictionMultiplier = 0x3190; // float
		constexpr auto m_bAboveIre = 0x3194; // uint32_t : 1
		constexpr auto m_bHasIreDrainStopTalent = 0x3194; // uint32_t : 1
		constexpr auto m_CachedUlt = 0x3198; // ObjectProperty
		constexpr auto m_CachedDash = 0x31a0; // ObjectProperty
		constexpr auto m_CachedListener = 0x31a8; // ObjectProperty
		constexpr auto m_fFlightMaxRiseSpeed = 0x31b0; // float
		constexpr auto m_fUltStartHeight = 0x31b4; // float
		constexpr auto m_fMaxHoverDistance = 0x31b8; // float
		constexpr auto m_fDampenVelocityFactor = 0x31bc; // float
		constexpr auto m_fMaxUpwardsVelocity = 0x31c0; // float
		constexpr auto m_fMinUpwardsVelocity = 0x31c4; // float
		constexpr auto m_fUpwardsAccel = 0x31c8; // float
		constexpr auto m_nmIreAboveThreshold = 0x31cc; // FName
		constexpr auto m_nmIreDropBelowThreshold = 0x31d4; // FName
		constexpr auto m_nIreDrainDeviceID = 0x31dc; // int32_t
	}

	namespace n_ATgDevice_Barrage { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_BarrageFireDevice = 0xa10; // ObjectProperty
	}

	namespace n_UTgGameplayCurvesSet_RecoilVisual { // : UTgGameplayCurvesSet
		constexpr auto AngleDistribution = 0x64; // FRawDistributionFloat
		constexpr auto StrengthDegreesByAngleMin = 0x88; // FRawDistributionFloat
		constexpr auto StrengthDegreesByAngleMax = 0xac; // FRawDistributionFloat
		constexpr auto RecoilApplicationCurve = 0xd0; // FRawDistributionFloat
	}

	namespace n_UGFxAction_Invoke { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto MethodName = 0x110; // FString
		constexpr auto Arguments = 0x120; // TArray<FASValue>
	}

	namespace n_UTgInventoryObject_Listen_SpawnTeamHealthNugget { // : UTgInvListener
		constexpr auto m_NuggetSpawnFX = 0xc4; // ObjectProperty
		constexpr auto m_NuggetSpawnFXID = 0xcc; // int32_t
		constexpr auto m_bUseCV1ForSpawnChance = 0xd0; // uint32_t : 1
	}

	namespace n_UGFxAction_SetVariable { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto Variable = 0x110; // FString
	}

	namespace n_UUIData_MatchInvitePlayerState { // : UUIData
		constexpr auto m_dwPlayerId = 0x64; // Fdword
		constexpr auto m_eState = 0x68; // MatchInvitePlayerState
		constexpr auto m_dwAvatarIcon = 0x6c; // Fdword
		constexpr auto m_bLocalPlayer = 0x70; // uint32_t : 1
		constexpr auto m_bInParty = 0x70; // uint32_t : 1
		constexpr auto m_bFriendly = 0x70; // uint32_t : 1
	}

	namespace n_UUIComponent_MatchInvitePlayerEntry { // : UUIComponent_Display
		constexpr auto m_Accepted = 0x124; // ObjectProperty
		constexpr auto m_Avatar = 0x12c; // ObjectProperty
	}

	namespace n_UGameViewportClient { // : UScriptViewportClient
		constexpr auto VfTable_FExec = 0x68; // FPointer
		constexpr auto Viewport = 0x70; // FPointer
		constexpr auto ViewportFrame = 0x78; // FPointer
		constexpr auto GlobalInteractions = 0x80; // TArray<ObjectProperty>
		constexpr auto UIControllerClass = 0x90; // UUIInteraction*
		constexpr auto UIController = 0x98; // ObjectProperty
		constexpr auto ViewportConsole = 0xa0; // ObjectProperty
		constexpr auto ShowFlags = 0xa8; // FExportShowFlags_Mirror
		constexpr auto LoadingMessage = 0xb8; // FString
		constexpr auto SavingMessage = 0xc8; // FString
		constexpr auto ConnectingMessage = 0xd8; // FString
		constexpr auto PausedMessage = 0xe8; // FString
		constexpr auto PrecachingMessage = 0xf8; // FString
		constexpr auto bShowTitleSafeZone = 0x108; // uint32_t : 1
		constexpr auto bDisplayHardwareMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bOverrideDiffuseAndSpecular = 0x108; // uint32_t : 1
		constexpr auto bIsPlayInEditorViewport = 0x108; // uint32_t : 1
		constexpr auto bShowSystemMouseCursor = 0x108; // uint32_t : 1
		constexpr auto bDisableWorldRendering = 0x108; // uint32_t : 1
		constexpr auto bCapturedWorldRendering = 0x108; // uint32_t : 1
		constexpr auto bDebugNoGFxUI = 0x108; // uint32_t : 1
		constexpr auto TitleSafeZone = 0x10c; // FTitleSafeZoneArea
		constexpr auto SplitscreenInfo = 0x11c; // TArray<FSplitscreenData>
		constexpr auto DesiredSplitscreenType = 0x12c; // ESplitScreenType
		constexpr auto ActiveSplitscreenType = 0x12d; // ESplitScreenType
		constexpr auto Default2PSplitType = 0x12e; // ESplitScreenType
		constexpr auto Default3PSplitType = 0x12f; // ESplitScreenType
		constexpr auto ProgressMessage = 0x130; // FString [0x2]
		constexpr auto ProgressTimeOut = 0x150; // float
		constexpr auto ProgressFadeTime = 0x154; // float
		constexpr auto DebugProperties = 0x158; // TArray<FDebugDisplayProperty>
		constexpr auto ScaleformInteraction = 0x168; // FPointer
		constexpr auto PreviousFrameViewFamily = 0x170; // FPointer
		constexpr auto __HandleInputKey__Delegate = 0x178; // DelegateProperty
		constexpr auto __HandleInputAxis__Delegate = 0x188; // DelegateProperty
		constexpr auto __HandleInputChar__Delegate = 0x198; // DelegateProperty
	}

	namespace n_UUIComponent_MVPCommendationPanel { // : UUIComponent_Display
		constexpr auto m_mcCommendationSelected = 0x124; // ObjectProperty
		constexpr auto m_mcCommendationHover = 0x12c; // ObjectProperty
		constexpr auto m_CommendButton = 0x134; // ObjectProperty
	}

	namespace n_UInterpTrackInstFaceFX { // : UInterpTrackInst
		constexpr auto bFirstUpdate = 0x60; // uint32_t : 1
		constexpr auto LastUpdatePosition = 0x64; // float
	}

	namespace n_UMaterialExpressionDepthBiasBlend { // : UMaterialExpressionTextureSample
		constexpr auto bNormalize = 0x120; // uint32_t : 1
		constexpr auto BiasScale = 0x124; // float
		constexpr auto Bias = 0x128; // FExpressionInput
	}

	namespace n_UTgAIInfluenceMapRenderingComponent { // : UHavokNavigationRenderingComponent
		constexpr auto InfluenceMap = 0x250; // ObjectProperty
		constexpr auto InfluenceMapTexture = 0x258; // ObjectProperty
	}

	namespace n_UUIComponent_MojiCounter { // : UUIComponent_Display
		constexpr auto m_CurrentViewRider = 0x124; // ObjectProperty
		constexpr auto m_CurrentTarget = 0x12c; // ObjectProperty
		constexpr auto m_nCurrentStacks = 0x134; // int32_t
		constexpr auto m_mcFillCounter = 0x138; // ObjectProperty
		constexpr auto m_mcMaxStacks = 0x140; // ObjectProperty
		constexpr auto m_mcMaxStacksAnim = 0x148; // ObjectProperty
	}

	namespace n_UForceFieldShapeCapsule { // : UForceFieldShape
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_ATgProj_Simulated { // : ATgProjectile
		constexpr auto m_bHasFlashedShutdown = 0x450; // uint32_t : 1
		constexpr auto m_bHasFlashExploded = 0x450; // uint32_t : 1
		constexpr auto m_bIgnoreClientHits = 0x450; // uint32_t : 1
		constexpr auto m_bShouldQueueServerHits = 0x450; // uint32_t : 1
		constexpr auto m_bHasQueuedServerHit = 0x450; // uint32_t : 1
		constexpr auto m_bQueuedExplodeDoesNotHideProjectile = 0x450; // uint32_t : 1
		constexpr auto m_bQueuedExplodeTargetIsNonWorld = 0x450; // uint32_t : 1
		constexpr auto m_bNeedsFrictionOverride = 0x450; // uint32_t : 1
		constexpr auto m_bFlashSpecialExplosion = 0x450; // uint32_t : 1
		constexpr auto m_bDynamicShadow = 0x450; // uint32_t : 1
		constexpr auto m_bShadowDecalImportant = 0x450; // uint32_t : 1
		constexpr auto m_bTrackProjectileForTimelapse = 0x450; // uint32_t : 1
		constexpr auto s_bTrackingInitialized = 0x450; // uint32_t : 1
		constexpr auto m_bRequireAccurateTicksForPrediction = 0x450; // uint32_t : 1
		constexpr auto m_bEventLoadPropsFromFiremode = 0x450; // uint32_t : 1
		constexpr auto m_nProjectileInstanceId = 0x454; // int32_t
		constexpr auto m_nClientFireRequestId = 0x458; // int32_t
		constexpr auto m_nFireLoopInstanceId = 0x45c; // int32_t
		constexpr auto m_LerpFromClientOffset = 0x460; // FVector
		constexpr auto m_LerpTimeRemaining = 0x46c; // float
		constexpr auto m_QueuedExplodeTarget = 0x470; // ObjectProperty
		constexpr auto m_fQueuedExplodeTimeAliveAtHit = 0x478; // float
		constexpr auto m_QueuedExplodeLocation = 0x47c; // FVector
		constexpr auto m_QueuedExplodeNormal = 0x488; // FVector
		constexpr auto m_QueuedExplodeVelocity = 0x494; // FVector
		constexpr auto m_vSpawnVelocity = 0x4a0; // FVector
		constexpr auto m_vSpawnAcceleration = 0x4ac; // FVector
		constexpr auto m_rSpawnRotator = 0x4b8; // FRotator
		constexpr auto m_fAllowedClientMovementTime = 0x4c4; // float
		constexpr auto m_fSpawnTimeStamp = 0x4c8; // float
		constexpr auto m_fGravityScale = 0x4cc; // float
		constexpr auto m_fFrictionOverride = 0x4d0; // float
		constexpr auto s_InterestedPlayers = 0x4d4; // TArray<ObjectProperty>
		constexpr auto m_nShadowFXID = 0x4e4; // int32_t
		constexpr auto m_ShadowFX = 0x4e8; // ObjectProperty
		constexpr auto m_ShadowDecal = 0x4f0; // ComponentProperty
		constexpr auto m_fShadowBaseWidth = 0x4f8; // float
		constexpr auto m_fMaxDecalHeight = 0x4fc; // float
		constexpr auto m_CachedRotation = 0x500; // FRotator
		constexpr auto m_fTrackingUpdateRate = 0x50c; // float
		constexpr auto s_fTrackingUpdateTimer = 0x510; // float
		constexpr auto m_GameplayCurves = 0x514; // ObjectProperty
		constexpr auto m_nDeployableOverlayDisplayMask = 0x51c; // int32_t
		constexpr auto m_eDeployableOverlayIcon = 0x520; // DeployableOverlayIcon
		constexpr auto m_eDeployableOverlayState = 0x521; // DeployableOverlayState
		constexpr auto m_fDeployableOverlayEnemyViewDist = 0x524; // float
		constexpr auto m_fDeployableActiveLifeTime = 0x528; // float
	}

	namespace n_UTgInventoryObject_Listen_PetAbilityWhileDeployableActive { // : UTgInventoryObject_Listen_PetAbility
		constexpr auto m_nActiveDeployableCount = 0xc4; // int32_t
	}

	namespace n_UUIData_SprayRental { // : UUIData
		constexpr auto pChestData = 0x64; // ObjectProperty
		constexpr auto nSprayItemId = 0x6c; // int32_t
		constexpr auto nSprayVendorId = 0x70; // int32_t
		constexpr auto nChestItemId = 0x74; // int32_t
		constexpr auto nLootId = 0x78; // int32_t
		constexpr auto nBundleVendorId = 0x7c; // int32_t
		constexpr auto nBundleCount = 0x80; // int32_t
		constexpr auto nBundleLootIds = 0x84; // int32_t [0x4]
		constexpr auto nBundleItemCounts = 0x94; // int32_t [0x4]
	}

	namespace n_UTgSeqAct_GetPlayerCount { // : USequenceAction
		constexpr auto m_nTaskForce = 0x108; // int32_t
		constexpr auto m_fPlayerCount = 0x10c; // float
		constexpr auto m_fAssaultCount = 0x110; // float
		constexpr auto m_fMedicCount = 0x114; // float
		constexpr auto m_fReconCount = 0x118; // float
		constexpr auto m_fRoboticsCount = 0x11c; // float
	}

	namespace n_UTgAnimNodeBlendByPhysics { // : UAnimNodeBlendList
		constexpr auto m_TgPawn = 0x144; // ObjectProperty
		constexpr auto m_LastPhysics = 0x14c; // EPhysics
		constexpr auto m_CurrentPhysics = 0x14d; // EPhysics
		constexpr auto m_CurrentPhysicsChildIndex = 0x150; // int32_t
		constexpr auto m_PhysicsChildren = 0x154; // TArray<EPhysics>
		constexpr auto m_bDirectUnspecifiedPhysicsThroughChild0 = 0x164; // uint32_t : 1
		constexpr auto DefaultBlendTime = 0x168; // float
		constexpr auto m_ChildrenBlendInfo = 0x16c; // TArray<FChildrenBlendInfo>
	}

	namespace n_UUIScene_UIWinterEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pHome = 0x1dc; // ObjectProperty
		constexpr auto m_pStore = 0x1e4; // ObjectProperty
		constexpr auto m_pEvents = 0x1ec; // ObjectProperty
		constexpr auto m_pOverview = 0x1f4; // ObjectProperty
		constexpr auto m_pRotator = 0x1fc; // ObjectProperty
	}

	namespace n_UObject {
		constexpr auto VfTableObject = 0x0; // FPointer
		constexpr auto HashNext = 0x8; // FPointer
		constexpr auto ObjectFlags = 0x10; // FQWord
		constexpr auto HashOuterNext = 0x18; // FPointer
		constexpr auto StateFrame = 0x20; // FPointer
		constexpr auto Linker = 0x28; // ObjectProperty
		constexpr auto LinkerIndex = 0x30; // FPointer
		constexpr auto ObjectInternalInteger = 0x38; // int32_t
		constexpr auto NetIndex = 0x3c; // int32_t
		constexpr auto Outer = 0x40; // ObjectProperty
		constexpr auto Name = 0x48; // FName
		constexpr auto Class = 0x50; // UObject*
		constexpr auto ObjectArchetype = 0x58; // ObjectProperty
	}

	namespace n_UAutoNavMeshPathObstacleUnregister { // : UObject
		constexpr auto PathObstacleRef = 0x60; // TScriptInterface<Class>
	}

	namespace n_UTgAnimBlendByEmote { // : UTgAnimNodeBlendList
		constexpr auto m_CachedEmoteChildInfo = 0x168; // TArray<FEmoteChildAnimInfo>
	}

	namespace n_ULevelStreamingDistance { // : ULevelStreaming
		constexpr auto Origin = 0x100; // FVector
		constexpr auto MaxDistance = 0x10c; // float
	}

	namespace n_UGameExplosion { // : UObject
		constexpr auto bDirectionalExplosion = 0x60; // uint32_t : 1
		constexpr auto bIgnoreInstigator = 0x60; // uint32_t : 1
		constexpr auto bAllowTeammateCringes = 0x60; // uint32_t : 1
		constexpr auto bFullDamageToAttachee = 0x60; // uint32_t : 1
		constexpr auto bAttachExplosionEmitterToAttachee = 0x60; // uint32_t : 1
		constexpr auto bPerformRadialBlurRelevanceCheck = 0x60; // uint32_t : 1
		constexpr auto bCausesFracture = 0x60; // uint32_t : 1
		constexpr auto bAllowPerMaterialFX = 0x60; // uint32_t : 1
		constexpr auto bParticleSystemIsBeingOverriddenDontUsePhysMatVersion = 0x60; // uint32_t : 1
		constexpr auto bSkipDefaultPhysMatParticleSystem = 0x60; // uint32_t : 1
		constexpr auto bUseMapSpecificValues = 0x60; // uint32_t : 1
		constexpr auto bUseOverlapCheck = 0x60; // uint32_t : 1
		constexpr auto bOrientCameraShakeTowardsEpicenter = 0x60; // uint32_t : 1
		constexpr auto bAutoControllerVibration = 0x60; // uint32_t : 1
		constexpr auto DirectionalExplosionAngleDeg = 0x64; // float
		constexpr auto DamageDelay = 0x68; // float
		constexpr auto Damage = 0x6c; // float
		constexpr auto DamageRadius = 0x70; // float
		constexpr auto DamageFalloffExponent = 0x74; // float
		constexpr auto ActorToIgnoreForDamage = 0x78; // ObjectProperty
		constexpr auto ActorClassToIgnoreForDamage = 0x80; // AActor*
		constexpr auto ActorClassToIgnoreForKnockdownsAndCringes = 0x88; // AActor*
		constexpr auto MyDamageType = 0x90; // UDamageType*
		constexpr auto KnockDownRadius = 0x98; // float
		constexpr auto KnockDownStrength = 0x9c; // float
		constexpr auto CringeRadius = 0xa0; // float
		constexpr auto CringeDuration = 0xa4; // FVector2D
		constexpr auto MomentumTransferScale = 0xac; // float
		constexpr auto ParticleEmitterTemplate = 0xb0; // ObjectProperty
		constexpr auto ExplosionEmitterScale = 0xb8; // float
		constexpr auto HitActor = 0xbc; // ObjectProperty
		constexpr auto HitLocation = 0xc4; // FVector
		constexpr auto HitNormal = 0xd0; // FVector
		constexpr auto ExplosionSound = 0xdc; // ObjectProperty
		constexpr auto ExplosionSoundHurtSomeone = 0xe4; // ObjectProperty
		constexpr auto ExploLight = 0xec; // ComponentProperty
		constexpr auto ExploLightFadeOutTime = 0xf4; // float
		constexpr auto ExploRadialBlur = 0xf8; // ComponentProperty
		constexpr auto ExploRadialBlurFadeOutTime = 0x100; // float
		constexpr auto ExploRadialBlurMaxBlur = 0x104; // float
		constexpr auto FractureMeshRadius = 0x108; // float
		constexpr auto FracturePartVel = 0x10c; // float
		constexpr auto CamShake = 0x110; // ObjectProperty
		constexpr auto CamShake_Left = 0x118; // ObjectProperty
		constexpr auto CamShake_Right = 0x120; // ObjectProperty
		constexpr auto CamShake_Rear = 0x128; // ObjectProperty
		constexpr auto CamShakeInnerRadius = 0x130; // float
		constexpr auto CamShakeOuterRadius = 0x134; // float
		constexpr auto CamShakeFalloff = 0x138; // float
		constexpr auto CameraLensEffect = 0x13c; // AEmitterCameraLensEffectBase*
		constexpr auto CameraLensEffectRadius = 0x144; // float
	}

	namespace n_ATgDeployable { // : AActor
		constexpr auto VfTable_ITgSkinnableInterface = 0x280; // FPointer
		constexpr auto VfTable_ITgCombatActor = 0x288; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x290; // FPointer
		constexpr auto VfTable_ITgInteractiveAudio = 0x298; // FPointer
		constexpr auto VfTable_ITgGrabSource = 0x2a0; // FPointer
		constexpr auto VfTable_ITgGameplayCurveOwner = 0x2a8; // FPointer
		constexpr auto VfTable_ITgSoundNotifyActorInterface = 0x2b0; // FPointer
		constexpr auto r_nDeployableId = 0x2b8; // int32_t
		constexpr auto r_nSkinId = 0x2bc; // int32_t
		constexpr auto r_nWeaponSkinId = 0x2c0; // int32_t
		constexpr auto c_bInitialized = 0x2c4; // uint32_t : 1
		constexpr auto m_bConsumedOnFire = 0x2c4; // uint32_t : 1
		constexpr auto m_bFireOnDeploy = 0x2c4; // uint32_t : 1
		constexpr auto m_bHasAlreadyFiredOnce = 0x2c4; // uint32_t : 1
		constexpr auto m_bInstantFire = 0x2c4; // uint32_t : 1
		constexpr auto m_bRequiresEffectManager = 0x2c4; // uint32_t : 1
		constexpr auto c_bMinimapOnlyOwnerSee = 0x2c4; // uint32_t : 1
		constexpr auto r_bTakeDamage = 0x2c4; // uint32_t : 1
		constexpr auto m_bInDestroyedState = 0x2c4; // uint32_t : 1
		constexpr auto s_bDestroyedThisTick = 0x2c4; // uint32_t : 1
		constexpr auto m_bIsDeployed = 0x2c4; // uint32_t : 1
		constexpr auto m_bDestroyedAtEndOfPersistTime = 0x2c4; // uint32_t : 1
		constexpr auto c_bEnemyMatLoaded = 0x2c4; // uint32_t : 1
		constexpr auto m_bApplyDeviceDamageBuffs = 0x2c4; // uint32_t : 1
		constexpr auto s_bAlwaysRelevantExceptRoyale = 0x2c4; // uint32_t : 1
		constexpr auto m_bProtectedFromGameModeDestroy = 0x2c4; // uint32_t : 1
		constexpr auto m_bProtectedFromOwnerDisconnectDestroy = 0x2c4; // uint32_t : 1
		constexpr auto m_bDestroyOnOwnerDeathFlag = 0x2c4; // uint32_t : 1
		constexpr auto m_bAdjustMeshToGround = 0x2c4; // uint32_t : 1
		constexpr auto m_bIsVisionBlocker = 0x2c4; // uint32_t : 1
		constexpr auto m_bIsAIVisionBlocker = 0x2c4; // uint32_t : 1
		constexpr auto m_bIgnoreStealthInterrupts = 0x2c4; // uint32_t : 1
		constexpr auto m_bIsNeutralObscuringDeployable = 0x2c4; // uint32_t : 1
		constexpr auto m_bMovableProjBlocker = 0x2c4; // uint32_t : 1
		constexpr auto m_bShouldRagdoll = 0x2c4; // uint32_t : 1
		constexpr auto m_bDeviceUsedIsHandDevice = 0x2c4; // uint32_t : 1
		constexpr auto m_bUseSilhouettesOverride = 0x2c4; // uint32_t : 1
		constexpr auto m_bOverrideTargetComponentHeight = 0x2c4; // uint32_t : 1
		constexpr auto r_bInitialIsEnemy = 0x2c4; // uint32_t : 1
		constexpr auto c_bIsSpectateToggleActive = 0x2c4; // uint32_t : 1
		constexpr auto m_bUseRangeFalloffCurve = 0x2c4; // uint32_t : 1
		constexpr auto m_nDeployableType = 0x2c8; // int32_t
		constexpr auto r_nPhysicalType = 0x2cc; // int32_t
		constexpr auto r_nHealth = 0x2d0; // int32_t
		constexpr auto r_EffectManager = 0x2d4; // ObjectProperty
		constexpr auto m_EquipEffects = 0x2dc; // TArray<ObjectProperty>
		constexpr auto s_Properties = 0x2ec; // TArray<FTgPropertyInstance>
		constexpr auto c_Form = 0x2fc; // ObjectProperty
		constexpr auto c_FireFx = 0x304; // ObjectProperty
		constexpr auto c_Mesh = 0x30c; // ComponentProperty
		constexpr auto r_vFlashLocation = 0x314; // FVector
		constexpr auto r_nFlashCount = 0x320; // char
		constexpr auto r_nFlashFireCount = 0x321; // char
		constexpr auto c_nPreviousFlashFireCount = 0x322; // char
		constexpr auto m_InitHUDOverlayIcon = 0x323; // DeployableOverlayIcon
		constexpr auto m_InitHUDOverlayState = 0x324; // DeployableOverlayState
		constexpr auto m_FireMode = 0x328; // ObjectProperty
		constexpr auto m_fStateTime = 0x330; // float
		constexpr auto s_DeployFactory = 0x334; // ObjectProperty
		constexpr auto m_TimeCreated = 0x33c; // float
		constexpr auto m_DestroyedMesh = 0x340; // ComponentProperty
		constexpr auto m_fLifeAfterDeathSecs = 0x348; // float
		constexpr auto r_nReplicateDestroyIt = 0x34c; // int32_t
		constexpr auto m_AsInteractiveAudio = 0x350; // TScriptInterface<Class>
		constexpr auto s_GrabbedTargets = 0x360; // TArray<ObjectProperty>
		constexpr auto s_fPersistTime = 0x370; // float
		constexpr auto LightEnvironment = 0x374; // ComponentProperty
		constexpr auto r_fTimeToDeploySecs = 0x37c; // float
		constexpr auto r_fInitDeployTime = 0x380; // float
		constexpr auto m_fCurrentDeployPercentage = 0x384; // float
		constexpr auto r_fCurrentDeployTime = 0x388; // float
		constexpr auto m_fDamagedDuringDeploy = 0x38c; // float
		constexpr auto s_SpawnerDeviceMode = 0x390; // ObjectProperty
		constexpr auto r_Owner = 0x398; // ObjectProperty
		constexpr auto r_nOwnerFireMode = 0x3a0; // int32_t
		constexpr auto AlwaysRelevantDistanceSquared = 0x3a4; // float
		constexpr auto s_fMaxRelevancyDistanceSquared = 0x3a8; // float
		constexpr auto m_fMaxAimAssistStacks = 0x3ac; // float
		constexpr auto m_DeployableAnimNodes = 0x3b0; // TArray<ObjectProperty>
		constexpr auto r_vRagdollDir = 0x3c0; // FVector
		constexpr auto m_fCachedGroundProximity = 0x3cc; // float
		constexpr auto m_fCachedGroundProximityTimestamp = 0x3d0; // float
		constexpr auto m_CollisionSettings = 0x3d4; // FCollisionSettingsDeployable
		constexpr auto m_PawnsBasedOnMe = 0x3e8; // TArray<ObjectProperty>
		constexpr auto m_SilhouetteManager = 0x3f8; // ObjectProperty
		constexpr auto m_nInitHUDOverlayDisplayMask = 0x400; // int32_t
		constexpr auto m_InitHUDOverlayEnemyViewDist = 0x404; // float
		constexpr auto m_fHUDOverlayZOffset = 0x408; // float
		constexpr auto m_pAmSkin = 0x40c; // FPointer
		constexpr auto m_pAmWeaponSkin = 0x414; // FPointer
		constexpr auto m_TargetComponent = 0x41c; // ComponentProperty
		constexpr auto m_TargetCollisionTraceDistance = 0x424; // float
		constexpr auto m_fOverriddenTargetComponentHeight = 0x428; // float
		constexpr auto m_LastDamager = 0x42c; // ObjectProperty
		constexpr auto m_LastDamagerTimeStamp = 0x434; // int32_t
		constexpr auto r_DRI = 0x438; // ObjectProperty
		constexpr auto c_LocalPC = 0x440; // ObjectProperty
		constexpr auto m_DRIClass = 0x448; // AActor*
		constexpr auto m_fDisableSpectatorFxTime = 0x450; // float
		constexpr auto m_fDisableSpectatorFxTimeRemaining = 0x454; // float
		constexpr auto m_AkActorUnoccluded = 0x458; // ObjectProperty
		constexpr auto m_fHazardDistance = 0x460; // float
		constexpr auto m_fHazardRating = 0x464; // float
		constexpr auto r_nCachedMaxHealth = 0x468; // int32_t
	}

	namespace n_UTgAIBehaviorCondition_NearbyTargetTypeCount { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bMustBeInForwardCone = 0x9c; // uint32_t : 1
		constexpr auto TargetTypeThreshold = 0xa0; // int32_t
		constexpr auto TargetType = 0xa4; // ECombatTargetType
		constexpr auto ForwardConeAngle = 0xa8; // float
	}

	namespace n_UTgDeviceForm_NetherStep { // : UTgDeviceForm
		constexpr auto m_stanceNodes1p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_stanceNodes3p = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIMatchLobby { // : UUIScene
		constexpr auto m_mcChampionName = 0x1cc; // ObjectProperty
		constexpr auto m_mcChampionTitle = 0x1d4; // ObjectProperty
		constexpr auto m_mcChampionClassIcon = 0x1dc; // ObjectProperty
		constexpr auto m_LockInBtn = 0x1e4; // ObjectProperty
		constexpr auto m_ShowChampsBtn = 0x1ec; // ObjectProperty
		constexpr auto m_ViewSkillsBtn = 0x1f4; // ObjectProperty
		constexpr auto m_Header = 0x1fc; // ObjectProperty
		constexpr auto m_BlueBans = 0x204; // ObjectProperty
		constexpr auto m_RedBans = 0x20c; // ObjectProperty
		constexpr auto m_ShowChampsAction = 0x214; // ObjectProperty
		constexpr auto m_ShowCustomizeAction = 0x21c; // ObjectProperty
		constexpr auto m_pLockInHoldPrompt = 0x224; // ObjectProperty
		constexpr auto m_pFocusedChamp = 0x22c; // ObjectProperty
		constexpr auto m_bBanComponentsVisible = 0x234; // uint32_t : 1
	}

	namespace n_APrecomputedVisibilityOverrideVolume { // : AVolume
		constexpr auto OverrideVisibleActors = 0x2bc; // TArray<ObjectProperty>
		constexpr auto OverrideInvisibleActors = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleAttractorParticle { // : UParticleModuleAttractorBase
		constexpr auto EmitterName = 0x68; // FName
		constexpr auto Range = 0x70; // FRawDistributionFloat
		constexpr auto bStrengthByDistance = 0x94; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0x94; // uint32_t : 1
		constexpr auto bRenewSource = 0x94; // uint32_t : 1
		constexpr auto bInheritSourceVel = 0x94; // uint32_t : 1
		constexpr auto Strength = 0x98; // FRawDistributionFloat
		constexpr auto SelectionMethod = 0xbc; // EAttractorParticleSelectionMethod
		constexpr auto LastSelIndex = 0xc0; // int32_t
	}

	namespace n_UHttpFactory { // : UObject
		constexpr auto HttpRequestClassName = 0x60; // FString
	}

	namespace n_UUIComponent_EndOfMatchLobbyScoreboard { // : UUIComponent_Display
		constexpr auto m_bShowingDetails = 0x124; // uint32_t : 1
		constexpr auto m_mcHeader = 0x128; // ObjectProperty
		constexpr auto m_mcHeaderDetails = 0x130; // ObjectProperty
		constexpr auto m_pPlayerEntries = 0x138; // ObjectProperty
		constexpr auto m_pToggleDetails = 0x140; // ObjectProperty
		constexpr auto m_pReportPlayerPopup = 0x148; // ObjectProperty
		constexpr auto m_pViewProfileAction = 0x150; // ObjectProperty
		constexpr auto m_pToggleDetailsAction = 0x158; // ObjectProperty
		constexpr auto m_pReportPlayerAction = 0x160; // ObjectProperty
		constexpr auto m_pSendGiftAction = 0x168; // ObjectProperty
		constexpr auto m_grScoreboard = 0x170; // ObjectProperty
	}

	namespace n_ATgDeploy_AtlasQ { // : ATgDeployable
		constexpr auto m_ProjectilesToDestroy = 0x46c; // TArray<ObjectProperty>
		constexpr auto fInterpSpeed = 0x47c; // float
		constexpr auto fTimeToDestroy = 0x480; // float
		constexpr auto fVelInterpSpeed = 0x484; // float
		constexpr auto c_TakeHitOverride = 0x488; // ObjectProperty
		constexpr auto c_nTakeHitEffectId = 0x490; // int32_t
		constexpr auto s_CachedAtlas = 0x494; // ObjectProperty
		constexpr auto s_TouchedActors = 0x49c; // TArray<ObjectProperty>
	}

	namespace n_USeqAct_ToggleConstraintDrive { // : USequenceAction
		constexpr auto bEnableAngularPositionDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableAngularVelocityDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableLinearPositionDrive = 0x108; // uint32_t : 1
		constexpr auto bEnableLinearvelocityDrive = 0x108; // uint32_t : 1
	}

	namespace n_UUIScene_UIHome { // : UUIScene
		constexpr auto m_mcPanels = 0x1cc; // ObjectProperty [0x9]
		constexpr auto m_CarouselPanel = 0x214; // ObjectProperty
		constexpr auto m_GoToChestButton = 0x21c; // ObjectProperty
		constexpr auto m_GoToBattlePassButton = 0x224; // ObjectProperty
		constexpr auto m_GoToEventButton = 0x22c; // ObjectProperty
		constexpr auto m_GoToItemButton = 0x234; // ObjectProperty
		constexpr auto m_grHome = 0x23c; // ObjectProperty
		constexpr auto m_pGoToEventInput = 0x244; // ObjectProperty
		constexpr auto m_pSocialInput = 0x24c; // ObjectProperty
		constexpr auto m_pGoToChestInput = 0x254; // ObjectProperty
		constexpr auto m_pGoToBattlePassInput = 0x25c; // ObjectProperty
		constexpr auto m_pGoToItemInput = 0x264; // ObjectProperty
		constexpr auto m_pTencentButton = 0x26c; // ObjectProperty
		constexpr auto m_pTencentJsonPanel = 0x274; // ObjectProperty
		constexpr auto m_mcLiveVideoContainer = 0x27c; // ObjectProperty
		constexpr auto m_LiveVideoWatchButton = 0x284; // ObjectProperty
		constexpr auto m_LiveVideoCloseButton = 0x28c; // ObjectProperty
		constexpr auto m_LiveVideoJson = 0x294; // FJsonFeatureData
		constexpr auto m_bQueued = 0x32c; // uint32_t : 1
		constexpr auto m_bDeserter = 0x32c; // uint32_t : 1
		constexpr auto m_bLoadingImages = 0x32c; // uint32_t : 1
		constexpr auto m_bCheckBountyAccountLink = 0x32c; // uint32_t : 1
		constexpr auto m_fQueuedTime = 0x330; // float
		constexpr auto m_fShowLiveVideoDelay = 0x334; // float
		constexpr auto m_FeatureData = 0x338; // TArray<FJsonFeatureData>
		constexpr auto m_FeatureMap = 0x348; // TMap<None, None>
		constexpr auto m_nDotCount = 0x390; // int32_t
		constexpr auto m_nTotalDots = 0x394; // int32_t
		constexpr auto m_fQueueAnimationTimer = 0x398; // float
		constexpr auto m_fQueueAnimationInterval = 0x39c; // float
		constexpr auto m_eFeatureType = 0x3a0; // EFeaturedSectionType
		constexpr auto m_eFeatureTypeOverride = 0x3a1; // EFeaturedSectionType
		constexpr auto m_FeatureMeshData = 0x3a4; // FMeshData
		constexpr auto m_nFeaturedItemId = 0x3bc; // int32_t
		constexpr auto m_nFeaturedLocationId = 0x3c0; // int32_t
		constexpr auto m_pFeatureOverrideData = 0x3c4; // FJsonHomeFeatureData
		constexpr auto m_nLastLevelAcknowledged = 0x408; // int32_t
		constexpr auto m_fInstallCheckTimer = 0x40c; // float
		constexpr auto m_fInstallCheckInterval = 0x410; // float
	}

	namespace n_UUIChatTab { // : UUIChatScene
		constexpr auto m_nIdentity = 0x28c; // int32_t
		constexpr auto m_nOutputCount = 0x290; // int32_t
		constexpr auto m_nAutoThreshold = 0x294; // int32_t
		constexpr auto m_bOpen = 0x298; // uint32_t : 1
		constexpr auto m_bCanChat = 0x298; // uint32_t : 1
		constexpr auto m_bCanScroll = 0x298; // uint32_t : 1
		constexpr auto m_bPrevInputState = 0x298; // uint32_t : 1
		constexpr auto m_bPlayNotifySound = 0x298; // uint32_t : 1
		constexpr auto m_mcClose = 0x29c; // ObjectProperty
		constexpr auto m_mcMinimize = 0x2a4; // ObjectProperty
		constexpr auto m_mcOpen = 0x2ac; // ObjectProperty
		constexpr auto m_mcOpenTF = 0x2b4; // ObjectProperty
		constexpr auto m_mcOpenFrame = 0x2bc; // ObjectProperty
		constexpr auto m_mcOpenButton = 0x2c4; // ObjectProperty
		constexpr auto m_mcOpenButtonTF = 0x2cc; // ObjectProperty
		constexpr auto m_mcOpenButtonEdge = 0x2d4; // ObjectProperty
		constexpr auto m_mcOpenButtonMask = 0x2dc; // ObjectProperty
		constexpr auto m_mcBuffer = 0x2e4; // ObjectProperty
		constexpr auto m_mcButton = 0x2ec; // ObjectProperty
		constexpr auto m_mcButtonTF = 0x2f4; // ObjectProperty
		constexpr auto m_mcButtonEdge = 0x2fc; // ObjectProperty
		constexpr auto m_mcButtonMask = 0x304; // ObjectProperty
		constexpr auto m_mcButtonHighlight = 0x30c; // ObjectProperty
		constexpr auto m_mcNotify = 0x314; // ObjectProperty
		constexpr auto m_mcScroll = 0x31c; // ObjectProperty
		constexpr auto m_mcInputBtn = 0x324; // ObjectProperty
		constexpr auto m_mcOutput = 0x32c; // ObjectProperty [0x4]
		constexpr auto m_mcOutputIcon = 0x34c; // ObjectProperty [0x4]
		constexpr auto m_pCommandList = 0x36c; // ObjectProperty
		constexpr auto m_AkChatSound = 0x374; // ObjectProperty
		constexpr auto m_AkNewTabSound = 0x37c; // ObjectProperty
		constexpr auto m_nChatAutoCloseTime = 0x384; // int32_t
		constexpr auto m_nLastMessageTime = 0x388; // FQWord
	}

	namespace n_UParticleModuleLocationPrimitiveBase { // : UParticleModuleLocationBase
		constexpr auto Positive_X = 0x68; // uint32_t : 1
		constexpr auto Positive_Y = 0x68; // uint32_t : 1
		constexpr auto Positive_Z = 0x68; // uint32_t : 1
		constexpr auto Negative_X = 0x68; // uint32_t : 1
		constexpr auto Negative_Y = 0x68; // uint32_t : 1
		constexpr auto Negative_Z = 0x68; // uint32_t : 1
		constexpr auto SurfaceOnly = 0x68; // uint32_t : 1
		constexpr auto Velocity = 0x68; // uint32_t : 1
		constexpr auto VelocityScale = 0x6c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x90; // FRawDistributionVector
	}

	namespace n_USeqAct_SetActiveAnimChild { // : USequenceAction
		constexpr auto NodeName = 0x108; // FName
		constexpr auto ChildIndex = 0x110; // int32_t
		constexpr auto BlendTime = 0x114; // float
	}

	namespace n_UUIScene_UIEditLoadouts { // : UUIScene
		constexpr auto m_eState = 0x1cc; // UIEditLoadoutsState
		constexpr auto m_eImportState = 0x1cd; // UIEditLoadoutsImportState
		constexpr auto m_eSelectedSearchType = 0x1ce; // UIEditLoadoutsImportState
		constexpr auto m_bShowError = 0x1d0; // uint32_t : 1
		constexpr auto m_bDisplayLoadoutCTAs = 0x1d0; // uint32_t : 1
		constexpr auto m_bPendingFilterRequest = 0x1d0; // uint32_t : 1
		constexpr auto m_pEditLoadout = 0x1d4; // TScriptInterface<Class>
		constexpr auto m_nCardChoices = 0x1e4; // TArray<int32_t>
		constexpr auto m_nCardSelectionIndex = 0x1f4; // int32_t
		constexpr auto m_nImportIndex = 0x1f8; // int32_t
		constexpr auto m_ImportLoadouts = 0x1fc; // TArray<ObjectProperty>
		constexpr auto m_mcEdit = 0x20c; // ObjectProperty
		constexpr auto m_EditAbilityPointsPool = 0x214; // ObjectProperty
		constexpr auto m_mcEditTitle = 0x21c; // ObjectProperty
		constexpr auto m_mcEditSubtitle = 0x224; // ObjectProperty
		constexpr auto m_mcEditPoints = 0x22c; // ObjectProperty
		constexpr auto m_mcEditPointsTitle = 0x234; // ObjectProperty
		constexpr auto m_mcLoadoutCTA = 0x23c; // ObjectProperty
		constexpr auto m_mcSaveLoadoutCTA = 0x244; // ObjectProperty
		constexpr auto m_mcEditPointsBlipActive = 0x24c; // ObjectProperty [0xf]
		constexpr auto m_EditInfo = 0x2c4; // ObjectProperty [0x5]
		constexpr auto m_EditCard = 0x2ec; // ObjectProperty [0x5]
		constexpr auto m_EditSlot = 0x314; // ObjectProperty [0x5]
		constexpr auto m_EditPowerUp = 0x33c; // ObjectProperty [0x5]
		constexpr auto m_EditPowerDown = 0x364; // ObjectProperty [0x5]
		constexpr auto m_EditPowerUpGamepad = 0x38c; // ObjectProperty [0x5]
		constexpr auto m_EditPowerDownGamepad = 0x3b4; // ObjectProperty [0x5]
		constexpr auto m_ActionPowerUp = 0x3dc; // ObjectProperty
		constexpr auto m_ActionPowerDown = 0x3e4; // ObjectProperty
		constexpr auto m_EditOptionSave = 0x3ec; // ObjectProperty
		constexpr auto m_EditOptionImport = 0x3f4; // ObjectProperty
		constexpr auto m_EditOptionRename = 0x3fc; // ObjectProperty
		constexpr auto m_EditOptionClear = 0x404; // ObjectProperty
		constexpr auto m_EditOptionDiscard = 0x40c; // ObjectProperty
		constexpr auto m_grEdit = 0x414; // ObjectProperty
		constexpr auto m_grEditButtons = 0x41c; // ObjectProperty
		constexpr auto m_mcCards = 0x424; // ObjectProperty
		constexpr auto m_CardChoice = 0x42c; // ObjectProperty [0x10]
		constexpr auto m_CardChoiceButton = 0x4ac; // ObjectProperty [0x10]
		constexpr auto m_mcCardGlow = 0x52c; // ObjectProperty [0x10]
		constexpr auto m_mcCardEquipped = 0x5ac; // ObjectProperty [0x10]
		constexpr auto m_mcCardTitles = 0x62c; // ObjectProperty [0x4]
		constexpr auto m_mcCardTitleIcons = 0x64c; // ObjectProperty [0x4]
		constexpr auto m_grCard = 0x66c; // ObjectProperty
		constexpr auto m_mcSearch = 0x674; // ObjectProperty
		constexpr auto m_mcSearchFrame = 0x67c; // ObjectProperty
		constexpr auto m_mcSearchType = 0x684; // ObjectProperty
		constexpr auto m_SearchTypeButton = 0x68c; // ObjectProperty [0x3]
		constexpr auto m_SearchTypeClose = 0x6a4; // ObjectProperty
		constexpr auto m_mcSearchList = 0x6ac; // ObjectProperty
		constexpr auto m_mcSearchListTitle = 0x6b4; // ObjectProperty
		constexpr auto m_mcSearchListError = 0x6bc; // ObjectProperty
		constexpr auto m_SearchListClose = 0x6c4; // ObjectProperty
		constexpr auto m_SearchListEntries = 0x6cc; // ObjectProperty
		constexpr auto m_mcSearchName = 0x6d4; // ObjectProperty
		constexpr auto m_SearchNameSearch = 0x6dc; // ObjectProperty
		constexpr auto m_SearchNameClose = 0x6e4; // ObjectProperty
		constexpr auto m_mcSearchNameError = 0x6ec; // ObjectProperty
		constexpr auto m_mcSearchNameInput = 0x6f4; // ObjectProperty
		constexpr auto m_grSearch = 0x6fc; // ObjectProperty
		constexpr auto m_grSearchName = 0x704; // ObjectProperty
		constexpr auto m_grSearchList = 0x70c; // ObjectProperty
		constexpr auto m_mcImport = 0x714; // ObjectProperty
		constexpr auto m_mcImportTitle = 0x71c; // ObjectProperty
		constexpr auto m_ImportCard = 0x724; // ObjectProperty [0x5]
		constexpr auto m_mcImportPage = 0x74c; // ObjectProperty
		constexpr auto m_ImportArrow = 0x754; // ObjectProperty [0x2]
		constexpr auto m_mcImportBumper = 0x764; // ObjectProperty [0x2]
		constexpr auto m_mcImportError = 0x774; // ObjectProperty
		constexpr auto m_ImportDone = 0x77c; // ObjectProperty
		constexpr auto m_ImportCancel = 0x784; // ObjectProperty
		constexpr auto m_grImport = 0x78c; // ObjectProperty
		constexpr auto m_pImportScrollLeft = 0x794; // ObjectProperty
		constexpr auto m_pImportScrollRight = 0x79c; // ObjectProperty
		constexpr auto m_mcRename = 0x7a4; // ObjectProperty
		constexpr auto m_mcRenameTitle = 0x7ac; // ObjectProperty
		constexpr auto m_mcRenameInput = 0x7b4; // ObjectProperty
		constexpr auto m_RenameDone = 0x7bc; // ObjectProperty
		constexpr auto m_RenameCancel = 0x7c4; // ObjectProperty
		constexpr auto m_grRename = 0x7cc; // ObjectProperty
		constexpr auto m_mcError = 0x7d4; // ObjectProperty
		constexpr auto m_mcErrorTitle = 0x7dc; // ObjectProperty
		constexpr auto m_ErrorButton = 0x7e4; // ObjectProperty
		constexpr auto m_mcErrorSubtitle = 0x7ec; // ObjectProperty
		constexpr auto m_grError = 0x7f4; // ObjectProperty
		constexpr auto m_nCurrentActiveInputActionSlot = 0x7fc; // int32_t
		constexpr auto m_akAddCard = 0x800; // ObjectProperty
		constexpr auto m_akInvalidClick = 0x808; // ObjectProperty
		constexpr auto m_pPCToUpdate = 0x810; // ObjectProperty
	}

	namespace n_UTgAnimNodeBlendByKnockdown { // : UTgAnimNodeBlendList
		constexpr auto m_bAdjustPlayRateByVelocity = 0x168; // uint32_t : 1
		constexpr auto m_fVelocityMultiplier = 0x16c; // float
		constexpr auto m_PreviewVelocity = 0x170; // float
		constexpr auto m_TgPawn = 0x174; // ObjectProperty
		constexpr auto m_FaceDownAnimName = 0x17c; // FName
		constexpr auto m_FaceUpAnimName = 0x184; // FName
		constexpr auto m_FaceDownRecoverAnimName = 0x18c; // FName
		constexpr auto m_FaceUpRecoverAnimName = 0x194; // FName
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceActiveWhile { // : UTgInventoryObject_Listen_AffectedByDevice
		constexpr auto m_bIsCardActive = 0xc4; // uint32_t : 1
	}

	namespace n_ATgPawn_LanePusher { // : ATgPawn_LanePusherBase
		constexpr auto m_bInIntroduction = 0x3028; // uint32_t : 1
		constexpr auto r_bIsInsideBase = 0x3028; // uint32_t : 1
		constexpr auto m_bHarvestTexturesForFadeMIC = 0x3028; // uint32_t : 1
		constexpr auto m_bBroadcastDeath = 0x3028; // uint32_t : 1
		constexpr auto c_eDestroyedAnimStage = 0x302c; // EDestroyedAnimStages
		constexpr auto c_BeamFX = 0x3030; // ObjectProperty
		constexpr auto m_fBaseWheelSpeed = 0x3038; // float
		constexpr auto m_nMaxLevel = 0x303c; // int32_t
		constexpr auto m_nFriendlyFadeMaterialFXId = 0x3040; // int32_t
		constexpr auto m_nEnemyFadeMaterialFXId = 0x3044; // int32_t
		constexpr auto m_FadeMICs = 0x3048; // TArray<ObjectProperty>
		constexpr auto m_fDamageScaleWhileTraveling = 0x3058; // float
	}

	namespace n_UTgAIBehaviorAction_SelectCombatTargetsTarget { // : UTgAIBehaviorAction
		constexpr auto bGodsOnly = 0x94; // uint32_t : 1
	}

	namespace n_UTgStreamManager { // : UObject
		constexpr auto WatchEnd = 0x60; // FString
		constexpr auto m_CurrentChannel = 0x70; // FString
		constexpr auto m_nNewsIndex = 0x80; // int32_t
		constexpr auto Streams = 0x84; // TArray<FGameStream>
		constexpr auto m_hasReceivedStreams = 0x94; // uint32_t : 1
		constexpr auto m_hasAnySpecial = 0x94; // uint32_t : 1
		constexpr auto m_hasAnyFeatured = 0x94; // uint32_t : 1
		constexpr auto m_Movie = 0x98; // ObjectProperty
		constexpr auto __ViewerSort__Delegate = 0xa0; // DelegateProperty
		constexpr auto __FeaturedSort__Delegate = 0xb0; // DelegateProperty
		constexpr auto __LiveSort__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_ATgDevice_ShadowDash { // : ATgDevice_Charge
		constexpr auto m_ShadowPawn = 0xa7c; // ObjectProperty
	}

	namespace n_ATgDevice { // : AWeapon
		constexpr auto VfTable_ITgGameplayCurveOwner = 0x2fc; // FPointer
		constexpr auto r_nDeviceId = 0x304; // int32_t
		constexpr auto r_nDeviceInstanceId = 0x308; // int32_t
		constexpr auto r_nInstanceCount = 0x30c; // int32_t
		constexpr auto r_eEquippedAt = 0x310; // TG_EQUIP_POINT
		constexpr auto CurrentFireMode = 0x311; // char
		constexpr auto m_PendingFireMode = 0x312; // char
		constexpr auto c_eTargetingModeStatus = 0x313; // ETargetingModeStatus
		constexpr auto m_nDesiredFireMode = 0x314; // char
		constexpr auto m_eCachedDeviceFailType = 0x315; // EDeviceFailType
		constexpr auto m_eShouldBankCooldownReduction = 0x316; // EBankCooldownReduction
		constexpr auto m_nSkillUIMatchFireMode = 0x317; // char
		constexpr auto m_eCastModeOverride = 0x318; // ECastMode
		constexpr auto m_ReticuleType = 0x319; // EReticuleType
		constexpr auto m_ZoomedReticuleType = 0x31a; // EReticuleType
		constexpr auto m_DeviceEmoteAt = 0x31b; // DeviceEmoteAt
		constexpr auto m_DeviceTimerBarType = 0x31c; // DeviceTimerBarType
		constexpr auto r_nPointsAllocated = 0x320; // int32_t
		constexpr auto m_bSocketMaxCalculated = 0x324; // uint32_t : 1
		constexpr auto r_bParentDeviceOwnedByOffhand = 0x324; // uint32_t : 1
		constexpr auto bPendingFire = 0x324; // uint32_t : 1
		constexpr auto m_IsPendingSetFireMode = 0x324; // uint32_t : 1
		constexpr auto m_bEquipEffectsApplied = 0x324; // uint32_t : 1
		constexpr auto m_CachedMissedInstantFire = 0x324; // uint32_t : 1
		constexpr auto c_bUsesTargetingReticle = 0x324; // uint32_t : 1
		constexpr auto r_OverrideUsesTargetingModeAsFalse = 0x324; // uint32_t : 1
		constexpr auto s_bIgnoreReceivedAim = 0x324; // uint32_t : 1
		constexpr auto m_bHandDevice = 0x324; // uint32_t : 1
		constexpr auto m_bProcAsIfHandDevice = 0x324; // uint32_t : 1
		constexpr auto m_bLockInputDuringFire = 0x324; // uint32_t : 1
		constexpr auto m_bLockCameraDuringFire = 0x324; // uint32_t : 1
		constexpr auto m_bShouldCacheAim = 0x324; // uint32_t : 1
		constexpr auto r_bConsumedOnUse = 0x324; // uint32_t : 1
		constexpr auto r_bConsumedOnDeath = 0x324; // uint32_t : 1
		constexpr auto m_bCachedDeviceCanFire = 0x324; // uint32_t : 1
		constexpr auto m_bCarryPreFireToPostFire = 0x324; // uint32_t : 1
		constexpr auto m_bConsumePowerPoolOnStartFire = 0x324; // uint32_t : 1
		constexpr auto m_bAlwaysStartCooldown = 0x324; // uint32_t : 1
		constexpr auto m_bIgnoreCooldown = 0x324; // uint32_t : 1
		constexpr auto m_bInTargetingMode = 0x324; // uint32_t : 1
		constexpr auto m_bWasCancelled = 0x324; // uint32_t : 1
		constexpr auto m_IsBeingInterrupted = 0x324; // uint32_t : 1
		constexpr auto c_bServerFireFailed = 0x324; // uint32_t : 1
		constexpr auto HasAlreadyFiredOnce = 0x324; // uint32_t : 1
		constexpr auto m_bBuildupShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bPreFireShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bFireShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bPostFireShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bReloadingShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bCancelingShouldInterruptStealth = 0x324; // uint32_t : 1
		constexpr auto m_bStartFireShouldEnterCombat = 0x328; // uint32_t : 1
		constexpr auto m_bFireShouldEnterCombat = 0x328; // uint32_t : 1
		constexpr auto m_bShouldUseInstigatorsTimeDilation = 0x328; // uint32_t : 1
		constexpr auto m_bDamages = 0x328; // uint32_t : 1
		constexpr auto m_bStuns = 0x328; // uint32_t : 1
		constexpr auto m_bProjectileFollowOwnerYaw = 0x328; // uint32_t : 1
		constexpr auto m_bAimThroughReticule = 0x328; // uint32_t : 1
		constexpr auto m_bNoReticleBloom = 0x328; // uint32_t : 1
		constexpr auto m_bUseCustomCastMode = 0x328; // uint32_t : 1
		constexpr auto m_bCanRegenAmmoWhileFiring = 0x328; // uint32_t : 1
		constexpr auto m_bOverrideFireModeRegenAmmoWhileFiring = 0x328; // uint32_t : 1
		constexpr auto m_bUseSimultaneousRegenForAmmoCharges = 0x328; // uint32_t : 1
		constexpr auto m_bUsesSimulatedAmmo = 0x328; // uint32_t : 1
		constexpr auto m_bCanReloadEarly = 0x328; // uint32_t : 1
		constexpr auto m_bSetFullAmmoOnReloadForAnim = 0x328; // uint32_t : 1
		constexpr auto m_bForce1pViewWhileFiring = 0x328; // uint32_t : 1
		constexpr auto m_bForce3PViewInBuildup = 0x328; // uint32_t : 1
		constexpr auto m_bForce3PViewWhileFiring = 0x328; // uint32_t : 1
		constexpr auto m_bEnterCombatOnFire = 0x328; // uint32_t : 1
		constexpr auto m_bDeployAtFeetOnFailure = 0x328; // uint32_t : 1
		constexpr auto m_bMustBeOnGroundToFire = 0x328; // uint32_t : 1
		constexpr auto m_bHideTargeterWhenInvalid = 0x328; // uint32_t : 1
		constexpr auto m_bParentAnimComponentHands = 0x328; // uint32_t : 1
		constexpr auto m_bParentAnimComponent1PHead = 0x328; // uint32_t : 1
		constexpr auto m_bAmmoWasGiven = 0x328; // uint32_t : 1
		constexpr auto m_bFirstAmmoWasGiven = 0x328; // uint32_t : 1
		constexpr auto m_bCooldownWasModified = 0x328; // uint32_t : 1
		constexpr auto m_bDisableLagCompensation = 0x328; // uint32_t : 1
		constexpr auto m_bUseSeparateVerticalFrictionKeyframes = 0x328; // uint32_t : 1
		constexpr auto m_bUseRangeFalloffCurve = 0x328; // uint32_t : 1
		constexpr auto m_bUseDeviceMeshWhenTargeting = 0x328; // uint32_t : 1
		constexpr auto m_bPlayPutAway = 0x328; // uint32_t : 1
		constexpr auto m_bCanToggleTargeting = 0x32c; // uint32_t : 1
		constexpr auto m_bDoNotAllowHeadShots = 0x32c; // uint32_t : 1
		constexpr auto m_bConsolidateMultipleShots = 0x32c; // uint32_t : 1
		constexpr auto m_bAllowFiringDuring3pTo1pTransition = 0x32c; // uint32_t : 1
		constexpr auto s_bLockFiringForRoundEnd = 0x32c; // uint32_t : 1
		constexpr auto m_bPreventInterrupt = 0x32c; // uint32_t : 1
		constexpr auto m_bPreventCancel = 0x32c; // uint32_t : 1
		constexpr auto m_bAllowFireDuringGrab = 0x32c; // uint32_t : 1
		constexpr auto m_bLogServerFireFailures = 0x32c; // uint32_t : 1
		constexpr auto m_bUsesOutroLockout = 0x32c; // uint32_t : 1
		constexpr auto m_bIsFireHoldDevice = 0x32c; // uint32_t : 1
		constexpr auto m_bForceReleaseFireHoldWhenCharged = 0x32c; // uint32_t : 1
		constexpr auto m_bFireHoldFull = 0x32c; // uint32_t : 1
		constexpr auto m_bIs2TapFirehold = 0x32c; // uint32_t : 1
		constexpr auto m_DeviceTimerBarCountsUp = 0x32c; // uint32_t : 1
		constexpr auto m_bCooldownAfterDeployDeath = 0x32c; // uint32_t : 1
		constexpr auto m_bLockingInput = 0x32c; // uint32_t : 1
		constexpr auto m_bLockingRotation = 0x32c; // uint32_t : 1
		constexpr auto m_bLockingCamera = 0x32c; // uint32_t : 1
		constexpr auto m_bSkipGenerateNewSeed = 0x32c; // uint32_t : 1
		constexpr auto m_bNoAutoFirePostHitDelay = 0x32c; // uint32_t : 1
		constexpr auto m_bDevicesLinked = 0x32c; // uint32_t : 1
		constexpr auto m_nSocketIndex = 0x330; // int32_t
		constexpr auto m_nSocketMax = 0x334; // int32_t
		constexpr auto s_ParentDevice = 0x338; // ObjectProperty
		constexpr auto m_FireMode = 0x340; // TArray<ObjectProperty>
		constexpr auto r_nMeleeComboSeed = 0x350; // int32_t
		constexpr auto c_DeviceForm = 0x354; // ObjectProperty
		constexpr auto m_CooldownTimers = 0x35c; // ObjectProperty
		constexpr auto PendingImpactList = 0x364; // TArray<FImpactInfo>
		constexpr auto c_TargetingAim = 0x374; // FAimData
		constexpr auto m_CachedAim = 0x3a8; // FAimData
		constexpr auto m_fCachedFirePostHitDelay = 0x3dc; // float
		constexpr auto m_CachedFireRequestId = 0x3e0; // int32_t
		constexpr auto m_fCachedAttackSpeedPercChange = 0x3e4; // float
		constexpr auto s_ReceivedAim = 0x3e8; // FAimData
		constexpr auto m_pwzDeviceName = 0x41c; // FPointer
		constexpr auto m_nDeviceType = 0x424; // int32_t
		constexpr auto EquipTime = 0x428; // float
		constexpr auto s_InventoryObject = 0x42c; // ObjectProperty
		constexpr auto m_nSkillId = 0x434; // int32_t
		constexpr auto r_nInventoryId = 0x438; // int32_t
		constexpr auto m_fLastDeviceCanFireTimeStamp = 0x43c; // float
		constexpr auto m_EndOfLastFireTimeStamp = 0x440; // float
		constexpr auto m_fFiringTimer = 0x444; // float
		constexpr auto m_fTimeAccountedFor = 0x448; // float
		constexpr auto m_fTimeStampAccountedFor = 0x44c; // float
		constexpr auto m_IndividualOffhandCooldownTime = 0x450; // float
		constexpr auto m_fTotalReloadTime = 0x454; // float
		constexpr auto m_fBankedCooldownReduction = 0x458; // float
		constexpr auto c_fCachedManaAtStartFire = 0x45c; // float
		constexpr auto m_WhileFiringDeviceMode = 0x460; // ObjectProperty
		constexpr auto m_fUnequipTime = 0x468; // float
		constexpr auto m_vMeshViewOffset = 0x46c; // FVector
		constexpr auto m_fWeaponBob = 0x478; // float
		constexpr auto m_fMeshFOV = 0x47c; // float
		constexpr auto m_vProjectileSpawnOffset = 0x480; // FVector
		constexpr auto m_BurstMod = 0x48c; // ObjectProperty
		constexpr auto m_CooldownMod = 0x494; // ObjectProperty
		constexpr auto m_AimForwarderMod = 0x49c; // ObjectProperty
		constexpr auto m_nFireLoopInstanceId = 0x4a4; // int32_t
		constexpr auto r_nAmmoClipCount = 0x4a8; // int32_t
		constexpr auto c_nSimLocalAmmoClipCount = 0x4ac; // int32_t
		constexpr auto m_AmmoTransactions = 0x4b0; // TArray<FAmmoTransaction>
		constexpr auto m_DelayedAmmoTransactions = 0x4c0; // TArray<FAmmoTransaction>
		constexpr auto s_RecievedUnverifiedDelayedAmmoTransactions = 0x4d0; // TArray<FAmmoTransaction>
		constexpr auto m_DelayedAmmoTransactionRegen = 0x4e0; // TArray<FAmmoTransaction>
		constexpr auto m_nPendingRegenAmmoTransactionID = 0x4f0; // int32_t
		constexpr auto m_nPendingReloadAmmoTransactionID = 0x4f4; // int32_t
		constexpr auto c_EligableRefundFiringIDs = 0x4f8; // FTrackedFiringAmmoConsumption [0x1e]
		constexpr auto c_nEligableRefundFiringIDsIndexLast = 0x5e8; // int32_t
		constexpr auto c_nEligableRefundFiringIDsIndexFirst = 0x5ec; // int32_t
		constexpr auto m_nLastFiringIDToConsumeAmmo = 0x5f0; // int32_t
		constexpr auto r_nMaxAmmoClipCount = 0x5f4; // int32_t
		constexpr auto m_UniqueAmmoValidationId = 0x5f8; // int32_t
		constexpr auto m_fAmmoRegenPerSec = 0x5fc; // float
		constexpr auto m_fAmmoRegenCounter = 0x600; // float
		constexpr auto m_AmmoChargeFireTimes = 0x604; // TArray<float>
		constexpr auto m_FiredProjectiles = 0x614; // TArray<ObjectProperty>
		constexpr auto m_fForce3PPersistDuration = 0x624; // float
		constexpr auto m_fForce3PPersistTimer = 0x628; // float
		constexpr auto m_fEnterCombatDuration = 0x62c; // float
		constexpr auto r_Deployable = 0x630; // ObjectProperty
		constexpr auto r_nProjectiles = 0x638; // int32_t
		constexpr auto m_fDeployZForgiveness = 0x63c; // float
		constexpr auto m_fBottomlessPitCheck = 0x640; // float
		constexpr auto m_fDeployZOffset = 0x644; // float
		constexpr auto m_Abilities = 0x648; // TArray<int32_t>
		constexpr auto m_DisplayIcon = 0x658; // int32_t
		constexpr auto m_DisplayName = 0x65c; // FString
		constexpr auto m_fOnGroundAltitudeThreshold = 0x66c; // float
		constexpr auto m_PrimaryWeaponParent = 0x670; // ObjectProperty
		constexpr auto m_WeaponMeshActorClass = 0x678; // ATgWeaponMeshActor*
		constexpr auto m_LastKnownHitActor = 0x680; // ObjectProperty
		constexpr auto m_OnFiredDelegates = 0x688; // TArray<DelegateProperty>
		constexpr auto m_OnReloadDelegates = 0x698; // TArray<DelegateProperty>
		constexpr auto m_OnStartFireDelegates = 0x6a8; // TArray<DelegateProperty>
		constexpr auto m_OnStopFireDelegates = 0x6b8; // TArray<DelegateProperty>
		constexpr auto m_OnCooldownEndDelegates = 0x6c8; // TArray<DelegateProperty>
		constexpr auto m_Generic1Delegates = 0x6d8; // TArray<DelegateProperty>
		constexpr auto m_Generic2Delegates = 0x6e8; // TArray<DelegateProperty>
		constexpr auto m_Generic3Delegates = 0x6f8; // TArray<DelegateProperty>
		constexpr auto m_nLinkedDeviceIDs = 0x708; // TArray<int32_t>
		constexpr auto m_nLinkedDeviceTypes = 0x718; // TArray<int32_t>
		constexpr auto c_QueuedSimulatedProjectileSpawns = 0x728; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileSpawnsFromServer = 0x738; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileSpawnsFromClient = 0x748; // TArray<FTgQueuedSimulatedProjectileSpawn>
		constexpr auto s_QueuedProjectileExplosions = 0x758; // TArray<FTgQueuedProjectileExplosion>
		constexpr auto s_nNumServerRefires = 0x768; // int32_t
		constexpr auto s_nNumClientRefires = 0x76c; // int32_t
		constexpr auto s_QueuedRefireRequests = 0x770; // TArray<FTgQueuedRefire>
		constexpr auto s_QueuedInstantFireShotsFromServer = 0x780; // TArray<FTgQueuedInstantFireShot>
		constexpr auto s_QueuedInstantFireShotsFromClient = 0x790; // TArray<FTgQueuedInstantFireShot>
		constexpr auto m_RandomShotSpreadStream = 0x7a0; // FPointer
		constexpr auto m_nLastSetShotSpreadSeed = 0x7a8; // int32_t
		constexpr auto m_AimAssistMagnetScale = 0x7ac; // FVector2D
		constexpr auto m_AimAssistFrictionScale = 0x7b4; // FVector2D
		constexpr auto m_AimAssistTrackingScale = 0x7bc; // FVector2D
		constexpr auto m_fBulletMagnetismStrengthMultiplier = 0x7c4; // float
		constexpr auto m_AimAssistKeyframesMagnetVert = 0x7c8; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesMagnetHoriz = 0x7d8; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesFriction = 0x7e8; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAccHoriz = 0x7f8; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAngleHoriz = 0x808; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAccVert = 0x818; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesTrackingAngleVert = 0x828; // TArray<FAimAssistKeyframeData>
		constexpr auto m_AimAssistKeyframesFrictionVert = 0x838; // TArray<FAimAssistKeyframeData>
		constexpr auto m_GameplayCurveOverrideDevices = 0x848; // TArray<ObjectProperty>
		constexpr auto m_nServerControlledShotSpreadSeed = 0x858; // int32_t
		constexpr auto m_fOutroLockoutTime = 0x85c; // float
		constexpr auto m_fMinTimeBetweenAmmoCharges = 0x860; // float
		constexpr auto m_ForceFeedbackStartHold = 0x864; // ObjectProperty
		constexpr auto m_ForceFeedbackFullHold = 0x86c; // ObjectProperty
		constexpr auto m_ForceFeedbackStopHold = 0x874; // ObjectProperty
		constexpr auto m_ForceFeedbackStartFire = 0x87c; // ObjectProperty
		constexpr auto m_ForceFeedbackStopFire = 0x884; // ObjectProperty
		constexpr auto m_ForceFeedbackStartBuildup = 0x88c; // ObjectProperty
		constexpr auto m_ForceFeedbackStopBuildup = 0x894; // ObjectProperty
		constexpr auto m_ForceFeedbackPostFire = 0x89c; // ObjectProperty
		constexpr auto m_ForceFeedbackStartReload = 0x8a4; // ObjectProperty
		constexpr auto m_ForceFeedbackStopReload = 0x8ac; // ObjectProperty
		constexpr auto m_ForceFeedbackStartCooldown = 0x8b4; // ObjectProperty
		constexpr auto s_fForceReleaseFirHoldFUBARTime = 0x8bc; // float
		constexpr auto s_nLastRequestedFireHoldReleaseID = 0x8c0; // int32_t
		constexpr auto m_f2TapInputTimer = 0x8c4; // float
		constexpr auto m_AccuracySettings = 0x8c8; // FAccuracySettings [0x5]
		constexpr auto m_fCurrentAdvancedAccuracy = 0x954; // float
		constexpr auto m_fLastShotTimestamp = 0x958; // float
		constexpr auto m_nFreeShotsLeft = 0x95c; // int32_t
		constexpr auto m_fLastMinAccuracy = 0x960; // float
		constexpr auto m_fReticleBloomScale = 0x964; // float
		constexpr auto m_RecoilSettings = 0x968; // FRecoilSettings [0x5]
		constexpr auto r_nRecoilMultiCenti = 0x9b8; // int32_t
		constexpr auto m_fStartFiringTimestamp = 0x9bc; // float
		constexpr auto m_fEndFiringTimeStamp = 0x9c0; // float
		constexpr auto m_fAccumulatedFiringTime = 0x9c4; // float
		constexpr auto m_nRandRecoilNum = 0x9c8; // int32_t
		constexpr auto r_nRecoilSeed = 0x9cc; // int32_t
		constexpr auto m_nAimAssistPriorityWhileFiring = 0x9d0; // int32_t
		constexpr auto r_nAllowUseWhileFlags = 0x9d4; // int32_t
		constexpr auto r_fAttackSpeedPercChange = 0x9d8; // float
		constexpr auto m_fSimulatedAttackSpeedPercChange = 0x9dc; // float
		constexpr auto s_fAttackSpeedPercChangeLeniency = 0x9e0; // float
		constexpr auto m_AttackSpeedModifiers = 0x9e4; // TArray<FAttackSpeedModifier>
		constexpr auto r_nDeviceLevel = 0x9f4; // int32_t
		constexpr auto __DeviceEvent__Delegate = 0x9f8; // DelegateProperty
	}

	namespace n_UMorphNodePose { // : UMorphNodeBase
		constexpr auto Target = 0x74; // ObjectProperty
		constexpr auto MorphName = 0x7c; // FName
		constexpr auto Weight = 0x84; // float
	}

	namespace n_ATgProj_Flare { // : ATgProj_FreeGrenade
		constexpr auto m_bStartedPulse = 0x580; // uint32_t : 1
		constexpr auto m_fLifetimeForPhysicsSubstep = 0x584; // float
	}

	namespace n_UOnlineStats { // : UObject
		constexpr auto TotalRowsInView = 0x60; // int32_t
		constexpr auto Rows = 0x64; // TArray<FOnlineStatsRow>
		constexpr auto ColumnData = 0x74; // TArray<FColumnMetaData>
	}

	namespace n_UAnimNodeBlendPerBone { // : UAnimNodeBlend
		constexpr auto bForceLocalSpaceBlend = 0x124; // uint32_t : 1
		constexpr auto BranchStartBoneName = 0x128; // TArray<FName>
		constexpr auto Child2PerBoneWeight = 0x138; // TArray<float>
		constexpr auto LocalToCompReqBones = 0x148; // TArray<char>
	}

	namespace n_UParticleModuleUberRainSplashB { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto ColorOverLife = 0xc0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0xe4; // FRawDistributionFloat
		constexpr auto LifeMultiplier = 0x108; // FRawDistributionVector
		constexpr auto MultiplyX = 0x12c; // uint32_t : 1
		constexpr auto MultiplyY = 0x12c; // uint32_t : 1
		constexpr auto MultiplyZ = 0x12c; // uint32_t : 1
		constexpr auto StartRotationRate = 0x130; // FRawDistributionFloat
	}

	namespace n_APComRepInfo_Game { // : AGameReplicationInfo
		constexpr auto m_MusicThemePlayer = 0x2e8; // ObjectProperty
		constexpr auto m_MusicThemePlayerClass = 0x2f0; // UPComMusicThemePlayer*
		constexpr auto m_MusicThemePlayerClassName = 0x2f8; // FString
	}

	namespace n_UUIComponent_RadialEquipMenu { // : UUIComponent_Display
		constexpr auto m_mcRadialMenuSpray = 0x124; // ObjectProperty
		constexpr auto m_mcCursorSpray = 0x12c; // ObjectProperty
		constexpr auto m_mcOuterRingSpray = 0x134; // ObjectProperty
		constexpr auto m_mcRadialButtonLabelSpray = 0x13c; // ObjectProperty
		constexpr auto m_RadialSlotsSpray = 0x144; // ObjectProperty
		constexpr auto m_mcRadialButtonSpray = 0x14c; // ObjectProperty
		constexpr auto m_grSprayGroup = 0x154; // ObjectProperty
		constexpr auto m_mcRadialMenuEmote = 0x15c; // ObjectProperty
		constexpr auto m_mcCursorEmote = 0x164; // ObjectProperty
		constexpr auto m_mcOuterRingEmote = 0x16c; // ObjectProperty
		constexpr auto m_mcRadialButtonLabelEmote = 0x174; // ObjectProperty
		constexpr auto m_RadialSlotsEmote = 0x17c; // ObjectProperty
		constexpr auto m_mcRadialButtonEmote = 0x184; // ObjectProperty
		constexpr auto m_grEmoteGroup = 0x18c; // ObjectProperty
	}

	namespace n_UUIInteractable_Button_Currency { // : UUIInteractable_Button
		constexpr auto m_mcSlash = 0x140; // ObjectProperty
		constexpr auto m_pKey = 0x148; // ObjectProperty
		constexpr auto m_pCurrencies = 0x150; // ObjectProperty
	}

	namespace n_UMaterialExpressionTransform { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto TransformSourceType = 0xe4; // EMaterialVectorCoordTransformSource
		constexpr auto TransformType = 0xe5; // EMaterialVectorCoordTransform
	}

	namespace n_ATgDevice_AzaanInhand { // : ATgDevice_ChainSequence
		constexpr auto m_pAzaan = 0xa14; // ObjectProperty
		constexpr auto m_fServerThresholdForgiveness = 0xa1c; // float
	}

	namespace n_ATgPawn_Dredge { // : ATgPawn_Character
		constexpr auto m_fBoostedJumpMultiplier = 0x3164; // float
		constexpr auto m_fBoostedJumpGravityMultiplier = 0x3168; // float
		constexpr auto m_bIsBoostedJumping = 0x316c; // uint32_t : 1
	}

	namespace n_ATgDevice_YagorathUlt { // : ATgDevice
		constexpr auto m_CachedYagorath = 0xa08; // ObjectProperty
		constexpr auto m_Target = 0xa10; // ObjectProperty
		constexpr auto m_fPrePullTime = 0xa18; // float
		constexpr auto m_bGrabFailed = 0xa1c; // uint32_t : 1
		constexpr auto m_bPullHit = 0xa1c; // uint32_t : 1
		constexpr auto m_bPullCancelledByCollision = 0xa1c; // uint32_t : 1
		constexpr auto m_fPreUltHealth = 0xa20; // float
		constexpr auto m_fPreUltMaxHealth = 0xa24; // float
		constexpr auto m_fPullSpeedBreakFactor = 0xa28; // float
		constexpr auto m_fDistanceBreakFactor = 0xa2c; // float
		constexpr auto m_fTargetBounceVel = 0xa30; // float
	}

	namespace n_UBrushComponent { // : UPrimitiveComponent
		constexpr auto Brush = 0x24c; // ObjectProperty
		constexpr auto BrushAggGeom = 0x254; // FKAggregateGeom
		constexpr auto BrushPhysDesc = 0x2a0; // FPointer
		constexpr auto CachedPhysBrushData = 0x2a8; // FKCachedConvexData_Mirror
		constexpr auto CachedPhysBrushDataVersion = 0x2b8; // int32_t
		constexpr auto bBlockComplexCollisionTrace = 0x2bc; // uint32_t : 1
	}

	namespace n_UUIData_RebindCommand { // : UUIData
		constexpr auto m_nCommandIndex = 0x64; // int32_t
		constexpr auto m_nCaptureAlt = 0x68; // int32_t
	}

	namespace n_UMeshComponent { // : UPrimitiveComponent
		constexpr auto Materials = 0x24c; // TArray<ObjectProperty>
		constexpr auto MatResGrpId = 0x25c; // int32_t
		constexpr auto SavedBodyMICs = 0x260; // TArray<ObjectProperty>
		constexpr auto DefaultBodyMICs = 0x270; // TArray<ObjectProperty>
		constexpr auto DyedBodyMICs = 0x280; // TArray<ObjectProperty>
		constexpr auto m_bForceHideComponent = 0x290; // uint32_t : 1
	}

	namespace n_ATgPawn_Turret { // : ATgPawn_Pet
		constexpr auto r_bLockdownIsOn = 0x2efc; // uint32_t : 1
		constexpr auto r_bHasHealingStation = 0x2efc; // uint32_t : 1
		constexpr auto m_bFirstAidNuggetOverride = 0x2efc; // uint32_t : 1
		constexpr auto m_nLockdownPostureID = 0x2f00; // int32_t
		constexpr auto m_SpawningDevice = 0x2f04; // ObjectProperty
		constexpr auto m_TargetingNotificationAkEvent = 0x2f0c; // ObjectProperty
		constexpr auto m_PrevTargetActor = 0x2f14; // ObjectProperty
	}

	namespace n_UTgDeviceForm_RaumRev { // : UTgDeviceForm
		constexpr auto m_fRevUpSpinDuration = 0x28c; // float
	}

	namespace n_ATgDevice_FuriaFProjSpawner { // : ATgDevice
		constexpr auto m_CachedFuriaF = 0xa08; // ObjectProperty
	}

	namespace n_UUIData_LeagueTierChange { // : UUIData
		constexpr auto m_League = 0x64; // ObjectProperty
		constexpr auto m_PrevTier = 0x6c; // ObjectProperty
		constexpr auto m_NextTier = 0x74; // ObjectProperty
		constexpr auto m_ePromotionType = 0x7c; // UIDLTC_PromotionType
	}

	namespace n_ATgPawn_Tiberius { // : ATgPawn_Character
		constexpr auto m_CachedHeavyBlade = 0x3164; // ObjectProperty
		constexpr auto m_CachedLeap = 0x316c; // ObjectProperty
		constexpr auto m_CachedUlt = 0x3174; // ObjectProperty
		constexpr auto m_CachedBladeDetonateTalent = 0x317c; // ObjectProperty
		constexpr auto m_CachedLeapAssaultTalent = 0x3184; // ObjectProperty
		constexpr auto m_CachedHeavyBladeForm = 0x318c; // ObjectProperty
		constexpr auto r_eRemoteBladeState = 0x3194; // TigerBladeState
		constexpr auto r_BladeProjectile = 0x3198; // ObjectProperty
		constexpr auto r_BladeDeployable = 0x31a0; // ObjectProperty
		constexpr auto r_vLastLeapDirection = 0x31a8; // FVector
		constexpr auto r_bHasViciousAssault = 0x31b4; // uint32_t : 1
		constexpr auto r_bBladeInRecall = 0x31b4; // uint32_t : 1
		constexpr auto m_nAltInhandSlot = 0x31b8; // int32_t
		constexpr auto m_nAltAltfireSlot = 0x31bc; // int32_t
		constexpr auto r_fRemoteUltDurationPercent = 0x31c0; // float
		constexpr auto r_nRemainingUltCharges = 0x31c4; // int32_t
		constexpr auto r_nMaxUltCharges = 0x31c8; // int32_t
		constexpr auto m_sSecondaryActivationIconOverride = 0x31cc; // FString
		constexpr auto m_HeavyBladeScaleSkelControls = 0x31dc; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionTime { // : UMaterialExpression
		constexpr auto bIgnorePause = 0xb0; // uint32_t : 1
	}

	namespace n_AEnvironmentVolume { // : AVolume
		constexpr auto VfTable_IInterface_NavMeshPathObstacle = 0x2bc; // FPointer
		constexpr auto VfTable_IInterface_NavMeshPathObject = 0x2c4; // FPointer
		constexpr auto bSplitNavMesh = 0x2cc; // uint32_t : 1
	}

	namespace n_UMaterialExpressionAdd { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_UMaterialExpressionDesaturation { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Percent = 0xe4; // FExpressionInput
		constexpr auto LuminanceFactors = 0x118; // FLinearColor
	}

	namespace n_UUIHudPlayer { // : UUIHudPlayer_Base
		constexpr auto m_mcSkipDeathCamPrompt = 0x32c; // ObjectProperty
	}

	namespace n_UMaterialExpressionPixelDepth { // : UMaterialExpression
		constexpr auto bNormalize = 0xb0; // uint32_t : 1
	}

	namespace n_UUIComponent_EventBonusPanel { // : UUIComponent_Display
		constexpr auto m_mcTitleTF = 0x124; // ObjectProperty
		constexpr auto m_mcUnlockTF = 0x12c; // ObjectProperty
		constexpr auto m_pBonusItems = 0x134; // ObjectProperty
		constexpr auto m_pLoadingFrame = 0x13c; // ObjectProperty
		constexpr auto m_pUnlockAllButton = 0x144; // ObjectProperty
	}

	namespace n_AHavokCustomTraversalAnnotation { // : AActor
		constexpr auto m_Target = 0x280; // ObjectProperty
		constexpr auto TraversalType = 0x288; // EHavokTraversalType
		constexpr auto EdgeCost = 0x28c; // float
		constexpr auto SourceEdgeRotation = 0x290; // FRotator
		constexpr auto SourceEdgeTranslation = 0x29c; // FVector
		constexpr auto fEdgeWidth = 0x2a8; // float
		constexpr auto bForceParallelEdges = 0x2ac; // uint32_t : 1
		constexpr auto m_Source = 0x2b0; // ObjectProperty
	}

	namespace n_UUIData_RewardPanelEntry { // : UUIData
		constexpr auto m_eIconType = 0x64; // UIEOML_REWARD_ENTRY_ICON
		constexpr auto m_nValue = 0x68; // int32_t
		constexpr auto m_lsName = 0x6c; // FString
	}

	namespace n_UUIComponent_BattlePassHome { // : UUIComponent_Display
		constexpr auto m_eHomeState = 0x124; // UIHBATTLEPASSHOME_STATE
		constexpr auto m_pPurchasePanel = 0x128; // ObjectProperty
		constexpr auto m_pInfoPanel = 0x130; // ObjectProperty
		constexpr auto m_pPreviewStack = 0x138; // ObjectProperty
		constexpr auto m_PurchaseAllPanel = 0x140; // ObjectProperty
		constexpr auto m_pTiers = 0x148; // ObjectProperty
		constexpr auto m_pNextReward = 0x150; // ObjectProperty
		constexpr auto m_pPrevReward = 0x158; // ObjectProperty
		constexpr auto m_mcTiersTF0 = 0x160; // ObjectProperty
		constexpr auto m_mcTiersTF1 = 0x168; // ObjectProperty
		constexpr auto m_mcTiersTF2 = 0x170; // ObjectProperty
		constexpr auto m_mcBattlePassTrack = 0x178; // ObjectProperty
		constexpr auto m_mcBattlePassTrackHeader = 0x180; // ObjectProperty
		constexpr auto m_mcEncorePanel = 0x188; // ObjectProperty
		constexpr auto m_mcEncorePanelTF = 0x190; // ObjectProperty
		constexpr auto m_pEncorePanelPicture = 0x198; // ObjectProperty
		constexpr auto m_grGroup = 0x1a0; // ObjectProperty
		constexpr auto m_nVoicePreviewId = 0x1a8; // int32_t
		constexpr auto m_nAcknowledgedTier = 0x1ac; // int32_t
		constexpr auto m_nAcknowledgedLevel = 0x1b0; // int32_t
		constexpr auto m_dwAcknowledgedPoints = 0x1b4; // Fdword
		constexpr auto m_bAcknowledgedPaid = 0x1b8; // uint32_t : 1
		constexpr auto m_bFirstPresentation = 0x1b8; // uint32_t : 1
		constexpr auto m_vBaseCameraOffset = 0x1bc; // FVector
		constexpr auto m_vMountCameraOffset = 0x1c8; // FVector
		constexpr auto m_vDeathStampCameraOffset = 0x1d4; // FVector
		constexpr auto m_InputScrollLeft = 0x1e0; // ObjectProperty
		constexpr auto m_InputMouseScrollLeft = 0x1e8; // ObjectProperty
		constexpr auto m_InputScrollRight = 0x1f0; // ObjectProperty
		constexpr auto m_InputMouseScrollRight = 0x1f8; // ObjectProperty
		constexpr auto m_nOnTickCallbackHandle = 0x200; // int32_t
		constexpr auto m_fAutoSelectDelay = 0x204; // float
		constexpr auto m_pPromptLeft = 0x208; // ObjectProperty
		constexpr auto m_pPromptRight = 0x210; // ObjectProperty
		constexpr auto m_pPreviewLTIRequested = 0x218; // ObjectProperty
	}

	namespace n_UTgDataHandler { // : UGFxObject
		constexpr auto m_MP = 0x104; // ObjectProperty
		constexpr auto m_DataChunkList = 0x10c; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimMetaData_DisplayGroupPSCParam { // : UTgAnimMetaData_Keyframed
		constexpr auto ParamName = 0x80; // FName
		constexpr auto DisplayGroup = 0x88; // FName
		constexpr auto EqpSlot = 0x90; // TG_EQUIP_POINT
		constexpr auto bActivateGroupOnRelevant = 0x94; // uint32_t : 1
		constexpr auto bDeactivateGroupOnCeaseRelevant = 0x94; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_SpreadFromSquad { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto SpreadDistance = 0x9c; // float
	}

	namespace n_UTgCameraModule_ThirdPersonVariableHeight { // : UTgCameraModule_ThirdPerson
		constexpr auto ZOffset = 0x118; // float
	}

	namespace n_UUIComponent_LazarusShieldBar { // : UUIComponent_ShieldBar
		constexpr auto m_mcShieldBar = 0x158; // ObjectProperty
		constexpr auto m_mcDamageBar = 0x160; // ObjectProperty
		constexpr auto m_mcBar = 0x168; // ObjectProperty
		constexpr auto m_mcCharges = 0x170; // TArray<ObjectProperty>
		constexpr auto m_mcChargeFills = 0x180; // TArray<ObjectProperty>
		constexpr auto m_mcTimer = 0x190; // ObjectProperty
		constexpr auto m_mcTimerMask = 0x198; // ObjectProperty
		constexpr auto m_bShowUltTimer = 0x1a0; // uint32_t : 1
		constexpr auto m_bShieldBarVisibility = 0x1a0; // uint32_t : 1
		constexpr auto m_nCurrentCharges = 0x1a4; // int32_t
	}

	namespace n_UDistributionFloat { // : UComponent
		constexpr auto VfTable_FCurveEdInterface = 0x70; // FPointer
		constexpr auto bCanBeBaked = 0x78; // uint32_t : 1
		constexpr auto bIsDirty = 0x78; // uint32_t : 1
	}

	namespace n_ATgWeaponMeshActor_LongbowInhand { // : ATgWeaponMeshActor
		constexpr auto m_CachedLongbow = 0x450; // ObjectProperty
		constexpr auto m_bPlayingPlantedFireSFX = 0x458; // uint32_t : 1
		constexpr auto m_bPlayingUltimateFireSFX = 0x458; // uint32_t : 1
	}

	namespace n_UTgGamePhase { // : UObject
		constexpr auto m_fDuration = 0x60; // float
		constexpr auto m_fDurationTimer = 0x64; // float
		constexpr auto m_bPhaseReadyToEnd = 0x68; // uint32_t : 1
		constexpr auto m_bPhaseEnded = 0x68; // uint32_t : 1
		constexpr auto m_bLoop = 0x68; // uint32_t : 1
		constexpr auto m_bInstantaneous = 0x68; // uint32_t : 1
		constexpr auto m_bBroadcastTime = 0x68; // uint32_t : 1
		constexpr auto m_bSkipDecoratorPhases = 0x68; // uint32_t : 1
		constexpr auto m_name = 0x6c; // FString
		constexpr auto m_parentGame = 0x7c; // ObjectProperty
		constexpr auto m_parentPhase = 0x84; // ObjectProperty
		constexpr auto m_childPhases = 0x8c; // TArray<ObjectProperty>
		constexpr auto m_decoratorPhases = 0x9c; // TArray<ObjectProperty>
		constexpr auto m_CurrentPhase = 0xac; // ObjectProperty
		constexpr auto m_nPersistentTextID = 0xb4; // int32_t
	}

	namespace n_AAmbientSoundSimple { // : AAmbientSound
		constexpr auto AmbientProperties = 0x294; // ObjectProperty
		constexpr auto SoundCueInstance = 0x29c; // ObjectProperty
		constexpr auto SoundNodeInstance = 0x2a4; // ObjectProperty
	}

	namespace n_ATgPawn_Bunny { // : ATgPawn_Character
		constexpr auto m_CachedBunnyLink = 0x3164; // ObjectProperty
		constexpr auto m_CachedBunnyHeal = 0x316c; // ObjectProperty
		constexpr auto m_CachedBunnyDefense = 0x3174; // ObjectProperty
		constexpr auto m_CachedBunnyUlt = 0x317c; // ObjectProperty
		constexpr auto c_CachedBunnyLinkForm = 0x3184; // ObjectProperty
		constexpr auto m_bWhileEnemyLinkedEffectsApplied = 0x318c; // uint32_t : 1
		constexpr auto m_bWhileFriendlyLinkedEffectsApplied = 0x318c; // uint32_t : 1
		constexpr auto m_bSpiritLinkViewConstraint = 0x318c; // uint32_t : 1
		constexpr auto m_bLinkedPawnsNetworkUpdate = 0x318c; // uint32_t : 1
		constexpr auto m_bHasBeefySpiritLinkTalent = 0x318c; // uint32_t : 1
		constexpr auto m_nFriendlyLinkBeamFXId_1P = 0x3190; // int32_t
		constexpr auto m_nFriendlyLinkBeamFXId_3P = 0x3194; // int32_t
		constexpr auto m_nEnemyLinkBeamFXId_1P = 0x3198; // int32_t
		constexpr auto m_nEnemyLinkBeamFXId_3P = 0x319c; // int32_t
		constexpr auto m_nLinkBreakBeamFXId_1P = 0x31a0; // int32_t
		constexpr auto m_fLinkBreakBeamTTL = 0x31a4; // float
		constexpr auto m_nmLinkBeamStartSocket = 0x31a8; // FName
		constexpr auto m_fLinkBreakDelay = 0x31b0; // float
		constexpr auto m_fLinkBeamWeaknessOffset = 0x31b4; // float
		constexpr auto m_fLinkBeamRestrengthenPeriod = 0x31b8; // float
		constexpr auto m_nmFamiliarFxDisplayGroup = 0x31bc; // FName
		constexpr auto m_nmBeamWeaknessParameter = 0x31c4; // FName
		constexpr auto m_CurrentTarget = 0x31cc; // ObjectProperty
		constexpr auto m_fMaxSpiritLinkRangeFeet = 0x31d4; // float
		constexpr auto m_fSpiritLinkLoSFoVClient = 0x31d8; // float
		constexpr auto m_fSpiritLinkLoSFoVServerGrace = 0x31dc; // float
		constexpr auto m_SpiritLinks = 0x31e0; // TArray<FSpiritLink>
		constexpr auto m_SpiritLinkBreaks = 0x31f0; // TArray<FBreakingSpiritLink>
		constexpr auto r_nSpiritLinkedPawnIds = 0x3200; // int32_t [0x3]
		constexpr auto m_nBeefySpiritLinkTalentId = 0x320c; // int32_t
		constexpr auto m_fBeefySpiritLinkTalentDuration = 0x3210; // float
	}

	namespace n_USequenceObject { // : UObject
		constexpr auto ObjInstanceVersion = 0x60; // int32_t
		constexpr auto ParentSequence = 0x64; // ObjectProperty
		constexpr auto ObjName = 0x6c; // FString
		constexpr auto ObjComment = 0x7c; // FString
		constexpr auto bDeletable = 0x8c; // uint32_t : 1
		constexpr auto bDrawFirst = 0x8c; // uint32_t : 1
		constexpr auto bDrawLast = 0x8c; // uint32_t : 1
		constexpr auto bOutputObjCommentToScreen = 0x8c; // uint32_t : 1
		constexpr auto bSuppressAutoComment = 0x8c; // uint32_t : 1
		constexpr auto DrawWidth = 0x90; // int32_t
		constexpr auto DrawHeight = 0x94; // int32_t
	}

	namespace n_ATgFatalityMeshActor { // : AActor
		constexpr auto m_nTaskForceId = 0x280; // int32_t
		constexpr auto m_Mesh = 0x284; // ComponentProperty
	}

	namespace n_UGameCrowd_ListOfAgents { // : UObject
		constexpr auto ListOfAgents = 0x60; // TArray<FAgentArchetypeInfo>
	}

	namespace n_UApexDestructibleAsset { // : UApexAsset
		constexpr auto MApexAsset = 0x80; // FPointer
		constexpr auto Materials = 0x88; // TArray<ObjectProperty>
		constexpr auto FractureMaterials = 0x98; // TArray<ObjectProperty>
		constexpr auto bPlaySingleFractureMaterialEffect = 0xa8; // uint32_t : 1
		constexpr auto bHasUniqueAssetMaterialNames = 0xa8; // uint32_t : 1
		constexpr auto bDynamic = 0xa8; // uint32_t : 1
		constexpr auto DefaultPhysMaterial = 0xac; // ObjectProperty
		constexpr auto MDestructibleThumbnailComponent = 0xb4; // FPointer
		constexpr auto CrumbleEmitterName = 0xbc; // FString
		constexpr auto DustEmitterName = 0xcc; // FString
		constexpr auto DestructibleParameters = 0xdc; // FNxDestructibleParameters
	}

	namespace n_UTgAIBehaviorAction_SelectAllyAttackerAsTarget { // : UTgAIBehaviorAction_SelectLaneCombatTarget
		constexpr auto TimeThreshold = 0xa8; // float
		constexpr auto AllyDistanceThreshold = 0xac; // float
		constexpr auto AttackerDistanceThreshold = 0xb0; // float
	}

	namespace n_UTgAIBehaviorCondition_DistanceFromAvoidableProjectile { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
	}

	namespace n_UPBRuleNodeMesh { // : UPBRuleNodeBase
		constexpr auto BuildingMeshes = 0x70; // TArray<FBuildingMeshInfo>
		constexpr auto PartialOccludedBuildingMesh = 0x80; // FBuildingMeshInfo
		constexpr auto bDoOcclusionTest = 0xcc; // uint32_t : 1
		constexpr auto bBlockAll = 0xcc; // uint32_t : 1
	}

	namespace n_UUIData_Challenge { // : UUIData
		constexpr auto m_dwActivityId = 0x64; // Fdword
		constexpr auto m_eStatus = 0x68; // Fdword
		constexpr auto m_bIsDirty = 0x6c; // uint32_t : 1
		constexpr auto m_bCompletionAck = 0x6c; // uint32_t : 1
		constexpr auto m_bCompletedInPast = 0x6c; // uint32_t : 1
		constexpr auto m_bGoalsInitialized = 0x6c; // uint32_t : 1
		constexpr auto m_pPrimaryGoals = 0x70; // TArray<ObjectProperty>
		constexpr auto m_pGatingGoals = 0x80; // TArray<ObjectProperty>
		constexpr auto m_pAllDoneGoals = 0x90; // TArray<ObjectProperty>
		constexpr auto m_pAuxiliaryGoals = 0xa0; // TArray<ObjectProperty>
	}

	namespace n_UTgParticleModuleTypeDataLight { // : UParticleModuleTypeDataBase
		constexpr auto m_PointLightComponent = 0x68; // ComponentProperty
		constexpr auto m_PLCDuplicate = 0x70; // ComponentProperty
	}

	namespace n_URB_ConstraintSetup { // : UObject
		constexpr auto JointName = 0x60; // FName
		constexpr auto ConstraintBone1 = 0x68; // FName
		constexpr auto ConstraintBone2 = 0x70; // FName
		constexpr auto Pos1 = 0x78; // FVector
		constexpr auto PriAxis1 = 0x84; // FVector
		constexpr auto SecAxis1 = 0x90; // FVector
		constexpr auto Pos2 = 0x9c; // FVector
		constexpr auto PriAxis2 = 0xa8; // FVector
		constexpr auto SecAxis2 = 0xb4; // FVector
		constexpr auto PulleyPivot1 = 0xc0; // FVector
		constexpr auto PulleyPivot2 = 0xcc; // FVector
		constexpr auto bEnableProjection = 0xd8; // uint32_t : 1
		constexpr auto m_bBreakOnOwnersDeath = 0xd8; // uint32_t : 1
		constexpr auto m_bDoBreak = 0xd8; // uint32_t : 1
		constexpr auto bLinearLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bLinearBreakable = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimited = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimited = 0xd8; // uint32_t : 1
		constexpr auto bSwingLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bTwistLimitSoft = 0xd8; // uint32_t : 1
		constexpr auto bAngularBreakable = 0xd8; // uint32_t : 1
		constexpr auto bIsPulley = 0xd8; // uint32_t : 1
		constexpr auto bMaintainMinDistance = 0xd8; // uint32_t : 1
		constexpr auto LinearXSetup = 0xdc; // FLinearDOFSetup
		constexpr auto LinearYSetup = 0xe4; // FLinearDOFSetup
		constexpr auto LinearZSetup = 0xec; // FLinearDOFSetup
		constexpr auto LinearLimitStiffness = 0xf4; // float
		constexpr auto LinearLimitDamping = 0xf8; // float
		constexpr auto LinearBreakThreshold = 0xfc; // float
		constexpr auto Swing1LimitAngle = 0x100; // float
		constexpr auto Swing2LimitAngle = 0x104; // float
		constexpr auto TwistLimitAngle = 0x108; // float
		constexpr auto SwingLimitStiffness = 0x10c; // float
		constexpr auto SwingLimitDamping = 0x110; // float
		constexpr auto TwistLimitStiffness = 0x114; // float
		constexpr auto TwistLimitDamping = 0x118; // float
		constexpr auto AngularBreakThreshold = 0x11c; // float
		constexpr auto PulleyRatio = 0x120; // float
	}

	namespace n_ATgDevice_MorningBreath { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_ListenConsumeMarks = 0xa08; // FPointer
	}

	namespace n_UUIData_EventChallengeRegion { // : UUIData
		constexpr auto m_sName = 0x64; // FString
		constexpr auto m_sInternalName = 0x74; // FString
		constexpr auto m_nOpenTimestamp = 0x84; // int32_t
		constexpr auto m_bOpensNext = 0x88; // uint32_t : 1
		constexpr auto m_nSortIndex = 0x8c; // int32_t
		constexpr auto m_nRegionIndex = 0x90; // int32_t
		constexpr auto m_nColorIndex = 0x94; // int32_t
		constexpr auto m_HubData = 0x98; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackInstProperty { // : UInterpTrackInst
		constexpr auto PropertyUpdateCallback = 0x60; // ObjectProperty
		constexpr auto PropertyOuterObjectInst = 0x68; // ObjectProperty
	}

	namespace n_UUIComponent_HealthBar_Overlay { // : UUIComponent_HealthBar
		constexpr auto m_bFriendly = 0x234; // uint32_t : 1
		constexpr auto m_bInRange = 0x234; // uint32_t : 1
		constexpr auto m_bColorDirty = 0x234; // uint32_t : 1
		constexpr auto m_bHealingReduced = 0x234; // uint32_t : 1
		constexpr auto m_bSpecialHealth = 0x234; // uint32_t : 1
		constexpr auto m_nTaskForce = 0x238; // int32_t
		constexpr auto m_fDisplayedDamagePct = 0x23c; // float
		constexpr auto m_fDamageInterpSpeed = 0x240; // float
		constexpr auto m_fMinDamageInterpSpeed = 0x244; // float
	}

	namespace n_UOnlinePlaylistManager { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Playlists = 0x68; // TArray<FPlaylist>
		constexpr auto PlaylistFileNames = 0x78; // TArray<FString>
		constexpr auto DatastoresToRefresh = 0x88; // TArray<FName>
		constexpr auto DownloadCount = 0x98; // int32_t
		constexpr auto SuccessfulCount = 0x9c; // int32_t
		constexpr auto VersionNumber = 0xa0; // int32_t
		constexpr auto PopulationData = 0xa4; // TArray<FPlaylistPopulation>
		constexpr auto WorldwideTotalPlayers = 0xb4; // int32_t
		constexpr auto RegionTotalPlayers = 0xb8; // int32_t
		constexpr auto TitleFileInterface = 0xbc; // TScriptInterface<Class>
		constexpr auto PopulationFileName = 0xcc; // FString
		constexpr auto NextPlaylistPopulationUpdateTime = 0xdc; // float
		constexpr auto PlaylistPopulationUpdateInterval = 0xe0; // float
		constexpr auto MinPlaylistIdToReport = 0xe4; // int32_t
		constexpr auto CurrentPlaylistId = 0xe8; // int32_t
		constexpr auto EventsInterfaceName = 0xec; // FName
		constexpr auto DataCenterId = 0xf4; // int32_t
		constexpr auto DataCenterFileName = 0xf8; // FString
		constexpr auto LastPlaylistDownloadTime = 0x108; // float
		constexpr auto PlaylistRefreshInterval = 0x10c; // float
		constexpr auto __OnReadPlaylistComplete__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnPlaylistPopulationDataUpdated__Delegate = 0x120; // DelegateProperty
	}

	namespace n_UTgAnimTurnInPlace_Rotator { // : UAnimNodeBlendBase
		constexpr auto c_TurnInPlaceNodes = 0x114; // TArray<ObjectProperty>
		constexpr auto m_TgPawn = 0x124; // ObjectProperty
	}

	namespace n_ATgPawn_SiegeWall_Base { // : ATgPawn_SiegeWall
		constexpr auto m_bHasAlertedLowHealth = 0x2f58; // uint32_t : 1
		constexpr auto m_fLowHealthTrigger = 0x2f5c; // float
	}

	namespace n_UTgAudioConversations { // : UObject
		constexpr auto m_Conversations = 0x60; // TArray<FVoxConversation>
		constexpr auto m_bInitialized = 0x70; // uint32_t : 1
		constexpr auto m_bTF1Conversed = 0x70; // uint32_t : 1
		constexpr auto m_bTF2Conversed = 0x70; // uint32_t : 1
		constexpr auto m_GRI = 0x74; // ObjectProperty
		constexpr auto m_nConversationAttemptsRemaining = 0x7c; // int32_t
	}

	namespace n_UUIComponent_DeathRecapPlayer { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcMask = 0x12c; // ObjectProperty
		constexpr auto m_mcTypeTF = 0x134; // ObjectProperty
		constexpr auto m_mcClassTF = 0x13c; // ObjectProperty
		constexpr auto m_mcDamageTF = 0x144; // ObjectProperty
		constexpr auto m_mcTitle = 0x14c; // ObjectProperty
		constexpr auto m_pName = 0x154; // ObjectProperty
		constexpr auto m_pItemList = 0x15c; // ObjectProperty
		constexpr auto m_pSkillsList = 0x164; // ObjectProperty
	}

	namespace n_UTgDeviceForm_SevenInhand { // : UTgDeviceForm
		constexpr auto m_SevenInhandNodes3p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SevenInhandNodes1p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_CachedSeven = 0x2ac; // ObjectProperty
		constexpr auto m_fHeatBuildup = 0x2b4; // float
		constexpr auto m_fHeatBuildupPerShotPerFireMode = 0x2b8; // float [0x3]
		constexpr auto m_fMaxHeatBuildup = 0x2c4; // float
		constexpr auto m_fHeatDecayFactor = 0x2c8; // float
	}

	namespace n_ATgWeaponMeshActor_GroverInhandAxe { // : ATgWeaponMeshActor
		constexpr auto StanceNode = 0x450; // ObjectProperty
	}

	namespace n_ATgDevice_Reversal { // : ATgDevice
		constexpr auto m_fAccumulatedDamage = 0xa08; // float
		constexpr auto m_fVengeanceDamage = 0xa0c; // float
	}

	namespace n_URB_Handle { // : UActorComponent
		constexpr auto GrabbedComponent = 0x88; // ComponentProperty
		constexpr auto GrabbedBoneName = 0x90; // FName
		constexpr auto SceneIndex = 0x98; // int32_t
		constexpr auto bInHardware = 0x9c; // uint32_t : 1
		constexpr auto bRotationConstrained = 0x9c; // uint32_t : 1
		constexpr auto bInterpolating = 0x9c; // uint32_t : 1
		constexpr auto HandleData = 0xa0; // FPointer
		constexpr auto KinActorData = 0xa8; // FPointer
		constexpr auto LinearDamping = 0xb0; // float
		constexpr auto LinearStiffness = 0xb4; // float
		constexpr auto LinearStiffnessScale3D = 0xb8; // FVector
		constexpr auto LinearDampingScale3D = 0xc4; // FVector
		constexpr auto AngularDamping = 0xd0; // float
		constexpr auto AngularStiffness = 0xd4; // float
		constexpr auto Destination = 0xd8; // FVector
		constexpr auto StepSize = 0xe4; // FVector
		constexpr auto Location = 0xf0; // FVector
	}

	namespace n_UOnlineRecentPlayersList { // : UObject
		constexpr auto RecentPlayers = 0x60; // TArray<FUniqueNetId>
		constexpr auto RecentParties = 0x70; // TArray<FRecentParty>
		constexpr auto LastParty = 0x80; // FRecentParty
		constexpr auto MaxRecentPlayers = 0x98; // int32_t
		constexpr auto MaxRecentParties = 0x9c; // int32_t
		constexpr auto RecentPlayersAddIndex = 0xa0; // int32_t
		constexpr auto RecentPartiesAddIndex = 0xa4; // int32_t
		constexpr auto CurrentPlayers = 0xa8; // TArray<FCurrentPlayerMet>
	}

	namespace n_ATgDevice_Salvo { // : ATgDevice
		constexpr auto m_CachedInhand = 0xa08; // ObjectProperty
		constexpr auto m_DrogozLeg2 = 0xa10; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_Energy { // : UTgAIBehaviorCondition
		constexpr auto energy = 0x98; // float
	}

	namespace n_UMcpGroupsBase { // : UMcpServiceBase
		constexpr auto McpGroupsManagerClassName = 0x78; // FString
		constexpr auto GroupLists = 0x88; // TArray<FMcpGroupList>
		constexpr auto __OnCreateGroupComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnDeleteGroupComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryGroupsComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnQueryGroupMembersComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnAddGroupMembersComplete__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnRemoveGroupMembersComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnDeleteAllGroupsComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnQueryGroupInvitesComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnAcceptGroupInviteComplete__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UUberPostProcessEffect { // : UDOFBloomMotionBlurEffect
		constexpr auto SceneShadows = 0xf0; // FVector
		constexpr auto SceneHighLights = 0xfc; // FVector
		constexpr auto SceneMidTones = 0x108; // FVector
		constexpr auto SceneDesaturation = 0x114; // float
		constexpr auto SceneColorize = 0x118; // FVector
		constexpr auto TonemapperType = 0x124; // ETonemapperType
		constexpr auto PostProcessAAType = 0x125; // EPostProcessAAType
		constexpr auto TonemapperRange = 0x128; // float
		constexpr auto TonemapperToeFactor = 0x12c; // float
		constexpr auto TonemapperScale = 0x130; // float
		constexpr auto MotionBlurSoftEdgeKernelSize = 0x134; // float
		constexpr auto bEnableImageGrain = 0x138; // uint32_t : 1
		constexpr auto bScaleEffectsWithViewSize = 0x138; // uint32_t : 1
		constexpr auto bEnableHDRTonemapper = 0x138; // uint32_t : 1
		constexpr auto SceneImageGrainScale = 0x13c; // float
		constexpr auto BloomWeightSmall = 0x140; // float
		constexpr auto BloomWeightMedium = 0x144; // float
		constexpr auto BloomWeightLarge = 0x148; // float
		constexpr auto BloomSizeScaleSmall = 0x14c; // float
		constexpr auto BloomSizeScaleMedium = 0x150; // float
		constexpr auto BloomSizeScaleLarge = 0x154; // float
		constexpr auto EdgeDetectionThreshold = 0x158; // float
		constexpr auto PreviousLUTBlender = 0x15c; // FLUTBlender
		constexpr auto SceneHDRTonemapperScale = 0x180; // float
	}

	namespace n_UTgDeviceForm_Drag { // : UTgDeviceForm
		constexpr auto m_BeamTarget = 0x28c; // ObjectProperty
		constexpr auto m_bIsPawnTarget = 0x294; // uint32_t : 1
		constexpr auto m_nPostureID = 0x298; // int32_t
		constexpr auto m_vReleaseLocation = 0x29c; // FVector
		constexpr auto m_fReleaseTime = 0x2a8; // float
		constexpr auto m_fMissNoHitEndDistance = 0x2ac; // float
		constexpr auto m_fMissNoHitEndTime = 0x2b0; // float
		constexpr auto m_fMissInvalidEndDistance = 0x2b4; // float
		constexpr auto m_fMissInvalidEndTime = 0x2b8; // float
		constexpr auto m_fCloseRangeEndDistance = 0x2bc; // float
		constexpr auto m_fTruePostfireTime = 0x2c0; // float
		constexpr auto m_ChainMesh = 0x2c4; // ComponentProperty
		constexpr auto m_nChainMeshID = 0x2cc; // int32_t
		constexpr auto c_ChainSkelCon = 0x2d0; // ObjectProperty
		constexpr auto m_ChainSocket = 0x2d8; // FName
		constexpr auto m_DragBlendList1P = 0x2e0; // TArray<ObjectProperty>
		constexpr auto m_DragBlendList3P = 0x2f0; // TArray<ObjectProperty>
		constexpr auto m_ChainBlendList = 0x300; // TArray<ObjectProperty>
		constexpr auto m_DragState = 0x310; // EDragState
	}

	namespace n_ATgDeploy_AtlasF { // : ATgDeployable
		constexpr auto m_Target = 0x46c; // ObjectProperty
		constexpr auto m_CountdownIndicator = 0x474; // ComponentProperty
		constexpr auto m_CountdownIndicatorMIC = 0x47c; // ObjectProperty
	}

	namespace n_USeqAct_SetPhysics { // : USequenceAction
		constexpr auto newPhysics = 0x108; // EPhysics
	}

	namespace n_UTgSkelControlSingleBone_Ammo_Lex { // : UTgSkelControlSingleBone
		constexpr auto m_Lex = 0x124; // ObjectProperty
		constexpr auto m_bLeftGun = 0x12c; // uint32_t : 1
		constexpr auto m_fFlatInterpolationRateDecrease = 0x130; // float
		constexpr auto m_fInterpolationRateDecrease = 0x134; // float
		constexpr auto m_fFlatInterpolationRateIncrease = 0x138; // float
		constexpr auto m_fInterpolationRateIncrease = 0x13c; // float
	}

	namespace n_ATgDevice_TheLaw { // : ATgDevice
		constexpr auto m_ExecutePercentage = 0xa08; // float
		constexpr auto AimRotation = 0xa0c; // FRotator
	}

	namespace n_USpotLightComponent { // : UPointLightComponent
		constexpr auto InnerConeAngle = 0x240; // float
		constexpr auto OuterConeAngle = 0x244; // float
		constexpr auto LightShaftConeAngle = 0x248; // float
		constexpr auto PreviewInnerCone = 0x24c; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x254; // ComponentProperty
		constexpr auto Rotation = 0x25c; // FRotator
	}

	namespace n_UTgAnimNodeRandom { // : UTgAnimNodeBlendList
		constexpr auto m_iDefaultChildIndex = 0x168; // int32_t
		constexpr auto m_bConsiderRelevancy = 0x16c; // uint32_t : 1
		constexpr auto m_bMasterOtherNodes = 0x16c; // uint32_t : 1
		constexpr auto m_bIsASlave = 0x16c; // uint32_t : 1
		constexpr auto m_bEnableTimer = 0x16c; // uint32_t : 1
		constexpr auto m_TimeAllChildren = 0x16c; // uint32_t : 1
		constexpr auto m_SlaveNames = 0x170; // TArray<FName>
		constexpr auto m_Slaves = 0x180; // TArray<ObjectProperty>
		constexpr auto m_nPrimaryChild = 0x190; // int32_t
		constexpr auto m_TimeRange = 0x194; // FVector2D
		constexpr auto m_fRemainingTime = 0x19c; // float
		constexpr auto RandomInfo = 0x1a0; // TArray<FTgRandomAnimInfo>
	}

	namespace n_ATgPawn_Pip { // : ATgPawn_Character
		constexpr auto r_bWeightless = 0x3164; // uint32_t : 1
		constexpr auto m_bWeightlessDurationEnded = 0x3164; // uint32_t : 1
		constexpr auto r_bAcrobaticsActive = 0x3164; // uint32_t : 1
		constexpr auto r_bHasMegaPotion = 0x3164; // uint32_t : 1
		constexpr auto m_fWeightlessMaxSpeedModifier = 0x3168; // float
		constexpr auto m_fWeightlessJumpZModifier = 0x316c; // float
		constexpr auto r_fRadiusForHealingPotionFX = 0x3170; // float
		constexpr auto m_CachedWeightless = 0x3174; // ObjectProperty
	}

	namespace n_UTgTutorialAnnouncer { // : UObject
		constexpr auto TutorialSounds = 0x60; // TArray<ObjectProperty>
		constexpr auto QueuedSounds = 0x70; // TArray<ObjectProperty>
		constexpr auto CurrentSoundAC = 0x80; // ComponentProperty
		constexpr auto OwnerPC = 0x88; // ObjectProperty
	}

	namespace n_UMcpIdMappingManager { // : UMcpIdMappingBase
		constexpr auto AccountMappings = 0xa8; // TArray<FMcpIdMapping>
		constexpr auto AddMappingUrl = 0xb8; // FString
		constexpr auto QueryMappingUrl = 0xc8; // FString
		constexpr auto AddMappingRequests = 0xd8; // TArray<FAddMappingRequest>
		constexpr auto QueryMappingRequests = 0xe8; // TArray<FQueryMappingRequest>
	}

	namespace n_UTgSeqEvent_Named { // : USequenceEvent
		constexpr auto NamedEvent = 0x128; // TSE_NAME
	}

	namespace n_ATgWeaponMeshActor_BuckInhand { // : ATgWeaponMeshActor
		constexpr auto m_PawnMeshProgressiveReloadNodes = 0x450; // TArray<ObjectProperty>
		constexpr auto m_ProgressiveReloadNodes = 0x460; // TArray<ObjectProperty>
	}

	namespace n_UActorFactorySkeletalMesh { // : UActorFactory
		constexpr auto SkeletalMesh = 0x9c; // ObjectProperty
		constexpr auto AnimSet = 0xa4; // ObjectProperty
		constexpr auto AnimSequenceName = 0xac; // FName
	}

	namespace n_UTgDeviceForm_Booster { // : UTgDeviceForm
		constexpr auto m_FlyingBlendList1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_FlyingBlendList3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleMeshRotationRateMultiplyLife { // : UParticleModuleRotationRateBase
		constexpr auto LifeMultiplier = 0x68; // FRawDistributionVector
	}

	namespace n_USeqAct_Timer { // : USequenceAction
		constexpr auto ActivationTime = 0x108; // float
		constexpr auto Time = 0x10c; // float
	}

	namespace n_UTgAIBehaviorCondition_IsWithinDistance { // : UTgAIBehaviorCondition
		constexpr auto bIsXYOnly = 0x98; // uint32_t : 1
		constexpr auto DistanceCheck = 0x9c; // float
	}

	namespace n_UUIComponent_ItemColorPicker { // : UUIComponent_Display
		constexpr auto m_pColorEntries = 0x124; // ObjectProperty
	}

	namespace n_UNxForceFieldTornadoComponent { // : UNxForceFieldComponent
		constexpr auto RadialStrength = 0x2bc; // float
		constexpr auto RotationalStrength = 0x2c0; // float
		constexpr auto LiftStrength = 0x2c4; // float
		constexpr auto ForceRadius = 0x2c8; // float
		constexpr auto ForceTopRadius = 0x2cc; // float
		constexpr auto LiftFalloffHeight = 0x2d0; // float
		constexpr auto EscapeVelocity = 0x2d4; // float
		constexpr auto ForceHeight = 0x2d8; // float
		constexpr auto HeightOffset = 0x2dc; // float
		constexpr auto BSpecialRadialForceMode = 0x2e0; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2e4; // float
		constexpr auto Kernel = 0x2e8; // FPointer
	}

	namespace n_UUIComponent_EventEmoteButton { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcQuestIcon = 0x134; // ObjectProperty
		constexpr auto m_mcChainName = 0x13c; // ObjectProperty
		constexpr auto m_mcChainProgress = 0x144; // ObjectProperty
		constexpr auto m_mcChainProgressTF = 0x14c; // ObjectProperty
		constexpr auto m_mcCompleteToUnlock = 0x154; // ObjectProperty
		constexpr auto m_pChainProgressBar = 0x15c; // ObjectProperty
		constexpr auto m_pUnlockButton = 0x164; // ObjectProperty
	}

	namespace n_ATgDevice_Emote { // : ATgDevice
		constexpr auto m_CachedPawnOwner = 0xa08; // ObjectProperty
		constexpr auto m_bAccelerationInterruptsDevice = 0xa10; // uint32_t : 1
		constexpr auto m_bJumpingInterruptsDevice = 0xa10; // uint32_t : 1
		constexpr auto m_bValidEmote = 0xa10; // uint32_t : 1
		constexpr auto m_DefaultCameraModuleClass = 0xa14; // UTgCameraModule*
		constexpr auto m_FiringCameraModuleClass = 0xa1c; // UTgCameraModule_ThirdPerson*
		constexpr auto m_FiringCameraModule = 0xa24; // ObjectProperty
		constexpr auto m_fCameraTweenInTime = 0xa2c; // float
		constexpr auto m_fCameraTweenOutTime = 0xa30; // float
		constexpr auto m_vFiringCameraOffset = 0xa34; // FVector
		constexpr auto m_nSelectedEmote = 0xa40; // int32_t
		constexpr auto m_fEmotePreHitDelay = 0xa44; // float
		constexpr auto m_fEmotePostHitDelay = 0xa48; // float
		constexpr auto m_fEmoteMoveSpeedCeiling = 0xa4c; // float
		constexpr auto m_fEmoteIntroInputLockTime = 0xa50; // float
	}

	namespace n_UParticleModuleSpawn { // : UParticleModuleSpawnBase
		constexpr auto Rate = 0x6c; // FRawDistributionFloat
		constexpr auto RateScale = 0x90; // FRawDistributionFloat
		constexpr auto ParticleBurstMethod = 0xb4; // EParticleBurstMethod
		constexpr auto BurstList = 0xb8; // TArray<FParticleBurst>
	}

	namespace n_ATgDevice_DreadSerpent { // : ATgDevice
		constexpr auto s_bQueueVoodooDeploy = 0xa08; // uint32_t : 1
	}

	namespace n_UPComPerformanceCaptureBase { // : UObject
		constexpr auto StatsToCollect = 0x60; // TArray<FName>
		constexpr auto StatIds = 0x70; // FArray_Mirror
		constexpr auto StatTypes = 0x80; // TArray<char>
		constexpr auto FOV = 0x90; // float
		constexpr auto Profiles = 0x94; // TArray<FPComPerformanceCaptureProfile>
		constexpr auto FallbackProfile = 0xa4; // FPComPerformanceCaptureProfile
		constexpr auto ActiveProfile = 0xc0; // FPComPerformanceCaptureProfile
	}

	namespace n_UNavMeshGoalFilter_OutOfViewFrom { // : UNavMeshGoal_Filter
		constexpr auto GoalPoly = 0x6c; // FPointer
		constexpr auto OutOfViewLocation = 0x74; // FVector
	}

	namespace n_UAnimNotify_PlayParticleEffect { // : UAnimNotify
		constexpr auto PSTemplate = 0x68; // ObjectProperty
		constexpr auto bIsExtremeContent = 0x70; // uint32_t : 1
		constexpr auto bAttach = 0x70; // uint32_t : 1
		constexpr auto bPreview = 0x70; // uint32_t : 1
		constexpr auto bSkipIfOwnerIsHidden = 0x70; // uint32_t : 1
		constexpr auto bIsFootstep = 0x70; // uint32_t : 1
		constexpr auto ShouldDilateTimeByPlayRate = 0x70; // uint32_t : 1
		constexpr auto m_bReuse = 0x70; // uint32_t : 1
		constexpr auto PSNonExtremeContentTemplate = 0x74; // ObjectProperty
		constexpr auto SocketName = 0x7c; // FName
		constexpr auto BoneName = 0x84; // FName
		constexpr auto BoneSocketModuleActorName = 0x8c; // FName
		constexpr auto TimeDilationFactor = 0x94; // float
	}

	namespace n_UInterpTrackVectorMaterialParam { // : UInterpTrackVectorBase
		constexpr auto Materials = 0xb8; // TArray<FMaterialReferenceList>
		constexpr auto Material = 0xc8; // ObjectProperty
		constexpr auto ParamName = 0xd0; // FName
		constexpr auto bNeedsMaterialRefsUpdate = 0xd8; // uint32_t : 1
	}

	namespace n_USeqAct_ParticleEventGenerator { // : USequenceAction
		constexpr auto bEnabled = 0x108; // uint32_t : 1
		constexpr auto bUseEmitterLocation = 0x108; // uint32_t : 1
		constexpr auto Instigator = 0x10c; // ObjectProperty
		constexpr auto EventNames = 0x114; // TArray<FString>
		constexpr auto EventTime = 0x124; // float
		constexpr auto EventLocation = 0x128; // FVector
		constexpr auto EventDirection = 0x134; // FVector
		constexpr auto EventVelocity = 0x140; // FVector
		constexpr auto EventNormal = 0x14c; // FVector
	}

	namespace n_UTgDeviceFire_DruidRMBTargeting { // : UTgDeviceFire_WorldLOSOnly
		constexpr auto m_fServerScaleBufferMult = 0x268; // float
		constexpr auto m_fBaseEncroachmentActorRange = 0x26c; // float
		constexpr auto m_fScaleYZ = 0x270; // float
		constexpr auto m_bFindBestSelection = 0x274; // uint32_t : 1
	}

	namespace n_UPComPlayerInput { // : UPlayerInput
		constexpr auto c_bDirty = 0x2d4; // uint32_t : 1
		constexpr auto c_bUseServerBindings = 0x2d4; // uint32_t : 1
		constexpr auto c_bJumpEnabled = 0x2d4; // uint32_t : 1
		constexpr auto c_sCurrentProfile = 0x2d8; // FString
		constexpr auto m_nKeybindConfigSet = 0x2e8; // int32_t
		constexpr auto m_nMinLookSensitivity = 0x2ec; // float
		constexpr auto m_nMaxLookSensitivity = 0x2f0; // float
		constexpr auto m_RecCastMode = 0x2f4; // int32_t
	}

	namespace n_UTgPawnMod { // : UObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_CallbackContainer = 0x68; // ObjectProperty
	}

	namespace n_UParticleModuleColor_Seeded { // : UParticleModuleColor
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_UMorphTargetSet { // : UObject
		constexpr auto Targets = 0x60; // TArray<ObjectProperty>
		constexpr auto BaseSkelMesh = 0x70; // ObjectProperty
		constexpr auto RawWedgePointIndices = 0x78; // FArray_Mirror
	}

	namespace n_UPBRuleNodeBase { // : UObject
		constexpr auto NextRules = 0x60; // TArray<FPBRuleLink>
	}

	namespace n_USkelControlFootPlacement { // : USkelControlLimb
		constexpr auto FootOffset = 0x128; // float
		constexpr auto FootUpAxis = 0x12c; // EAxis
		constexpr auto FootRotOffset = 0x130; // FRotator
		constexpr auto bInvertFootUpAxis = 0x13c; // uint32_t : 1
		constexpr auto bOrientFootToGround = 0x13c; // uint32_t : 1
		constexpr auto bOnlyEnableForUpAdjustment = 0x13c; // uint32_t : 1
		constexpr auto m_bManuallyOverrideEffectorLocation = 0x13c; // uint32_t : 1
		constexpr auto m_bUseCachedFootOffset = 0x13c; // uint32_t : 1
		constexpr auto MaxUpAdjustment = 0x140; // float
		constexpr auto MaxDownAdjustment = 0x144; // float
		constexpr auto MaxFootOrientAdjust = 0x148; // float
		constexpr auto m_vCachedFootOffset = 0x14c; // FVector
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetHasEffectCategory { // : UTgAIBehaviorCondition
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x98; // uint32_t : 1
		constexpr auto EffectCategoryId = 0x9c; // int32_t
		constexpr auto EffectGroupId = 0xa0; // int32_t
	}

	namespace n_ATgDevice_HexaFire { // : ATgDevice_HitPulse
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa10; // FPointer
		constexpr auto m_vProjectileSpawnOffset2 = 0xa18; // FVector
		constexpr auto m_bFireLeftWeapon = 0xa24; // uint32_t : 1
		constexpr auto m_CachedRuckus = 0xa28; // ObjectProperty
	}

	namespace n_UTgGameDC_Device { // : UTgDataChunk
		constexpr auto m_nDeviceId = 0x158; // int32_t
		constexpr auto m_nDeviceInstanceId = 0x15c; // int32_t
		constexpr auto m_nPointsAllocated = 0x160; // int32_t
		constexpr auto m_CooldownTimer = 0x164; // ObjectProperty
		constexpr auto __usc_get_mode_tooltip_delegate__Delegate = 0x16c; // DelegateProperty
		constexpr auto __usc_set_cast_mode_delegate__Delegate = 0x17c; // DelegateProperty
	}

	namespace n_UMaterialExpressionSine { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
		constexpr auto Period = 0xe4; // float
	}

	namespace n_ATgDevice_Defiance { // : ATgDevice
		constexpr auto m_CachedAndroxusInhand = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsWithinCombatDistance { // : UTgAIBehaviorCondition
		constexpr auto bSubtractTargetPawnRadius = 0x98; // uint32_t : 1
		constexpr auto DistanceThresholdPercent = 0x9c; // float
		constexpr auto DeviceSlot = 0xa0; // TG_EQUIP_POINT
	}

	namespace n_UUIComponent_PlayerName { // : UUIComponent_Display
		constexpr auto m_eAlignment = 0x124; // UIALIGNINGTYPE
		constexpr auto m_mcNameStandard = 0x128; // ObjectProperty
		constexpr auto m_mcNamePaidBattlePass = 0x130; // ObjectProperty
		constexpr auto m_mcIcon = 0x138; // ObjectProperty
		constexpr auto m_mcNamePaidBattlePassSparkles = 0x140; // TArray<ObjectProperty>
		constexpr auto m_mcNamePaidBattlePassStrokes = 0x150; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_EventChallengeHubListItem { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcHighlight = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
		constexpr auto m_pProgress = 0x13c; // ObjectProperty
		constexpr auto m_mcProgressText = 0x144; // ObjectProperty
	}

	namespace n_USceneCaptureCubeMapComponent { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto NearPlane = 0xd8; // float
		constexpr auto FarPlane = 0xdc; // float
		constexpr auto WorldLocation = 0xe0; // FVector
	}

	namespace n_USeqAct_DelaySwitch { // : USeqAct_Latent
		constexpr auto LinkCount = 0x120; // int32_t
		constexpr auto CurrentIdx = 0x124; // int32_t
		constexpr auto SwitchDelay = 0x128; // float
		constexpr auto NextLinkTime = 0x12c; // float
	}

	namespace n_UUIComponent_RadialSlotSpray { // : UUIComponent_Display
		constexpr auto m_mcSprayDisplayLock = 0x124; // ObjectProperty
		constexpr auto m_mcSprayDisplayRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcSprayDisplayTexture = 0x134; // ObjectProperty
		constexpr auto m_mcSprayDisplayIcon = 0x13c; // ObjectProperty
		constexpr auto m_SprayDisplay = 0x144; // ObjectProperty
		constexpr auto m_SprayDisplayPurchaseButton = 0x14c; // ObjectProperty
	}

	namespace n_UTgCameraModule_SpectatorThirdPerson { // : UTgCameraModule_ThirdPerson
		constexpr auto OldViewpoint = 0x118; // FTPOV
		constexpr auto RemainingBlendTime = 0x13c; // float
		constexpr auto TotalBlendTime = 0x140; // float
		constexpr auto nLastUsedViewYawRotation = 0x144; // int32_t
		constexpr auto fYawLockedRotSmoothRate = 0x148; // float
	}

	namespace n_UDistributionVectorConstantCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveVector
		constexpr auto bLockAxes = 0x90; // uint32_t : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags
	}

	namespace n_UTgSeqAct_AddAnimSets { // : USequenceAction
		constexpr auto m_MaleAnimSets = 0x108; // TArray<ObjectProperty>
		constexpr auto m_FemaleAnimSets = 0x118; // TArray<ObjectProperty>
		constexpr auto m_bAppendToExisting = 0x128; // uint32_t : 1
	}

	namespace n_USkeletalMesh { // : UObject
		constexpr auto Bounds = 0x60; // FBoxSphereBounds
		constexpr auto LodCheckSphereOrigin = 0x7c; // FVector
		constexpr auto LodCheckSphereRadius = 0x88; // float
		constexpr auto Materials = 0x8c; // TArray<ObjectProperty>
		constexpr auto ClothingAssets = 0x9c; // TArray<ObjectProperty>
		constexpr auto ClothingLodMap = 0xac; // TArray<FApexClothingAssetInfo>
		constexpr auto Origin = 0xbc; // FVector
		constexpr auto RotOrigin = 0xc8; // FRotator
		constexpr auto RefSkeleton = 0xd4; // TArray<int32_t>
		constexpr auto SkeletalDepth = 0xe4; // int32_t
		constexpr auto NameIndexMap = 0xe8; // TMap<None, None>
		constexpr auto LODModels = 0x130; // FIndirectArray_Mirror
		constexpr auto SourceData = 0x140; // FPointer
		constexpr auto RefBasesInvMatrix = 0x148; // TArray<FBoneAtom>
		constexpr auto SkelMirrorTable = 0x158; // TArray<FBoneMirrorInfo>
		constexpr auto SkelMirrorAxis = 0x168; // EAxis
		constexpr auto SkelMirrorFlipAxis = 0x169; // EAxis
		constexpr auto Sockets = 0x16c; // TArray<ObjectProperty>
		constexpr auto BoneBreakNames = 0x17c; // TArray<FString>
		constexpr auto BoneBreakOptions = 0x18c; // TArray<BoneBreakOption>
		constexpr auto LODInfo = 0x19c; // TArray<FSkeletalMeshLODInfo>
		constexpr auto OptimizationSettings = 0x1ac; // TArray<FSkeletalMeshOptimizationSettings>
		constexpr auto PerPolyCollisionBones = 0x1bc; // TArray<FName>
		constexpr auto AddToParentPerPolyCollisionBone = 0x1cc; // TArray<FName>
		constexpr auto PerPolyBoneKDOPs = 0x1dc; // TArray<int32_t>
		constexpr auto bStripkDOP = 0x1ec; // uint32_t : 1
		constexpr auto bPerPolyUseSoftWeighting = 0x1ec; // uint32_t : 1
		constexpr auto bUseSimpleLineCollision = 0x1ec; // uint32_t : 1
		constexpr auto bUseSimpleBoxCollision = 0x1ec; // uint32_t : 1
		constexpr auto bForceCPUSkinning = 0x1ec; // uint32_t : 1
		constexpr auto bUseFullPrecisionUVs = 0x1ec; // uint32_t : 1
		constexpr auto bHasBeenSimplified = 0x1ec; // uint32_t : 1
		constexpr auto FaceFXAsset = 0x1f0; // ObjectProperty
		constexpr auto LODBiasPC = 0x1f8; // int32_t
		constexpr auto LODBiasPS3 = 0x1fc; // int32_t
		constexpr auto LODBiasXbox360 = 0x200; // int32_t
		constexpr auto LODBiasOrbis = 0x204; // int32_t
		constexpr auto ClothMesh = 0x208; // TArray<FPointer>
		constexpr auto ClothMeshScale = 0x218; // TArray<float>
		constexpr auto ClothToGraphicsVertMap = 0x228; // TArray<int32_t>
		constexpr auto ClothMovementScale = 0x238; // TArray<float>
		constexpr auto ClothMovementScaleGenMode = 0x248; // ClothMovementScaleGen
		constexpr auto ClothToAnimMeshMaxDist = 0x24c; // float
		constexpr auto bLimitClothToAnimMesh = 0x250; // uint32_t : 1
		constexpr auto ClothWeldingMap = 0x254; // TArray<int32_t>
		constexpr auto ClothWeldingDomain = 0x264; // int32_t
		constexpr auto ClothWeldedIndices = 0x268; // TArray<int32_t>
		constexpr auto bForceNoWelding = 0x278; // uint32_t : 1
		constexpr auto NumFreeClothVerts = 0x27c; // int32_t
		constexpr auto ClothIndexBuffer = 0x280; // TArray<int32_t>
		constexpr auto ClothBones = 0x290; // TArray<FName>
		constexpr auto ClothHierarchyLevels = 0x2a0; // int32_t
		constexpr auto bEnableClothBendConstraints = 0x2a4; // uint32_t : 1
		constexpr auto bEnableClothDamping = 0x2a4; // uint32_t : 1
		constexpr auto bUseClothCOMDamping = 0x2a4; // uint32_t : 1
		constexpr auto ClothStretchStiffness = 0x2a8; // float
		constexpr auto ClothBendStiffness = 0x2ac; // float
		constexpr auto ClothDensity = 0x2b0; // float
		constexpr auto ClothThickness = 0x2b4; // float
		constexpr auto ClothDamping = 0x2b8; // float
		constexpr auto ClothIterations = 0x2bc; // int32_t
		constexpr auto ClothHierarchicalIterations = 0x2c0; // int32_t
		constexpr auto ClothFriction = 0x2c4; // float
		constexpr auto ClothRelativeGridSpacing = 0x2c8; // float
		constexpr auto ClothPressure = 0x2cc; // float
		constexpr auto ClothCollisionResponseCoefficient = 0x2d0; // float
		constexpr auto ClothAttachmentResponseCoefficient = 0x2d4; // float
		constexpr auto ClothAttachmentTearFactor = 0x2d8; // float
		constexpr auto ClothSleepLinearVelocity = 0x2dc; // float
		constexpr auto HardStretchLimitFactor = 0x2e0; // float
		constexpr auto bHardStretchLimit = 0x2e4; // uint32_t : 1
		constexpr auto bEnableClothOrthoBendConstraints = 0x2e4; // uint32_t : 1
		constexpr auto bEnableClothSelfCollision = 0x2e4; // uint32_t : 1
		constexpr auto bEnableClothPressure = 0x2e4; // uint32_t : 1
		constexpr auto bEnableClothTwoWayCollision = 0x2e4; // uint32_t : 1
		constexpr auto ClothSpecialBones = 0x2e8; // TArray<FClothSpecialBoneInfo>
		constexpr auto bEnableClothLineChecks = 0x2f8; // uint32_t : 1
		constexpr auto bClothMetal = 0x2f8; // uint32_t : 1
		constexpr auto ClothMetalImpulseThreshold = 0x2fc; // float
		constexpr auto ClothMetalPenetrationDepth = 0x300; // float
		constexpr auto ClothMetalMaxDeformationDistance = 0x304; // float
		constexpr auto bEnableClothTearing = 0x308; // uint32_t : 1
		constexpr auto ClothTearFactor = 0x30c; // float
		constexpr auto ClothTearReserve = 0x310; // int32_t
		constexpr auto bEnableValidBounds = 0x314; // uint32_t : 1
		constexpr auto ValidBoundsMin = 0x318; // FVector
		constexpr auto ValidBoundsMax = 0x324; // FVector
		constexpr auto ClothTornTriMap = 0x330; // FMap_Mirror
		constexpr auto SoftBodySurfaceToGraphicsVertMap = 0x378; // TArray<int32_t>
		constexpr auto SoftBodySurfaceIndices = 0x388; // TArray<int32_t>
		constexpr auto SoftBodyTetraVertsUnscaled = 0x398; // TArray<FVector>
		constexpr auto SoftBodyTetraIndices = 0x3a8; // TArray<int32_t>
		constexpr auto SoftBodyTetraLinks = 0x3b8; // TArray<FSoftBodyTetraLink>
		constexpr auto CachedSoftBodyMeshes = 0x3c8; // TArray<FPointer>
		constexpr auto CachedSoftBodyMeshScales = 0x3d8; // TArray<float>
		constexpr auto SoftBodyBones = 0x3e8; // TArray<FName>
		constexpr auto SoftBodySpecialBones = 0x3f8; // TArray<FSoftBodySpecialBoneInfo>
		constexpr auto SoftBodyVolumeStiffness = 0x408; // float
		constexpr auto SoftBodyStretchingStiffness = 0x40c; // float
		constexpr auto SoftBodyDensity = 0x410; // float
		constexpr auto SoftBodyParticleRadius = 0x414; // float
		constexpr auto SoftBodyDamping = 0x418; // float
		constexpr auto SoftBodySolverIterations = 0x41c; // int32_t
		constexpr auto SoftBodyFriction = 0x420; // float
		constexpr auto SoftBodyRelativeGridSpacing = 0x424; // float
		constexpr auto SoftBodySleepLinearVelocity = 0x428; // float
		constexpr auto bEnableSoftBodySelfCollision = 0x42c; // uint32_t : 1
		constexpr auto SoftBodyAttachmentResponse = 0x430; // float
		constexpr auto SoftBodyCollisionResponse = 0x434; // float
		constexpr auto SoftBodyDetailLevel = 0x438; // float
		constexpr auto SoftBodySubdivisionLevel = 0x43c; // int32_t
		constexpr auto bSoftBodyIsoSurface = 0x440; // uint32_t : 1
		constexpr auto bEnableSoftBodyDamping = 0x440; // uint32_t : 1
		constexpr auto bUseSoftBodyCOMDamping = 0x440; // uint32_t : 1
		constexpr auto SoftBodyAttachmentThreshold = 0x444; // float
		constexpr auto bEnableSoftBodyTwoWayCollision = 0x448; // uint32_t : 1
		constexpr auto SoftBodyAttachmentTearFactor = 0x44c; // float
		constexpr auto bEnableSoftBodyLineChecks = 0x450; // uint32_t : 1
		constexpr auto bHasVertexColors = 0x450; // uint32_t : 1
		constexpr auto GraphicsIndexIsCloth = 0x454; // TArray<char>
		constexpr auto CachedStreamingTextureFactors = 0x464; // TArray<float>
		constexpr auto StreamingDistanceMultiplier = 0x474; // float
		constexpr auto ReleaseResourcesFence = 0x478; // int32_t
		constexpr auto SkelMeshRUID = 0x47c; // FQWord
		constexpr auto bUseClothingAssetMaterial = 0x484; // uint32_t : 1
	}

	namespace n_USeqAct_GetVelocity { // : USequenceAction
		constexpr auto VelocityMag = 0x108; // float
		constexpr auto VelocityVect = 0x10c; // FVector
	}

	namespace n_UTgSeqAct_TriggerBots { // : USequenceAction
		constexpr auto bUseDestination = 0x108; // uint32_t : 1
		constexpr auto TargetActor = 0x10c; // ObjectProperty
		constexpr auto destActor = 0x114; // ObjectProperty
	}

	namespace n_ATgDevice_BuckInhand { // : ATgDevice
		constexpr auto m_fReloadScaleUsed = 0xa08; // float
		constexpr auto m_fStartReloadTimestamp = 0xa0c; // float
		constexpr auto m_fFirstShellReloadTime = 0xa10; // float
		constexpr auto m_fShellReloadTime = 0xa14; // float
		constexpr auto m_fPostReloadTime = 0xa18; // float
		constexpr auto m_fReloadTimer = 0xa1c; // float
		constexpr auto m_nProgressiveReloadTransactionID = 0xa20; // int32_t
		constexpr auto m_bIsReloadingFirstShell = 0xa24; // uint32_t : 1
		constexpr auto s_bPendingServerEndReload = 0xa24; // uint32_t : 1
	}

	namespace n_USeqEvent_HudRender { // : USequenceEvent
		constexpr auto Targets = 0x128; // TArray<ObjectProperty>
		constexpr auto bIsActive = 0x138; // uint32_t : 1
		constexpr auto AuthoredGlobalScale = 0x13c; // float
	}

	namespace n_ATgDevice_SmokeScreenMod { // : ATgDevice
		constexpr auto m_ImmuneTargets = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_ImmuneTimes = 0xa18; // TArray<float>
	}

	namespace n_ATgDevice_Advance { // : ATgDevice_Charge
		constexpr auto m_bHasCharged = 0xa7c; // uint32_t : 1
		constexpr auto r_bHasAerialAssault = 0xa7c; // uint32_t : 1
	}

	namespace n_UUIComponent_StreetStyleEventHome { // : UUIComponent_Display
		constexpr auto m_pBundleLTIs = 0x124; // TArray<ObjectProperty>
		constexpr auto m_mcBundlesOwnedTF = 0x134; // ObjectProperty
		constexpr auto m_pBundles = 0x13c; // ObjectProperty
		constexpr auto m_pBonusProgress = 0x144; // ObjectProperty
		constexpr auto m_pBundlePanel = 0x14c; // ObjectProperty
		constexpr auto m_pBonusPanel = 0x154; // ObjectProperty
		constexpr auto m_grHome = 0x15c; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x164; // ObjectProperty
		constexpr auto m_pUnlockAllAction = 0x16c; // ObjectProperty
	}

	namespace n_UUIComponent_HeaderTabRotating { // : UUIComponent_Display
		constexpr auto m_pCTA = 0x124; // ObjectProperty
		constexpr auto m_mcTwitchCTA = 0x12c; // ObjectProperty
		constexpr auto m_mcSelected = 0x134; // ObjectProperty
		constexpr auto m_mcSelectedTF = 0x13c; // ObjectProperty
		constexpr auto m_mcSelectedIcon = 0x144; // ObjectProperty
		constexpr auto m_mcSelectedBackground = 0x14c; // ObjectProperty
		constexpr auto m_mcSelectedLoadoutsCTA = 0x154; // ObjectProperty
		constexpr auto m_mcHighlight = 0x15c; // ObjectProperty
		constexpr auto m_mcHighlightTF = 0x164; // ObjectProperty
		constexpr auto m_mcHighlightIcon = 0x16c; // ObjectProperty
		constexpr auto m_mcHighlightBackground = 0x174; // ObjectProperty
		constexpr auto m_mcHighlightLoadoutsCTA = 0x17c; // ObjectProperty
		constexpr auto m_mcShadow = 0x184; // ObjectProperty
		constexpr auto m_mcShadowTF = 0x18c; // ObjectProperty
		constexpr auto m_mcShadowIcon = 0x194; // ObjectProperty
		constexpr auto m_mcShadowBackground = 0x19c; // ObjectProperty
		constexpr auto m_mcShadowLoadoutsCTA = 0x1a4; // ObjectProperty
		constexpr auto m_bShowLoadoutCTA = 0x1ac; // uint32_t : 1
	}

	namespace n_ATargetPoint { // : AKeypoint
		constexpr auto SpawnRefCount = 0x288; // int32_t
	}

	namespace n_UUIComponent_ChestPanelTencent { // : UUIComponent_Display
		constexpr auto m_pSprayData = 0x124; // ObjectProperty
		constexpr auto m_mcName = 0x12c; // ObjectProperty
		constexpr auto m_mcType = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcSprayIcon = 0x144; // ObjectProperty
		constexpr auto m_mcSprayIconGfx = 0x14c; // ObjectProperty
		constexpr auto m_mcSprayIconCard = 0x154; // ObjectProperty
		constexpr auto m_mcSprayIconRarity = 0x15c; // ObjectProperty
		constexpr auto m_mcRentalLabel = 0x164; // ObjectProperty
		constexpr auto m_mcRentalTime = 0x16c; // ObjectProperty
		constexpr auto m_pCTA = 0x174; // ObjectProperty
		constexpr auto m_sSprayName = 0x17c; // FString
		constexpr auto m_sChestName = 0x18c; // FString
		constexpr auto m_nSprayIconIndex = 0x19c; // int32_t
		constexpr auto m_nSprayRarityIndex = 0x1a0; // int32_t
		constexpr auto m_nChestIconFrame = 0x1a4; // int32_t
		constexpr auto m_pVendorItem = 0x1a8; // FPointer
	}

	namespace n_USeqAct_ProjectileFactory { // : USeqAct_ActorFactory
		constexpr auto PSTemplate = 0x178; // ObjectProperty
		constexpr auto SocketName = 0x180; // FName
		constexpr auto BoneName = 0x188; // FName
	}

	namespace n_UTgPawnMod_FxAudio { // : UTgPawnMod
		constexpr auto m_AudioValues = 0x70; // TArray<FModFxAudioValues>
		constexpr auto m_fTimeSinceBeat = 0x80; // float
		constexpr auto m_nNumSegments = 0x84; // int32_t
		constexpr auto m_fDampenedVal = 0x88; // float
		constexpr auto m_bActivateCharacterMusic = 0x8c; // uint32_t : 1
		constexpr auto m_bQueuedPlayMusic = 0x8c; // uint32_t : 1
		constexpr auto m_nPlayingId = 0x90; // int32_t
		constexpr auto m_nSwitchQueryId = 0x94; // int32_t
		constexpr auto m_nRTPCQueryId = 0x98; // int32_t
		constexpr auto m_nmLobbySwitchName = 0x9c; // FName
		constexpr auto m_nmGameSwitchGroupName = 0xa4; // FName
	}

	namespace n_UUIScene_UIHudDruid { // : UUIScene
		constexpr auto m_MoonJuiceBar = 0x1cc; // ObjectProperty
		constexpr auto m_bViewTargetDruid = 0x1d4; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1d4; // uint32_t : 1
		constexpr auto m_bMoonJuiceVisible = 0x1d4; // uint32_t : 1
		constexpr auto m_CachedDruid = 0x1d8; // ObjectProperty
		constexpr auto m_fMoonJuiceCurrent = 0x1e0; // float
		constexpr auto m_fMoonJuiceUpdateSpeed = 0x1e4; // float
	}

	namespace n_UTgAchievement_DeviceDamage { // : UTgAchievement
		constexpr auto m_fDamageDealt = 0x94; // float
	}

	namespace n_UTgSeqAct_TutorialHighlighter { // : USequenceAction
		constexpr auto GameUIElement = 0x108; // eTutorialHighlighterElement
	}

	namespace n_UTgAIBehaviorCondition_CombatTargetIsInMinotaurRadius { // : UTgAIBehaviorCondition
		constexpr auto bMustBeEnemy = 0x98; // uint32_t : 1
	}

	namespace n_ATgWeaponMeshActor_LazarusInhand { // : ATgWeaponMeshActor
		constexpr auto m_nFiremode = 0x450; // int32_t
	}

	namespace n_UUIGAPeachStartup { // : UUIMoviePlayer
		constexpr auto m_fHirezAnimTimer = 0x2a0; // float
		constexpr auto m_fPeachAnimTimer = 0x2a4; // float
		constexpr auto m_fSkipDelay = 0x2a8; // float
		constexpr auto m_fSkipDelayTimer = 0x2ac; // float
	}

	namespace n_UUIComponent_NotificationCenterNotifications { // : UUIComponent_Display
		constexpr auto m_pDropdownData = 0x124; // TArray<FPointer>
		constexpr auto m_pEntries = 0x134; // ObjectProperty
		constexpr auto m_pDropdown = 0x13c; // ObjectProperty
		constexpr auto m_pClearAll = 0x144; // ObjectProperty
		constexpr auto m_grInput = 0x14c; // ObjectProperty
	}

	namespace n_UUIAccountLinkPopup { // : UTgGfxScene
		constexpr auto m_sUserEmail = 0x1ec; // FString
	}

	namespace n_UUIComponent_StreetStyleEventQuests { // : UUIComponent_Display
		constexpr auto m_mcQuestExpireTF = 0x124; // ObjectProperty
		constexpr auto m_pQuests = 0x12c; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x134; // ObjectProperty
		constexpr auto m_pRightArrow = 0x13c; // ObjectProperty
		constexpr auto m_pOwnedCurrency = 0x144; // ObjectProperty
		constexpr auto m_grInput = 0x14c; // ObjectProperty
	}

	namespace n_UUIScene_UIEndTimesEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pHome = 0x1dc; // ObjectProperty
		constexpr auto m_pRewards = 0x1e4; // ObjectProperty
		constexpr auto m_pQuests = 0x1ec; // ObjectProperty
		constexpr auto m_pOverview = 0x1f4; // ObjectProperty
		constexpr auto m_pRotator = 0x1fc; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_GiftGiver { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bHasActivated = 0xcc; // uint32_t : 1
	}

	namespace n_UMaterialExpressionFmod { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_USeqAct_Log { // : USequenceAction
		constexpr auto bOutputToScreen = 0x108; // uint32_t : 1
		constexpr auto bIncludeObjComment = 0x108; // uint32_t : 1
		constexpr auto TargetDuration = 0x10c; // float
		constexpr auto TargetOffset = 0x110; // FVector
		constexpr auto LogMessage = 0x11c; // FString
	}

	namespace n_UUIComponent_LootItem { // : UUIComponent_Display
		constexpr auto m_pItem = 0x124; // ObjectProperty
		constexpr auto m_mcXName = 0x12c; // ObjectProperty
		constexpr auto m_mcRentalIcon = 0x134; // ObjectProperty
		constexpr auto m_mcRentalText = 0x13c; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_HealthPCT_In_Range { // : UTgInvListener
		constexpr auto m_bApplied = 0xc4; // uint32_t : 1
	}

	namespace n_UTgSeqVar_Player { // : USeqVar_Player
		constexpr auto HumanPlayers = 0xdc; // TArray<ObjectProperty>
		constexpr auto BotPlayers = 0xec; // TArray<ObjectProperty>
		constexpr auto PetPlayers = 0xfc; // TArray<ObjectProperty>
		constexpr auto bAllBots = 0x10c; // uint32_t : 1
		constexpr auto bAllHumans = 0x10c; // uint32_t : 1
		constexpr auto bAllHumansAndPets = 0x10c; // uint32_t : 1
		constexpr auto nTaskForceNumber = 0x110; // int32_t
	}

	namespace n_ATgCharacterPerformance { // : ATgGame
		constexpr auto BasePerformanceCapture = 0x624; // ObjectProperty
		constexpr auto CurrentCaptureState = 0x62c; // EPComPerformanceCaptureState
		constexpr auto CharacterInput = 0x630; // FString
		constexpr auto SetInput = 0x640; // FString
		constexpr auto CurrentCharacterIndex = 0x650; // int32_t
		constexpr auto CurrentSkinIndex = 0x654; // int32_t
		constexpr auto CharacterPlacements = 0x658; // TArray<ObjectProperty>
		constexpr auto CharactersToTest = 0x668; // TArray<FString>
		constexpr auto AllSkinIDs = 0x678; // TArray<int32_t>
		constexpr auto DeviceToCharacterIDPairs = 0x688; // TArray<FDeviceToCharacterID>
		constexpr auto StatsPerSkin = 0x698; // TArray<FPComPerformanceCaptureStatsPerSkin>
		constexpr auto CharacterPawns = 0x6a8; // TArray<ObjectProperty>
		constexpr auto ManifestGroup = 0x6b8; // ObjectProperty
		constexpr auto CharacterPerformanceUtility = 0x6c0; // FPointer
	}

	namespace n_UTgSeqAct_TemporaryRemoveDevice { // : USequenceAction
		constexpr auto m_nEquipPoint = 0x108; // int32_t
	}

	namespace n_ATgGame_Paladins_Assault { // : ATgGame_Paladins_Siege
		constexpr auto m_fAttackDuration = 0xa64; // float
		constexpr auto m_fAttackPhaseOvertimeDuration = 0xa68; // float
		constexpr auto m_fAttackCaptureRateMultiplier = 0xa6c; // float
		constexpr auto m_AttackPoint = 0xa70; // ObjectProperty
		constexpr auto m_bInAttackPhaseOvertime = 0xa78; // uint32_t : 1
		constexpr auto m_fTakeoverSecondPhaseInstructionDelay = 0xa7c; // float
	}

	namespace n_UTgInvListener_Counter { // : UTgInventoryObject_Listen_ActiveWhileOffCooldown
		constexpr auto m_fLastCounterTime = 0xc8; // float
	}

	namespace n_UTgMapInfo { // : UMapInfo
		constexpr auto m_EndFocusActor_TF1 = 0x60; // ObjectProperty
		constexpr auto m_EndFocusActor_TF2 = 0x68; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_2 = 0x70; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_3 = 0x78; // ObjectProperty
		constexpr auto m_FatalityFactory_TF1_4 = 0x80; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_2 = 0x88; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_3 = 0x90; // ObjectProperty
		constexpr auto m_FatalityFactory_TF2_4 = 0x98; // ObjectProperty
		constexpr auto m_OverlayPathMesh = 0xa0; // ObjectProperty
		constexpr auto m_vMapCenter = 0xa8; // FVector2D
		constexpr auto m_vTaskForce1BaseLocation = 0xb0; // FVector2D
		constexpr auto m_vTaskForce2BaseLocation = 0xb8; // FVector2D
		constexpr auto m_fLockViewBufferZoneSize = 0xc0; // float
		constexpr auto m_bSupportsGuardianThrone = 0xc4; // uint32_t : 1
		constexpr auto m_LitParticleBrightness = 0xc8; // float
	}

	namespace n_UMaterialExpressionPower { // : UMaterialExpression
		constexpr auto Base = 0xb0; // FExpressionInput
		constexpr auto Exponent = 0xe4; // FExpressionInput
	}

	namespace n_UOnlineTitleFileDownloadMcp { // : UOnlineTitleFileDownloadBase
		constexpr auto TitleFiles = 0x104; // TArray<FTitleFileMcp>
		constexpr auto DownloadCount = 0x114; // int32_t
	}

	namespace n_UTgSkelCon_Spring { // : USkelControlLookAt
		constexpr auto m_vWorldSpaceGoal = 0x16c; // FVector
		constexpr auto m_vInitialWorldSpaceGoalOffset = 0x178; // FVector
		constexpr auto m_vVelocity = 0x184; // FVector
		constexpr auto m_fSpringStiffness = 0x190; // float
		constexpr auto m_fSpringDamping = 0x194; // float
	}

	namespace n_UUIData_LTIAggregate { // : UUIData
		constexpr auto m_Items = 0x64; // TArray<ObjectProperty>
	}

	namespace n_UTgAIUtilitySet { // : UTgAIBehaviorNode
		constexpr auto AnnotationType = 0x94; // EAIAnnotationType
		constexpr auto Functions = 0x98; // TArray<ObjectProperty>
		constexpr auto Filters = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_UTgGameViewportClient { // : UPComGameViewportClient
		constexpr auto m_DeferredManifests = 0x1c4; // TArray<ObjectProperty>
		constexpr auto m_dragging = 0x1d4; // uint32_t : 1
		constexpr auto m_wasMaximized = 0x1d4; // uint32_t : 1
		constexpr auto bReadLeftStickAxis = 0x1d4; // uint32_t : 1
		constexpr auto bReadRightStickAxis = 0x1d4; // uint32_t : 1
		constexpr auto fRawLeftStickAxis = 0x1d8; // float
		constexpr auto fRawRightStickAxis = 0x1dc; // float
		constexpr auto fRawRightStickX = 0x1e0; // float
		constexpr auto fRawRightStickY = 0x1e4; // float
	}

	namespace n_UTgCombinedPostProcessEffect { // : UPostProcessEffect
		constexpr auto HitEffectColor = 0x88; // FColor
		constexpr auto SceneShadows = 0x8c; // FVector
		constexpr auto SceneHighLights = 0x98; // FVector
		constexpr auto SceneMidTones = 0xa4; // FVector
		constexpr auto SceneDesaturation = 0xb0; // float
		constexpr auto SceneColorize = 0xb4; // FVector
	}

	namespace n_ATgDevice_Aegis { // : ATgDevice
		constexpr auto m_fPreviousMinCooldown = 0xa08; // float
	}

	namespace n_UTgData_Cards { // : UTgObject
		constexpr auto m_pMovie = 0x60; // ObjectProperty
	}

	namespace n_UUIComponent_CompetitiveRankChange { // : UUIComponent_Display
		constexpr auto m_pButton = 0x124; // ObjectProperty
		constexpr auto m_mcRankIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcRankName = 0x134; // ObjectProperty
	}

	namespace n_UStaticMeshComponentFactory { // : UMeshComponentFactory
		constexpr auto StaticMesh = 0x74; // ObjectProperty
	}

	namespace n_ATgDevice_RaumUlt { // : ATgDevice_Charge
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa7c; // FPointer
		constexpr auto m_CachedRaum = 0xa84; // ObjectProperty
		constexpr auto m_bLockoutDuringPostFire = 0xa8c; // uint32_t : 1
		constexpr auto m_fChargeDeviationMeanLifetime = 0xa90; // float
		constexpr auto m_fAccumulatedChargeDeviation = 0xa94; // float
		constexpr auto m_fMaxTurnDegPerSec = 0xa98; // float
		constexpr auto m_fMaxDirectionShiftDegrees = 0xa9c; // float
		constexpr auto m_fPerActorHitPeriod = 0xaa0; // float
	}

	namespace n_UUIScene_UILeaderboard { // : UUIScene
		constexpr auto m_bPendingLoad = 0x1cc; // uint32_t : 1
		constexpr auto m_CurrentLeaderboard = 0x1d0; // ObjectProperty
		constexpr auto m_ChampionLeaderboard = 0x1d8; // ObjectProperty
		constexpr auto m_PlayerLeaderboard = 0x1e0; // ObjectProperty
		constexpr auto m_LeagueDropdown = 0x1e8; // ObjectProperty
		constexpr auto m_RankedProgress = 0x1f0; // ObjectProperty
		constexpr auto m_mcHeader = 0x1f8; // ObjectProperty
		constexpr auto m_mcRankIcon = 0x200; // ObjectProperty
		constexpr auto m_ViewProfile = 0x208; // ObjectProperty
		constexpr auto m_GamerIds = 0x210; // TArray<FString>
		constexpr auto m_fTimeSinceLastUserUpdate = 0x220; // float
		constexpr auto m_dwRequestedTierId = 0x224; // Fdword
	}

	namespace n_UTgPawnMod_FxAudio_EDMSeris { // : UTgPawnMod_FxAudio
		constexpr auto m_fGlowMultBass = 0xac; // float
	}

	namespace n_UTgSkelCon_YagorathSpinner { // : UTgSkelCon_Spinner
		constexpr auto m_CachedYagorath = 0x144; // ObjectProperty
	}

	namespace n_UTgAbyssalEchoes { // : UObject
		constexpr auto m_fAbyssalEchoPercent = 0x60; // float
		constexpr auto m_fViktorOverridePercent = 0x64; // float
		constexpr auto m_parentGame = 0x68; // ObjectProperty
		constexpr auto m_fEchoSpawnDuration = 0x70; // float
		constexpr auto m_fEchoSpawnTimer = 0x74; // float
		constexpr auto m_fEchoTimeoutTimer = 0x78; // float
		constexpr auto m_bSpawnedEcho = 0x7c; // uint32_t : 1
		constexpr auto m_bEchoEnraged = 0x7c; // uint32_t : 1
		constexpr auto m_bSpawnAttempt1 = 0x7c; // uint32_t : 1
		constexpr auto m_bSpawnAttempt2 = 0x7c; // uint32_t : 1
		constexpr auto m_bSpawnAttempt3 = 0x7c; // uint32_t : 1
		constexpr auto m_nHighestTDMScore = 0x80; // int32_t
		constexpr auto m_nHighestOnslaughtScore = 0x84; // int32_t
	}

	namespace n_UUIScene_UIPatchNotesPopup { // : UUIScene
		constexpr auto m_mcTitle = 0x1cc; // ObjectProperty
		constexpr auto m_CarouselPanel = 0x1d4; // ObjectProperty
		constexpr auto m_pNextButton = 0x1dc; // ObjectProperty
		constexpr auto m_FeatureData = 0x1e4; // TArray<FJsonFeatureData>
		constexpr auto m_FeatureMap = 0x1f4; // TMap<None, None>
	}

	namespace n_UTgAIBehaviorAction_SetBotBehaviorState { // : UTgAIBehaviorAction
		constexpr auto DesiredBehaviorState = 0x94; // EBotBehaviorState
	}

	namespace n_UAnimNode { // : UAnimObject
		constexpr auto bRelevant = 0x68; // uint32_t : 1
		constexpr auto bJustBecameRelevant = 0x68; // uint32_t : 1
		constexpr auto bTickDuringPausedAnims = 0x68; // uint32_t : 1
		constexpr auto bEditorOnly = 0x68; // uint32_t : 1
		constexpr auto bDisableCaching = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnInit = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnBecomeRelevant = 0x68; // uint32_t : 1
		constexpr auto bCallScriptEventOnCeaseRelevant = 0x68; // uint32_t : 1
		constexpr auto NodeTickTag = 0x6c; // int32_t
		constexpr auto PostBoneUpdateNodeTickTag = 0x70; // int32_t
		constexpr auto NodeInitTag = 0x74; // int32_t
		constexpr auto NodeEndEventTick = 0x78; // int32_t
		constexpr auto TickArrayIndex = 0x7c; // int32_t
		constexpr auto NodeCachedAtomsTag = 0x80; // int32_t
		constexpr auto NodeTotalWeight = 0x84; // float
		constexpr auto ParentNodes = 0x88; // TArray<ObjectProperty>
		constexpr auto NodeName = 0x98; // FName
		constexpr auto CachedBoneAtoms = 0xa0; // TArray<FBoneAtom>
		constexpr auto CachedNumDesiredBones = 0xb0; // char
		constexpr auto CachedRootMotionDelta = 0xc0; // FBoneAtom
		constexpr auto bCachedHasRootMotion = 0xe0; // int32_t
		constexpr auto CachedCurveKeys = 0xe4; // TArray<FCurveKey>
		constexpr auto SearchTag = 0xf4; // int32_t
		constexpr auto m_LabelColor = 0xf8; // FColor
	}

	namespace n_ATgDeviceVolumeInfo { // : AInfo
		constexpr auto V = 0x280; // ObjectProperty
	}

	namespace n_ATgStaticMeshActor_CapturePoint { // : AStaticMeshActor
		constexpr auto UncontestedCaptureColor = 0x2a4; // FLinearColor
		constexpr auto FriendlyCaptureColor = 0x2b4; // FLinearColor
		constexpr auto EnemyCaptureColor = 0x2c4; // FLinearColor
		constexpr auto EmissiveColorParameterName = 0x2d4; // FName
		constexpr auto CapturePercentParameterName = 0x2dc; // FName
		constexpr auto InitialMaterialList = 0x2e4; // TArray<ObjectProperty>
		constexpr auto bInstancedAllMaterials = 0x2f4; // uint32_t : 1
		constexpr auto CurrentCaptureStatus = 0x2f8; // int32_t
		constexpr auto CurrentCapturePercent = 0x2fc; // float
	}

	namespace n_UNavMeshPath_BiasAgainstPolysWithinDistanceOfLocations { // : UNavMeshPathConstraint
		constexpr auto Location = 0x78; // FVector
		constexpr auto Rotation = 0x84; // FVector
		constexpr auto DistanceToCheck = 0x90; // float
		constexpr auto LocationsToCheck = 0x94; // TArray<FVector>
	}

	namespace n_UAnimNodeSequenceBlendBase { // : UAnimNodeSequence
		constexpr auto Anims = 0x1ac; // TArray<FAnimBlendInfo>
	}

	namespace n_UInterpTrackLinearColorBase { // : UInterpTrack
		constexpr auto LinearColorTrack = 0xa0; // FInterpCurveLinearColor
		constexpr auto CurveTension = 0xb4; // float
	}

	namespace n_UUIComponent_HnHEventOverview { // : UUIComponent_Display
		constexpr auto m_grOverview = 0x124; // ObjectProperty
	}

	namespace n_UParticleModuleLocationDirect { // : UParticleModuleLocationBase
		constexpr auto Location = 0x68; // FRawDistributionVector
		constexpr auto LocationOffset = 0x8c; // FRawDistributionVector
		constexpr auto ScaleFactor = 0xb0; // FRawDistributionVector
		constexpr auto Direction = 0xd4; // FRawDistributionVector
	}

	namespace n_USkyLightComponent { // : ULightComponent
		constexpr auto LowerBrightness = 0x1a4; // float
		constexpr auto LowerColor = 0x1a8; // FColor
	}

	namespace n_UTgSeqEvent_LoadoutChanged { // : USequenceEvent
		constexpr auto DeckId = 0x128; // int32_t
	}

	namespace n_USeqAct_ToggleInput { // : USeqAct_Toggle
		constexpr auto bToggleMovement = 0x108; // uint32_t : 1
		constexpr auto bToggleTurning = 0x108; // uint32_t : 1
	}

	namespace n_USkeletalMeshSocket { // : UObject
		constexpr auto SocketName = 0x60; // FName
		constexpr auto BoneName = 0x68; // FName
		constexpr auto RelativeLocation = 0x70; // FVector
		constexpr auto RelativeRotation = 0x7c; // FRotator
		constexpr auto RelativeScale = 0x88; // FVector
		constexpr auto PreviewSkelComp = 0x94; // ComponentProperty
	}

	namespace n_UTgInvListener_SetChildDamageType { // : UTgInventoryObject_Listen_ActiveWhileOffCooldown
		constexpr auto m_nOldDamageType = 0xc8; // int32_t
		constexpr auto m_nmOldDamageTypeClass = 0xcc; // FName
		constexpr auto m_OldDamageTypeClass = 0xd4; // UTgDamageType*
	}

	namespace n_UNavMeshGoal_Null { // : UNavMeshPathGoalEvaluator
		constexpr auto PartialGoal = 0x7c; // FPointer
	}

	namespace n_UUIData_LastDamageDoneInstance { // : UUIData
		constexpr auto m_dwCount = 0x64; // Fdword
		constexpr auto m_dwDamage = 0x68; // Fdword
		constexpr auto m_dwDamageTypeId = 0x6c; // Fdword
		constexpr auto m_dwSourceDeviceId = 0x70; // Fdword
		constexpr auto m_dwFireModeIndex = 0x74; // Fdword
	}

	namespace n_ATgGame_Arena_Capture { // : ATgGame_Arena
		constexpr auto s_nCaptureHostilePointXP = 0x798; // int32_t
		constexpr auto s_nCaptureHostilePointGold = 0x79c; // int32_t
		constexpr auto s_nReclaimPointXP = 0x7a0; // int32_t
		constexpr auto s_nReclaimPointGold = 0x7a4; // int32_t
		constexpr auto m_nCurrentActiveCapturePointIndex = 0x7a8; // int32_t
		constexpr auto m_fNewPointTime = 0x7ac; // float
	}

	namespace n_ATgDevice_CorvusRMB { // : ATgDevice
		constexpr auto m_Corvus = 0xa08; // ObjectProperty
		constexpr auto m_CachedImpact = 0xa10; // FImpactInfo
	}

	namespace n_ATgPlayOfTheGameCamera { // : ACameraActor
		constexpr auto m_ViewTarget = 0x420; // ObjectProperty
		constexpr auto m_bActive = 0x428; // uint32_t : 1
		constexpr auto m_fRemainingTweenTime = 0x42c; // float
		constexpr auto m_fTotalTweenTime = 0x430; // float
		constexpr auto m_TweenSourcePOV = 0x434; // FTPOV
		constexpr auto m_vRelativeLocation = 0x458; // FVector
		constexpr auto m_vRelativeRotation = 0x464; // FVector
		constexpr auto m_vRelativeLocationOffset = 0x470; // FVector
		constexpr auto m_vRelativeRotationOffset = 0x47c; // FVector
	}

	namespace n_UUIComponent_StoreBountyItems { // : UUIComponent_Display
		constexpr auto m_mcItemName = 0x124; // ObjectProperty
		constexpr auto m_mcItemRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcDealDetails = 0x134; // ObjectProperty
		constexpr auto m_mcCurrencyIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcCurrencyTF = 0x144; // ObjectProperty
		constexpr auto m_mcTimerTF = 0x14c; // ObjectProperty
		constexpr auto m_mcOwnedTF = 0x154; // ObjectProperty
		constexpr auto m_DailyQuest = 0x15c; // ObjectProperty
		constexpr auto m_pMoreCoinsButton = 0x164; // ObjectProperty
		constexpr auto m_PurchaseButton = 0x16c; // ObjectProperty
		constexpr auto m_pPurchaseAction = 0x174; // ObjectProperty
		constexpr auto m_dwCurrentItem = 0x17c; // Fdword
		constexpr auto m_dwCurrentPrice = 0x180; // Fdword
		constexpr auto m_dwQuantityRemaining = 0x184; // Fdword
		constexpr auto m_fLastPortalClaimUpdateTimestamp = 0x188; // float
	}

	namespace n_UUIComponent_HalloweenEventHome { // : UUIComponent_Display
		constexpr auto m_pBundleLTIs = 0x124; // TArray<ObjectProperty>
		constexpr auto m_pUnownedBundleLTIs = 0x134; // TArray<ObjectProperty>
		constexpr auto m_mcCouponTF = 0x144; // ObjectProperty
		constexpr auto m_mcBundlesOwnedTF = 0x14c; // ObjectProperty
		constexpr auto m_pBundles = 0x154; // ObjectProperty
		constexpr auto m_pBonusProgress = 0x15c; // ObjectProperty
		constexpr auto m_pBundlePanel = 0x164; // ObjectProperty
		constexpr auto m_pBonusPanel = 0x16c; // ObjectProperty
		constexpr auto m_grHome = 0x174; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x17c; // ObjectProperty
		constexpr auto m_pUnlockAllAction = 0x184; // ObjectProperty
	}

	namespace n_UClient { // : UObject
		constexpr auto MinDesiredFrameRate = 0x68; // float
		constexpr auto DisplayGamma = 0x6c; // float
		constexpr auto InitialButtonRepeatDelay = 0x70; // float
		constexpr auto ButtonRepeatDelay = 0x74; // float
	}

	namespace n_URB_ConstraintDrawComponent { // : UPrimitiveComponent
		constexpr auto LimitMaterial = 0x24c; // ObjectProperty
	}

	namespace n_ATgDevice_Kunai { // : ATgDevice
		constexpr auto m_fBurstSpreadHalfAngleDeg = 0xa08; // float
		constexpr auto m_vProjectileSpawnOffsetLeft = 0xa0c; // FVector
		constexpr auto m_vProjectileSpawnOffsetRight = 0xa18; // FVector
	}

	namespace n_UTgSeqAct_NavIndicator { // : USequenceAction
		constexpr auto m_NavTarget = 0x108; // ObjectProperty
	}

	namespace n_ATgDevice_ShadowUlt { // : ATgDevice_Charge
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa7c; // FPointer
		constexpr auto m_Shadow = 0xa84; // ObjectProperty
		constexpr auto m_bHasHitTarget = 0xa8c; // uint32_t : 1
		constexpr auto m_vLastChargeStartLocation = 0xa90; // FVector
		constexpr auto m_fChargePercent = 0xa9c; // float
		constexpr auto m_fInitalEnergyCost = 0xaa0; // float
		constexpr auto m_vCachedTargeterEndpoint = 0xaa4; // FVector
	}

	namespace n_UMaterialInstanceTimeVarying { // : UMaterialInstance
		constexpr auto bAutoActivateAll = 0x2f4; // uint32_t : 1
		constexpr auto Duration = 0x2f8; // float
		constexpr auto FontParameterValues = 0x2fc; // TArray<FFontParameterValueOverTime>
		constexpr auto ScalarParameterValues = 0x30c; // TArray<FScalarParameterValueOverTime>
		constexpr auto TextureParameterValues = 0x31c; // TArray<FTextureParameterValueOverTime>
		constexpr auto VectorParameterValues = 0x32c; // TArray<FVectorParameterValueOverTime>
		constexpr auto LinearColorParameterValues = 0x33c; // TArray<FLinearColorParameterValueOverTime>
	}

	namespace n_UUIInteractable_JsonPanel { // : UUIComponent_Interactable
		constexpr auto m_mcHighlight = 0x140; // ObjectProperty
		constexpr auto m_mcImage = 0x148; // ObjectProperty
		constexpr auto m_mcTitle = 0x150; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x158; // ObjectProperty
		constexpr auto m_mcLiveBanner = 0x160; // ObjectProperty
		constexpr auto m_mcLiveBannerText = 0x168; // ObjectProperty [0x3]
		constexpr auto m_pRealMoneyPrice = 0x180; // ObjectProperty
		constexpr auto m_pCrystalPrice = 0x188; // ObjectProperty
		constexpr auto m_JsonFeatureData = 0x190; // FJsonFeatureData
		constexpr auto m_bInteractable = 0x228; // uint32_t : 1
	}

	namespace n_UAnimNodeSlot { // : UAnimNodeBlendBase
		constexpr auto bIsPlayingCustomAnim = 0x114; // uint32_t : 1
		constexpr auto bEarlyAnimEndNotify = 0x114; // uint32_t : 1
		constexpr auto bSkipBlendWhenNotRendered = 0x114; // uint32_t : 1
		constexpr auto bAdditiveAnimationsOverrideSource = 0x114; // uint32_t : 1
		constexpr auto bIsBeingUsedByInterpGroup = 0x114; // uint32_t : 1
		constexpr auto bDontAddToAlwaysTickArray = 0x114; // uint32_t : 1
		constexpr auto PendingBlendOutTime = 0x118; // float
		constexpr auto CustomChildIndex = 0x11c; // int32_t
		constexpr auto TargetChildIndex = 0x120; // int32_t
		constexpr auto TargetWeight = 0x124; // TArray<float>
		constexpr auto BlendTimeToGo = 0x134; // float
	}

	namespace n_UUIComponent_StoreFeatured { // : UUIComponent_Display
		constexpr auto m_pFeatureData = 0x124; // TArray<FJsonFeatureData>
		constexpr auto m_pFeatureMap = 0x134; // TMap<None, None>
		constexpr auto m_pJsonPanels = 0x17c; // ObjectProperty [0x7]
		constexpr auto m_pCarouselPanel = 0x1b4; // ObjectProperty
		constexpr auto m_grFeatured = 0x1bc; // ObjectProperty
	}

	namespace n_UTgGamePhase_PlayMusic { // : UTgGamePhase
		constexpr auto m_eMusicID = 0xb8; // ENotifySound
	}

	namespace n_UTgInventoryObject_Listen_Combo_Grover { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_vAxeStartingLocation = 0xcc; // FVector
	}

	namespace n_UGameCrowdGroup { // : UObject
		constexpr auto Members = 0x60; // TArray<ObjectProperty>
	}

	namespace n_UUIHudSpectator { // : UGFxObject
		constexpr auto m_nIterations = 0x104; // int32_t
		constexpr auto m_BannedIds = 0x108; // int32_t [0x6]
		constexpr auto m_bFindMatchDetails = 0x120; // uint32_t : 1
		constexpr auto m_fUpdateWaitRT = 0x124; // float
		constexpr auto m_fUpdateWaitGT = 0x128; // float
		constexpr auto _global = 0x12c; // ObjectProperty
		constexpr auto m_BotLifeData = 0x134; // FBotLifeData [0x2]
		constexpr auto m_pMovie = 0x16c; // ObjectProperty
	}

	namespace n_UTgAudioPawnDialogue { // : UObject
		constexpr auto m_ChatterEvents = 0x60; // TArray<FChatterEvent>
		constexpr auto m_DialogueEvents = 0x70; // TArray<FDialogueEvent>
		constexpr auto m_fCategoryCooldownTimestamps = 0x80; // float [0xe]
		constexpr auto m_fCategoryCooldownBase = 0xb8; // float [0xe]
		constexpr auto m_pOwner = 0xf0; // ObjectProperty
		constexpr auto m_fLastEmoteTime = 0xf8; // float
		constexpr auto m_bSpeaking = 0xfc; // uint32_t : 1
		constexpr auto m_bInitialized = 0xfc; // uint32_t : 1
		constexpr auto m_nInvokedWeapon = 0x100; // int32_t
	}

	namespace n_USeqAct_AkSetState { // : USequenceAction
		constexpr auto StateGroup = 0x108; // FString
		constexpr auto State = 0x118; // FString
	}

	namespace n_UUIData_PopupGeneric { // : UUIData
		constexpr auto VfTable_ITgCallbackInterface = 0x64; // FPointer
		constexpr auto sTitle = 0x6c; // FString [0x2]
		constexpr auto nInitialIndex = 0x8c; // int32_t
		constexpr auto bUserMustClose = 0x90; // uint32_t : 1
		constexpr auto sButtonName = 0x94; // FString [0x8]
		constexpr auto pOtherSceneStompFunction = 0x114; // FPointer
		constexpr auto m_CallbackContainer = 0x11c; // ObjectProperty
	}

	namespace n_ATgDeploy_ChurchillWard { // : ATgDeployable
		constexpr auto r_bTargetVisible = 0x46c; // uint32_t : 1
		constexpr auto r_fRadiusScale = 0x470; // float
		constexpr auto m_CachedChurchill = 0x474; // ObjectProperty
	}

	namespace n_UMultiFont { // : UFont
		constexpr auto ResolutionTestTable = 0x1a0; // TArray<float>
	}

	namespace n_USceneCapture2DHitMaskComponent { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto SkeletalMeshComp = 0xd8; // ComponentProperty
		constexpr auto MaterialIndex = 0xe0; // int32_t
		constexpr auto ForceLOD = 0xe4; // int32_t
		constexpr auto HitMaskCullDistance = 0xe8; // int32_t
		constexpr auto FadingStartTimeSinceHit = 0xec; // float
		constexpr auto FadingPercentage = 0xf0; // float
		constexpr auto FadingDurationTime = 0xf4; // float
		constexpr auto FadingIntervalTime = 0xf8; // float
	}

	namespace n_ULineBatchComponent { // : UPrimitiveComponent
		constexpr auto FPrimitiveDrawInterfaceVfTable = 0x24c; // FPointer
		constexpr auto FPrimitiveDrawInterfaceView = 0x254; // FPointer
		constexpr auto BatchedLines = 0x25c; // TArray<FPointer>
		constexpr auto BatchedPoints = 0x26c; // TArray<FPointer>
		constexpr auto DefaultLifeTime = 0x27c; // float
	}

	namespace n_ATgStaticMeshActor_BoostedTextures { // : AStaticMeshActor
		constexpr auto m_CameraTag = 0x2a4; // ELobbyCameraTag
		constexpr auto m_LoadingMaterial = 0x2a8; // ObjectProperty
		constexpr auto m_fFadeInTime = 0x2b0; // float
		constexpr auto m_bMaterialRelevant = 0x2b4; // uint32_t : 1
		constexpr auto m_bWaitingForTextures = 0x2b4; // uint32_t : 1
		constexpr auto m_bLoadingMaterialApplied = 0x2b4; // uint32_t : 1
		constexpr auto m_fFadeInTimeRemaining = 0x2b8; // float
		constexpr auto m_BaseMaterials = 0x2bc; // TArray<ObjectProperty>
		constexpr auto m_LoadingMaterials = 0x2cc; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIPlay { // : UUIScene
		constexpr auto VfTable_IDelayQueueInterface = 0x1cc; // FPointer
		constexpr auto m_mcHeaderIcon = 0x1d4; // ObjectProperty
		constexpr auto m_mcMultiqueueCursor = 0x1dc; // ObjectProperty
		constexpr auto m_mcMultiqueueUpDownIndicator = 0x1e4; // ObjectProperty
		constexpr auto m_mcCrossPlayNotification = 0x1ec; // ObjectProperty
		constexpr auto m_pQuickPlay = 0x1f4; // ObjectProperty
		constexpr auto m_pRanked = 0x1fc; // ObjectProperty
		constexpr auto m_pTraining = 0x204; // ObjectProperty
		constexpr auto m_pCustom = 0x20c; // ObjectProperty
		constexpr auto m_pDevQueues = 0x214; // ObjectProperty
		constexpr auto m_pJoinQueueButton = 0x21c; // ObjectProperty
		constexpr auto m_pRegion = 0x224; // ObjectProperty
	}

	namespace n_ATgDevice_CorvusUltFire { // : ATgDevice
		constexpr auto m_CorvusUltDevice = 0xa08; // ObjectProperty
		constexpr auto m_fTraceDownDistance = 0xa10; // float
	}

	namespace n_UTgInventoryObject_Listen_YagorathObjectiveTalent { // : UTgInventoryObject_Listen_NearObjective
		constexpr auto m_fExitObjectiveTimeStamp = 0xd0; // float
		constexpr auto m_fEffectDeactivationPeriod = 0xd4; // float
	}

	namespace n_UUIComponent_StoreItems { // : UUIComponent_Display
		constexpr auto m_pFilter = 0x124; // ObjectProperty
		constexpr auto m_mcRentalItemInfo = 0x12c; // ObjectProperty
		constexpr auto m_mcRentalItemInfoDuration = 0x134; // ObjectProperty
		constexpr auto m_pItemTabs = 0x13c; // ObjectProperty
		constexpr auto m_pItemList = 0x144; // ObjectProperty
		constexpr auto m_pItemPreviewStack = 0x14c; // ObjectProperty
		constexpr auto m_pItemStats = 0x154; // ObjectProperty
		constexpr auto m_pExclusiveItemInfo = 0x15c; // ObjectProperty
		constexpr auto m_pBoosterItemInfo = 0x164; // ObjectProperty
		constexpr auto m_pOpenFilterButton = 0x16c; // ObjectProperty
		constexpr auto m_pClearFilterButton = 0x174; // ObjectProperty
		constexpr auto m_pOpenFilterKey = 0x17c; // ObjectProperty
		constexpr auto m_pChampFilterDropdown = 0x184; // ObjectProperty
		constexpr auto m_pUnlockItemAction = 0x18c; // ObjectProperty
		constexpr auto m_pOpenFilterAction = 0x194; // ObjectProperty
		constexpr auto m_grItems = 0x19c; // ObjectProperty
	}

	namespace n_UUIComponent_Rotator { // : UUIComponent_Display
		constexpr auto m_nTickHandle = 0x124; // int32_t
		constexpr auto m_fRotationDegreesPerSecond = 0x128; // float
	}

	namespace n_UUIComponent_BPPurchaseElement { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcIncludes = 0x134; // ObjectProperty
		constexpr auto m_List = 0x13c; // ObjectProperty
		constexpr auto m_mcCrystalIcon = 0x144; // ObjectProperty
		constexpr auto m_pBuyNowButton = 0x14c; // ObjectProperty
	}

	namespace n_UParticleModuleAttractorBoneSocket { // : UParticleModuleAttractorBase
		constexpr auto FalloffType = 0x68; // EBoneSocketAttractorFalloffType
		constexpr auto DestinationType = 0x69; // ELocationBoneSocketDestination
		constexpr auto SelectionMethod = 0x6a; // ELocationBoneSocketDestSelectionMethod
		constexpr auto bParticleLifeRelative = 0x6c; // uint32_t : 1
		constexpr auto bAttractAlongLengthOfBone = 0x6c; // uint32_t : 1
		constexpr auto FalloffExponent = 0x70; // FRawDistributionFloat
		constexpr auto Range = 0x94; // FRawDistributionFloat
		constexpr auto Strength = 0xb8; // FRawDistributionFloat
		constexpr auto CollisionRadius = 0xdc; // FRawDistributionFloat
		constexpr auto DragCoefficient = 0x100; // FRawDistributionFloat
		constexpr auto DragRadius = 0x124; // FRawDistributionFloat
		constexpr auto UniversalOffset = 0x148; // FVector
		constexpr auto SourceLocations = 0x154; // TArray<FAttractLocationBoneSocketInfo>
		constexpr auto SkelMeshActorParamName = 0x164; // FName
	}

	namespace n_UTgAnimNodeBlendList { // : UAnimNodeBlendList
		constexpr auto DefaultBlendTime = 0x144; // float
		constexpr auto ChildBlendTimes = 0x148; // TArray<float>
		constexpr auto SpecificChildBlendTimes = 0x158; // TArray<FChildBlendParam>
	}

	namespace n_UTgAnimMetaData_MeshAccessory { // : UAnimMetaData
		constexpr auto m_Meshes = 0x60; // TArray<FMeshPlacement>
		constexpr auto m_bSkinIndependent = 0x70; // uint32_t : 1
		constexpr auto m_bSetKeysNoInterp = 0x70; // uint32_t : 1
		constexpr auto m_bUseScaling = 0x70; // uint32_t : 1
		constexpr auto m_KeyFrames = 0x74; // TArray<FTimeModifier>
		constexpr auto m_fBecomeRelevantScale = 0x84; // float
		constexpr auto m_fCeaseRelevantScale = 0x88; // float
	}

	namespace n_UMaterialExpression { // : UObject
		constexpr auto EditorX = 0x60; // int32_t
		constexpr auto EditorY = 0x64; // int32_t
		constexpr auto bRealtimePreview = 0x68; // uint32_t : 1
		constexpr auto bNeedToUpdatePreview = 0x68; // uint32_t : 1
		constexpr auto bIsParameterExpression = 0x68; // uint32_t : 1
		constexpr auto bShowOutputNameOnPin = 0x68; // uint32_t : 1
		constexpr auto bHidePreviewWindow = 0x68; // uint32_t : 1
		constexpr auto bShowInputs = 0x68; // uint32_t : 1
		constexpr auto bShowOutputs = 0x68; // uint32_t : 1
		constexpr auto bUsedByStaticParameterSet = 0x68; // uint32_t : 1
		constexpr auto Material = 0x6c; // ObjectProperty
		constexpr auto Function = 0x74; // ObjectProperty
		constexpr auto Desc = 0x7c; // FString
		constexpr auto BorderColor = 0x8c; // FColor
		constexpr auto MenuCategories = 0x90; // TArray<FName>
		constexpr auto Outputs = 0xa0; // TArray<FExpressionOutput>
	}

	namespace n_USpeedTree { // : UObject
		constexpr auto bLegacySpeedTree = 0x60; // uint32_t : 1
		constexpr auto SRH = 0x64; // FPointer
		constexpr auto LeafStaticShadowOpacity = 0x6c; // float
		constexpr auto Branch1Material = 0x70; // ObjectProperty
		constexpr auto Branch2Material = 0x78; // ObjectProperty
		constexpr auto FrondMaterial = 0x80; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x88; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x90; // ObjectProperty
		constexpr auto BillboardMaterial = 0x98; // ObjectProperty
		constexpr auto Branch1MaterialNoScreenDoor = 0xa0; // ObjectProperty
		constexpr auto Branch2MaterialNoScreenDoor = 0xa8; // ObjectProperty
		constexpr auto FrondMaterialNoScreenDoor = 0xb0; // ObjectProperty
		constexpr auto LeafCardMaterialNoScreenDoor = 0xb8; // ObjectProperty
		constexpr auto LeafMeshMaterialNoScreenDoor = 0xc0; // ObjectProperty
		constexpr auto BillboardMaterialNoScreenDoor = 0xc8; // ObjectProperty
		constexpr auto WindStrength = 0xd0; // float
		constexpr auto WindDirection = 0xd4; // FVector
	}

	namespace n_UTgEffectForm_DisablePawn { // : UTgEffectForm
		constexpr auto m_bPauseAnims = 0xfc; // uint32_t : 1
	}

	namespace n_UParticleModuleTypeDataPhysX { // : UParticleModuleTypeDataBase
		constexpr auto PhysXParSys = 0x68; // ObjectProperty
		constexpr auto VerticalLod = 0x70; // FPhysXEmitterVerticalLodProperties
	}

	namespace n_UTgAchievement_DeviceFireGlobalSeconds { // : UTgAchievement
		constexpr auto m_fStartTime = 0x94; // float
		constexpr auto m_fAccumulatedDuration = 0x98; // float
	}

	namespace n_ATgProj_Pyreball { // : ATgProj_Simulated
		constexpr auto r_bIsDragonsFire = 0x52c; // uint32_t : 1
		constexpr auto m_nExplodeOnTargetDepth = 0x530; // int32_t
	}

	namespace n_ATgDeploy_TurretEffectField { // : ATgDeploy_EffectField
		constexpr auto m_DeployTimePendingTargets = 0x4a0; // TArray<ObjectProperty>
		constexpr auto m_ParentTurret = 0x4b0; // ObjectProperty
	}

	namespace n_UUIComponent_ItemRadialMenu_Text { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcRarityText = 0x12c; // ObjectProperty
		constexpr auto m_mcBackgroundFade = 0x134; // ObjectProperty
		constexpr auto m_mcBackgroundFrame = 0x13c; // ObjectProperty
		constexpr auto m_mcBackgroundColor = 0x144; // ObjectProperty
		constexpr auto m_mcBackgroundHighlight = 0x14c; // ObjectProperty
		constexpr auto m_mcKeybind = 0x154; // ObjectProperty
		constexpr auto m_nPadding = 0x15c; // int32_t
	}

	namespace n_ATgDevice_MarkShot { // : ATgDevice
		constexpr auto m_bRecalculateMark = 0xa08; // uint32_t : 1
		constexpr auto m_CurrentMark = 0xa0c; // ObjectProperty
	}

	namespace n_ATgDevice_Roost { // : ATgDevice
		constexpr auto m_ScopeDevice = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_Scope { // : ATgDevice_ToggleWithLockout
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa14; // FPointer
		constexpr auto m_bDelayMoveSpeedPenalty = 0xa1c; // uint32_t : 1
		constexpr auto m_bIsZoomed = 0xa1c; // uint32_t : 1
	}

	namespace n_ATgMenuTransitionActor { // : AActor
		constexpr auto m_IntroPSC = 0x280; // ComponentProperty
		constexpr auto m_LoopPSC = 0x288; // ComponentProperty
		constexpr auto m_OutroPSC = 0x290; // ComponentProperty
		constexpr auto m_eIntroNotify = 0x298; // ENotifySound
		constexpr auto m_eLoopStartNotify = 0x299; // ENotifySound
		constexpr auto m_eLoopStopNotify = 0x29a; // ENotifySound
		constexpr auto m_eOutroNotify = 0x29b; // ENotifySound
	}

	namespace n_UUIData_RealMoneyItem { // : UUIData_DLCItem
		constexpr auto m_sProductName = 0x74; // FString
		constexpr auto m_sProductSKU = 0x84; // FString
		constexpr auto m_sConsoleDescription = 0x94; // FString
		constexpr auto m_sIncludeTaxMessage = 0xa4; // FString
		constexpr auto m_sProductImage = 0xb4; // FString
		constexpr auto m_sDisplayListPrice = 0xc4; // TArray<FString>
		constexpr auto m_sDisplayPrice = 0xd4; // TArray<FString>
		constexpr auto m_sCurrencyCode = 0xe4; // TArray<FString>
		constexpr auto m_sSignedOffer = 0xf4; // TArray<FString>
		constexpr auto m_fListPrice = 0x104; // TArray<float>
		constexpr auto m_fPrice = 0x114; // TArray<float>
		constexpr auto m_bPurchasable = 0x124; // uint32_t : 1
	}

	namespace n_UUIData_Index { // : UUIData
		constexpr auto m_dwValue = 0x64; // Fdword
	}

	namespace n_UUIComponent_EventChallengeMap { // : UUIComponent_Display
		constexpr auto m_pRegions = 0x124; // ObjectProperty
	}

	namespace n_UForceFieldShapeBox { // : UForceFieldShape
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_UTgEffect { // : UObject
		constexpr auto m_EffectGroup = 0x60; // ObjectProperty
		constexpr auto m_nEffectID = 0x68; // int32_t
		constexpr auto m_nPropertyId = 0x6c; // int32_t
		constexpr auto m_nCalcMethodCode = 0x70; // int32_t
		constexpr auto m_bUseOnInterval = 0x74; // uint32_t : 1
		constexpr auto m_bRemovable = 0x74; // uint32_t : 1
		constexpr auto m_bAllowStacking = 0x74; // uint32_t : 1
		constexpr auto m_bApplyToProperty = 0x74; // uint32_t : 1
		constexpr auto m_nPropertyValueId = 0x78; // int32_t
		constexpr auto m_fCurrent = 0x7c; // float
		constexpr auto m_fBase = 0x80; // float
		constexpr auto m_fMinimum = 0x84; // float
		constexpr auto m_fMaximum = 0x88; // float
		constexpr auto m_fScalingFactor = 0x8c; // float
		constexpr auto m_fStaticValueOffset = 0x90; // float
		constexpr auto m_MaxKnockbackZ = 0x94; // float
		constexpr auto m_MinKnockbackZ = 0x98; // float
		constexpr auto m_KnockbackZMultiplier = 0x9c; // float
	}

	namespace n_ATgDevice_TiberiusLeapAssault { // : ATgDevice
		constexpr auto m_CachedTiberius = 0xa08; // ObjectProperty
	}

	namespace n_ATgPawn_Pet { // : ATgPawn
		constexpr auto m_fOwnerPhysPowerItemPercent = 0x2ea0; // float
		constexpr auto m_fOwnerMagicalPowerItemPercent = 0x2ea4; // float
		constexpr auto m_fOwnerUltilityPowerItemPercent = 0x2ea8; // float
		constexpr auto s_PetPhase = 0x2eac; // EPetPhase
		constexpr auto s_PetPosition = 0x2ead; // EPetPosition
		constexpr auto s_LastPositionAdjustmentRotation = 0x2eb0; // FRotator
		constexpr auto s_InterpolatedPetPosition = 0x2ebc; // FVector
		constexpr auto s_InterpolatedPetOwnerPosition = 0x2ec8; // FVector
		constexpr auto s_fPetPositionDistanceMultiplier = 0x2ed4; // float
		constexpr auto s_fOwnerVelocityTime = 0x2ed8; // float
		constexpr auto s_fSmoothedMaxSpeed = 0x2edc; // float
		constexpr auto c_BeamFX = 0x2ee0; // ObjectProperty
		constexpr auto r_InitialOrientation = 0x2ee8; // FRotator
		constexpr auto c_AimVisibilityMesh = 0x2ef4; // ComponentProperty
	}

	namespace n_UPComImageDownloader { // : UObject
		constexpr auto DownloadImages = 0x60; // TArray<FPComImageDownload>
		constexpr auto __OnPComImageDownloaded__Delegate = 0x70; // DelegateProperty
	}

	namespace n_USeqAct_Possess { // : USequenceAction
		constexpr auto PawnToPossess = 0x108; // ObjectProperty
		constexpr auto bKillOldPawn = 0x110; // uint32_t : 1
		constexpr auto bTryToLeaveVehicle = 0x110; // uint32_t : 1
	}

	namespace n_ATgDevice_ToggleInhand { // : ATgDevice
		constexpr auto m_CachedTgP = 0xa08; // ObjectProperty
		constexpr auto m_fCurrentTransitionPct = 0xa10; // float
		constexpr auto m_nProjectilesFired = 0xa14; // int32_t
		constexpr auto m_bWaitForOutro = 0xa18; // uint32_t : 1
		constexpr auto m_fActiveSustainTime = 0xa1c; // float
	}

	namespace n_ATgPawn_Fernando { // : ATgPawn_Character
		constexpr auto r_ShieldDisplayType = 0x3164; // int32_t
		constexpr auto r_bHasAegisTalent = 0x3168; // uint32_t : 1
		constexpr auto r_bAegisShieldWasDestroyed = 0x3168; // uint32_t : 1
		constexpr auto c_bShowingShield = 0x3168; // uint32_t : 1
		constexpr auto m_CachedShieldDevice = 0x316c; // ObjectProperty
	}

	namespace n_UDominantDirectionalLightComponent { // : UDirectionalLightComponent
		constexpr auto DominantLightShadowInfo = 0x1d0; // FDominantShadowInfo
		constexpr auto DominantLightShadowMap = 0x280; // FArray_Mirror
	}

	namespace n_UUIScene_UICommendationRewards { // : UUIScene
		constexpr auto m_pRewardItems = 0x1cc; // ObjectProperty
		constexpr auto m_mcClose = 0x1d4; // ObjectProperty
	}

	namespace n_USoundNodeAmbient { // : USoundNode
		constexpr auto bAttenuate = 0x74; // uint32_t : 1
		constexpr auto bSpatialize = 0x74; // uint32_t : 1
		constexpr auto bAttenuateWithLPF = 0x74; // uint32_t : 1
		constexpr auto dBAttenuationAtMax = 0x78; // float
		constexpr auto DistanceModel = 0x7c; // SoundDistanceModel
		constexpr auto RadiusMin = 0x80; // float
		constexpr auto RadiusMax = 0x84; // float
		constexpr auto LPFRadiusMin = 0x88; // float
		constexpr auto LPFRadiusMax = 0x8c; // float
		constexpr auto PitchMin = 0x90; // float
		constexpr auto PitchMax = 0x94; // float
		constexpr auto VolumeMin = 0x98; // float
		constexpr auto VolumeMax = 0x9c; // float
		constexpr auto SoundSlots = 0xa0; // TArray<FAmbientSoundSlot>
	}

	namespace n_UTgSeqAct_ChangeScale { // : USequenceAction
		constexpr auto TargetScale = 0x108; // float
		constexpr auto TargetScale3D = 0x10c; // FVector
		constexpr auto TransitionTime = 0x118; // float
	}

	namespace n_UFracturedStaticMesh { // : UStaticMesh
		constexpr auto CoreMeshScale = 0x1dc; // float
		constexpr auto bSliceUsingCoreCollision = 0x210; // uint32_t : 1
		constexpr auto FragmentDestroyEffect = 0x214; // ObjectProperty
		constexpr auto FragmentDestroyEffects = 0x21c; // TArray<ObjectProperty>
		constexpr auto FragmentDestroyEffectScale = 0x22c; // float
		constexpr auto FragmentHealthScale = 0x230; // float
		constexpr auto FragmentMinHealth = 0x234; // float
		constexpr auto FragmentMaxHealth = 0x238; // float
		constexpr auto bUniformFragmentHealth = 0x23c; // uint32_t : 1
		constexpr auto ChunkLinVel = 0x240; // float
		constexpr auto ChunkAngVel = 0x244; // float
		constexpr auto ChunkLinHorizontalScale = 0x248; // float
		constexpr auto ExplosionVelScale = 0x24c; // float
		constexpr auto bCompositeChunksExplodeOnImpact = 0x250; // uint32_t : 1
		constexpr auto bFixIsolatedChunks = 0x254; // uint32_t : 1
		constexpr auto bAlwaysBreakOffIsolatedIslands = 0x258; // uint32_t : 1
		constexpr auto bSpawnPhysicsChunks = 0x25c; // uint32_t : 1
		constexpr auto ChanceOfPhysicsChunk = 0x260; // float
		constexpr auto ExplosionChanceOfPhysicsChunk = 0x264; // float
		constexpr auto NormalPhysicsChunkScaleMin = 0x268; // float
		constexpr auto NormalPhysicsChunkScaleMax = 0x26c; // float
		constexpr auto ExplosionPhysicsChunkScaleMin = 0x270; // float
		constexpr auto ExplosionPhysicsChunkScaleMax = 0x274; // float
		constexpr auto MinConnectionSupportArea = 0x278; // float
		constexpr auto DynamicOutsideMaterial = 0x27c; // ObjectProperty
		constexpr auto LoseChunkOutsideMaterial = 0x284; // ObjectProperty
		constexpr auto OutsideMaterialIndex = 0x28c; // int32_t
	}

	namespace n_UUIInteractable_Button_Price { // : UUIInteractable_Button
		constexpr auto m_mcSlash = 0x140; // ObjectProperty
		constexpr auto m_mcPrices = 0x148; // ObjectProperty [0x3]
		constexpr auto m_sPriceLoadNames = 0x160; // FString [0x3]
		constexpr auto m_nPriceIndex = 0x190; // int32_t
	}

	namespace n_ATgProjectile { // : AProjectile
		constexpr auto VfTable_ITgSkinnableInterface = 0x2dc; // FPointer
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x2e4; // FPointer
		constexpr auto VfTable_ITgSoundNotifyActorInterface = 0x2ec; // FPointer
		constexpr auto VfTable_ITgGrabSource = 0x2f4; // FPointer
		constexpr auto s_LastDefaultMode = 0x2fc; // ObjectProperty
		constexpr auto r_nProjectileId = 0x304; // int32_t
		constexpr auto r_fDuration = 0x308; // float
		constexpr auto m_fPostLandDuration = 0x30c; // float
		constexpr auto m_fLandZThreshold = 0x310; // float
		constexpr auto m_fPersistTime = 0x314; // float
		constexpr auto m_fPersistHitPulse = 0x318; // float
		constexpr auto m_nTargetPhysicalType = 0x31c; // int32_t
		constexpr auto c_Mesh = 0x320; // ComponentProperty
		constexpr auto c_ExplosionFx = 0x328; // ObjectProperty
		constexpr auto c_ImpactFx = 0x330; // ObjectProperty
		constexpr auto c_bRotationFollowsVelocity = 0x338; // uint32_t : 1
		constexpr auto m_bExplodeAtMaxRange = 0x338; // uint32_t : 1
		constexpr auto m_bDeployOnCharacter = 0x338; // uint32_t : 1
		constexpr auto m_bDeployOnTarget = 0x338; // uint32_t : 1
		constexpr auto m_bDeployOnGround = 0x338; // uint32_t : 1
		constexpr auto m_bAlwaysDeployUpwards = 0x338; // uint32_t : 1
		constexpr auto m_bStickToWalls = 0x338; // uint32_t : 1
		constexpr auto c_bIsAOE = 0x338; // uint32_t : 1
		constexpr auto m_bCountDirectHitForAOE = 0x338; // uint32_t : 1
		constexpr auto m_bUseAOEDirectHit = 0x338; // uint32_t : 1
		constexpr auto m_bHasExploded = 0x338; // uint32_t : 1
		constexpr auto m_bHitValidTarget = 0x338; // uint32_t : 1
		constexpr auto m_bIngoreBehindProjCollisions = 0x338; // uint32_t : 1
		constexpr auto m_bIsInitialized = 0x338; // uint32_t : 1
		constexpr auto m_bIsShutDown = 0x338; // uint32_t : 1
		constexpr auto m_bPIEInitialized = 0x338; // uint32_t : 1
		constexpr auto m_bHasPlayedFizzleFX = 0x338; // uint32_t : 1
		constexpr auto m_bHasPlayedHitWallFX = 0x338; // uint32_t : 1
		constexpr auto m_bHasPlayedHitTargetFX = 0x338; // uint32_t : 1
		constexpr auto m_bSuppressDeployableSpawn = 0x338; // uint32_t : 1
		constexpr auto m_bAltFireHit = 0x338; // uint32_t : 1
		constexpr auto m_bInvertTeam = 0x338; // uint32_t : 1
		constexpr auto m_bFirstShotAfterMovementAbility = 0x338; // uint32_t : 1
		constexpr auto m_bCanSpawnOnClientFirst = 0x338; // uint32_t : 1
		constexpr auto m_bIsNonThreatening = 0x338; // uint32_t : 1
		constexpr auto m_bShutdownOnNonThreatening = 0x338; // uint32_t : 1
		constexpr auto m_bTrackToWorldLocation = 0x338; // uint32_t : 1
		constexpr auto r_fAccelRate = 0x33c; // float
		constexpr auto m_fTossZ = 0x340; // float
		constexpr auto m_fFireAngle = 0x344; // float
		constexpr auto r_Owner = 0x348; // ObjectProperty
		constexpr auto r_nOwnerFireModeId = 0x350; // int32_t
		constexpr auto m_OwnerFireMode = 0x354; // ObjectProperty
		constexpr auto m_ExtraFireModes = 0x35c; // TArray<ObjectProperty>
		constexpr auto r_fRange = 0x36c; // float
		constexpr auto m_fProximityDistance = 0x370; // float
		constexpr auto m_CollisionProxy = 0x374; // ObjectProperty
		constexpr auto s_nSpawnBotId = 0x37c; // int32_t
		constexpr auto s_nSpawnDeployableId = 0x380; // int32_t
		constexpr auto m_DeployableSpawnOrientation = 0x384; // SpawnDeployableOrientation
		constexpr auto r_eEquippedAt = 0x385; // TG_EQUIP_POINT
		constexpr auto s_GrabbedTargets = 0x388; // TArray<ObjectProperty>
		constexpr auto m_fDamageRadius = 0x398; // float
		constexpr auto r_vSpawnLocation = 0x39c; // FVector
		constexpr auto m_vSpawnRotation = 0x3a8; // FVector
		constexpr auto m_vLocationLastTick = 0x3b4; // FVector
		constexpr auto m_fMinTravelRange = 0x3c0; // float
		constexpr auto s_fSpawnTime = 0x3c4; // float
		constexpr auto m_nPostRenderIcon = 0x3c8; // int32_t
		constexpr auto m_nUniqueId = 0x3cc; // int32_t
		constexpr auto m_fBaseDamageMultiplier = 0x3d0; // float
		constexpr auto c_vHitWallVelocity = 0x3d4; // FVector
		constexpr auto LightEnvironment = 0x3e0; // ComponentProperty
		constexpr auto m_vSpawnPosition = 0x3e8; // FVector
		constexpr auto m_DebugProximityDistancePSC = 0x3f4; // ComponentProperty
		constexpr auto m_fStandingStillPercent = 0x3fc; // float
		constexpr auto m_nTargetsHitCount = 0x400; // int32_t
		constexpr auto m_DebugCollisionSphere = 0x404; // ObjectProperty
		constexpr auto m_CollisionSettings = 0x40c; // FCollisionSettingsProjectile
		constexpr auto m_PassThroughTargets = 0x410; // TArray<ObjectProperty>
		constexpr auto m_TrackingSettings = 0x420; // FTrackingSettings
		constexpr auto m_fDelayTrackSeconds = 0x43c; // float
		constexpr auto m_fExplosionOffsetDistance = 0x440; // float
		constexpr auto s_fAoeRewindTime = 0x444; // float
		constexpr auto m_AkActorUnoccluded = 0x448; // ObjectProperty
	}

	namespace n_ATgDevice_TiberiusPounce { // : ATgDevice_Charge
		constexpr auto m_CachedTiberius = 0xa7c; // ObjectProperty
		constexpr auto m_fUltSpamLockout = 0xa84; // float
	}

	namespace n_UAnimationCompressionAlgorithm_Automatic { // : UAnimationCompressionAlgorithm
		constexpr auto MaxEndEffectorError = 0x78; // float
		constexpr auto bTryFixedBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryPerTrackBitwiseCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryLinearKeyRemovalCompression = 0x7c; // uint32_t : 1
		constexpr auto bTryIntervalKeyRemoval = 0x7c; // uint32_t : 1
		constexpr auto bRunCurrentDefaultCompressor = 0x7c; // uint32_t : 1
		constexpr auto bAutoReplaceIfExistingErrorTooGreat = 0x7c; // uint32_t : 1
		constexpr auto bRaiseMaxErrorToExisting = 0x7c; // uint32_t : 1
	}

	namespace n_UTgSeqEvent_TaskForceScoreUpdated { // : USequenceEvent
		constexpr auto DefenderTaskForce = 0x128; // int32_t
		constexpr auto currentScore = 0x12c; // int32_t
	}

	namespace n_UTgDataObject { // : UUIData
		constexpr auto m_bDirty = 0x64; // uint32_t : 1
		constexpr auto m_bCallback = 0x64; // uint32_t : 1
		constexpr auto m_Laundry = 0x68; // TArray<UIID>
		constexpr auto m_Data = 0x78; // TMap<None, None>
	}

	namespace n_UUIHudBinoculars { // : UTgGfxScene
		constexpr auto m_bWasVisible = 0x1ec; // uint32_t : 1
		constexpr auto m_bHadTarget = 0x1ec; // uint32_t : 1
		constexpr auto m_PrevBinocsSettings = 0x1f0; // FBinocularSettings
		constexpr auto m_vInnerGuideStartPos = 0x21c; // FVector2D
		constexpr auto m_vOuterGuideStartPos = 0x224; // FVector2D
		constexpr auto m_vGuideOffset = 0x22c; // FVector2D
		constexpr auto m_mcHeadingGraphic = 0x234; // ObjectProperty
		constexpr auto m_mcHeading = 0x23c; // ObjectProperty
		constexpr auto m_mcRange = 0x244; // ObjectProperty
		constexpr auto m_mcTargets = 0x24c; // ObjectProperty
		constexpr auto m_mcInnerGuides = 0x254; // ObjectProperty
		constexpr auto m_mcOuterGuides = 0x25c; // ObjectProperty
		constexpr auto m_mcGuideFrame = 0x264; // ObjectProperty
		constexpr auto m_mcStatus = 0x26c; // ObjectProperty
		constexpr auto m_mcStatusTF = 0x274; // ObjectProperty
		constexpr auto m_mcBarrageFrame = 0x27c; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageMeter = 0x294; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageTime = 0x2ac; // ObjectProperty [0x3]
		constexpr auto m_mcBarrageTimeTF = 0x2c4; // ObjectProperty [0x3]
		constexpr auto m_mcReticule = 0x2dc; // ObjectProperty
		constexpr auto m_mcReticuleInnerArrows = 0x2e4; // ObjectProperty [0x4]
		constexpr auto m_mcReticuleOuterArrows = 0x304; // ObjectProperty [0x4]
		constexpr auto m_ReticuleArrowPositions = 0x324; // FUIBinocArrowPositions [0x4]
		constexpr auto m_mcRefire = 0x3a4; // ObjectProperty
		constexpr auto m_mcRefireMask = 0x3ac; // ObjectProperty
		constexpr auto m_mcDurationMeter = 0x3b4; // ObjectProperty
		constexpr auto m_mcDurationMeterCap = 0x3bc; // ObjectProperty
	}

	namespace n_UTgMiniMap { // : UObject
		constexpr auto m_nMiniMapMode = 0x60; // int32_t
		constexpr auto m_bShouldDisplayMiniMap = 0x64; // uint32_t : 1
		constexpr auto m_bHasMiniMapTexture = 0x64; // uint32_t : 1
		constexpr auto m_bRequiresLOS = 0x64; // uint32_t : 1
		constexpr auto m_bUseFlashSizing = 0x64; // uint32_t : 1
		constexpr auto m_bSpectating = 0x64; // uint32_t : 1
		constexpr auto m_fLastUpdateTime = 0x68; // float
		constexpr auto m_MiniMapBaseMIC = 0x6c; // ObjectProperty
		constexpr auto m_MiniMapMIC = 0x74; // ObjectProperty
		constexpr auto m_DynamicMask = 0x7c; // ObjectProperty
		constexpr auto m_nMaskSize = 0x84; // int32_t
		constexpr auto m_fIconScale = 0x88; // float
		constexpr auto m_vMapLocation = 0x8c; // FVector2D
		constexpr auto m_nMapSize = 0x94; // int32_t
		constexpr auto m_MiniMapRender = 0x98; // FPointer
		constexpr auto m_OwnerPC = 0xa0; // ObjectProperty
		constexpr auto m_nWorldMapSize = 0xa8; // int32_t
		constexpr auto m_MICPinging = 0xac; // ObjectProperty
		constexpr auto m_MICPingingEnemy = 0xb4; // ObjectProperty
		constexpr auto m_MICRetreat = 0xbc; // ObjectProperty
		constexpr auto m_MICRetreatEnemy = 0xc4; // ObjectProperty
		constexpr auto m_MICAlert = 0xcc; // ObjectProperty
		constexpr auto m_MICAlertEnemy = 0xd4; // ObjectProperty
		constexpr auto m_MICAlertSilent = 0xdc; // ObjectProperty
		constexpr auto m_MICLocalPlayer = 0xe4; // ObjectProperty
		constexpr auto m_MICLocalSpectator = 0xec; // ObjectProperty
		constexpr auto m_TextureRefs = 0xf4; // TArray<ObjectProperty>
		constexpr auto m_MICPlayer = 0x104; // ObjectProperty [0x6]
		constexpr auto m_MICMinion = 0x134; // ObjectProperty [0x6]
		constexpr auto m_MICTower = 0x164; // ObjectProperty [0x6]
		constexpr auto m_MICTitan = 0x194; // ObjectProperty [0x6]
		constexpr auto m_MICPhoenix = 0x1c4; // ObjectProperty [0x6]
		constexpr auto m_MICCapturePoint = 0x1f4; // ObjectProperty [0x6]
		constexpr auto m_MICLanePusher = 0x224; // ObjectProperty [0x6]
		constexpr auto m_MICTowerOlympus = 0x254; // ObjectProperty [0x3]
		constexpr auto m_MICTitanOlympus = 0x26c; // ObjectProperty [0x6]
		constexpr auto m_MICPhoenixOlympus = 0x29c; // ObjectProperty [0x3]
		constexpr auto m_MICMonster = 0x2b4; // ObjectProperty
		constexpr auto m_PortalLinkColor = 0x2bc; // FLinearColor [0x6]
		constexpr auto m_MICBuffMonster = 0x31c; // FBuffMonsterMIC [0xe]
		constexpr auto m_MICTowerDestroyed = 0x46c; // ObjectProperty
		constexpr auto m_PlayerBackground = 0x474; // ObjectProperty [0x6]
		constexpr auto m_TowerAttackBackground = 0x4a4; // ObjectProperty [0x6]
		constexpr auto m_IconMap = 0x4d4; // TMap<None, None>
		constexpr auto m_MaskPoints = 0x51c; // FBitArray_Mirror
		constexpr auto m_Orientation = 0x53c; // TgMapOrientation
		constexpr auto m_LocalTeam = 0x53d; // TgMapTeam
		constexpr auto m_VisibilityMode = 0x53e; // TgClientVisibilityMode
		constexpr auto bUpdateCapturePoint = 0x53f; // char [0x5]
		constexpr auto m_EntityMap = 0x544; // TMap<None, None>
		constexpr auto m_PortalLayeringIdx = 0x58c; // TArray<FLayerIndex>
		constexpr auto m_LayeringIdx = 0x59c; // TArray<FLayerIndex>
		constexpr auto m_IndependentPings = 0x5ac; // TArray<FMiniMapPingInfo>
	}

	namespace n_UUIProfile { // : UTgGfxScene
		constexpr auto m_nPlayer = 0x1ec; // int32_t
		constexpr auto m_nAwardScrollIndex = 0x1f0; // int32_t
		constexpr auto m_nHistoryScrollIndex = 0x1f4; // int32_t
		constexpr auto m_nAwardTotal = 0x1f8; // int32_t
		constexpr auto m_nAwardCurrent = 0x1fc; // int32_t
		constexpr auto m_nSelectedVoicePackCurrent = 0x200; // int32_t
		constexpr auto m_bScrollAwards = 0x204; // uint32_t : 1
		constexpr auto m_bScrollHistory = 0x204; // uint32_t : 1
		constexpr auto m_bScrollChampions = 0x204; // uint32_t : 1
		constexpr auto m_bLoadedActivities = 0x204; // uint32_t : 1
		constexpr auto m_bPreviewCamera = 0x204; // uint32_t : 1
		constexpr auto m_eState = 0x208; // PROFILESTATE
		constexpr auto m_AwardData = 0x20c; // TArray<FUIAwardData>
		constexpr auto m_Matches = 0x21c; // TArray<FUIHistoryData>
		constexpr auto m_mcOverview = 0x22c; // ObjectProperty
		constexpr auto m_mcOverviewPlayerEquippedTitle = 0x234; // ObjectProperty
		constexpr auto m_mcOverviewSubtitle = 0x23c; // ObjectProperty
		constexpr auto m_mcOverviewRatingTitle = 0x244; // ObjectProperty
		constexpr auto m_mcOverviewRatingDetails = 0x24c; // ObjectProperty
		constexpr auto m_mcOverviewRatingSubtitle = 0x254; // ObjectProperty
		constexpr auto m_mcOverviewCustomerID = 0x25c; // ObjectProperty
		constexpr auto m_mcOverviewBonus = 0x264; // ObjectProperty
		constexpr auto m_mcOverviewBonusBonusIcon = 0x26c; // ObjectProperty
		constexpr auto m_mcOverviewBonusBonusIconIcon = 0x274; // ObjectProperty
		constexpr auto m_mcOverviewBonusBonusIconFrame = 0x27c; // ObjectProperty
		constexpr auto m_mcOverviewBonusTitle = 0x284; // ObjectProperty
		constexpr auto m_mcOverviewBonusBoostActive = 0x28c; // ObjectProperty
		constexpr auto m_mcOverviewBonusEntry = 0x294; // ObjectProperty [0x4]
		constexpr auto m_grOverview = 0x2b4; // ObjectProperty
		constexpr auto m_pTitlesView = 0x2bc; // ObjectProperty
		constexpr auto m_pPlayerName = 0x2c4; // ObjectProperty
		constexpr auto m_pHeaderSubmenu = 0x2cc; // ObjectProperty
		constexpr auto m_mcLoadout = 0x2d4; // ObjectProperty
		constexpr auto m_LoadoutCategories = 0x2dc; // ObjectProperty
		constexpr auto m_grLoadout = 0x2e4; // ObjectProperty
		constexpr auto m_LoadoutSubscenes = 0x2ec; // ObjectProperty [0x9]
		constexpr auto m_nCurrentLoadoutSubscene = 0x334; // int32_t
		constexpr auto m_mcAwards = 0x338; // ObjectProperty
		constexpr auto m_mcAwardScroll = 0x340; // ObjectProperty
		constexpr auto m_mcAwardTotalProgress = 0x348; // ObjectProperty
		constexpr auto m_mcAwardTotalProgressTip = 0x350; // ObjectProperty
		constexpr auto m_mcAwardTotalProgressFill = 0x358; // ObjectProperty
		constexpr auto m_mcAwardTotalProgressTitle = 0x360; // ObjectProperty
		constexpr auto m_mcAwardTotalProgressSubtitle = 0x368; // ObjectProperty
		constexpr auto m_mcAwardRow = 0x370; // ObjectProperty [0x8]
		constexpr auto m_mcAwardDate = 0x3b0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardIcon = 0x3f0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardTitle = 0x430; // ObjectProperty [0x8]
		constexpr auto m_mcAwardFrame = 0x470; // ObjectProperty [0x8]
		constexpr auto m_mcAwardPoints = 0x4b0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardSubtitle = 0x4f0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardReward = 0x530; // ObjectProperty [0x8]
		constexpr auto m_mcAwardRewardCurrency = 0x570; // ObjectProperty [0x8]
		constexpr auto m_mcAwardRewardTF = 0x5b0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardReward2 = 0x5f0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardRewardCurrency2 = 0x630; // ObjectProperty [0x8]
		constexpr auto m_mcAwardRewardTF2 = 0x670; // ObjectProperty [0x8]
		constexpr auto m_mcAwardRewardTitle = 0x6b0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardHighlight = 0x6f0; // ObjectProperty [0x8]
		constexpr auto m_mcAwardProgressFill = 0x730; // ObjectProperty [0x8]
		constexpr auto m_mcAwardProgressText = 0x770; // ObjectProperty [0x8]
		constexpr auto m_grAward = 0x7b0; // ObjectProperty
		constexpr auto m_mcHistory = 0x7b8; // ObjectProperty
		constexpr auto m_mcHistoryScroll = 0x7c0; // ObjectProperty
		constexpr auto m_mcHistoryRow = 0x7c8; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryDate = 0x808; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryName = 0x848; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryType = 0x888; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryIcon = 0x8c8; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryMode = 0x908; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryFrame = 0x948; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryMatch = 0x988; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryScore = 0x9c8; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryResult = 0xa08; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryDetails = 0xa48; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryChampion = 0xa88; // ObjectProperty [0x8]
		constexpr auto m_mcHistoryDuration = 0xac8; // ObjectProperty [0x8]
		constexpr auto m_grHistory = 0xb08; // ObjectProperty
		constexpr auto m_nTitleToEquip = 0xb10; // int32_t
		constexpr auto m_fQueuedTitleEquipTimer = 0xb14; // float
		constexpr auto m_fTitleEquipDelay = 0xb18; // float
		constexpr auto m_pSelectAction = 0xb1c; // ObjectProperty
	}

	namespace n_UArrowComponent { // : UPrimitiveComponent
		constexpr auto ArrowColor = 0x24c; // FColor
		constexpr auto ArrowSize = 0x250; // float
		constexpr auto bTreatAsASprite = 0x254; // uint32_t : 1
	}

	namespace n_UUIScene_UIChampion { // : UUIScene
		constexpr auto m_eState = 0x1cc; // UICHAMPION_STATE
		constexpr auto m_bInsideRotator = 0x1d0; // uint32_t : 1
		constexpr auto m_bIsRotating = 0x1d0; // uint32_t : 1
		constexpr auto m_fPrevMouseXPos = 0x1d4; // float
		constexpr auto m_pChampData = 0x1d8; // ObjectProperty
		constexpr auto m_mcDetailsTitle = 0x1e0; // ObjectProperty
		constexpr auto m_mcDetailsSubtitle = 0x1e8; // ObjectProperty
		constexpr auto m_mcDetailsClassIcon = 0x1f0; // ObjectProperty
		constexpr auto m_pRotator = 0x1f8; // ObjectProperty
		constexpr auto m_pOverview = 0x200; // ObjectProperty
		constexpr auto m_pSkins = 0x208; // ObjectProperty
		constexpr auto m_pLoadouts = 0x210; // ObjectProperty
		constexpr auto m_pAbilities = 0x218; // ObjectProperty
	}

	namespace n_UActorFactoryLensFlare { // : UActorFactory
		constexpr auto LensFlareObject = 0x9c; // ObjectProperty
	}

	namespace n_UOnlineEventsInterfaceMcp { // : UMCPBase
		constexpr auto EventUploadConfigs = 0x80; // TArray<FEventUploadConfig>
		constexpr auto MCPEventPostObjects = 0x90; // TArray<FPointer>
		constexpr auto DisabledUploadTypes = 0xa0; // TArray<EEventUploadType>
		constexpr auto bBinaryStats = 0xb0; // uint32_t : 1
	}

	namespace n_ATgGame_Mission { // : ATgGame
		constexpr auto m_bSpawnInTaskForceArea = 0x624; // uint32_t : 1
		constexpr auto s_bPreGuardianPhasePulsed = 0x624; // uint32_t : 1
		constexpr auto s_bGuardianPhasePulsed = 0x624; // uint32_t : 1
		constexpr auto s_bWasSurrendered = 0x624; // uint32_t : 1
		constexpr auto m_bSurrenderAvailable = 0x624; // uint32_t : 1
		constexpr auto m_bAllowAutoUpgrades = 0x624; // uint32_t : 1
		constexpr auto m_bUsePlayerCharacterIntros = 0x624; // uint32_t : 1
		constexpr auto m_eTimerState = 0x628; // GameTimerState
		constexpr auto m_eTimerStatePaused = 0x629; // GameTimerState
		constexpr auto m_fMissionTime = 0x62c; // float
		constexpr auto m_fSecondaryMissionTime = 0x630; // float
		constexpr auto m_fWaitingForPlayersTime = 0x634; // float
		constexpr auto m_fSetupTime = 0x638; // float
		constexpr auto m_fPausedAtTime = 0x63c; // float
		constexpr auto m_fGameMissionTime = 0x640; // float
		constexpr auto s_MissionTimeAccumulator = 0x644; // float
		constexpr auto s_ReadyPlayers = 0x648; // TArray<ObjectProperty>
		constexpr auto s_nReadyMercs = 0x658; // int32_t
		constexpr auto m_fTickCreditsFreq = 0x65c; // float
		constexpr auto m_fCreditsToGivePerTick = 0x660; // float
		constexpr auto m_nStartingCurrency = 0x664; // int32_t
		constexpr auto m_nStartingLevel = 0x668; // int32_t
		constexpr auto m_nWinBonusXp = 0x66c; // int32_t
		constexpr auto m_nWinPlayerXp = 0x670; // int32_t
		constexpr auto m_nLosePlayerXp = 0x674; // int32_t
		constexpr auto m_fGodXpCoefficient = 0x678; // float
		constexpr auto m_fGodXpCoefficientLoss = 0x67c; // float
		constexpr auto m_fGodXpWinBonus = 0x680; // float
		constexpr auto m_fFreeVIPWinPoints = 0x684; // float
		constexpr auto m_fFreeVIPLossPoints = 0x688; // float
		constexpr auto m_fFreeVIPPerMinute = 0x68c; // float
		constexpr auto m_fPaidVIPWinPoints = 0x690; // float
		constexpr auto m_fPaidVIPLossPoints = 0x694; // float
		constexpr auto m_fPaidVIPPerMinute = 0x698; // float
		constexpr auto m_fBattlePassWinBonus = 0x69c; // float
		constexpr auto m_fBaseTokens = 0x6a0; // float
		constexpr auto m_nKillTokens = 0x6a4; // int32_t
		constexpr auto m_nWinBonusTokens = 0x6a8; // int32_t
		constexpr auto m_MinimapManagerClass = 0x6ac; // UTgMinimapManager*
		constexpr auto s_SurrenderData = 0x6b4; // FSurrenderData [0x2]
		constexpr auto m_fSurrenderTime = 0x6fc; // float
		constexpr auto m_XPRadius = 0x700; // int32_t
		constexpr auto m_MinionKillerBonus = 0x704; // float
		constexpr auto m_BasePlayerGoldReward = 0x708; // float
		constexpr auto m_fFirstBloodGoldReward = 0x70c; // float
		constexpr auto m_fBasePlayerAssistGoldRewardMultipler = 0x710; // float
		constexpr auto m_fBasePlayerAssistXpRewardMultipler = 0x714; // float
		constexpr auto m_fBaseNPCAssistGoldRewardMultipler = 0x718; // float
		constexpr auto m_fBaseNPCAssistXpRewardMultipler = 0x71c; // float
		constexpr auto m_MinionGoals = 0x720; // TArray<ObjectProperty>
		constexpr auto m_nLastTimeDilationWindowId = 0x730; // int32_t
		constexpr auto m_ActiveTimeDilationWindows = 0x734; // TArray<FTimeDilationWindow>
	}

	namespace n_UUIScene_UIStore { // : UUIScene
		constexpr auto m_nSprayPreviewId = 0x1cc; // int32_t
		constexpr auto m_nDeathStampPreviewId = 0x1d0; // int32_t
		constexpr auto m_dwVendorRequestId = 0x1d4; // Fdword
		constexpr auto m_RegularChestData = 0x1d8; // TArray<ObjectProperty>
		constexpr auto m_TencentChestData = 0x1e8; // TArray<ObjectProperty>
		constexpr auto m_mcCrystalsPrompt = 0x1f8; // ObjectProperty
		constexpr auto m_pCrystalsPromptKey = 0x200; // ObjectProperty
		constexpr auto m_pCrystalsButton = 0x208; // ObjectProperty
		constexpr auto m_pHiddenDLC = 0x210; // ObjectProperty
		constexpr auto m_pDLC = 0x218; // ObjectProperty
		constexpr auto m_pChests = 0x220; // ObjectProperty
		constexpr auto m_pAccount = 0x228; // ObjectProperty
		constexpr auto m_pBountyItems = 0x230; // ObjectProperty
		constexpr auto m_pEngagementItems = 0x238; // ObjectProperty
		constexpr auto m_pRotator = 0x240; // ObjectProperty
		constexpr auto m_pBuyCrystalsAction = 0x248; // ObjectProperty
		constexpr auto m_pSprayMesh = 0x250; // ObjectProperty
		constexpr auto m_SprayMaterial = 0x258; // TArray<ObjectProperty>
		constexpr auto m_SprayManifestGroup = 0x268; // ObjectProperty
		constexpr auto m_DeathStampManifestGroup = 0x270; // ObjectProperty
	}

	namespace n_UUIComponent_ItemColorPickerEntry { // : UUIComponent_Display
		constexpr auto m_mcHighlight = 0x124; // ObjectProperty
		constexpr auto m_mcEquipped = 0x12c; // ObjectProperty
		constexpr auto m_mcLock = 0x134; // ObjectProperty
		constexpr auto m_mcColor = 0x13c; // ObjectProperty
	}

	namespace n_UUIComponent_OwlStealthBar { // : UUIComponent_Display
		constexpr auto m_mcThreshold = 0x124; // ObjectProperty
		constexpr auto m_mcStealthBarMask = 0x12c; // ObjectProperty
		constexpr auto m_mcTrailingStealthBarMask = 0x134; // ObjectProperty
		constexpr auto m_mcStealthActive = 0x13c; // ObjectProperty
		constexpr auto m_bStealthActive = 0x144; // uint32_t : 1
		constexpr auto m_fActivationCost = 0x148; // float
	}

	namespace n_UGameCrowdBehavior_RunFromPanic { // : UGameCrowdAgentBehavior
		constexpr auto PanicFocus = 0x9c; // ObjectProperty
	}

	namespace n_UDistributionVectorUniform { // : UDistributionVector
		constexpr auto Max = 0x7c; // FVector
		constexpr auto Min = 0x88; // FVector
		constexpr auto bLockAxes = 0x94; // uint32_t : 1
		constexpr auto bUseExtremes = 0x94; // uint32_t : 1
		constexpr auto LockedAxes = 0x98; // EDistributionVectorLockFlags
		constexpr auto MirrorFlags = 0x99; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_UInterpTrackInstSlomo { // : UInterpTrackInst
		constexpr auto OldTimeDilation = 0x60; // float
	}

	namespace n_UMaterialExpressionParameter { // : UMaterialExpression
		constexpr auto ParameterName = 0xb0; // FName
		constexpr auto ExpressionGUID = 0xb8; // FGuid
		constexpr auto Group = 0xc8; // FName
	}

	namespace n_UTgSkelCon_SkinGate { // : USkelControlBase
		constexpr auto DefaultChild = 0xd0; // FSkelControlSkinGateChild
		constexpr auto ChildControls = 0xe4; // TArray<FSkelControlSkinGateChild>
	}

	namespace n_UParticleModuleLifetime { // : UParticleModuleLifetimeBase
		constexpr auto Lifetime = 0x68; // FRawDistributionFloat
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget_LastAttacker { // : UTgAIBehaviorAction
		constexpr auto bSkipPawnNotify = 0x94; // uint32_t : 1
		constexpr auto bMustBeHittable = 0x94; // uint32_t : 1
		constexpr auto IgnoreTargetType = 0x98; // ECombatTargetType
	}

	namespace n_UUIComponent_MatchLobbyTeamPlayer { // : UUIComponent_Display
		constexpr auto m_mcGlow = 0x124; // ObjectProperty
		constexpr auto m_mcClassName = 0x12c; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x134; // ObjectProperty
		constexpr auto m_mcEquippableTitle = 0x13c; // ObjectProperty
		constexpr auto m_mcSelect = 0x144; // ObjectProperty
		constexpr auto m_mcLocked = 0x14c; // ObjectProperty
		constexpr auto m_mcArrows = 0x154; // ObjectProperty
		constexpr auto m_pHighlightSelect = 0x15c; // ObjectProperty
		constexpr auto m_pChampion = 0x164; // ObjectProperty
		constexpr auto m_pChampionAnim = 0x16c; // ObjectProperty
		constexpr auto m_mcSpeakingIcon = 0x174; // ObjectProperty
		constexpr auto m_pTradeButton = 0x17c; // ObjectProperty
		constexpr auto m_pMuteButton = 0x184; // ObjectProperty
		constexpr auto m_pTradeAction = 0x18c; // ObjectProperty
		constexpr auto m_pMuteAction = 0x194; // ObjectProperty
		constexpr auto m_pUnmuteAction = 0x19c; // ObjectProperty
		constexpr auto m_pViewProfileAction = 0x1a4; // ObjectProperty
		constexpr auto m_pName = 0x1ac; // ObjectProperty
		constexpr auto m_pCrossPlayIcon = 0x1b4; // ObjectProperty
		constexpr auto m_mcTeamBooster = 0x1bc; // ObjectProperty
		constexpr auto m_mcSkinBooster = 0x1c4; // ObjectProperty
		constexpr auto m_nLockInCBHandle = 0x1cc; // int32_t
		constexpr auto m_nViewProfileCBHandle = 0x1d0; // int32_t
		constexpr auto m_nCharSelectedCBHandle = 0x1d4; // int32_t
	}

	namespace n_UUIScene_UIHudStrix { // : UUIScene
		constexpr auto m_mcScope = 0x1cc; // ObjectProperty
		constexpr auto m_mcOuterScope = 0x1d4; // ObjectProperty
		constexpr auto m_bViewTargetOwl = 0x1dc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1dc; // uint32_t : 1
		constexpr auto m_fColorTransitionAmt = 0x1e0; // float
		constexpr auto m_fColorTransitionPerSec = 0x1e4; // float
		constexpr auto m_ColorTransitionMultiplier = 0x1e8; // FLinearColor
		constexpr auto m_ColorTransitionAdditive = 0x1f8; // FLinearColor
		constexpr auto m_nScopeColorTransitionCBHandle = 0x208; // int32_t
	}

	namespace n_USoundNodeRandom { // : USoundNode
		constexpr auto Weights = 0x74; // TArray<float>
		constexpr auto PreselectAtLevelLoad = 0x84; // int32_t
		constexpr auto bRandomizeWithoutReplacement = 0x88; // uint32_t : 1
		constexpr auto HasBeenUsed = 0x8c; // TArray<char>
		constexpr auto NumRandomUsed = 0x9c; // int32_t
	}

	namespace n_UNavMeshGoalFilter_PolyEncompassesAI { // : UNavMeshGoal_Filter
		constexpr auto OverrideExtentToCheck = 0x6c; // FVector
	}

	namespace n_UPBRuleNodeSplit { // : UPBRuleNodeBase
		constexpr auto SplitAxis = 0x70; // EProcBuildingAxis
		constexpr auto SplitSetup = 0x74; // TArray<FRBSplitInfo>
	}

	namespace n_UUIComponent_ShieldBar { // : UUIComponent_Display
		constexpr auto m_mcBarContainer = 0x124; // ObjectProperty
		constexpr auto m_mcShieldMask = 0x12c; // ObjectProperty
		constexpr auto m_mcDamageMask = 0x134; // ObjectProperty
		constexpr auto m_TargetPawn = 0x13c; // ObjectProperty
		constexpr auto m_fCurrentDamagePct = 0x144; // float
		constexpr auto m_fCurrentShieldPct = 0x148; // float
		constexpr auto m_bVisible = 0x14c; // uint32_t : 1
		constexpr auto m_fDamageInterpSpeed = 0x150; // float
		constexpr auto m_fMinDamageInterpSpeed = 0x154; // float
	}

	namespace n_ANxTornadoAngularForceField { // : ANxForceField
		constexpr auto RadialStrength = 0x2d4; // float
		constexpr auto RotationalStrength = 0x2d8; // float
		constexpr auto LiftStrength = 0x2dc; // float
		constexpr auto ForceRadius = 0x2e0; // float
		constexpr auto ForceTopRadius = 0x2e4; // float
		constexpr auto LiftFalloffHeight = 0x2e8; // float
		constexpr auto EscapeVelocity = 0x2ec; // float
		constexpr auto ForceHeight = 0x2f0; // float
		constexpr auto HeightOffset = 0x2f4; // float
		constexpr auto BSpecialRadialForceMode = 0x2f8; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x2fc; // float
		constexpr auto Kernel = 0x300; // FPointer
	}

	namespace n_USeqAct_AddInt { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // int32_t
		constexpr auto ValueB = 0x10c; // int32_t
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_UUIData_BountySaleItem { // : UUIData
		constexpr auto m_pLootTableItem = 0x64; // ObjectProperty
		constexpr auto m_nSaleIndex = 0x6c; // int32_t
		constexpr auto m_dwCurrentPrice = 0x70; // Fdword
		constexpr auto m_dtSaleStarts = 0x74; // FDateTimeWrapper
		constexpr auto m_dtSaleEnds = 0x7c; // FDateTimeWrapper
		constexpr auto m_sSaleMessage = 0x84; // FString
		constexpr auto m_dwQuantityRemaining = 0x94; // Fdword
		constexpr auto m_dwQuantityTotal = 0x98; // Fdword
	}

	namespace n_UCurveEdPresetCurve { // : UObject
		constexpr auto CurveName = 0x60; // FString
		constexpr auto Points = 0x70; // TArray<FPresetGeneratedPoint>
	}

	namespace n_UTgAnimNodeFitToDuration { // : UAnimNodeBlendBase
		constexpr auto Duration = 0x114; // float
		constexpr auto OverrideDuration = 0x118; // float
		constexpr auto bAllowIncreasedPlayRate = 0x11c; // uint32_t : 1
		constexpr auto bAllowDecreasedPlayRate = 0x11c; // uint32_t : 1
		constexpr auto bClampDuration = 0x11c; // uint32_t : 1
		constexpr auto m_bScaleByReload = 0x11c; // uint32_t : 1
		constexpr auto ClampedMinDuration = 0x120; // float
		constexpr auto ClampedMaxDuration = 0x124; // float
		constexpr auto m_EquipPoint = 0x128; // TG_EQUIP_POINT
		constexpr auto m_fDurationMultiplier = 0x12c; // float
	}

	namespace n_UTgAchievement_KillDuringAbility { // : UTgAchievement
		constexpr auto m_CachedDevice = 0x94; // ObjectProperty
	}

	namespace n_UGameAICmd_Hover_MoveToGoal_Mesh { // : UGameAICommand
		constexpr auto Find = 0x84; // ObjectProperty
		constexpr auto Radius = 0x8c; // float
		constexpr auto bWasFiring = 0x90; // uint32_t : 1
		constexpr auto bFinalApproach = 0x90; // uint32_t : 1
		constexpr auto bFallbackMoveToMesh = 0x90; // uint32_t : 1
		constexpr auto DesiredHoverHeight = 0x94; // float
		constexpr auto CurrentHoverHeight = 0x98; // float
		constexpr auto SubGoalReachDist = 0x9c; // float
		constexpr auto GoalDistance = 0xa0; // float
		constexpr auto IntermediatePoint = 0xa4; // FVector
		constexpr auto LastMovePoint = 0xb0; // FVector
		constexpr auto NumMovePointFails = 0xbc; // int32_t
		constexpr auto MaxMovePointFails = 0xc0; // int32_t
		constexpr auto FallbackDest = 0xc4; // FVector
		constexpr auto MoveToActor = 0xd0; // ObjectProperty
		constexpr auto LastMoveTargetPathLocation = 0xd8; // FBasedPosition
		constexpr auto InitialFinalDestination = 0x110; // FVector
	}

	namespace n_UUIScene_UIRadialMenuEquip { // : UUIScene
		constexpr auto m_mcHeader = 0x1cc; // ObjectProperty
		constexpr auto m_mcHeaderTF = 0x1d4; // ObjectProperty
		constexpr auto m_HeaderBack = 0x1dc; // ObjectProperty
		constexpr auto m_RadialEquip = 0x1e4; // ObjectProperty
		constexpr auto m_bEquipEmote = 0x1ec; // uint32_t : 1
		constexpr auto m_pEquipEmote = 0x1f0; // ObjectProperty
		constexpr auto m_pEquipEmoteChampion = 0x1f8; // ObjectProperty
		constexpr auto m_pEquipSpray = 0x200; // ObjectProperty
		constexpr auto m_nLockedSlots = 0x208; // int32_t
		constexpr auto m_pSlotItem = 0x20c; // ObjectProperty
		constexpr auto m_scEquipSound = 0x214; // ObjectProperty
	}

	namespace n_USoundNodeWaveParam { // : USoundNode
		constexpr auto WaveParameterName = 0x74; // FName
	}

	namespace n_UGoal_AtActor { // : UPathGoalEvaluator
		constexpr auto GoalActor = 0x78; // ObjectProperty
		constexpr auto GoalDist = 0x80; // float
		constexpr auto bKeepPartial = 0x84; // uint32_t : 1
	}

	namespace n_ANxGenericForceFieldCapsule { // : ANxGenericForceField
		constexpr auto RenderComponent = 0x374; // ComponentProperty
		constexpr auto CapsuleHeight = 0x37c; // float
		constexpr auto CapsuleRadius = 0x380; // float
	}

	namespace n_UFracturedBaseComponent { // : UStaticMeshComponent
		constexpr auto ComponentBaseResources = 0x310; // FPointer
		constexpr auto ReleaseResourcesFence = 0x318; // FRenderCommandFence_Mirror
		constexpr auto VisibleFragments = 0x31c; // TArray<char>
		constexpr auto bVisibilityHasChanged = 0x32c; // uint32_t : 1
		constexpr auto bVisibilityReset = 0x32c; // uint32_t : 1
		constexpr auto bInitialVisibilityValue = 0x32c; // uint32_t : 1
		constexpr auto bUseDynamicIndexBuffer = 0x32c; // uint32_t : 1
		constexpr auto bUseDynamicIBWithHiddenFragments = 0x32c; // uint32_t : 1
		constexpr auto NumResourceIndices = 0x330; // int32_t
		constexpr auto bResetStaticMesh = 0x334; // int32_t
	}

	namespace n_UPointLightComponent { // : ULightComponent
		constexpr auto ShadowRadiusMultiplier = 0x1a4; // float
		constexpr auto Radius = 0x1a8; // float
		constexpr auto FalloffExponent = 0x1ac; // float
		constexpr auto ShadowFalloffExponent = 0x1b0; // float
		constexpr auto MinShadowFalloffRadius = 0x1b4; // float
		constexpr auto CachedParentToWorld = 0x1c0; // FMatrix
		constexpr auto Translation = 0x200; // FVector
		constexpr auto ShadowPlane = 0x210; // FPlane
		constexpr auto PreviewLightRadius = 0x220; // ComponentProperty
		constexpr auto LightmassSettings = 0x228; // FLightmassPointLightSettings
		constexpr auto PreviewLightSourceRadius = 0x238; // ComponentProperty
	}

	namespace n_UGamePadLightbarSubsystem { // : UObject
		constexpr auto CurrentLightBarState = 0x60; // LightBarState
		constexpr auto CurrentColor = 0x64; // FLinearColor
		constexpr auto OriginalColor = 0x74; // FLinearColor
		constexpr auto TargetColor = 0x84; // FLinearColor
		constexpr auto LerpTimeRemaining = 0x94; // float
		constexpr auto TotalLerpTime = 0x98; // float
		constexpr auto DefaultColor = 0x9c; // FColor
		constexpr auto ColorDefinitions = 0xa0; // TArray<FColorDefinition>
		constexpr auto LerpToInstructions = 0xb0; // TArray<FLerpToInstruction>
		constexpr auto SetAndLerpInstructions = 0xc0; // TArray<FSetAndLerpInstruction>
		constexpr auto PulseInstructions = 0xd0; // TArray<FPulseInstruction>
	}

	namespace n_USkelControlLookAt { // : USkelControlBase
		constexpr auto TargetLocation = 0xd0; // FVector
		constexpr auto TargetLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto LookAtAxis = 0xdd; // EAxis
		constexpr auto UpAxis = 0xde; // EAxis
		constexpr auto AllowRotationSpace = 0xdf; // EBoneControlSpace
		constexpr auto TargetSpaceBoneName = 0xe0; // FName
		constexpr auto bInvertLookAtAxis = 0xe8; // uint32_t : 1
		constexpr auto bDefineUpAxis = 0xe8; // uint32_t : 1
		constexpr auto bInvertUpAxis = 0xe8; // uint32_t : 1
		constexpr auto bEnableLimit = 0xe8; // uint32_t : 1
		constexpr auto bLimitBasedOnRefPose = 0xe8; // uint32_t : 1
		constexpr auto bDisableBeyondLimit = 0xe8; // uint32_t : 1
		constexpr auto bNotifyBeyondLimit = 0xe8; // uint32_t : 1
		constexpr auto bShowLimit = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationX = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationY = 0xe8; // uint32_t : 1
		constexpr auto bAllowRotationZ = 0xe8; // uint32_t : 1
		constexpr auto TargetLocationInterpSpeed = 0xec; // float
		constexpr auto DesiredTargetLocation = 0xf0; // FVector
		constexpr auto ActorSpaceLookAtTarget = 0xfc; // FVector
		constexpr auto MaxAngle = 0x108; // float
		constexpr auto OuterMaxAngle = 0x10c; // float
		constexpr auto DeadZoneAngle = 0x110; // float
		constexpr auto RotationAngleRangeX = 0x114; // FVector2D
		constexpr auto RotationAngleRangeY = 0x11c; // FVector2D
		constexpr auto RotationAngleRangeZ = 0x124; // FVector2D
		constexpr auto AllowRotationOtherBoneName = 0x12c; // FName
		constexpr auto LookAtAlpha = 0x134; // float
		constexpr auto LookAtAlphaTarget = 0x138; // float
		constexpr auto LookAtAlphaBlendTimeToGo = 0x13c; // float
		constexpr auto LimitLookDir = 0x140; // FVector
		constexpr auto BaseLookDir = 0x14c; // FVector
		constexpr auto BaseBonePos = 0x158; // FVector
		constexpr auto LastCalcTime = 0x164; // float
		constexpr auto ControlBoneIndex = 0x168; // int32_t
	}

	namespace n_ANxForceFieldTornado { // : ANxForceField
		constexpr auto Shape = 0x2d4; // ObjectProperty
		constexpr auto DrawComponent = 0x2dc; // ComponentProperty
		constexpr auto RadialStrength = 0x2e4; // float
		constexpr auto RotationalStrength = 0x2e8; // float
		constexpr auto LiftStrength = 0x2ec; // float
		constexpr auto ForceRadius = 0x2f0; // float
		constexpr auto ForceTopRadius = 0x2f4; // float
		constexpr auto LiftFalloffHeight = 0x2f8; // float
		constexpr auto EscapeVelocity = 0x2fc; // float
		constexpr auto ForceHeight = 0x300; // float
		constexpr auto HeightOffset = 0x304; // float
		constexpr auto BSpecialRadialForceMode = 0x308; // uint32_t : 1
		constexpr auto SelfRotationStrength = 0x30c; // float
		constexpr auto Kernel = 0x310; // FPointer
	}

	namespace n_USeqAct_ActivateRemoteEvent { // : USequenceAction
		constexpr auto Instigator = 0x108; // ObjectProperty
		constexpr auto EventName = 0x110; // FName
		constexpr auto bStatusIsOk = 0x118; // uint32_t : 1
	}

	namespace n_USeqAct_Destroy { // : USequenceAction
		constexpr auto bDestroyBasedActors = 0x108; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_ATgCollisionProxy_SpectatorActionListener { // : ATgCollisionProxy_Cylinder
		constexpr auto __ProxyDeviceOnStartFire__Delegate = 0x2bc; // DelegateProperty
	}

	namespace n_UTgDistributionFloatSoundAttenuation { // : UDistributionFloat
		constexpr auto AttenuationType = 0x7c; // SoundAttenuationType
		constexpr auto Attenuation_Sm_foley = 0x80; // float
		constexpr auto Attenuation_Lg_foley = 0x84; // float
		constexpr auto Attenuation_Melee_hit = 0x88; // float
		constexpr auto Attenuation_Sm_gun = 0x8c; // float
		constexpr auto Attenuation_Med_gun = 0x90; // float
		constexpr auto Attenuation_Lg_gun = 0x94; // float
		constexpr auto Attenuation_Sm_exp = 0x98; // float
		constexpr auto Attenuation_Med_exp = 0x9c; // float
		constexpr auto Attenuation_Lg_exp = 0xa0; // float
		constexpr auto GroupName = 0xa4; // FName
		constexpr auto AttenuationGroups = 0xac; // TArray<FAttenuationGroup>
	}

	namespace n_UAnimNotify_Rumble { // : UAnimNotify
		constexpr auto PredefinedWaveForm = 0x68; // UWaveFormBase*
		constexpr auto WaveForm = 0x70; // ObjectProperty
		constexpr auto bCheckForBasedPlayer = 0x78; // uint32_t : 1
		constexpr auto EffectRadius = 0x7c; // float
	}

	namespace n_UTgSeqEvent_MICParameterEvent { // : USequenceEvent
		constexpr auto MICEventType = 0x128; // eMICEventType
		constexpr auto AttachedMICs = 0x12c; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleAttractorPoint { // : UParticleModuleAttractorBase
		constexpr auto Position = 0x68; // FRawDistributionVector
		constexpr auto Range = 0x8c; // FRawDistributionFloat
		constexpr auto Strength = 0xb0; // FRawDistributionFloat
		constexpr auto StrengthByDistance = 0xd4; // uint32_t : 1
		constexpr auto bAffectBaseVelocity = 0xd4; // uint32_t : 1
		constexpr auto bOverrideVelocity = 0xd4; // uint32_t : 1
		constexpr auto bUseWorldSpacePosition = 0xd4; // uint32_t : 1
	}

	namespace n_UUIComponent_MatchLobbyBansChampion { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_bIsActive = 0x12c; // uint32_t : 1
	}

	namespace n_UUIScene_UIFullScreenBattlePass { // : UUIScene
		constexpr auto m_InputBack = 0x1cc; // ObjectProperty
		constexpr auto m_InputOk = 0x1d4; // ObjectProperty
		constexpr auto m_pBack = 0x1dc; // ObjectProperty
		constexpr auto m_pButton = 0x1e4; // ObjectProperty
		constexpr auto m_pButtonKey = 0x1ec; // ObjectProperty
		constexpr auto m_PreviewItemIds = 0x1f4; // TArray<int32_t>
		constexpr auto m_nCurrentPreviewIndex = 0x204; // int32_t
		constexpr auto m_bIsShown = 0x208; // uint32_t : 1
		constexpr auto m_bCanPreviewItems = 0x208; // uint32_t : 1
	}

	namespace n_ATgNamedPOIActor { // : AActor
		constexpr auto m_nMessageId = 0x280; // int32_t
		constexpr auto m_PreviewText = 0x284; // FString
		constexpr auto m_bIsRegion = 0x294; // uint32_t : 1
	}

	namespace n_ATgWeaponMeshActor { // : AActor
		constexpr auto m_OwningPawn = 0x280; // ObjectProperty
		constexpr auto m_WeaponMesh1PClass = 0x288; // UTgSkeletalMeshComponent_Weapon*
		constexpr auto m_WeaponMesh1P = 0x290; // ComponentProperty
		constexpr auto m_WeaponMesh3PClass = 0x298; // UTgSkeletalMeshComponent_Weapon*
		constexpr auto m_WeaponMesh3P = 0x2a0; // ComponentProperty
		constexpr auto m_SimpleTransitionerNodes1P = 0x2a8; // TArray<ObjectProperty>
		constexpr auto m_DeviceModeBlendNodes = 0x2b8; // TArray<ObjectProperty>
		constexpr auto m_FitToDurationNodes = 0x2c8; // TArray<ObjectProperty>
		constexpr auto m_PaladinsCharacterNodes = 0x2d8; // TArray<ObjectProperty>
		constexpr auto m_TriggerCameraAnimNodes = 0x2e8; // TArray<ObjectProperty>
		constexpr auto PoseTransitioner = 0x2f8; // ObjectProperty
		constexpr auto m_PawnMeshSimpleTransitionerNodes = 0x300; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshFitToDurationNodes = 0x310; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshPaladinsCharacterNodes = 0x320; // TArray<ObjectProperty>
		constexpr auto m_PawnMeshTriggerCameraAnimNodes = 0x330; // TArray<ObjectProperty>
		constexpr auto m_nNumTracersPerShot = 0x340; // int32_t
		constexpr auto m_nEquipSlot = 0x344; // int32_t
		constexpr auto m_nDeviceId = 0x348; // int32_t
		constexpr auto m_MeshAsmId1P = 0x34c; // int32_t
		constexpr auto m_MeshAsmId3P = 0x350; // int32_t
		constexpr auto m_WeaponClass = 0x354; // ATgDevice*
		constexpr auto m_PlayFireEffectsOn = 0x35c; // TG_PLAY_FIRE_EFFECT_ON [0x31]
		constexpr auto m_ActiveEquipPoint = 0x38d; // TG_EQUIP_POINT
		constexpr auto Current1pAttachState = 0x38e; // EFirstPersonWeaponAttachState
		constexpr auto m_bShouldLoopingMuzzleTrace = 0x390; // uint32_t : 1
		constexpr auto m_bUseSocketForCameraAttach = 0x390; // uint32_t : 1
		constexpr auto m_bProceduralBob = 0x390; // uint32_t : 1
		constexpr auto m_bIsFOVZoomed = 0x390; // uint32_t : 1
		constexpr auto m_bFlourishBlocked = 0x390; // uint32_t : 1
		constexpr auto m_bIsHoldingBeacon = 0x390; // uint32_t : 1
		constexpr auto m_bWasViewTargetLastTick = 0x390; // uint32_t : 1
		constexpr auto m_bUseCameraAnims = 0x390; // uint32_t : 1
		constexpr auto c_bEnemyMatLoaded = 0x390; // uint32_t : 1
		constexpr auto bUseEmitterPoolForTracers = 0x390; // uint32_t : 1
		constexpr auto m_HandsMesh = 0x394; // ComponentProperty
		constexpr auto m_HeadMesh1P = 0x39c; // ComponentProperty
		constexpr auto m_v2WeaponLagAimOffset = 0x3a4; // FVector2D
		constexpr auto m_nMaxWeaponLag = 0x3ac; // FVector2D
		constexpr auto m_v2WeaponLagInterpSpeed = 0x3b4; // FVector2D
		constexpr auto m_v2WeaponLagSmoothingFactor = 0x3bc; // FVector2D
		constexpr auto m_rLastRotation = 0x3c4; // FRotator
		constexpr auto m_fSmoothedAimOffset = 0x3d0; // FVector2D
		constexpr auto m_fSmoothAimFactor = 0x3d8; // float
		constexpr auto m_FireCameraShake = 0x3dc; // ObjectProperty
		constexpr auto m_nTracerCounter = 0x3e4; // int32_t
		constexpr auto m_nTracerFrequency = 0x3e8; // int32_t
		constexpr auto m_TracerName = 0x3ec; // FName
		constexpr auto m_fTracerLifetime = 0x3f4; // float
		constexpr auto m_HitTargetName = 0x3f8; // FName
		constexpr auto m_HitWallName = 0x400; // FName
		constexpr auto m_WhizbyName = 0x408; // FName
		constexpr auto m_BeamEmitterEndPointOffset = 0x410; // float
		constexpr auto m_nBeaconMeshId = 0x414; // int32_t
		constexpr auto m_HitReactionSkelControls = 0x418; // TArray<ObjectProperty>
		constexpr auto m_QueuedImpactEffects = 0x428; // TArray<FQueuedImpactEffect>
		constexpr auto m_QueuedImpactDecals = 0x438; // TArray<FQueuedImpactDecal>
		constexpr auto m_GameplayCurves = 0x448; // ObjectProperty
	}

	namespace n_UTgSkelControlSingleBone { // : USkelControlSingleBone
		constexpr auto SnapStrengthFromAnimNodes = 0x100; // uint32_t : 1
		constexpr auto m_bIsWidescreen = 0x100; // uint32_t : 1
		constexpr auto SnapStrengthThreshold = 0x104; // float
		constexpr auto m_WidescreenBoneTranslationOffset = 0x108; // FVector
		constexpr auto m_WidescreenBoneRotationOffset = 0x114; // FRotator
		constexpr auto m_WidescreenBoneScaleOffset = 0x120; // float
	}

	namespace n_UAnimNodeCrossfader { // : UAnimNodeBlend
		constexpr auto DefaultAnimSeqName = 0x124; // FName
		constexpr auto bDontBlendOutOneShot = 0x12c; // uint32_t : 1
		constexpr auto PendingBlendOutTimeOneShot = 0x130; // float
	}

	namespace n_UTgDeviceForm_Spray { // : UTgDeviceForm
		constexpr auto m_SprayMaterial = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SprayMIC = 0x29c; // ObjectProperty
		constexpr auto c_SpawnedDecal = 0x2a4; // ComponentProperty
		constexpr auto m_nRandAlphaMaskMax = 0x2ac; // int32_t
		constexpr auto m_nPrevAlphaMask = 0x2b0; // int32_t
		constexpr auto c_SprayHitFX = 0x2b4; // ObjectProperty
		constexpr auto c_SprayMissedFX = 0x2bc; // ObjectProperty
		constexpr auto m_SpraySetups = 0x2c4; // TArray<FSpraySetup>
		constexpr auto m_nActiveSpraySetup = 0x2d4; // int32_t
		constexpr auto m_nDesiredSprayDeviceId = 0x2d8; // int32_t
	}

	namespace n_UTgEffectModifyProperty_Ability1 { // : UTgEffectModifyProperty
		constexpr auto m_LastRetrievedOverrides = 0xbc; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_InHand_HitMissStacker { // : UTgInvListener
		constexpr auto m_fLastStackTime = 0xc4; // float
		constexpr auto m_nAppliedStacks = 0xc8; // int32_t
	}

	namespace n_UUIComponent_BattlePassChallengeLarge { // : UUIComponent_Display
		constexpr auto m_mcTitleTF = 0x124; // ObjectProperty
		constexpr auto m_mcTierTF = 0x12c; // ObjectProperty
		constexpr auto m_mcLabelTF = 0x134; // ObjectProperty
		constexpr auto m_mcRewardTF = 0x13c; // ObjectProperty
		constexpr auto m_mcExperienceTF = 0x144; // ObjectProperty
		constexpr auto m_mcCurrencyIcon = 0x14c; // ObjectProperty
		constexpr auto m_pGoalList = 0x154; // ObjectProperty
	}

	namespace n_UInterpTrackSkelControlStrength { // : UInterpTrackFloatBase
		constexpr auto SkelControlName = 0xb8; // FName
	}

	namespace n_UTgAIBehaviorAction_PlayVGS { // : UTgAIBehaviorAction
		constexpr auto VoicePackId = 0x94; // int32_t
		constexpr auto VgsId = 0x98; // int32_t
	}

	namespace n_UMcpUserInventoryBase { // : UMcpServiceBase
		constexpr auto McpUserInventoryClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnDeleteSaveSlotComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnQuerySaveSlotListComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnQueryInventoryItemsComplete__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnPurchaseItemComplete__Delegate = 0xc8; // DelegateProperty
		constexpr auto __OnSellItemComplete__Delegate = 0xd8; // DelegateProperty
		constexpr auto __OnEarnItemComplete__Delegate = 0xe8; // DelegateProperty
		constexpr auto __OnConsumeItemComplete__Delegate = 0xf8; // DelegateProperty
		constexpr auto __OnDeleteItemComplete__Delegate = 0x108; // DelegateProperty
		constexpr auto __OnRecordIapComplete__Delegate = 0x118; // DelegateProperty
	}

	namespace n_UAnimNotify_ViewShake { // : UAnimNotify_Scripted
		constexpr auto Duration = 0x68; // float
		constexpr auto RotAmplitude = 0x6c; // FVector
		constexpr auto RotFrequency = 0x78; // FVector
		constexpr auto LocAmplitude = 0x84; // FVector
		constexpr auto LocFrequency = 0x90; // FVector
		constexpr auto FOVAmplitude = 0x9c; // float
		constexpr auto FOVFrequency = 0xa0; // float
		constexpr auto bDoControllerVibration = 0xa4; // uint32_t : 1
		constexpr auto bUseBoneLocation = 0xa4; // uint32_t : 1
		constexpr auto ShakeRadius = 0xa8; // float
		constexpr auto BoneName = 0xac; // FName
		constexpr auto ShakeParams = 0xb4; // ObjectProperty
	}

	namespace n_ATgSpectatorController { // : ATgPlayerController
		constexpr auto m_CameraMode = 0x1628; // SpectatorCameraMode
		constexpr auto m_CurrentCycle = 0x1629; // SpectatorCameraCycle
		constexpr auto m_PendingCycle = 0x162a; // SpectatorCameraCycle
		constexpr auto m_eHelicopterFlight = 0x162b; // SpecFlightMode
		constexpr auto m_CurrentSpectatorMode = 0x162c; // ESpectatorMode
		constexpr auto m_CurrentZoomState = 0x162d; // EZoomState
		constexpr auto m_BookmarkCamera = 0x1630; // ObjectProperty
		constexpr auto m_Bookmarks = 0x1638; // FSpectatorBookmark [0xa]
		constexpr auto m_fDefaultTweenTime = 0x1818; // float
		constexpr auto m_bOutlineCharacters = 0x181c; // uint32_t : 1
		constexpr auto m_bIsMapSquashed = 0x181c; // uint32_t : 1
		constexpr auto m_bIgnoreCullDistanceVolumes = 0x181c; // uint32_t : 1
		constexpr auto m_fNameplateFadeMinDist = 0x1820; // float
		constexpr auto m_fNameplateFadeMaxDist = 0x1824; // float
		constexpr auto m_fNameplateFadeMaxAmount = 0x1828; // float
		constexpr auto m_fNameplateScaleMinDist = 0x182c; // float
		constexpr auto m_fNameplateScaleMaxDist = 0x1830; // float
		constexpr auto m_fNameplateScaleMaxAmount = 0x1834; // float
		constexpr auto m_fInterpolateCameraDistance = 0x1838; // float
		constexpr auto m_BroadcastChannels = 0x183c; // FBroadcastChannel [0x4]
		constexpr auto c_vMouseClickDeprojectionExtent = 0x185c; // FVector
		constexpr auto m_fOverviewCenterpointOffset = 0x1868; // float
		constexpr auto m_fMouseCursorVisibleTime = 0x186c; // float
		constexpr auto m_fRemainingCursorVisibleTime = 0x1870; // float
	}

	namespace n_UMaterialExpressionTextureSampleParameter { // : UMaterialExpressionTextureSample
		constexpr auto ParameterName = 0x120; // FName
		constexpr auto ExpressionGUID = 0x128; // FGuid
		constexpr auto Group = 0x138; // FName
	}

	namespace n_UUIComponent_AnimatedText { // : UUIComponent_Display
		constexpr auto m_fTime = 0x124; // float
		constexpr auto m_fDelay = 0x128; // float
		constexpr auto m_fIconOffset = 0x12c; // float
		constexpr auto m_fCurrent = 0x130; // float
		constexpr auto m_fTarget = 0x134; // float
		constexpr auto m_fDelta = 0x138; // float
		constexpr auto m_mcTF = 0x13c; // ObjectProperty
		constexpr auto m_mcIcon = 0x144; // ObjectProperty
	}

	namespace n_UUIChatScene { // : UTgGfxScene
		constexpr auto m_nContextChangedCallbackHandle = 0x1ec; // int32_t
		constexpr auto m_KeyCapture = 0x1f0; // ObjectProperty
		constexpr auto m_nChannel = 0x1f8; // int32_t
		constexpr auto m_nScroll = 0x1fc; // int32_t
		constexpr auto m_nLineNumber = 0x200; // int32_t
		constexpr auto m_nPrevIndex = 0x204; // int32_t
		constexpr auto m_fBuffer = 0x208; // float
		constexpr auto m_fOutputWidth = 0x20c; // float
		constexpr auto m_sRecipient = 0x210; // FString
		constexpr auto m_sRemaining = 0x220; // FString
		constexpr auto m_sLastInput = 0x230; // FString
		constexpr auto m_nCommand = 0x240; // int32_t
		constexpr auto m_pChatData = 0x244; // ObjectProperty
		constexpr auto m_mcInput = 0x24c; // ObjectProperty
		constexpr auto m_Messages = 0x254; // TArray<FChatMessage>
		constexpr auto m_PrevChats = 0x264; // TArray<FString>
		constexpr auto m_Shortcuts = 0x274; // TArray<FChannelData>
		constexpr auto m_ReplyTargetIndex = 0x284; // int32_t
		constexpr auto m_bAutocompleteState = 0x288; // AUTOCOMPLETE_STATE
	}

	namespace n_URB_RadialImpulseComponent { // : UPrimitiveComponent
		constexpr auto ImpulseFalloff = 0x24c; // ERadialImpulseFalloff
		constexpr auto ImpulseStrength = 0x250; // float
		constexpr auto ImpulseRadius = 0x254; // float
		constexpr auto bVelChange = 0x258; // uint32_t : 1
		constexpr auto bCauseFracture = 0x258; // uint32_t : 1
		constexpr auto PreviewSphere = 0x25c; // ComponentProperty
	}

	namespace n_UUIDataPlayer { // : UUIData
		constexpr auto VfTable_IUIDataInterface_Name = 0x64; // FPointer
		constexpr auto m_sName = 0x6c; // FString
		constexpr auto nLevel = 0x7c; // int32_t
		constexpr auto nMasteryLevel = 0x80; // int32_t
		constexpr auto dwBattlePassXp = 0x84; // Fdword
		constexpr auto dwPlayerId = 0x88; // Fdword
		constexpr auto dwAvatarId = 0x8c; // Fdword
		constexpr auto m_sPortalId = 0x90; // FString
		constexpr auto m_dwPortalType = 0xa0; // Fdword
		constexpr auto bIsSelf = 0xa4; // uint32_t : 1
		constexpr auto bIsPortalReservedPartySlot = 0xa4; // uint32_t : 1
		constexpr auto bIsPaidBattlePass = 0xa4; // uint32_t : 1
		constexpr auto bIsVerifiedPlayer = 0xa4; // uint32_t : 1
		constexpr auto m_bPendingFilterRequest = 0xa4; // uint32_t : 1
		constexpr auto dwReferralPlayMinutes = 0xa8; // Fdword
		constexpr auto dwReferralId = 0xac; // Fdword
		constexpr auto pLeaguePlayers = 0xb0; // TArray<ObjectProperty>
	}

	namespace n_USeqVar_Vector { // : USequenceVariable
		constexpr auto VectValue = 0xa0; // FVector
	}

	namespace n_AGameReplicationInfo { // : AReplicationInfo
		constexpr auto GameClass = 0x280; // AGameInfo*
		constexpr auto bStopCountDown = 0x288; // uint32_t : 1
		constexpr auto bMatchHasBegun = 0x288; // uint32_t : 1
		constexpr auto bMatchIsOver = 0x288; // uint32_t : 1
		constexpr auto RemainingTime = 0x28c; // int32_t
		constexpr auto ElapsedTime = 0x290; // int32_t
		constexpr auto RemainingMinute = 0x294; // int32_t
		constexpr auto GoalScore = 0x298; // int32_t
		constexpr auto TimeLimit = 0x29c; // int32_t
		constexpr auto Teams = 0x2a0; // TArray<ObjectProperty>
		constexpr auto ServerName = 0x2b0; // FString
		constexpr auto Winner = 0x2c0; // ObjectProperty
		constexpr auto PRIArray = 0x2c8; // TArray<ObjectProperty>
		constexpr auto InactivePRIArray = 0x2d8; // TArray<ObjectProperty>
	}

	namespace n_UTgAimAccelerationCurves { // : UObject
		constexpr auto SettingsName = 0x60; // FName
		constexpr auto MaxAccelMultiplierX = 0x68; // float
		constexpr auto MaxAccelMultiplierY = 0x6c; // float
		constexpr auto AimSpeedX = 0x70; // FRawDistributionFloat
		constexpr auto AimAccelX = 0x94; // FRawDistributionFloat
		constexpr auto AimSpeedY = 0xb8; // FRawDistributionFloat
		constexpr auto AimAccelY = 0xdc; // FRawDistributionFloat
	}

	namespace n_ATgDevice_DeployMod { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_DeployMod = 0xa08; // FPointer
	}

	namespace n_ATgDevice_Toggle { // : ATgDevice
		constexpr auto m_bIsToggle = 0xa08; // uint32_t : 1
	}

	namespace n_UMcpManagedValueManagerBase { // : UMcpServiceBase
		constexpr auto McpManagedValueManagerClassName = 0x78; // FString
		constexpr auto __OnCreateSaveSlotComplete__Delegate = 0x88; // DelegateProperty
		constexpr auto __OnReadSaveSlotComplete__Delegate = 0x98; // DelegateProperty
		constexpr auto __OnUpdateValueComplete__Delegate = 0xa8; // DelegateProperty
		constexpr auto __OnDeleteValueComplete__Delegate = 0xb8; // DelegateProperty
	}

	namespace n_UTgAIBehaviorComposite_Sequence { // : UTgAIBehaviorComposite
		constexpr auto bStopOnRunningChild = 0xb8; // uint32_t : 1
	}

	namespace n_UTgDeviceForm_BunnySpiritLink { // : UTgDeviceForm
		constexpr auto m_SimpleStanceReiInspect1p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SimpleStanceReiInspect3p = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_ReiSpiritLinkNodes3p = 0x2ac; // TArray<ObjectProperty>
		constexpr auto m_ReiSpiritLinkNodes1p = 0x2bc; // TArray<ObjectProperty>
	}

	namespace n_UActorComponent { // : UComponent
		constexpr auto Scene = 0x70; // FPointer
		constexpr auto Owner = 0x78; // ObjectProperty
		constexpr auto bAttached = 0x80; // uint32_t : 1
		constexpr auto bTickInEditor = 0x80; // uint32_t : 1
		constexpr auto bNeedsReattach = 0x80; // uint32_t : 1
		constexpr auto bNeedsUpdateTransform = 0x80; // uint32_t : 1
		constexpr auto TickGroup = 0x84; // ETickingGroup
	}

	namespace n_USoundNodeAmbientNonLoop { // : USoundNodeAmbient
		constexpr auto DelayMin = 0xb0; // float
		constexpr auto DelayMax = 0xb4; // float
		constexpr auto DelayTime = 0xb8; // FRawDistributionFloat
	}

	namespace n_ADynamicPhysicsVolume { // : APhysicsVolume
		constexpr auto bEnabled = 0x314; // uint32_t : 1
	}

	namespace n_ATgDevice_Spite { // : ATgDevice_Charge
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa7c; // FPointer
		constexpr auto m_CachedDarklord = 0xa84; // ObjectProperty
		constexpr auto m_bWaitingForServerHit = 0xa8c; // uint32_t : 1
		constexpr auto m_bHasStartedChainAttacks = 0xa8c; // uint32_t : 1
		constexpr auto m_bHasBounced = 0xa8c; // uint32_t : 1
		constexpr auto m_bHasRefundedEnergy = 0xa8c; // uint32_t : 1
		constexpr auto r_bApplyPercentDamage = 0xa8c; // uint32_t : 1
		constexpr auto m_nNumHits = 0xa90; // int32_t
		constexpr auto m_HitCharacter = 0xa94; // ObjectProperty
		constexpr auto m_HitCharacterStartPolymorphType = 0xa9c; // EPolymorphType
		constexpr auto m_fJoinViewLerpTime = 0xaa0; // float
		constexpr auto m_fJoinSeparationDistance = 0xaa4; // float
		constexpr auto m_fJoinMoveTweenTime = 0xaa8; // float
		constexpr auto m_fJoinMinGroundOffset = 0xaac; // float
	}

	namespace n_ANxForceFieldSpawnable { // : AActor
		constexpr auto ForceFieldComponent = 0x280; // ComponentProperty
	}

	namespace n_ATgDevice_Emitter { // : ATgDevice
		constexpr auto m_PawnsInRange = 0xa08; // TArray<ObjectProperty>
		constexpr auto m_CollisionProxy = 0xa18; // ObjectProperty
		constexpr auto m_bHasProjector = 0xa20; // uint32_t : 1
		constexpr auto m_bIsOnOwner = 0xa20; // uint32_t : 1
		constexpr auto m_fProjectorPercent = 0xa24; // float
		constexpr auto m_CachedPawnOwner = 0xa28; // ObjectProperty
	}

	namespace n_UTgSeqAct_RespawnAllPlayers { // : USequenceAction
		constexpr auto bResetLivingPlayers = 0x108; // uint32_t : 1
		constexpr auto bResetDeadPlayers = 0x108; // uint32_t : 1
		constexpr auto bResetHealth = 0x108; // uint32_t : 1
	}

	namespace n_UUIDataPrice { // : UUIData
		constexpr auto m_nVendorId = 0x64; // int32_t
		constexpr auto m_nLootId = 0x68; // int32_t
		constexpr auto m_nItemId = 0x6c; // int32_t
		constexpr auto m_nPurchaseType = 0x70; // int32_t
		constexpr auto m_nCurrencyType = 0x74; // int32_t
		constexpr auto m_nQuantity = 0x78; // int32_t
		constexpr auto m_nPrice = 0x7c; // int32_t
		constexpr auto m_nDiscountPrice = 0x80; // int32_t
		constexpr auto m_nOriginalPrice = 0x84; // int32_t
	}

	namespace n_ATgDevice_Requip { // : ATgDevice
		constexpr auto m_InhandWeapon = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_Shatter { // : ATgDevice
		constexpr auto m_CachedYingPawn = 0xa08; // ObjectProperty
		constexpr auto m_nIllusionsShattered = 0xa10; // int32_t
	}

	namespace n_ATgPathPreviewActor { // : AActor
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_Destination = 0x288; // ObjectProperty
		constexpr auto m_Source = 0x290; // ObjectProperty
		constexpr auto m_NavigationHandle = 0x298; // ObjectProperty
		constexpr auto m_NavMeshPathParams = 0x2a0; // FNavMeshPathParams
	}

	namespace n_UTgAIBehaviorCondition_IsDesiredAimDevice { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_USeqAct_SetMotionBlurParams { // : USeqAct_Latent
		constexpr auto MotionBlurAmount = 0x120; // float
		constexpr auto InterpolateSeconds = 0x124; // float
		constexpr auto InterpolateElapsed = 0x128; // float
		constexpr auto OldMotionBlurAmount = 0x12c; // float
	}

	namespace n_UTgGameplayCurvesSet_TargetAimTracking { // : UTgGameplayCurvesSet
		constexpr auto TargetTrackingCurves = 0x64; // TArray<ObjectProperty>
		constexpr auto DebugVals = 0x74; // FTargetAimTrackingDebugVals
		constexpr auto bSaveDebugVals = 0xb0; // uint32_t : 1
	}

	namespace n_UInteractiveFoliageComponent { // : UStaticMeshComponent
		constexpr auto FoliageSceneProxy = 0x310; // FPointer
	}

	namespace n_UTgDeviceForm_Dominance { // : UTgDeviceForm
		constexpr auto m_SKCFlagScale = 0x28c; // ObjectProperty
	}

	namespace n_UUIDataGoals { // : UUIDataObject
		constexpr auto m_GoldLimit = 0x74; // ObjectProperty
		constexpr auto m_GoldLimitBoosted = 0x7c; // ObjectProperty
		constexpr auto m_VIPLimit = 0x84; // ObjectProperty
		constexpr auto m_VIPLimitBoosted = 0x8c; // ObjectProperty
		constexpr auto m_Ranked = 0x94; // TArray<ObjectProperty>
		constexpr auto m_CurrencyStats = 0xa4; // TMap<None, None>
		constexpr auto m_WOTDByBotId = 0xec; // TMap<None, None>
		constexpr auto m_PlayedRankedTracker = 0x134; // ObjectProperty
		constexpr auto m_Goals = 0x13c; // TMap<None, None>
		constexpr auto m_ItemIdToMasteryLevel = 0x184; // TMap<None, None>
		constexpr auto m_ChallengeList = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_QuestList = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_EventGoalList = 0x1ec; // TArray<ObjectProperty>
		constexpr auto m_IncompleteEventChallengeGoalList = 0x1fc; // TArray<ObjectProperty>
		constexpr auto m_ChampionQuest = 0x20c; // ObjectProperty
		constexpr auto m_DailyLoginsQuest = 0x214; // ObjectProperty
		constexpr auto m_LoreQuest = 0x21c; // ObjectProperty
		constexpr auto m_QuestsCompleted = 0x224; // TArray<ObjectProperty>
		constexpr auto m_bQuestsSeenToday = 0x234; // uint32_t : 1
		constexpr auto m_bPlayerLoggedIn = 0x234; // uint32_t : 1
		constexpr auto m_bRewardClaimedToday = 0x234; // uint32_t : 1
		constexpr auto m_bDayHasRolledOver = 0x234; // uint32_t : 1
		constexpr auto m_bHasQuestProgress = 0x234; // uint32_t : 1
		constexpr auto m_bHasQuestActivities = 0x234; // uint32_t : 1
		constexpr auto m_bHasQuestRewards = 0x234; // uint32_t : 1
		constexpr auto m_bFirstSpecialEventUpdate = 0x234; // uint32_t : 1
		constexpr auto m_bFirstItemQuestUpdate = 0x234; // uint32_t : 1
		constexpr auto m_nConsecutiveRewardDays = 0x238; // int32_t
		constexpr auto m_nLengthOfDay = 0x23c; // int32_t
		constexpr auto m_fTimeTillNextDay = 0x240; // float
		constexpr auto m_fTimeTillNextMonth = 0x244; // float
		constexpr auto m_dwLastLoreQuestGoal = 0x248; // Fdword
		constexpr auto m_nPlayerLevel = 0x24c; // int32_t
		constexpr auto m_pChallengeSystemData = 0x250; // ObjectProperty
	}

	namespace n_UUIComponent_ItemDisplay { // : UUIComponent_Display
		constexpr auto m_pRarityText = 0x124; // ObjectProperty
		constexpr auto m_pTitle = 0x12c; // ObjectProperty
		constexpr auto m_pChest = 0x134; // ObjectProperty
		constexpr auto m_pIcon = 0x13c; // ObjectProperty
		constexpr auto m_pRarityFrame = 0x144; // ObjectProperty
		constexpr auto m_pCard = 0x14c; // ObjectProperty
		constexpr auto m_pItem = 0x154; // ObjectProperty
		constexpr auto m_pChestQuantity = 0x15c; // ObjectProperty
	}

	namespace n_AMobileHUD { // : AHUD
		constexpr auto bShowGameHud = 0x5a0; // uint32_t : 1
		constexpr auto bShowMobileHud = 0x5a0; // uint32_t : 1
		constexpr auto bForceMobileHUD = 0x5a0; // uint32_t : 1
		constexpr auto bShowMobileTilt = 0x5a0; // uint32_t : 1
		constexpr auto bDebugTouches = 0x5a0; // uint32_t : 1
		constexpr auto bDebugZones = 0x5a0; // uint32_t : 1
		constexpr auto bDebugZonePresses = 0x5a0; // uint32_t : 1
		constexpr auto bShowMotionDebug = 0x5a0; // uint32_t : 1
		constexpr auto JoystickBackground = 0x5a4; // ObjectProperty
		constexpr auto JoystickBackgroundUVs = 0x5ac; // FTextureUVs
		constexpr auto JoystickHat = 0x5bc; // ObjectProperty
		constexpr auto JoystickHatUVs = 0x5c4; // FTextureUVs
		constexpr auto ButtonImages = 0x5d4; // ObjectProperty [0x2]
		constexpr auto ButtonUVs = 0x5e4; // FTextureUVs [0x2]
		constexpr auto ButtonFont = 0x604; // ObjectProperty
		constexpr auto ButtonCaptionColor = 0x60c; // FColor
		constexpr auto TrackballBackground = 0x610; // ObjectProperty
		constexpr auto TrackballBackgroundUVs = 0x618; // FTextureUVs
		constexpr auto TrackballTouchIndicator = 0x628; // ObjectProperty
		constexpr auto TrackballTouchIndicatorUVs = 0x630; // FTextureUVs
		constexpr auto SliderImages = 0x640; // ObjectProperty [0x4]
		constexpr auto SliderUVs = 0x660; // FTextureUVs [0x4]
		constexpr auto MobileTiltX = 0x6a0; // float
		constexpr auto MobileTiltY = 0x6a4; // float
		constexpr auto MobileTiltSize = 0x6a8; // float
		constexpr auto KismetRenderEvents = 0x6ac; // TArray<ObjectProperty>
	}

	namespace n_ATgPawn_Tower_FA { // : ATgPawn_Tower
		constexpr auto m_TowerType = 0x2f2c; // ETowerType
		constexpr auto r_InitialOrientation = 0x2f30; // FRotator
		constexpr auto c_AimVisibilityMesh = 0x2f3c; // ComponentProperty
	}

	namespace n_ATgGame { // : AFrameworkGame
		constexpr auto m_ContentPackageReference = 0x4dc; // UObject*
		constexpr auto m_GameWinState = 0x4e4; // GAME_WIN_STATE
		constexpr auto m_GameType = 0x4e5; // TG_GAME_TYPE
		constexpr auto m_fSpawnProtectionTime = 0x4e8; // float
		constexpr auto m_fMaxRepawnTime = 0x4ec; // float
		constexpr auto m_fUnpauseCountdownRemaining = 0x4f0; // float
		constexpr auto s_nBotPlayerCount = 0x4f4; // int32_t
		constexpr auto s_bSpawnOfflinePawns = 0x4f8; // uint32_t : 1
		constexpr auto s_bGameInitialized = 0x4f8; // uint32_t : 1
		constexpr auto s_bEACMatchStartSent = 0x4f8; // uint32_t : 1
		constexpr auto s_bGameEndMissionProcessed = 0x4f8; // uint32_t : 1
		constexpr auto s_bMissionSealed = 0x4f8; // uint32_t : 1
		constexpr auto m_bForceUsePRISpawnPoint = 0x4f8; // uint32_t : 1
		constexpr auto m_bRewardCalculated = 0x4f8; // uint32_t : 1
		constexpr auto m_bStatsCanTie = 0x4f8; // uint32_t : 1
		constexpr auto m_bStatsIsSymmetric = 0x4f8; // uint32_t : 1
		constexpr auto m_bIsTutorialGametype = 0x4f8; // uint32_t : 1
		constexpr auto m_bIsPracticeGametype = 0x4f8; // uint32_t : 1
		constexpr auto m_bEnableHeadShots = 0x4f8; // uint32_t : 1
		constexpr auto m_bPlayOfTheGameLocked = 0x4f8; // uint32_t : 1
		constexpr auto m_bPlayOfTheGameDisabled = 0x4f8; // uint32_t : 1
		constexpr auto m_bSpawnDisconnectedPlayersStunned = 0x4f8; // uint32_t : 1
		constexpr auto m_bPlayersCanOnlyDieOnce = 0x4f8; // uint32_t : 1
		constexpr auto m_bUseKillEmotes = 0x4f8; // uint32_t : 1
		constexpr auto m_bNotifyKillCombos = 0x4f8; // uint32_t : 1
		constexpr auto m_bFirstBloodAwarded = 0x4f8; // uint32_t : 1
		constexpr auto m_nNumTaskForces = 0x4fc; // int32_t
		constexpr auto s_nNextActorInstanceId = 0x500; // int32_t
		constexpr auto s_nNextProjectileInstanceId = 0x504; // int32_t
		constexpr auto s_AIVolumes = 0x508; // TArray<ObjectProperty>
		constexpr auto s_Taskforce1AIVolumesIndices = 0x518; // TArray<int32_t>
		constexpr auto s_Taskforce2AIVolumesIndices = 0x528; // TArray<int32_t>
		constexpr auto s_FortressVolumes = 0x538; // TArray<ObjectProperty>
		constexpr auto s_AIAnnotations = 0x548; // TMap<None, None>
		constexpr auto s_DeviceVolumes = 0x590; // TArray<ObjectProperty>
		constexpr auto s_ActorFactories = 0x5a0; // TArray<ObjectProperty>
		constexpr auto s_fXPModifier = 0x5b0; // float
		constexpr auto m_nTaskforce1Kills = 0x5b4; // int32_t
		constexpr auto m_nTaskforce2Kills = 0x5b8; // int32_t
		constexpr auto m_fGlobalCooldownTime = 0x5bc; // float
		constexpr auto m_ClientLogins = 0x5c0; // TArray<int32_t>
		constexpr auto m_fOcclusionCalcPeriod = 0x5d0; // float
		constexpr auto m_fOcclusionMaxDeviation = 0x5d4; // float
		constexpr auto m_fReadyPercent = 0x5d8; // float
		constexpr auto m_PlayOfTheGame = 0x5dc; // FPlayOfTheGameInfo
		constexpr auto m_fPlayOfTheGameLength = 0x5e8; // float
		constexpr auto m_fPlayOfTheGameIntroBufferLength = 0x5ec; // float
		constexpr auto m_fPlayOfTheGameOuttroBufferLength = 0x5f0; // float
		constexpr auto m_PlayOfTheGameEventConfigs = 0x5f4; // TArray<FPlayOfTheGameEventConfig>
		constexpr auto m_PlayerSpawnExits = 0x604; // TArray<ObjectProperty>
		constexpr auto m_ReadyPlayers = 0x614; // TArray<ObjectProperty>
	}

	namespace n_UTgDeviceForm_AzaanDash { // : UTgDeviceForm
		constexpr auto m_AzaanNodes1p = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_nLastPosture = 0x29c; // int32_t
		constexpr auto m_Target = 0x2a0; // ObjectProperty
	}

	namespace n_UTgSeqAct_FadeIn { // : USequenceAction
		constexpr auto m_fDuration = 0x108; // float
	}

	namespace n_UTgInvListener_CooledMags { // : UTgInvListener
		constexpr auto m_CachedOwlPawn = 0xc4; // ObjectProperty
		constexpr auto m_CachedSidearm = 0xcc; // ObjectProperty
		constexpr auto m_CachedInhand = 0xd4; // ObjectProperty
		constexpr auto m_fAmmoFillTime = 0xdc; // float
	}

	namespace n_USeqAct_AkSetRTPCValue { // : USeqAct_Latent
		constexpr auto Param = 0x120; // FString
		constexpr auto Value = 0x130; // float
		constexpr auto Running = 0x134; // uint32_t : 1
	}

	namespace n_UUIComponent_TitleTooltip { // : UUIComponent_Display
		constexpr auto m_mcIcon = 0x124; // ObjectProperty
		constexpr auto m_mcDescription = 0x12c; // ObjectProperty
		constexpr auto m_nLastSetItemID = 0x134; // int32_t
		constexpr auto m_fTooltipShowDelay = 0x138; // float
	}

	namespace n_UUIScene_UIHudBurns { // : UUIScene
		constexpr auto m_BurnCardGroup = 0x1cc; // ObjectProperty
		constexpr auto m_mcItemsVer2 = 0x1d4; // ObjectProperty
		constexpr auto m_Cards = 0x1dc; // ObjectProperty
		constexpr auto m_CardPurchasePreview = 0x1e4; // ObjectProperty
		constexpr auto m_mcTitle = 0x1ec; // ObjectProperty
		constexpr auto m_Back = 0x1f4; // ObjectProperty
		constexpr auto m_Confirm = 0x1fc; // ObjectProperty
		constexpr auto m_Undo = 0x204; // ObjectProperty
		constexpr auto m_LTIPurchaseStack = 0x20c; // TArray<ObjectProperty>
		constexpr auto m_SelectedLTI = 0x21c; // ObjectProperty
		constexpr auto m_CreditsEarned = 0x224; // ObjectProperty
		constexpr auto m_mcCreditBarText = 0x22c; // ObjectProperty
		constexpr auto m_mcTooltip = 0x234; // ObjectProperty
		constexpr auto m_mcTooltipText = 0x23c; // ObjectProperty
		constexpr auto m_fUpdateDelay = 0x244; // float
		constexpr auto m_fUpdatePeriod = 0x248; // float
		constexpr auto m_nItemPreviewIndex = 0x24c; // int32_t
		constexpr auto m_pLastLTIClicked = 0x250; // ObjectProperty
		constexpr auto m_fCardSelectDoubleClickWindow = 0x258; // float
		constexpr auto m_fCardSelectDoubleClickTime = 0x25c; // float
	}

	namespace n_UTgIconGroup { // : UObject
		constexpr auto m_Manager = 0x60; // ObjectProperty
		constexpr auto m_DataItem = 0x68; // ObjectProperty
		constexpr auto m_bLoadByItemType = 0x70; // uint32_t : 1
		constexpr auto m_ManifestGroup = 0x74; // ObjectProperty
		constexpr auto m_TextureObjects = 0x7c; // FMap_Mirror
	}

	namespace n_UApexGenericAsset { // : UApexAsset
		constexpr auto MApexAsset = 0x80; // FPointer
	}

	namespace n_USoundNodeConcatenator { // : USoundNode
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_UMultiProviderAnalytics { // : UAnalyticEventsBase
		constexpr auto AnalyticsProviderClassNames = 0x98; // TArray<FString>
		constexpr auto AnalyticsProviders = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_StringTitle { // : UUIComponent_String
		constexpr auto m_mcText = 0x124; // ObjectProperty
	}

	namespace n_AKActorSpawnable { // : AKActor
		constexpr auto bRecycleScaleToZero = 0x3b4; // uint32_t : 1
		constexpr auto bScalingToZero = 0x3b4; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_ActiveDuringAbility_WhileOutOfCombat { // : UTgInventoryObject_Listen_ActiveDuringAbility
		constexpr auto m_bPawnInCombat = 0xd4; // uint32_t : 1
	}

	namespace n_UTgDeviceFire_RestoreSoul { // : UTgDeviceFire
		constexpr auto m_fServerRangeBufferMult = 0x268; // float
		constexpr auto m_fBaseEncroachmentActorRange = 0x26c; // float
	}

	namespace n_UTgSeqAct_DisplaySlamText { // : USequenceAction
		constexpr auto m_nMessageId = 0x108; // int32_t
	}

	namespace n_UInputContext { // : UObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_SuperContext = 0x68; // ObjectProperty
		constexpr auto m_SubContextStack = 0x70; // TArray<ObjectProperty>
		constexpr auto m_bPassInputToNextContext = 0x80; // uint32_t : 1
		constexpr auto m_bBlockGlobalContext = 0x80; // uint32_t : 1
		constexpr auto m_InputActions = 0x84; // TArray<ObjectProperty>
		constexpr auto m_CallbackContainer = 0x94; // ObjectProperty
	}

	namespace n_AWebServer { // : ATcpLink
		constexpr auto ServerName = 0x2e4; // FString
		constexpr auto Applications = 0x2f4; // FString [0xa]
		constexpr auto ApplicationPaths = 0x394; // FString [0xa]
		constexpr auto bEnabled = 0x434; // uint32_t : 1
		constexpr auto ListenPort = 0x438; // int32_t
		constexpr auto MaxConnections = 0x43c; // int32_t
		constexpr auto DefaultApplication = 0x440; // int32_t
		constexpr auto ExpirationSeconds = 0x444; // int32_t
		constexpr auto ServerURL = 0x448; // FString
		constexpr auto ApplicationObjects = 0x458; // ObjectProperty [0xa]
		constexpr auto ConnectionCount = 0x4a8; // int32_t
		constexpr auto ConnID = 0x4ac; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_GaleStorm { // : UTgInvListener
		constexpr auto m_CachedRestoreStaminaDevice = 0xc4; // ObjectProperty
		constexpr auto m_CachedNinjaRMB2 = 0xcc; // ObjectProperty
	}

	namespace n_UTgSeqCond_HasCondition { // : USequenceCondition
		constexpr auto ConditionList = 0xec; // ConditionType
	}

	namespace n_UTgDeviceForm_Pursuit { // : UTgDeviceForm
		constexpr auto m_CachedLex = 0x28c; // ObjectProperty
		constexpr auto m_LeftSlideSkelControlName1P = 0x294; // FName
		constexpr auto m_RightSlideSkelControlName1P = 0x29c; // FName
		constexpr auto m_LeftSlideSkelControlName3P = 0x2a4; // FName
		constexpr auto m_RightSlideSkelControlName3P = 0x2ac; // FName
		constexpr auto m_LeftSlideSkelControl1P = 0x2b4; // ObjectProperty
		constexpr auto m_RightSlideSkelControl1P = 0x2bc; // ObjectProperty
		constexpr auto m_LeftSlideSkelControl3P = 0x2c4; // ObjectProperty
		constexpr auto m_RightSlideSkelControl3P = 0x2cc; // ObjectProperty
		constexpr auto c_fPreviousLeftSlideStrength = 0x2d4; // float
		constexpr auto c_fPreviousRightSlideStrength = 0x2d8; // float
		constexpr auto m_bCachedDualFireParity = 0x2dc; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_DeviceIsFiring { // : UTgAIBehaviorCondition
		constexpr auto DeviceSlot = 0x98; // TG_EQUIP_POINT
	}

	namespace n_UInterpGroupAI { // : UInterpGroup
		constexpr auto StageMarkGroup = 0x98; // FName
		constexpr auto SnapToRootBoneLocationWhenFinished = 0xa0; // uint32_t : 1
		constexpr auto bNoEncroachmentCheck = 0xa0; // uint32_t : 1
		constexpr auto bDisableWorldCollision = 0xa0; // uint32_t : 1
		constexpr auto bIgnoreLegacyHeightAdjust = 0xa0; // uint32_t : 1
		constexpr auto bRecreatePreviewPawn = 0xa0; // uint32_t : 1
		constexpr auto bRefreshStageMarkGroup = 0xa0; // uint32_t : 1
	}

	namespace n_UGFxAction_CloseMovie { // : USequenceAction
		constexpr auto Movie = 0x108; // ObjectProperty
		constexpr auto bUnload = 0x110; // uint32_t : 1
	}

	namespace n_ATgPawn_VoodooTotem { // : ATgPawn_Pet
		constexpr auto r_linkedEnemies = 0x2efc; // ObjectProperty [0x5]
		constexpr auto nBreakDist = 0x2f24; // int32_t
		constexpr auto m_nBeamFXID = 0x2f28; // int32_t
		constexpr auto m_BeamFXs = 0x2f2c; // ObjectProperty [0x5]
		constexpr auto fDamageAmount = 0x2f54; // float
	}

	namespace n_UPComOpenBroadcaster { // : UObject
		constexpr auto VfTable_FCallbackEventDevice = 0x60; // FPointer
		constexpr auto FacebookAppId = 0x68; // FString
		constexpr auto FacebookApprovedDomain = 0x78; // FString
		constexpr auto FacebookLiveUrl = 0x88; // FString
		constexpr auto CurrentState = 0x98; // EPComOpenBroadcasterState
		constexpr auto CurrentSettings = 0x9c; // FPComOpenBroadcasterSettings
		constexpr auto StreamerProcessHandle = 0xa0; // FPointer
		constexpr auto __PreloadWebBrowser__Delegate = 0xa8; // DelegateProperty
		constexpr auto __IsWebBrowserLoaded__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OpenWebBrowser__Delegate = 0xc8; // DelegateProperty
		constexpr auto __CloseWebBrowser__Delegate = 0xd8; // DelegateProperty
	}

	namespace n_UTgGfxCursor { // : UTgGfxScene
		constexpr auto m_mcIcon = 0x1ec; // ObjectProperty
	}

	namespace n_UAnimNodePlayCustomAnim { // : UAnimNodeBlend
		constexpr auto bIsPlayingCustomAnim = 0x124; // uint32_t : 1
		constexpr auto CustomPendingBlendOutTime = 0x128; // float
	}

	namespace n_UTgAnimNodeStanceFireIntercept { // : UTgAnimNodeBlendList
		constexpr auto m_nStanceToAllow = 0x168; // int32_t
		constexpr auto m_nCurrentStance = 0x16c; // int32_t
	}

	namespace n_UTgAnimNodeSequence_SyncToCooldown { // : UTgAnimNodeSequence
		constexpr auto m_EqpPoint = 0x1bc; // TG_EQUIP_POINT
		constexpr auto m_fMaxPlayRate = 0x1c0; // float
		constexpr auto m_fPlayRateWaitForCooldown = 0x1c4; // float
		constexpr auto m_fPctStartWaitForCooldown = 0x1c8; // float
		constexpr auto fCooldownEndTime = 0x1cc; // float
		constexpr auto bWaitForCooldown = 0x1d0; // uint32_t : 1
	}

	namespace n_UMaterialExpressionSubtract { // : UMaterialExpression
		constexpr auto A = 0xb0; // FExpressionInput
		constexpr auto B = 0xe4; // FExpressionInput
	}

	namespace n_ASoundComponentPool { // : AActor
		constexpr auto PoolSounds = 0x280; // TArray<ComponentProperty>
		constexpr auto ActiveSounds = 0x290; // TArray<ComponentProperty>
		constexpr auto StartingNumComponents = 0x2a0; // int32_t
	}

	namespace n_UTgSeqAct_GiveCredits { // : USequenceAction
		constexpr auto CreditsToGive = 0x108; // int32_t
	}

	namespace n_UTgAILocalPositionSolver { // : UObject
		constexpr auto VfTable_IInterface_ActorPathConstraints = 0x60; // FPointer
		constexpr auto DefaultWeights = 0x68; // TArray<FDefaultRepulsorData>
		constexpr auto OuterController = 0x78; // ObjectProperty
		constexpr auto LastQueryTime = 0x80; // float
		constexpr auto LastQueryPoint = 0x84; // FVector
		constexpr auto LastSolvePoint = 0x90; // FVector
		constexpr auto bSolveDistanceThreshold = 0x9c; // uint32_t : 1
		constexpr auto bSolveWeights = 0x9c; // uint32_t : 1
	}

	namespace n_UTgSeqCond_CompareDeviceId { // : USequenceCondition
		constexpr auto Device = 0xec; // ObjectProperty
		constexpr auto DeviceID = 0xf4; // int32_t
	}

	namespace n_UUIComponent_MatchPlayerEntry { // : UUIComponent_Display
		constexpr auto m_mcEndCap = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
		constexpr auto m_pPlayerName = 0x13c; // ObjectProperty
		constexpr auto m_pCrossPlayIcon = 0x144; // ObjectProperty
		constexpr auto m_mcTitle = 0x14c; // ObjectProperty
		constexpr auto m_mcBuild = 0x154; // ObjectProperty
		constexpr auto m_mcBuild_Stat = 0x15c; // ObjectProperty [0x2]
		constexpr auto m_mcBuild_Talent = 0x16c; // ObjectProperty
		constexpr auto m_pBuild_TalentIcon = 0x174; // ObjectProperty
		constexpr auto m_mcBuild_Passive = 0x17c; // ObjectProperty
		constexpr auto m_pBuild_PassiveIcon = 0x184; // ObjectProperty
		constexpr auto m_mcBooster0 = 0x18c; // ObjectProperty
		constexpr auto m_mcBooster0Tex = 0x194; // ObjectProperty
		constexpr auto m_mcBooster1 = 0x19c; // ObjectProperty
		constexpr auto m_mcBooster1Tex = 0x1a4; // ObjectProperty
		constexpr auto m_Cards = 0x1ac; // ObjectProperty [0x5]
		constexpr auto m_CardButtons = 0x1d4; // ObjectProperty [0x5]
		constexpr auto m_Items = 0x1fc; // ObjectProperty [0x4]
		constexpr auto m_ItemButtons = 0x21c; // ObjectProperty [0x4]
		constexpr auto m_mcStatsDetails = 0x23c; // ObjectProperty
		constexpr auto m_mcStatsDetails_Stat = 0x244; // ObjectProperty [0x7]
		constexpr auto m_TalentButton = 0x27c; // ObjectProperty
		constexpr auto m_PassiveButton = 0x284; // ObjectProperty
		constexpr auto m_FrameButton = 0x28c; // ObjectProperty
		constexpr auto m_ReportButton = 0x294; // ObjectProperty
		constexpr auto m_ImportButton = 0x29c; // ObjectProperty
		constexpr auto m_AddButton = 0x2a4; // ObjectProperty
		constexpr auto m_GiftButton = 0x2ac; // ObjectProperty
		constexpr auto m_pTooltip = 0x2b4; // ObjectProperty
		constexpr auto m_bCanReport = 0x2bc; // uint32_t : 1
	}

	namespace n_UUIFacebookLiveIndicator { // : UTgGfxScene
		constexpr auto m_mcLive = 0x1ec; // ObjectProperty
		constexpr auto m_mcIcon = 0x1f4; // ObjectProperty
		constexpr auto m_bIsLive = 0x1fc; // uint32_t : 1
	}

	namespace n_USeqAct_Gate { // : USequenceAction
		constexpr auto bOpen = 0x108; // uint32_t : 1
		constexpr auto AutoCloseCount = 0x10c; // int32_t
		constexpr auto CurrentCloseCount = 0x110; // int32_t
	}

	namespace n_ULightmassLevelSettings { // : UObject
		constexpr auto NumIndirectLightingBounces = 0x60; // int32_t
		constexpr auto EnvironmentColor = 0x64; // FColor
		constexpr auto EnvironmentIntensity = 0x68; // float
		constexpr auto EmissiveBoost = 0x6c; // float
		constexpr auto DiffuseBoost = 0x70; // float
		constexpr auto SpecularBoost = 0x74; // float
		constexpr auto bUseAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto bVisualizeAmbientOcclusion = 0x78; // uint32_t : 1
		constexpr auto DirectIlluminationOcclusionFraction = 0x7c; // float
		constexpr auto IndirectIlluminationOcclusionFraction = 0x80; // float
		constexpr auto OcclusionExponent = 0x84; // float
		constexpr auto FullyOccludedSamplesFraction = 0x88; // float
		constexpr auto MaxOcclusionDistance = 0x8c; // float
	}

	namespace n_UInteraction { // : UUIRoot
		constexpr auto __OnReceivedNativeInputKey__Delegate = 0x70; // DelegateProperty
		constexpr auto __OnReceivedNativeInputAxis__Delegate = 0x80; // DelegateProperty
		constexpr auto __OnReceivedNativeInputChar__Delegate = 0x90; // DelegateProperty
		constexpr auto __OnInitialize__Delegate = 0xa0; // DelegateProperty
	}

	namespace n_USeqAct_AddFloat { // : USeqAct_SetSequenceVariable
		constexpr auto ValueA = 0x108; // float
		constexpr auto ValueB = 0x10c; // float
		constexpr auto FloatResult = 0x110; // float
		constexpr auto IntResult = 0x114; // int32_t
	}

	namespace n_ATgDevice_Hustle { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_fMinSprintSpeedSq = 0xa10; // float
		constexpr auto m_fAllowableSprintAngle = 0xa14; // float
		constexpr auto m_fSprintFailSafetyTime = 0xa18; // float
		constexpr auto m_fSprintFailTimeAccumulator = 0xa1c; // float
	}

	namespace n_ATgPawn_Illusion { // : ATgPawn_Ying
		constexpr auto VfTable_ITgInterface_YingIllusion = 0x31a0; // FPointer
		constexpr auto m_eAIState = 0x31a8; // EDecoyAIState
		constexpr auto r_eLifelike = 0x31a9; // INITIALIZEABLE_BOOL
		constexpr auto m_fDamageScale = 0x31ac; // float
		constexpr auto m_fDamageAccumulator = 0x31b0; // float
		constexpr auto m_fDamageAccumulatorReductionRatePerSec = 0x31b4; // float
		constexpr auto m_fFlickerDamageMin = 0x31b8; // float
		constexpr auto m_fFlickerDamageMax = 0x31bc; // float
		constexpr auto m_fDamageAccumulatorCap = 0x31c0; // float
		constexpr auto m_fPrevFrameHealth = 0x31c4; // float
		constexpr auto m_fTimedDestroyedFXDuration = 0x31c8; // float
		constexpr auto m_fTimedDestroyedFXMeshHiddenTime = 0x31cc; // float
		constexpr auto m_fEarlyShatterRecheckTime = 0x31d0; // float
		constexpr auto m_bCanShatterEarly = 0x31d4; // uint32_t : 1
		constexpr auto m_bUsingReplacementMIC = 0x31d4; // uint32_t : 1
		constexpr auto m_bSpringBloomFlag = 0x31d4; // uint32_t : 1
		constexpr auto c_BeamsCreated = 0x31d4; // uint32_t : 1
		constexpr auto r_fShatterDelay = 0x31d8; // float
		constexpr auto m_CachedShatterDevice = 0x31dc; // ObjectProperty
		constexpr auto s_OnDeathDelegates = 0x31e4; // TArray<DelegateProperty>
		constexpr auto r_Targets = 0x31f4; // ObjectProperty [0x2]
		constexpr auto c_Beams = 0x3204; // TArray<ObjectProperty>
		constexpr auto r_nBeamSpawnIterator = 0x3214; // int32_t
		constexpr auto __DestroyedEvent__Delegate = 0x3218; // DelegateProperty
	}

	namespace n_ATgDeviceVolume { // : AVolume
		constexpr auto bPainCausing = 0x2bc; // uint32_t : 1
		constexpr auto BACKUP_bPainCausing = 0x2bc; // uint32_t : 1
		constexpr auto s_bDeviceActive = 0x2bc; // uint32_t : 1
		constexpr auto PainTimer = 0x2c0; // ObjectProperty
		constexpr auto DamageInstigator = 0x2c8; // ObjectProperty
		constexpr auto m_nMapObjectId = 0x2d0; // int32_t
		constexpr auto s_nDeviceId = 0x2d4; // int32_t
		constexpr auto s_DeviceFireMode = 0x2d8; // ObjectProperty
		constexpr auto s_nTaskForce = 0x2e0; // char
	}

	namespace n_UTgAIUtilityFilter_LoSToTargetLastKnownLocation { // : UTgAIUtilityFilter
		constexpr auto bInverse = 0xc0; // uint32_t : 1
	}

	namespace n_UOnlineVoiceInterfacePC { // : UObject
		constexpr auto OwningSubsystem = 0x60; // FPointer
		constexpr auto VoiceEnginePtr = 0x68; // FPointer
		constexpr auto CurrentLocalTalker = 0x70; // FLocalTalkerPC
		constexpr auto RemoteTalkers = 0x78; // TArray<FRemoteTalker>
		constexpr auto MuteList = 0x88; // TArray<FUniqueNetId>
		constexpr auto SpeechRecognitionCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto TalkingDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto __OnPlayerTalkingStateChange__Delegate = 0xb8; // DelegateProperty
		constexpr auto __OnRecognitionComplete__Delegate = 0xc8; // DelegateProperty
	}

	namespace n_ATgDevice_WallClimb { // : ATgDevice
		constexpr auto m_CachedKoga = 0xa08; // ObjectProperty
		constexpr auto m_vWallSimilarityTestNormal = 0xa10; // FVector
		constexpr auto m_vCurrentWallClimbNormal = 0xa1c; // FVector
		constexpr auto m_bIsWallClimbing = 0xa28; // uint32_t : 1
		constexpr auto r_bWantsWallClimb = 0xa28; // uint32_t : 1
		constexpr auto m_bRequiresBaseable = 0xa28; // uint32_t : 1
		constexpr auto m_bRequiresStepUpOn = 0xa28; // uint32_t : 1
		constexpr auto m_bHitStepUpOn = 0xa28; // uint32_t : 1
		constexpr auto m_bHitCanBase = 0xa28; // uint32_t : 1
		constexpr auto m_bHitWorldGeometry = 0xa28; // uint32_t : 1
		constexpr auto m_bGeometryTestResult = 0xa28; // uint32_t : 1
		constexpr auto m_fWallMagnetMovePerSec = 0xa2c; // float
		constexpr auto m_fWallClimbVertOffset = 0xa30; // float
		constexpr auto m_fWallNormalSimilarityThreshold = 0xa34; // float
		constexpr auto m_fAngularThreshold = 0xa38; // float
		constexpr auto m_fVelocityThreshold = 0xa3c; // float
		constexpr auto m_fWallClimbSpeed = 0xa40; // float
		constexpr auto m_fWallGeometryNormalOffset = 0xa44; // float
		constexpr auto m_fPostAbortLockout = 0xa48; // float
		constexpr auto m_fMaxWallClimbTime = 0xa4c; // float
		constexpr auto m_fGeometryTestPeriod = 0xa50; // float
		constexpr auto m_fWallClimbLockoutJumpVelocity = 0xa54; // float
		constexpr auto m_fWallJumpZSpeed = 0xa58; // float
		constexpr auto m_fWallClimbTime = 0xa5c; // float
	}

	namespace n_ATgDevice_SelfResurrection { // : ATgDevice
		constexpr auto m_bFiringLockout = 0xa08; // uint32_t : 1
	}

	namespace n_UTgSeqAct_GetTaskForceCount { // : USequenceAction
		constexpr auto Taskforce = 0x108; // int32_t
		constexpr auto m_nPlayerCount = 0x10c; // int32_t
		constexpr auto m_nBotCount = 0x110; // int32_t
	}

	namespace n_UOnlineImageDownloaderWeb { // : UObject
		constexpr auto DownloadImages = 0x60; // TArray<FOnlineImageDownload>
		constexpr auto MaxSimultaneousDownloads = 0x70; // int32_t
		constexpr auto __OnOnlineImageDownloaded__Delegate = 0x74; // DelegateProperty
	}

	namespace n_ATgPawn_LanePusherRace { // : ATgPawn_LanePusherBase
		constexpr auto s_fTotalSplineLength = 0x3028; // float
		constexpr auto s_fPreviousSplineLength = 0x302c; // float
		constexpr auto r_fProgressPercent = 0x3030; // float
	}

	namespace n_UUIComponent_EventChallengeHub { // : UUIComponent_Display
		constexpr auto m_pChallengeList = 0x124; // ObjectProperty
		constexpr auto m_pLockInHoldPrompt = 0x12c; // ObjectProperty
		constexpr auto m_mcLore = 0x134; // ObjectProperty
		constexpr auto m_mcLoreTitle = 0x13c; // ObjectProperty
		constexpr auto m_mcLoreText = 0x144; // ObjectProperty
		constexpr auto m_mcHubIcon = 0x14c; // ObjectProperty
		constexpr auto m_mcHubName = 0x154; // ObjectProperty
		constexpr auto m_mcCompleteFor = 0x15c; // ObjectProperty
		constexpr auto m_pProgress = 0x164; // ObjectProperty
		constexpr auto m_mcProgressText = 0x16c; // ObjectProperty
		constexpr auto m_pPurchase = 0x174; // ObjectProperty
		constexpr auto m_pPurchaseText = 0x17c; // ObjectProperty
		constexpr auto m_pLTI = 0x184; // ObjectProperty
		constexpr auto m_pIcon = 0x18c; // ObjectProperty
		constexpr auto m_mcDeathCard = 0x194; // ObjectProperty
		constexpr auto m_mcFrame = 0x19c; // ObjectProperty
		constexpr auto m_mcCheck = 0x1a4; // ObjectProperty
		constexpr auto m_mcScroll = 0x1ac; // ObjectProperty
		constexpr auto m_PurchaseInputGroup = 0x1b4; // ObjectProperty
	}

	namespace n_UAnimNotify_Kismet { // : UAnimNotify
		constexpr auto NotifyName = 0x68; // FName
	}

	namespace n_UUIComponent_HudScoreHH_Climb { // : UUIComponent_Display
		constexpr auto m_mcMcGuffin = 0x124; // ObjectProperty
		constexpr auto m_mcDamage = 0x12c; // ObjectProperty
		constexpr auto m_mcHealthBar = 0x134; // ObjectProperty
		constexpr auto m_mcHealthBarTF = 0x13c; // ObjectProperty
		constexpr auto m_mcHealthBarBar = 0x144; // ObjectProperty
		constexpr auto m_mcHealthBarFill = 0x14c; // ObjectProperty
		constexpr auto m_mcHealthBarFillB = 0x154; // ObjectProperty
		constexpr auto m_mcScoreA = 0x15c; // ObjectProperty
		constexpr auto m_mcScoreB = 0x164; // ObjectProperty
		constexpr auto m_mcProgressA = 0x16c; // ObjectProperty
		constexpr auto m_mcProgressABar = 0x174; // ObjectProperty
		constexpr auto m_mcProgressAFill = 0x17c; // ObjectProperty
		constexpr auto m_mcProgressB = 0x184; // ObjectProperty
		constexpr auto m_mcProgressBBar = 0x18c; // ObjectProperty
		constexpr auto m_mcProgressBFill = 0x194; // ObjectProperty
	}

	namespace n_UUIScene_UILobbyBoosterActivation { // : UUIScene
		constexpr auto m_fDisplayTimer = 0x1cc; // float
		constexpr auto m_akMatchBoosterOnShow = 0x1d0; // ObjectProperty
		constexpr auto m_akMatchBoosterOnHide = 0x1d8; // ObjectProperty
	}

	namespace n_UUIComponent_DLCPack { // : UUIComponent_Display
		constexpr auto m_mcDetail = 0x124; // TArray<ObjectProperty>
		constexpr auto m_mcNew = 0x134; // ObjectProperty
		constexpr auto m_mcTitle = 0x13c; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x144; // ObjectProperty
		constexpr auto m_mcPrice = 0x14c; // ObjectProperty
		constexpr auto m_mcConsolePrice = 0x154; // ObjectProperty
		constexpr auto m_mcDollars = 0x15c; // ObjectProperty
		constexpr auto m_mcCents = 0x164; // ObjectProperty
		constexpr auto m_mcCurrency = 0x16c; // ObjectProperty
		constexpr auto m_mcOneTimePurchase = 0x174; // ObjectProperty
		constexpr auto m_mcBuyNowText = 0x17c; // ObjectProperty
		constexpr auto m_mcRefund = 0x184; // ObjectProperty
		constexpr auto m_mcRefundCurrency = 0x18c; // ObjectProperty
		constexpr auto m_mcSaleBanner = 0x194; // ObjectProperty
		constexpr auto m_mcDLCTexture = 0x19c; // ObjectProperty
		constexpr auto m_mcPanelButton = 0x1a4; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x1ac; // ObjectProperty
		constexpr auto m_pRealMoneyPrice = 0x1b4; // ObjectProperty
		constexpr auto m_pCrystalPrice = 0x1bc; // ObjectProperty
		constexpr auto m_pPurchaseButtonNew = 0x1c4; // ObjectProperty
		constexpr auto m_mcGamepadPrompt = 0x1cc; // ObjectProperty
		constexpr auto m_eTextureSize = 0x1d4; // AdTextureSize
		constexpr auto m_bIsPortrait = 0x1d8; // uint32_t : 1
		constexpr auto m_bIsPanelButton = 0x1d8; // uint32_t : 1
		constexpr auto m_bScaleOnRollover = 0x1d8; // uint32_t : 1
		constexpr auto m_bShowDetailsOnSelect = 0x1d8; // uint32_t : 1
		constexpr auto m_nPackId = 0x1dc; // int32_t
		constexpr auto m_sPackPrefix = 0x1e0; // FString
		constexpr auto m_sGamepadBuyKey = 0x1f0; // FName
	}

	namespace n_UMaterialExpressionDynamicParameter { // : UMaterialExpression
		constexpr auto ParamNames = 0xb0; // TArray<FString>
	}

	namespace n_ATgPawn_Drogoz { // : ATgPawn_Character
		constexpr auto m_bIsInBooster = 0x3164; // uint32_t : 1
		constexpr auto m_bDragonSlamIsBlocking = 0x3164; // uint32_t : 1
		constexpr auto m_bDragonSlamHasHit = 0x3164; // uint32_t : 1
		constexpr auto m_bUseDragonSlamRetrieve = 0x3164; // uint32_t : 1
		constexpr auto m_bInBoosterLockout = 0x3164; // uint32_t : 1
		constexpr auto r_bSalvoActiveFlag = 0x3164; // uint32_t : 1
		constexpr auto r_bCombustibleActive = 0x3164; // uint32_t : 1
		constexpr auto m_bBoosterUseConstantSpeedReduction = 0x3164; // uint32_t : 1
		constexpr auto m_fCurrentBoosterSpeed = 0x3168; // float
		constexpr auto m_fBoosterEndTime = 0x316c; // float
		constexpr auto m_CachedBoosterDevice = 0x3170; // ObjectProperty
		constexpr auto m_fBoosterLockoutTime = 0x3178; // float
		constexpr auto m_fBoosterKnockbackLockoutTime = 0x317c; // float
		constexpr auto m_fBoosterKnockbackLockoutTimestamp = 0x3180; // float
		constexpr auto r_nInhandAmmoRemaining = 0x3184; // int32_t
		constexpr auto m_fBoosterSpeedReductionRate = 0x3188; // float
		constexpr auto m_fBoosterInactiveSpeedReductionRate = 0x318c; // float
		constexpr auto m_fBoosterInactiveSpeedReductionDelay = 0x3190; // float
		constexpr auto m_fBoosterInactiveSpeedReductionTimer = 0x3194; // float
	}

	namespace n_UTgAnimNotifySkinData { // : UObject
		constexpr auto OwningNotify = 0x60; // FString
		constexpr auto SoundCueTemplate = 0x70; // ObjectProperty
		constexpr auto ParticleSystemTemplate = 0x78; // ObjectProperty
		constexpr auto nSkinId = 0x80; // int32_t
		constexpr auto nSkinLevel = 0x84; // int32_t
	}

	namespace n_ATgWeaponMeshActor_ImaniDragonInhand { // : ATgWeaponMeshActor
		constexpr auto m_DragonFireFx = 0x450; // TArray<ObjectProperty>
	}

	namespace n_UUIData_MasteryReward { // : UUIData
		constexpr auto m_dwLevel = 0x64; // Fdword
		constexpr auto m_pLTIGiven = 0x68; // ObjectProperty
		constexpr auto m_pLTIPurchase = 0x70; // ObjectProperty
		constexpr auto m_pChampion = 0x78; // ObjectProperty
	}

	namespace n_ATgProj_TigronHeavyBlade { // : ATgProj_Simulated
		constexpr auto m_CachedTiberius = 0x52c; // ObjectProperty
		constexpr auto m_fScaleMultiplier = 0x534; // float
	}

	namespace n_ATgCreditCache { // : AActor
		constexpr auto r_bActive = 0x280; // uint32_t : 1
		constexpr auto m_nValueLevel = 0x284; // int32_t
		constexpr auto m_nCreditValue = 0x288; // int32_t
		constexpr auto m_fCreditCacheGainDuration = 0x28c; // float
		constexpr auto m_fCollisionProxyRadius = 0x290; // float
		constexpr auto m_fCollisionProxyHeight = 0x294; // float
		constexpr auto m_currentCaptor = 0x298; // ObjectProperty
		constexpr auto SMC = 0x2a0; // ComponentProperty
		constexpr auto s_CollisionProxy = 0x2a8; // ObjectProperty
		constexpr auto m_touchingCharacters = 0x2b0; // TArray<ObjectProperty>
	}

	namespace n_UTgSeqAct_SetUltimateEnergy { // : USequenceAction
		constexpr auto fChargePercent = 0x108; // float
	}

	namespace n_UUIScene_UIRadialMenu { // : UUIScene
		constexpr auto m_mcWheel = 0x1cc; // ObjectProperty
		constexpr auto m_pSubSelectW = 0x1d4; // TArray<ObjectProperty>
		constexpr auto m_pSubSelectE = 0x1e4; // TArray<ObjectProperty>
		constexpr auto m_pSubSelectS = 0x1f4; // TArray<ObjectProperty>
		constexpr auto m_mcSelectionHighlightN = 0x204; // ObjectProperty
		constexpr auto m_mcSelectionHighlightS = 0x20c; // ObjectProperty
		constexpr auto m_mcSelectionHighlightE = 0x214; // ObjectProperty
		constexpr auto m_mcSelectionHighlightW = 0x21c; // ObjectProperty
		constexpr auto m_mcInnerRingSelection = 0x224; // ObjectProperty
		constexpr auto m_mcOuterRingSelection = 0x22c; // ObjectProperty
		constexpr auto m_mcInnerRingSelectionVis = 0x234; // ObjectProperty
		constexpr auto m_mcOuterRingSelectionVis = 0x23c; // ObjectProperty
		constexpr auto m_mcErrorS = 0x244; // ObjectProperty
		constexpr auto m_CurrentSlice = 0x24c; // RadialMenuDir
		constexpr auto m_nCurrentSubSelectionW = 0x250; // int32_t
		constexpr auto m_nCurrentSubSelectionE = 0x254; // int32_t
		constexpr auto m_nCurrentSubSelectionS = 0x258; // int32_t
		constexpr auto m_nAxisUpdateCBHandle = 0x25c; // int32_t
		constexpr auto m_fSelectionDelayGamepad = 0x260; // float
		constexpr auto m_fSelectionDelayMouse = 0x264; // float
		constexpr auto m_bUseInnerSelectionGamepad = 0x268; // uint32_t : 1
		constexpr auto m_bUseInnerSelectionMouse = 0x268; // uint32_t : 1
		constexpr auto m_bMountInvalid = 0x268; // uint32_t : 1
		constexpr auto m_fDeselectionDelayGamepad = 0x26c; // float
		constexpr auto m_fDeselectionDelayMouse = 0x270; // float
		constexpr auto m_akSliceTick = 0x274; // ObjectProperty
	}

	namespace n_UUIScene_UIChampionMastery { // : UUIScene
		constexpr auto m_pMasteryRewards = 0x1cc; // ObjectProperty
	}

	namespace n_ARB_Thruster { // : ARigidBodyBase
		constexpr auto bThrustEnabled = 0x280; // uint32_t : 1
		constexpr auto ThrustStrength = 0x284; // float
	}

	namespace n_UCoverSlipReachSpec { // : UForcedReachSpec
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_ATgJumpPad { // : AActor
		constexpr auto m_fAccelRate = 0x280; // float
		constexpr auto m_vTargetVelocity = 0x284; // FVector
		constexpr auto m_Mesh = 0x290; // ComponentProperty
		constexpr auto m_ActivationEvent = 0x298; // ObjectProperty
		constexpr auto m_TouchingChars = 0x2a0; // TArray<ObjectProperty>
	}

	namespace n_UUserCloudFileCloudSaveSystemDataBlobStore { // : UObject
		constexpr auto UserCloudFile = 0x60; // TScriptInterface<Class>
		constexpr auto GetDataBlobCallback = 0x70; // DelegateProperty
		constexpr auto SetDataBlobCallback = 0x80; // DelegateProperty
		constexpr auto DeleteDataBlobCallback = 0x90; // DelegateProperty
		constexpr auto __GetDataBlobCallbackDelegate__Delegate = 0xa0; // DelegateProperty
		constexpr auto __SetDataBlobCallbackDelegate__Delegate = 0xb0; // DelegateProperty
		constexpr auto __DeleteDataBlobCallbackDelegate__Delegate = 0xc0; // DelegateProperty
	}

	namespace n_UTgAchievement_FastHealDifferentPlayers { // : UTgAchievement
		constexpr auto m_HealEntries = 0x94; // TArray<FFastHealDifferentPlayersEntry>
	}

	namespace n_UUIInteractable_JsonPanel_Carousel { // : UUIInteractable_JsonPanel
		constexpr auto VfTable_IUIInteractableInterface_JsonCarousel = 0x22c; // FPointer
		constexpr auto m_mcNavControlsRoot = 0x234; // ObjectProperty
		constexpr auto m_LeftArrow = 0x23c; // ObjectProperty
		constexpr auto m_RightArrow = 0x244; // ObjectProperty
		constexpr auto m_mcLeftButtonPrompt = 0x24c; // ObjectProperty
		constexpr auto m_mcRightButtonPrompt = 0x254; // ObjectProperty
		constexpr auto m_mcImage2 = 0x25c; // ObjectProperty
		constexpr auto m_bOnImage2 = 0x264; // uint32_t : 1
		constexpr auto m_bPauseAutoRotation = 0x264; // uint32_t : 1
		constexpr auto m_bDisableAutoRotation = 0x264; // uint32_t : 1
		constexpr auto m_bDisableNavigation = 0x264; // uint32_t : 1
		constexpr auto m_nIndex = 0x268; // int32_t
		constexpr auto m_NavDots = 0x26c; // TArray<ObjectProperty>
		constexpr auto m_fNavDotCenter = 0x27c; // float
		constexpr auto m_CarouselJsonFeatureData = 0x280; // TArray<FJsonFeatureData>
		constexpr auto m_fAutoRotationTime = 0x290; // float
		constexpr auto m_fAutoRotationDelay = 0x294; // float
		constexpr auto m_GamepadLeftKey = 0x298; // FName
		constexpr auto m_GamepadRightKey = 0x2a0; // FName
		constexpr auto m_fAspectRatioTolerance = 0x2a8; // float
	}

	namespace n_UUIDataRedeemableAcquisition { // : UUIData
		constexpr auto qwAcquisitionId = 0x64; // FQWord
	}

	namespace n_UParticleModuleRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x68; // FRawDistributionFloat
	}

	namespace n_UActorFactoryFogVolumeConstantDensityInfo { // : UActorFactory
		constexpr auto SelectedMaterial = 0x9c; // ObjectProperty
		constexpr auto bNothingSelected = 0xa4; // uint32_t : 1
	}

	namespace n_UHavokNavigationRenderingComponent { // : UPrimitiveComponent
		constexpr auto bDrawEdges = 0x24c; // uint32_t : 1
	}

	namespace n_UTgAimAssistKeyframe { // : UObject
		constexpr auto KeyframeName = 0x60; // FName
		constexpr auto AimAssistCurve = 0x68; // FRawDistributionFloat
		constexpr auto bMirrored = 0x8c; // uint32_t : 1
	}

	namespace n_UUIComponent_Button_LoadoutMount { // : UUIComponent_Display
		constexpr auto m_mcCardIcon = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
	}

	namespace n_UTgEffectForm_Freeze { // : UTgEffectForm_DisablePawn
		constexpr auto m_BurstingIceFXId = 0x100; // int32_t
	}

	namespace n_ATgPawn_Fairy { // : ATgPawn_Character
		constexpr auto m_fFairyFlySpeedModifier = 0x3164; // float
		constexpr auto m_fFlightAccelerationPerSecond = 0x3168; // float
		constexpr auto m_fFlightDecelerationPerSecond = 0x316c; // float
		constexpr auto m_fFlightMaxRiseSpeed = 0x3170; // float
		constexpr auto m_fAscentDecelerationPerSecond = 0x3174; // float
		constexpr auto m_fFaeFlightFriction = 0x3178; // float
		constexpr auto m_fPreviousAscentVelocity = 0x317c; // float
		constexpr auto m_CachedFlutterDevice = 0x3180; // ObjectProperty
		constexpr auto m_CachedFaeFlightDevice = 0x3188; // ObjectProperty
	}

	namespace n_USoundNodeMixer { // : USoundNode
		constexpr auto InputVolume = 0x74; // TArray<float>
	}

	namespace n_ATgDeploy_OppressorMine { // : ATgDeployable
		constexpr auto m_CachedPawnOwner = 0x46c; // ObjectProperty
		constexpr auto m_CachedEnemyTaskForce = 0x474; // ObjectProperty
		constexpr auto r_CurrentTargets = 0x47c; // ObjectProperty [0x6]
		constexpr auto m_nBeamFXID = 0x4ac; // int32_t
		constexpr auto m_BeamFXs = 0x4b0; // ObjectProperty [0x6]
		constexpr auto m_bNeedsNetDirtyUpdate = 0x4e0; // uint32_t : 1
		constexpr auto r_StuckCart = 0x4e4; // ObjectProperty
		constexpr auto r_StuckRotation = 0x4ec; // FRotator
		constexpr auto r_CartOffset = 0x4f8; // FVector
		constexpr auto m_fAmplitudeRadiusScale = 0x504; // float
	}

	namespace n_ATgDevice_NinjaRMB1 { // : ATgDevice_Charge
		constexpr auto c_bAlreadyConsumedStamina = 0xa7c; // uint32_t : 1
		constexpr auto m_CachedKoga = 0xa80; // ObjectProperty
	}

	namespace n_UTgDataGroup_Game { // : UTgDataChunk
		constexpr auto m_PlayerData = 0x158; // ObjectProperty
		constexpr auto m_TargetData = 0x160; // ObjectProperty
		constexpr auto m_PlayerVitals = 0x168; // ObjectProperty
		constexpr auto m_GameData = 0x170; // ObjectProperty
		constexpr auto m_DevicesData = 0x178; // ObjectProperty
		constexpr auto m_EffectData = 0x180; // ObjectProperty
	}

	namespace n_ATgHUD { // : AHUD
		constexpr auto m_TgPlayerController = 0x5a0; // ObjectProperty
	}

	namespace n_ATgDevice_ImaniDragonE { // : ATgDevice
		constexpr auto m_CachedImaniAvatar = 0xa08; // ObjectProperty
		constexpr auto m_fUltCancelSafetyPeriod = 0xa10; // float
	}

	namespace n_UTgAchievement_AirborneDuration { // : UTgAchievement
		constexpr auto m_bAirborne = 0x94; // uint32_t : 1
		constexpr auto m_fAirborneStartTime = 0x98; // float
	}

	namespace n_ATgPawn_Corvus { // : ATgPawn_Character
		constexpr auto r_RMBTarget = 0x3164; // ObjectProperty
		constexpr auto m_fDelayTargetValid = 0x316c; // float
		constexpr auto m_BeaconTarget = 0x3170; // ObjectProperty
		constexpr auto m_CachedBeaconDevice = 0x3178; // ObjectProperty
		constexpr auto m_CachedCorvusDagger = 0x3180; // ObjectProperty
		constexpr auto m_CachedCorvusUlt = 0x3188; // ObjectProperty
		constexpr auto m_CachedCorvusDaggerTalent = 0x3190; // ObjectProperty
		constexpr auto r_DaggerProjectile = 0x3198; // ObjectProperty
		constexpr auto r_DaggerDeployable = 0x31a0; // ObjectProperty
		constexpr auto r_eRemoteDaggerState = 0x31a8; // CorvusDaggerState
		constexpr auto r_vPreTeleportLocation = 0x31ac; // FVector
		constexpr auto m_fPreviousAscentVelocity = 0x31b8; // float
		constexpr auto m_fFlightMaxRiseSpeed = 0x31bc; // float
		constexpr auto m_BeaconTargets = 0x31c0; // TArray<FBeaconInfo>
		constexpr auto r_bBeaconLifeStealEquipped = 0x31d0; // uint32_t : 1
	}

	namespace n_ATgDeploy_HealthNugget { // : ATgDeployable
		constexpr auto m_bRenderAsActive = 0x46c; // uint32_t : 1
		constexpr auto m_bIsActiveRendered = 0x46c; // uint32_t : 1
		constexpr auto m_bCountTowardsHealingStats = 0x46c; // uint32_t : 1
		constexpr auto c_HelpTipActor = 0x470; // ObjectProperty
		constexpr auto m_fHealOverride = 0x478; // float
		constexpr auto m_fHoTOverride = 0x47c; // float
		constexpr auto m_PendingTouches = 0x480; // TArray<ObjectProperty>
	}

	namespace n_UMcpServerTimeBase { // : UMcpServiceBase
		constexpr auto McpServerTimeClassName = 0x78; // FString
		constexpr auto __OnQueryServerTimeComplete__Delegate = 0x88; // DelegateProperty
	}

	namespace n_UParticleModuleSubUV { // : UParticleModuleSubUVBase
		constexpr auto SubImageIndex = 0x68; // FRawDistributionFloat
		constexpr auto bUseRealTime = 0x8c; // uint32_t : 1
	}

	namespace n_USeqAct_SetLocation { // : USeqAct_SetSequenceVariable
		constexpr auto bSetLocation = 0x108; // uint32_t : 1
		constexpr auto bSetRotation = 0x108; // uint32_t : 1
		constexpr auto LocationValue = 0x10c; // FVector
		constexpr auto RotationValue = 0x118; // FRotator
		constexpr auto Target = 0x124; // ObjectProperty
	}

	namespace n_UPrefabSequence { // : USequence
		constexpr auto OwnerPrefab = 0x174; // ObjectProperty
	}

	namespace n_UOnlineGameInterfaceImpl { // : UObject
		constexpr auto OwningSubsystem = 0x60; // ObjectProperty
		constexpr auto GameSettings = 0x68; // ObjectProperty
		constexpr auto GameSearch = 0x70; // ObjectProperty
		constexpr auto CreateOnlineGameCompleteDelegates = 0x78; // TArray<DelegateProperty>
		constexpr auto UpdateOnlineGameCompleteDelegates = 0x88; // TArray<DelegateProperty>
		constexpr auto DestroyOnlineGameCompleteDelegates = 0x98; // TArray<DelegateProperty>
		constexpr auto JoinOnlineGameCompleteDelegates = 0xa8; // TArray<DelegateProperty>
		constexpr auto MigrateOnlineGameCompleteDelegates = 0xb8; // TArray<DelegateProperty>
		constexpr auto JoinMigratedOnlineGameCompleteDelegates = 0xc8; // TArray<DelegateProperty>
		constexpr auto RecalculateSkillRatingCompleteDelegates = 0xd8; // TArray<DelegateProperty>
		constexpr auto StartOnlineGameCompleteDelegates = 0xe8; // TArray<DelegateProperty>
		constexpr auto EndOnlineGameCompleteDelegates = 0xf8; // TArray<DelegateProperty>
		constexpr auto FindOnlineGamesCompleteDelegates = 0x108; // TArray<DelegateProperty>
		constexpr auto CancelFindOnlineGamesCompleteDelegates = 0x118; // TArray<DelegateProperty>
		constexpr auto LanBeaconState = 0x128; // ELanBeaconState
		constexpr auto LanNonce = 0x129; // char [0x8]
		constexpr auto LanAnnouncePort = 0x134; // int32_t
		constexpr auto LanGameUniqueId = 0x138; // int32_t
		constexpr auto LanPacketPlatformMask = 0x13c; // int32_t
		constexpr auto LanQueryTimeLeft = 0x140; // float
		constexpr auto LanQueryTimeout = 0x144; // float
		constexpr auto LanBeacon = 0x148; // FPointer
		constexpr auto SessionInfo = 0x150; // FPointer
		constexpr auto __OnFindOnlineGamesComplete__Delegate = 0x158; // DelegateProperty
		constexpr auto __OnCreateOnlineGameComplete__Delegate = 0x168; // DelegateProperty
		constexpr auto __OnUpdateOnlineGameComplete__Delegate = 0x178; // DelegateProperty
		constexpr auto __OnDestroyOnlineGameComplete__Delegate = 0x188; // DelegateProperty
		constexpr auto __OnCancelFindOnlineGamesComplete__Delegate = 0x198; // DelegateProperty
		constexpr auto __OnJoinOnlineGameComplete__Delegate = 0x1a8; // DelegateProperty
		constexpr auto __OnCreateOnlineGameWithPartyComplete__Delegate = 0x1b8; // DelegateProperty
		constexpr auto __OnMatchmakeOnlineGameWithPartyComplete__Delegate = 0x1c8; // DelegateProperty
		constexpr auto __OnAddSessionMemberComplete__Delegate = 0x1d8; // DelegateProperty
		constexpr auto __OnMultiplayerSessionChange__Delegate = 0x1e8; // DelegateProperty
		constexpr auto __OnUpdateSessionPropertiesComplete__Delegate = 0x1f8; // DelegateProperty
		constexpr auto __OnGameSessionReady__Delegate = 0x208; // DelegateProperty
		constexpr auto __OnAcceptPendingGameSessionComplete__Delegate = 0x218; // DelegateProperty
		constexpr auto __OnGamePlayersChanged__Delegate = 0x228; // DelegateProperty
		constexpr auto __OnMatchStatusChanged__Delegate = 0x238; // DelegateProperty
		constexpr auto __OnQuerySessionsForUserComplete__Delegate = 0x248; // DelegateProperty
		constexpr auto __OnRegisterPlayerComplete__Delegate = 0x258; // DelegateProperty
		constexpr auto __OnUnregisterPlayerComplete__Delegate = 0x268; // DelegateProperty
		constexpr auto __OnRetrievedGameSettingsForIP__Delegate = 0x278; // DelegateProperty
		constexpr auto __OnStartOnlineGameComplete__Delegate = 0x288; // DelegateProperty
		constexpr auto __OnEndOnlineGameComplete__Delegate = 0x298; // DelegateProperty
		constexpr auto __OnArbitrationRegistrationComplete__Delegate = 0x2a8; // DelegateProperty
		constexpr auto __OnGameInviteAccepted__Delegate = 0x2b8; // DelegateProperty
		constexpr auto __OnRecalculateSkillRatingComplete__Delegate = 0x2c8; // DelegateProperty
		constexpr auto __OnMigrateOnlineGameComplete__Delegate = 0x2d8; // DelegateProperty
		constexpr auto __OnJoinMigratedOnlineGameComplete__Delegate = 0x2e8; // DelegateProperty
		constexpr auto __OnQosStatusChanged__Delegate = 0x2f8; // DelegateProperty
		constexpr auto __OnGetNumberOfCurrentPlayersComplete__Delegate = 0x308; // DelegateProperty
		constexpr auto __OnGetRoomIdFromTitleService__Delegate = 0x318; // DelegateProperty
		constexpr auto __OnGetSessionMemberInfoComplete__Delegate = 0x328; // DelegateProperty
		constexpr auto __OnGetUserConnectionInfoComplete__Delegate = 0x338; // DelegateProperty
	}

	namespace n_UTgInventoryObject_Listen_TagForLifesteal { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_TagActors = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_TagTimes = 0xdc; // TArray<float>
		constexpr auto m_CachedFiremode = 0xec; // ObjectProperty
	}

	namespace n_USphericalHarmonicLightComponent { // : ULightComponent
		constexpr auto WorldSpaceIncidentLighting = 0x1b0; // FSHVectorRGB
		constexpr auto bRenderBeforeModShadows = 0x240; // uint32_t : 1
	}

	namespace n_UUIScene_UIRadialMenuVGS { // : UUIScene
		constexpr auto m_eCurrentSlice = 0x1cc; // RadialMenuVGSDir
		constexpr auto m_eCurrentChildSlice = 0x1cd; // RadialMenuVGSChildDir
		constexpr auto m_bCenterMouseOnShow = 0x1d0; // uint32_t : 1
		constexpr auto m_bShowingChildWheel = 0x1d0; // uint32_t : 1
		constexpr auto m_bSliceAllowDeselect = 0x1d0; // uint32_t : 1
		constexpr auto m_nAxisUpdateCBHandle = 0x1d4; // int32_t
		constexpr auto m_nVGSInputType = 0x1d8; // int32_t
		constexpr auto m_fDeselectTimer = 0x1dc; // float
		constexpr auto m_fSelectionDelayGamepad = 0x1e0; // float
		constexpr auto m_fSelectionDelayMouse = 0x1e4; // float
		constexpr auto m_fDeselectionDelayGamepad = 0x1e8; // float
		constexpr auto m_fDeselectionDelayMouse = 0x1ec; // float
		constexpr auto m_fMouseOffsetX = 0x1f0; // float
		constexpr auto m_fMouseOffsetY = 0x1f4; // float
		constexpr auto m_mcTitle = 0x1f8; // ObjectProperty
		constexpr auto m_mcWheel = 0x200; // ObjectProperty
		constexpr auto m_mcChildWheel = 0x208; // ObjectProperty
		constexpr auto m_mcCenterButton = 0x210; // ObjectProperty
		constexpr auto m_mcCenterButtonTF = 0x218; // ObjectProperty
		constexpr auto m_mcCenterButtonHighlight = 0x220; // ObjectProperty
		constexpr auto m_pCenterButtonGamepadKey = 0x228; // ObjectProperty
		constexpr auto m_pCenterButtonKeyboardKey = 0x230; // ObjectProperty
		constexpr auto m_pSlices = 0x238; // TArray<ObjectProperty>
		constexpr auto m_pChildSlices = 0x248; // TArray<ObjectProperty>
		constexpr auto m_akSliceHover = 0x258; // ObjectProperty
		constexpr auto m_pDefaultInputsAction = 0x260; // ObjectProperty
		constexpr auto m_pRadialNavAction = 0x268; // ObjectProperty
		constexpr auto m_pRadialSelectAction = 0x270; // ObjectProperty
		constexpr auto m_pHideMenuAction = 0x278; // ObjectProperty
	}

	namespace n_UCameraShake { // : UObject
		constexpr auto bSingleInstance = 0x60; // uint32_t : 1
		constexpr auto bRandomAnimSegment = 0x60; // uint32_t : 1
		constexpr auto bDoHUDShake = 0x60; // uint32_t : 1
		constexpr auto OscillationDuration = 0x64; // float
		constexpr auto OscillationBlendInTime = 0x68; // float
		constexpr auto OscillationBlendOutTime = 0x6c; // float
		constexpr auto RotOscillation = 0x70; // FROscillator
		constexpr auto LocOscillation = 0x94; // FVOscillator
		constexpr auto FOVOscillation = 0xb8; // FFOscillator
		constexpr auto Anim = 0xc4; // ObjectProperty
		constexpr auto AnimPlayRate = 0xcc; // float
		constexpr auto AnimScale = 0xd0; // float
		constexpr auto AnimBlendInTime = 0xd4; // float
		constexpr auto AnimBlendOutTime = 0xd8; // float
		constexpr auto RandomAnimSegmentDuration = 0xdc; // float
		constexpr auto HUDOscillation = 0xe0; // FV2DOscillator
	}

	namespace n_UUIComponent_Avatar { // : UUIComponent_Display
		constexpr auto m_mcTexture = 0x124; // ObjectProperty
	}

	namespace n_UUIScene_UICompetitivePopupWelcome { // : UUIScene
		constexpr auto m_pRewards = 0x1cc; // ObjectProperty
		constexpr auto m_pOkButton = 0x1d4; // ObjectProperty
		constexpr auto m_pInfoButton = 0x1dc; // ObjectProperty
	}

	namespace n_UTgIconDetails { // : UObject
		constexpr auto m_OwningGroup = 0x60; // ObjectProperty
		constexpr auto m_mcIconObject = 0x68; // ObjectProperty
		constexpr auto m_mcTexture = 0x70; // ObjectProperty
		constexpr auto m_mcLoadingSpinner = 0x78; // ObjectProperty
		constexpr auto m_sTextureString = 0x80; // FString
		constexpr auto m_sTag = 0x90; // FString
		constexpr auto m_bIsTextureSet = 0xa0; // uint32_t : 1
	}

	namespace n_USwatTurnReachSpec { // : UForcedReachSpec
		constexpr auto SpecDirection = 0xc8; // char
	}

	namespace n_UInGameAdManager { // : UPlatformInterfaceBase
		constexpr auto bShouldPauseWhileAdOpen = 0x80; // uint32_t : 1
	}

	namespace n_UUIData_List_PrimaryQueues { // : UUIData_List_TitleIcon
		constexpr auto pCustomData = 0x88; // ObjectProperty
		constexpr auto pTrainingData = 0x90; // ObjectProperty
	}

	namespace n_UTgEffectForm { // : UObject
		constexpr auto c_nEffectGroupId = 0x60; // int32_t
		constexpr auto c_nInstigatorID = 0x64; // int32_t
		constexpr auto c_nType = 0x68; // int32_t
		constexpr auto c_Owner = 0x6c; // ObjectProperty
		constexpr auto c_pwzEffectName = 0x74; // FPointer
		constexpr auto c_pwzDescription = 0x7c; // FPointer
		constexpr auto c_nEffectIconId = 0x84; // int32_t
		constexpr auto c_AppliedFxArray = 0x88; // TArray<ObjectProperty>
		constexpr auto c_bHiddenDueToStealth = 0x98; // uint32_t : 1
		constexpr auto c_bHiddenDueToFirstPerson = 0x98; // uint32_t : 1
		constexpr auto c_bMICApplied = 0x98; // uint32_t : 1
		constexpr auto m_bSpawnAtHitLocation = 0x98; // uint32_t : 1
		constexpr auto c_bIsDebuff = 0x98; // uint32_t : 1
		constexpr auto c_bIsCrit = 0x98; // uint32_t : 1
		constexpr auto c_bLocal = 0x98; // uint32_t : 1
		constexpr auto c_Posture = 0x9c; // TG_POSTURE
		constexpr auto c_PostureID = 0xa0; // int32_t
		constexpr auto m_MaterialInstanceConstant = 0xa4; // ObjectProperty
		constexpr auto m_OwnerPawn = 0xac; // ObjectProperty
		constexpr auto m_HitLocation = 0xb4; // FVector
		constexpr auto m_HitNormal = 0xc0; // FVector
		constexpr auto c_nSkinId = 0xcc; // int32_t
		constexpr auto c_nWeaponSkinId = 0xd0; // int32_t
		constexpr auto c_CameraEffect = 0xd4; // ObjectProperty
		constexpr auto c_nStackCount = 0xdc; // int32_t
		constexpr auto c_nBodyMeshMaterialHandle = 0xe0; // int32_t
		constexpr auto c_nMountMeshMaterialHandle = 0xe4; // int32_t
		constexpr auto c_nHeadMeshMaterialHandle = 0xe8; // int32_t
		constexpr auto c_nWeaponMesh1PMaterialHandle = 0xec; // int32_t
		constexpr auto c_nHandsMeshMaterialHandle = 0xf0; // int32_t
		constexpr auto c_nHeadMesh1PMaterialHandle = 0xf4; // int32_t
		constexpr auto c_nWeaponMesh3PMaterialHandle = 0xf8; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Scramble { // : UTgInvListener
		constexpr auto m_CachedScrambleDevice = 0xc4; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_WhatIsLastAttackerTargeting { // : UTgAIBehaviorCondition
		constexpr auto TargetType = 0x98; // ECombatTargetType
	}

	namespace n_USeqAct_SetVelocity { // : USequenceAction
		constexpr auto VelocityDir = 0x108; // FVector
		constexpr auto VelocityMag = 0x114; // float
		constexpr auto bVelocityRelativeToActorRotation = 0x118; // uint32_t : 1
	}

	namespace n_USoundNodeDoppler { // : USoundNode
		constexpr auto DopplerIntensity = 0x74; // float
	}

	namespace n_ATriggerStreamingLevel { // : ATrigger
		constexpr auto Levels = 0x290; // TArray<FLevelStreamingData>
	}

	namespace n_UTgSeqAct_ClientLoadDevices { // : USequenceAction
		constexpr auto m_DeviceIdList = 0x108; // TArray<int32_t>
		constexpr auto m_bClearExistingLoads = 0x118; // uint32_t : 1
	}

	namespace n_UTgSeqAct_UIAlert { // : USequenceAction
		constexpr auto nMsgId = 0x108; // int32_t
		constexpr auto Taskforces = 0x10c; // TArray<int32_t>
		constexpr auto Broadcast = 0x11c; // TArray<char>
	}

	namespace n_UTgAchievement_Wanderer { // : UTgAchievement
		constexpr auto m_vLastPlayerLocation = 0x94; // FVector
		constexpr auto m_bLastLocationValid = 0xa0; // uint32_t : 1
		constexpr auto m_fResidualDistance = 0xa4; // float
	}

	namespace n_UUIComponent_DruidMoonJuiceBar { // : UUIComponent_ProgressBarRadial
		constexpr auto m_nThresholdZeroPercentFrame = 0x148; // int32_t
		constexpr auto m_nThresholdHundredPercentFrame = 0x14c; // int32_t
		constexpr auto m_ThresholdBar = 0x150; // ObjectProperty
		constexpr auto m_fMinMoonJuice = 0x158; // float
	}

	namespace n_UUIComponent_PlayTraining { // : UUIComponent_Display
		constexpr auto m_mcDailyQueueBonusNotification = 0x124; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusNotificationTF = 0x12c; // ObjectProperty
		constexpr auto m_mcDailyQueueBonusIcon = 0x134; // ObjectProperty
		constexpr auto m_pPanels = 0x13c; // ObjectProperty
		constexpr auto m_grInput = 0x144; // ObjectProperty
	}

	namespace n_UTgFlagContentData { // : UObject
		constexpr auto m_MeshData = 0x60; // TArray<FFlagMeshData>
	}

	namespace n_UTgDeviceForm_AtlasInhand { // : UTgDeviceForm
		constexpr auto m_bCharging = 0x28c; // uint32_t : 1
		constexpr auto m_bFullyCharged = 0x28c; // uint32_t : 1
		constexpr auto m_fChargingPercentage = 0x290; // float
		constexpr auto m_fChargingStartPercentage = 0x294; // float
		constexpr auto m_fChargingTime = 0x298; // float
		constexpr auto m_fChargingTotalDuration = 0x29c; // float
		constexpr auto m_fTimeToEnterIdle = 0x2a0; // float
		constexpr auto m_fTimeToEnterIdleTotal = 0x2a4; // float
		constexpr auto m_CachedAtlas = 0x2a8; // ObjectProperty
		constexpr auto m_BlendByPct1P = 0x2b0; // TArray<ObjectProperty>
		constexpr auto m_BlendByPct3P = 0x2c0; // TArray<ObjectProperty>
	}

	namespace n_UUIScene_UIHudChomp { // : UUIScene
		constexpr auto m_mcAnim = 0x1cc; // ObjectProperty
	}

	namespace n_UUIData_Name { // : UUIData
		constexpr auto m_Value = 0x64; // FName
	}

	namespace n_UUIScene_UINotificationToasts { // : UUIScene
		constexpr auto m_pWaitList = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_pToastSlots = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_nFreeList = 0x1ec; // TArray<int32_t>
		constexpr auto m_nQueuedSlots = 0x1fc; // TArray<int32_t>
		constexpr auto m_bFreeListDisorderly = 0x20c; // uint32_t : 1
		constexpr auto m_bCommendationListDisorderly = 0x20c; // uint32_t : 1
		constexpr auto m_bChallengeListDisorderly = 0x20c; // uint32_t : 1
		constexpr auto m_bInitialized = 0x20c; // uint32_t : 1
		constexpr auto m_fToastQueueDelay = 0x210; // float
		constexpr auto m_pWaitCommendationList = 0x214; // TArray<ObjectProperty>
		constexpr auto m_pCommendationSlots = 0x224; // TArray<ObjectProperty>
		constexpr auto m_nFreeCommendationList = 0x234; // TArray<int32_t>
		constexpr auto m_nQueuedCommendationSlots = 0x244; // TArray<int32_t>
		constexpr auto m_fCommendationQueueDelay = 0x254; // float
		constexpr auto m_pWaitChallengeList = 0x258; // TArray<ObjectProperty>
		constexpr auto m_pChallengeSlots = 0x268; // TArray<ObjectProperty>
		constexpr auto m_nFreeChallengeList = 0x278; // TArray<int32_t>
		constexpr auto m_nQueuedChallengeSlots = 0x288; // TArray<int32_t>
		constexpr auto m_fChallengeQueueDelay = 0x298; // float
		constexpr auto m_nActivityIdsToasted = 0x29c; // TArray<int32_t>
		constexpr auto m_nQuestsUpdatedHandle = 0x2ac; // int32_t
		constexpr auto m_nDataDirectorHandle = 0x2b0; // int32_t
	}

	namespace n_UUISubtitle { // : UTgGfxScene
		constexpr auto m_fTimer = 0x1ec; // float
		constexpr auto m_fSwitchTimer = 0x1f0; // float
		constexpr auto m_sNewSubtitle = 0x1f4; // FString
		constexpr auto m_mcText = 0x204; // ObjectProperty
		constexpr auto m_mcFrame = 0x20c; // ObjectProperty
	}

	namespace n_UTgCustomCharacterComponent { // : UActorComponent
		constexpr auto m_SourceMeshList = 0x88; // TArray<ObjectProperty>
		constexpr auto m_CompositeTextures = 0x98; // TArray<FCompositeTextureType>
		constexpr auto m_nCompositeTextureSizeX = 0xa8; // int32_t
		constexpr auto m_nCompositeTextureSizeY = 0xac; // int32_t
		constexpr auto m_CompositeParts = 0xb0; // TArray<FCompositePartInfo>
		constexpr auto m_CompositeFxList = 0xc0; // TArray<ObjectProperty>
	}

	namespace n_UTgInventoryObject_Listen_Combo_Drogoz { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_fLastThrustTime = 0xcc; // float
	}

	namespace n_UUIDataProvider_MenuItem { // : UUIResourceDataProvider
		constexpr auto OptionType = 0x94; // EMenuOptionType
		constexpr auto OptionSet = 0x98; // TArray<FName>
		constexpr auto DataStoreMarkup = 0xa8; // FString
		constexpr auto DescriptionMarkup = 0xb8; // FString
		constexpr auto RequiredGameMode = 0xc8; // FName
		constexpr auto FriendlyName = 0xd0; // FString
		constexpr auto CustomFriendlyName = 0xe0; // FString
		constexpr auto Description = 0xf0; // FString
		constexpr auto bEditableCombo = 0x100; // uint32_t : 1
		constexpr auto bNumericCombo = 0x100; // uint32_t : 1
		constexpr auto bKeyboardOrMouseOption = 0x100; // uint32_t : 1
		constexpr auto bOnlineOnly = 0x100; // uint32_t : 1
		constexpr auto bOfflineOnly = 0x100; // uint32_t : 1
		constexpr auto bSearchAllInis = 0x100; // uint32_t : 1
		constexpr auto bRemoveOn360 = 0x100; // uint32_t : 1
		constexpr auto bRemoveOnPC = 0x100; // uint32_t : 1
		constexpr auto bRemoveOnPS3 = 0x100; // uint32_t : 1
		constexpr auto bRemoveOnDingo = 0x100; // uint32_t : 1
		constexpr auto EditBoxMaxLength = 0x104; // int32_t
		constexpr auto RangeData = 0x108; // FUIRangeData
		constexpr auto SchemaCellFields = 0x11c; // TArray<FName>
		constexpr auto IniName = 0x12c; // FString
	}

	namespace n_ATgAIController_BehaviorMapNpc { // : ATgAIController_Behavior
		constexpr auto ThreatList = 0x930; // TArray<FThreatEntry>
		constexpr auto bThreatListDecays = 0x940; // uint32_t : 1
		constexpr auto bOutsideLeash = 0x940; // uint32_t : 1
		constexpr auto bHadCombatTarget = 0x940; // uint32_t : 1
		constexpr auto LeashDistance = 0x944; // float
		constexpr auto LeashVolume = 0x948; // ObjectProperty
		constexpr auto LeashActors = 0x950; // TArray<ObjectProperty>
	}

	namespace n_ATgGame_Arena_Escort { // : ATgGame_Arena
		constexpr auto m_nSpawnEscortTime = 0x798; // int32_t
		constexpr auto m_nEscortSuccessValue = 0x79c; // int32_t
		constexpr auto s_pEvt = 0x7a0; // ObjectProperty [0x2]
		constexpr auto s_pDespawnEvt = 0x7b0; // ObjectProperty [0x2]
	}

	namespace n_UTgAchievement_QuestionsLater { // : UTgAchievement
		constexpr auto bTakenDamageYet = 0x94; // uint32_t : 1
		constexpr auto bHasHitAllEnemies = 0x94; // uint32_t : 1
		constexpr auto EnemyPawnsHit = 0x98; // TArray<int32_t>
	}

	namespace n_UTgInventoryObject_Device { // : UTgInventoryObject
		constexpr auto s_Device = 0xa8; // ObjectProperty
		constexpr auto m_nDeviceInstanceId = 0xb0; // int32_t
		constexpr auto c_nNumFindDeviceFails = 0xb4; // int32_t
		constexpr auto m_nStackCount = 0xb8; // int32_t
		constexpr auto m_pAmDevice = 0xbc; // FPointer
	}

	namespace n_AProcBuilding { // : AVolume
		constexpr auto BuildingMeshCompInfos = 0x2bc; // TArray<FPBMeshCompInfo>
		constexpr auto BuildingFracMeshCompInfos = 0x2cc; // TArray<FPBFracMeshCompInfo>
		constexpr auto SimpleMeshComp = 0x2dc; // ComponentProperty
		constexpr auto bGenerateRoofMesh = 0x2e4; // uint32_t : 1
		constexpr auto bGenerateFloorMesh = 0x2e4; // uint32_t : 1
		constexpr auto bApplyRulesToRoof = 0x2e4; // uint32_t : 1
		constexpr auto bApplyRulesToFloor = 0x2e4; // uint32_t : 1
		constexpr auto bSplitWallsAtRoofLevels = 0x2e4; // uint32_t : 1
		constexpr auto bSplitWallsAtWallEdges = 0x2e4; // uint32_t : 1
		constexpr auto bQuickEdited = 0x2e4; // uint32_t : 1
		constexpr auto bBuildingBrushCollision = 0x2e4; // uint32_t : 1
		constexpr auto bDebugDrawEdgeInfo = 0x2e4; // uint32_t : 1
		constexpr auto bDebugDrawScopes = 0x2e4; // uint32_t : 1
		constexpr auto LODMeshComps = 0x2e8; // TArray<ComponentProperty>
		constexpr auto NumMeshedTopLevelScopes = 0x2f8; // int32_t
		constexpr auto MaxFacadeZ = 0x2fc; // float
		constexpr auto MinFacadeZ = 0x300; // float
		constexpr auto OverlappingBuildings = 0x304; // TArray<ObjectProperty>
		constexpr auto SimpleMeshMassiveLODDistance = 0x314; // float
		constexpr auto RenderToTexturePullBackAmount = 0x318; // float
		constexpr auto RoofLightmapRes = 0x31c; // int32_t
		constexpr auto NonRectWallLightmapRes = 0x320; // int32_t
		constexpr auto ParamSwatchName = 0x324; // FName
		constexpr auto BuildingMaterialParams = 0x32c; // TArray<FPBMaterialParam>
		constexpr auto LowLODPersistentActor = 0x33c; // ObjectProperty
		constexpr auto CurrentSimpleMeshComp = 0x344; // ComponentProperty
		constexpr auto CurrentSimpleMeshActor = 0x34c; // ObjectProperty
		constexpr auto BuildingInstanceVersion = 0x354; // int32_t
	}

	namespace n_ADynamicAnchor { // : ANavigationPoint
		constexpr auto CurrentUser = 0x378; // ObjectProperty
	}

	namespace n_UParticleModuleColorScaleOverDensity { // : UParticleModuleColorBase
		constexpr auto ColorScaleOverDensity = 0x68; // FRawDistributionVector
		constexpr auto AlphaScaleOverDensity = 0x8c; // FRawDistributionFloat
	}

	namespace n_ATgPawn_Kinessa { // : ATgPawn_Character
		constexpr auto m_fPreviousPitchMin = 0x3164; // float
		constexpr auto m_fPreviousPitchMax = 0x3168; // float
		constexpr auto r_vHyperTargetEndLocation = 0x316c; // FVector
		constexpr auto r_vHyperShotEndLocation = 0x3178; // FVector
		constexpr auto m_bPendingMovementPenaltyOnLanded = 0x3184; // uint32_t : 1
		constexpr auto r_bIsZoomed = 0x3184; // uint32_t : 1
		constexpr auto m_bIsInInhandPostFire = 0x3184; // uint32_t : 1
		constexpr auto c_bHeadHunterFiring = 0x3184; // uint32_t : 1
		constexpr auto r_bTeleportOverlayActive = 0x3184; // uint32_t : 1
		constexpr auto m_fScopedSpeedModifier = 0x3188; // float
		constexpr auto m_fZoomChargeTimestamp = 0x318c; // float
		constexpr auto r_fFullChargeDelay = 0x3190; // float
		constexpr auto r_fTeleportOverlayMaxStrength = 0x3194; // float
		constexpr auto c_fTeleportOverlayStrength = 0x3198; // float
		constexpr auto r_fTeleportOverlayUpRate = 0x319c; // float
		constexpr auto r_fTeleportOverlayDownRate = 0x31a0; // float
	}

	namespace n_ATgPawn_Seven { // : ATgPawn_Character
		constexpr auto m_CachedLatch = 0x3164; // ObjectProperty
		constexpr auto m_CachedInhand = 0x316c; // ObjectProperty
		constexpr auto m_CachedUltDevice = 0x3174; // ObjectProperty
		constexpr auto m_CachedExplosiveUltTalent = 0x317c; // ObjectProperty
		constexpr auto m_fMiniumHeightFromGroundForLatch = 0x3184; // float
		constexpr auto r_bHasElementalTalent = 0x3188; // uint32_t : 1
		constexpr auto r_bHasDoubleDropTalent = 0x3188; // uint32_t : 1
		constexpr auto r_nClosestTargetDistance = 0x318c; // int32_t
		constexpr auto r_BeamTarget = 0x3190; // ObjectProperty
		constexpr auto r_SevenMarkedTargets = 0x3198; // FSevenMarkedTargetInfo [0x5]
		constexpr auto m_ClientMarkedForFearTargets = 0x31c0; // TArray<int32_t>
		constexpr auto m_ClientUITrackedTargets = 0x31d0; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionDepthOfFieldFunction { // : UMaterialExpression
		constexpr auto FunctionValue = 0xb0; // EDepthOfFieldFunctionValue
		constexpr auto Depth = 0xb4; // FExpressionInput
	}

	namespace n_UDrawQuadComponent { // : UPrimitiveComponent
		constexpr auto Texture = 0x24c; // ObjectProperty
		constexpr auto Width = 0x254; // float
		constexpr auto Height = 0x258; // float
	}

	namespace n_ATgDevice_BombQueenUlt { // : ATgDevice_Charge
		constexpr auto m_fFireMissileDelay = 0xa7c; // float
		constexpr auto m_CachedBombQueen = 0xa80; // ObjectProperty
		constexpr auto s_bAllowServerChargeStop = 0xa88; // uint32_t : 1
		constexpr auto m_fChargeSpeed = 0xa8c; // float
	}

	namespace n_UTgAchievement_DeviceFireSecondsOneMatch { // : UTgAchievement
		constexpr auto m_fStartTime = 0x94; // float
		constexpr auto m_fAccumulatedDuration = 0x98; // int32_t
	}

	namespace n_UTgGameplayCurvesSet_AimAssistKeyframes { // : UTgGameplayCurvesSet
		constexpr auto HorizMagnetKeyframes = 0x64; // TArray<ObjectProperty>
		constexpr auto VertMagnetKeyframes = 0x74; // TArray<ObjectProperty>
		constexpr auto FrictionKeyframes = 0x84; // TArray<ObjectProperty>
		constexpr auto TrackingByAccuracyKeyframes = 0x94; // TArray<ObjectProperty>
		constexpr auto TrackingByAngleKeyframes = 0xa4; // TArray<ObjectProperty>
	}

	namespace n_UParticleModuleVelocityBase { // : UParticleModule
		constexpr auto bInWorldSpace = 0x68; // uint32_t : 1
		constexpr auto bApplyOwnerScale = 0x68; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_GroupUp { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
		constexpr auto MinDistance = 0xa0; // float
		constexpr auto MaxDistance = 0xa4; // float
	}

	namespace n_ATgGame_Paladins_Payload { // : ATgGame_Paladins_Siege
		constexpr auto s_fCurrentTF1FarthestPushDistance = 0xa64; // float
		constexpr auto s_fCurrentTF2FarthestPushDistance = 0xa68; // float
		constexpr auto s_fCurrentPushTimer = 0xa6c; // float
		constexpr auto s_fCurrentTF1FarthestPushDistanceTimestamp = 0xa70; // float
		constexpr auto s_fCurrentTF2FarthestPushDistanceTimestamp = 0xa74; // float
		constexpr auto s_fTimeTF1HadToPush = 0xa78; // float
		constexpr auto m_nPayloadOnlyCurrentAttackingTeam = 0xa7c; // int32_t
		constexpr auto s_nCurrentTurn = 0xa80; // int32_t
		constexpr auto s_vPayloadGhostLocation = 0xa84; // FVector
		constexpr auto s_vPayloadGhostOffset = 0xa90; // FVector
		constexpr auto s_PayloadGhostRotation = 0xa9c; // FRotator
		constexpr auto m_nPayloadGhostID = 0xaa8; // int32_t
		constexpr auto m_PayloadGhost = 0xaac; // ObjectProperty
	}

	namespace n_UInterpTrackInstAkEvent { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_USoundNodeEnveloper { // : USoundNode
		constexpr auto LoopStart = 0x74; // float
		constexpr auto LoopEnd = 0x78; // float
		constexpr auto DurationAfterLoop = 0x7c; // float
		constexpr auto LoopCount = 0x80; // int32_t
		constexpr auto bLoopIndefinitely = 0x84; // uint32_t : 1
		constexpr auto bLoop = 0x84; // uint32_t : 1
		constexpr auto VolumeInterpCurve = 0x88; // ComponentProperty
		constexpr auto PitchInterpCurve = 0x90; // ComponentProperty
	}

	namespace n_USeqAct_PlayCameraAnim { // : USequenceAction
		constexpr auto CameraAnim = 0x108; // ObjectProperty
		constexpr auto bLoop = 0x110; // uint32_t : 1
		constexpr auto bRandomStartTime = 0x110; // uint32_t : 1
		constexpr auto BlendInTime = 0x114; // float
		constexpr auto BlendOutTime = 0x118; // float
		constexpr auto Rate = 0x11c; // float
		constexpr auto IntensityScale = 0x120; // float
		constexpr auto PlaySpace = 0x124; // ECameraAnimPlaySpace
		constexpr auto UserDefinedSpaceActor = 0x128; // ObjectProperty
	}

	namespace n_UTgAnimBlendByMountSkin { // : UTgAnimNodeBlendList
		constexpr auto m_SkinMap = 0x168; // TArray<FMountSkinChildInfo>
	}

	namespace n_ATgCTFVolume { // : APhysicsVolume
		constexpr auto m_nDefenderTeamIndex = 0x314; // int32_t
	}

	namespace n_UUIData_StringWithCount { // : UUIData_String
		constexpr auto m_nValue = 0x74; // int32_t
	}

	namespace n_ATgAIDirector { // : AActor
		constexpr auto m_bActive = 0x280; // uint32_t : 1
		constexpr auto m_bCanAdjustNow = 0x280; // uint32_t : 1
		constexpr auto m_bDisparityDetected = 0x280; // uint32_t : 1
		constexpr auto m_bProlongedDisparityDetected = 0x280; // uint32_t : 1
		constexpr auto m_bHasLoweredDifficultyAtTie = 0x280; // uint32_t : 1
		constexpr auto m_bFreezeAIDifficulty = 0x280; // uint32_t : 1
		constexpr auto m_fTimeSinceLastUpdate = 0x284; // float
		constexpr auto m_fLastSkillDisparity = 0x288; // float
		constexpr auto m_iIncreaseTF1Difficulty = 0x28c; // int32_t
		constexpr auto m_iIncreaseTF2Difficulty = 0x290; // int32_t
		constexpr auto m_iDisparityDetectionTime = 0x294; // int32_t
		constexpr auto m_iTriggerTime = 0x298; // int32_t
		constexpr auto m_iTaskForce1PlayerCount = 0x29c; // int32_t
		constexpr auto m_iTaskForce2PlayerCount = 0x2a0; // int32_t
		constexpr auto LockoutTime = 0x2a4; // float
		constexpr auto SkillDisparityTrigger = 0x2a8; // float
		constexpr auto UpdateRate = 0x2ac; // float
		constexpr auto m_fLastPayloadPercent = 0x2b0; // float
		constexpr auto m_fBaseUpperKillRatio = 0x2b4; // float
		constexpr auto m_fBaseLowerKillRatio = 0x2b8; // float
		constexpr auto m_fBaseUpperPayloadRate = 0x2bc; // float
		constexpr auto m_fBaseLowerPayloadRate = 0x2c0; // float
		constexpr auto NumDeaths_Weight = 0x2c4; // float
		constexpr auto Damage_Weight = 0x2c8; // float
		constexpr auto Kills_Weight = 0x2cc; // float
		constexpr auto SoloKills_Weight = 0x2d0; // float
		constexpr auto Assists_Weight = 0x2d4; // float
		constexpr auto ObjectiveTime_Weight = 0x2d8; // float
		constexpr auto Healing_Weight = 0x2dc; // float
		constexpr auto Shielding_Weight = 0x2e0; // float
		constexpr auto Credits_Weight = 0x2e4; // float
		constexpr auto Accuracy_Weight = 0x2e8; // float
		constexpr auto Killstreak_Multiplier = 0x2ec; // float
		constexpr auto numDeathsBase0 = 0x2f0; // float
		constexpr auto numDeathsBase1 = 0x2f4; // float
		constexpr auto PlayerSkillData = 0x2f8; // FSkillLevelRawData [0x2]
		constexpr auto TeamSkillData = 0x348; // FSkillLevelRawData [0x2]
		constexpr auto OldPlayerSkillData = 0x398; // FSkillLevelRawData [0x2]
		constexpr auto OldTeamSkillData = 0x3e8; // FSkillLevelRawData [0x2]
		constexpr auto SkillPercentages = 0x438; // FSkillLevelPercentageData [0x4]
	}

	namespace n_UPath_TowardPoint { // : UPathConstraint
		constexpr auto GoalPoint = 0x6c; // FVector
	}

	namespace n_ATgDevice_BarrageFire { // : ATgDevice
		constexpr auto m_nChainedBarrageNum = 0xa08; // int32_t
		constexpr auto m_BarrageDevice = 0xa0c; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_UseActive { // : UTgAIBehaviorAction
		constexpr auto ActiveType = 0x94; // EActiveType
	}

	namespace n_UUIData_CustomQueue { // : UUIDataObject
		constexpr auto m_nQueueId = 0x74; // int32_t
		constexpr auto m_nMapId = 0x78; // int32_t
		constexpr auto m_nName = 0x7c; // int32_t
		constexpr auto m_sName = 0x80; // FString
		constexpr auto m_eGameType = 0x90; // TG_GAME_TYPE
	}

	namespace n_UTgSeqEvent_PlayerInitialized { // : USequenceEvent
		constexpr auto bLocalPlayerOnly = 0x128; // uint32_t : 1
	}

	namespace n_ATgDevice_HexaFireGuns { // : ATgDevice_QuadWield
		constexpr auto m_CachedRuckusOwner = 0xa34; // ObjectProperty
	}

	namespace n_UNavMeshGoal_Random { // : UNavMeshPathGoalEvaluator
		constexpr auto MinDist = 0x7c; // int32_t
		constexpr auto BestRating = 0x80; // float
		constexpr auto PartialGoal = 0x84; // FPointer
	}

	namespace n_UTgAnimNodeStanceDualFire { // : UTgAnimNodeStanceTransitionerSynchronized
		constexpr auto m_bFireParityDirty = 0x188; // uint32_t : 1
		constexpr auto m_nDesiredStance = 0x18c; // int32_t
	}

	namespace n_UUIComponent_Card { // : UUIComponent_Display
		constexpr auto m_mcCTA = 0x124; // ObjectProperty
		constexpr auto m_mcChampion = 0x12c; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x134; // ObjectProperty
		constexpr auto m_mcCooldown = 0x13c; // ObjectProperty
		constexpr auto m_mcCost = 0x144; // ObjectProperty
		constexpr auto m_mcName = 0x14c; // ObjectProperty
		constexpr auto m_mcSkill = 0x154; // ObjectProperty
		constexpr auto m_mcDesc = 0x15c; // ObjectProperty
		constexpr auto m_mcRarity = 0x164; // ObjectProperty
		constexpr auto m_mcFrame = 0x16c; // ObjectProperty
		constexpr auto m_mcCooldownTimer = 0x174; // ObjectProperty
		constexpr auto m_mcIcon = 0x17c; // ObjectProperty
		constexpr auto m_mcRarityGlow = 0x184; // ObjectProperty
		constexpr auto m_bShowChampion = 0x18c; // uint32_t : 1
		constexpr auto m_bShowRarityGlow = 0x18c; // uint32_t : 1
	}

	namespace n_UUIComponent_StoreAccount { // : UUIComponent_Display
		constexpr auto m_pRedeemCode = 0x124; // ObjectProperty
		constexpr auto m_pPurchaseBoost = 0x12c; // ObjectProperty
		constexpr auto m_pChangeName = 0x134; // ObjectProperty
		constexpr auto m_grAccount = 0x13c; // ObjectProperty
	}

	namespace n_UNavMeshPath_MinDistBetweenSpecsOfType { // : UNavMeshPathConstraint
		constexpr auto MinDistBetweenEdgeTypes = 0x78; // float
		constexpr auto InitLocation = 0x7c; // FVector
		constexpr auto EdgeType = 0x88; // ENavMeshEdgeType
		constexpr auto Penalty = 0x8c; // float
	}

	namespace n_UTgInventoryObject_Listen_DuringAbility { // : UTgInventoryObject_Listen_AbilityProcBase
		constexpr auto m_bAbilityInActiveState = 0xcc; // uint32_t : 1
		constexpr auto m_bIsActive = 0xcc; // uint32_t : 1
		constexpr auto m_eDuringType = 0xd0; // EDuringAbilityType
	}

	namespace n_UTgAnimMetaData_Keyframed { // : UAnimMetaData
		constexpr auto KeyFrames = 0x60; // TArray<FMetaDataKeyFrame>
		constexpr auto bForceFirstKeyFrameOnBecomeRelevant = 0x70; // uint32_t : 1
		constexpr auto bForceLastKeyFrameOnCeaseRelevant = 0x70; // uint32_t : 1
		constexpr auto OnBecomeRelevantBehavior = 0x74; // EOnRelevanceBehavior
		constexpr auto OnCeaseRelevantBehavior = 0x75; // EOnRelevanceBehavior
		constexpr auto OnBecomeRelevantStrength = 0x78; // float
		constexpr auto OnCeaseRelevantStrength = 0x7c; // float
	}

	namespace n_UTgAIBehaviorComposite_SequenceScripted { // : UTgAIBehaviorComposite
		constexpr auto bFreezeOnLast = 0xb8; // uint32_t : 1
		constexpr auto bIsLooping = 0xb8; // uint32_t : 1
		constexpr auto bFirstChildIsResetTest = 0xb8; // uint32_t : 1
		constexpr auto bResetSequenceOnFailure = 0xb8; // uint32_t : 1
	}

	namespace n_ATgDeploy_ChurchillShield { // : ATgDeploy_Shield
		constexpr auto m_fMinPitch = 0x470; // float
	}

	namespace n_ATgDevice_RiderLegMarksExplode { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_ListenConsumeMarks = 0xa08; // FPointer
		constexpr auto s_fDamage = 0xa10; // float
	}

	namespace n_UInterpTrackInstHeadTracking { // : UInterpTrackInst
		constexpr auto Action = 0x60; // EHeadTrackingAction
		constexpr auto CurrentActorMap = 0x64; // TMap<None, None>
		constexpr auto Mesh = 0xac; // ComponentProperty
		constexpr auto TrackControls = 0xb4; // TArray<ObjectProperty>
		constexpr auto LastUpdatePosition = 0xc4; // float
	}

	namespace n_UAppNotificationsBase { // : UPlatformInterfaceBase
		constexpr auto AppLaunchNotification = 0x80; // FLaunchNotificationInfo
		constexpr auto __OnReceivedLocalNotification__Delegate = 0xac; // DelegateProperty
		constexpr auto __OnReceivedRemoteNotification__Delegate = 0xbc; // DelegateProperty
	}

	namespace n_UTcpNetDriver { // : UNetDriver
		constexpr auto AllowPlayerPortUnreach = 0x208; // uint32_t : 1
		constexpr auto LogPortUnreach = 0x20c; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorAction_SelectThreatCombatTarget { // : UTgAIBehaviorAction
		constexpr auto bMustBeHighestThreat = 0x94; // uint32_t : 1
		constexpr auto bMustBeInLeash = 0x94; // uint32_t : 1
		constexpr auto bMustBeInSightRadius = 0x94; // uint32_t : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // uint32_t : 1
		constexpr auto bMustBeHittable = 0x94; // uint32_t : 1
		constexpr auto TargetType = 0x98; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
	}

	namespace n_UUIComponent_CalendarEventOverview { // : UUIComponent_Display
		constexpr auto m_grOverview = 0x124; // ObjectProperty
	}

	namespace n_USeqAct_MobileRemoveInputZone { // : USequenceAction
		constexpr auto ZoneName = 0x108; // FString
	}

	namespace n_UTgDeviceForm_Mount { // : UTgDeviceForm
		constexpr auto m_LoadedAnimSets = 0x28c; // TArray<ObjectProperty>
	}

	namespace n_UTgAIBehaviorCondition_NumMinionsInTowerRadius { // : UTgAIBehaviorCondition
		constexpr auto bMinionsMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto bTowerMustBeEnemy = 0x98; // uint32_t : 1
		constexpr auto MinionThreshold = 0x9c; // int32_t
	}

	namespace n_ATgSkeletalMeshActor_Lobby { // : ATgSkeletalMeshActor_LobbyBase
		constexpr auto m_fSpawnOffsetYaw = 0x4d8; // float
		constexpr auto m_fMaxSpawnRotation = 0x4dc; // float
		constexpr auto m_fMinSpawnRotation = 0x4e0; // float
		constexpr auto m_bAdjustMeshToGround = 0x4e4; // uint32_t : 1
		constexpr auto m_bHideDuringPostureChanges = 0x4e4; // uint32_t : 1
		constexpr auto m_bCanBeRotated = 0x4e4; // uint32_t : 1
		constexpr auto m_bForceActiveForVideo = 0x4e4; // uint32_t : 1
		constexpr auto m_bInTransition = 0x4e4; // uint32_t : 1
		constexpr auto m_bAwaitingPostureChange = 0x4e4; // uint32_t : 1
		constexpr auto m_bEnablePostures = 0x4e4; // uint32_t : 1
		constexpr auto m_CardMICBotIdPending = 0x4e8; // int32_t
		constexpr auto m_CardMICTransitionDesiredAlpha = 0x4ec; // float
		constexpr auto m_CardMICTransitionAlpha = 0x4f0; // float
		constexpr auto m_FlagStandActor = 0x4f4; // ObjectProperty
		constexpr auto m_PedestalActor = 0x4fc; // ObjectProperty
		constexpr auto m_CardMICs = 0x504; // TArray<ObjectProperty>
		constexpr auto r_CurrentPosture = 0x514; // TG_POSTURE
		constexpr auto m_fRotationAmount = 0x518; // float
		constexpr auto m_fDesiredRotationAmount = 0x51c; // float
		constexpr auto m_rOriginalRotation = 0x520; // FRotator
		constexpr auto m_vOriginalLocation = 0x52c; // FVector
		constexpr auto m_Spray3dSpecialFx = 0x538; // ObjectProperty
		constexpr auto m_fSpray3dTriggerTime = 0x540; // float
		constexpr auto m_fSpray3dTriggerTimer = 0x544; // float
		constexpr auto m_nSkinId = 0x548; // int32_t
		constexpr auto m_nDeviceSkinId = 0x54c; // int32_t
		constexpr auto m_fSelectionGlowRemainingTime = 0x550; // float
		constexpr auto m_fSelectionGlowTotalTime = 0x554; // float
		constexpr auto m_PostureBlendNodes = 0x558; // TArray<ObjectProperty>
	}

	namespace n_UUIHudTarget { // : UTgGfxScene
		constexpr auto m_nOwnerBotId = 0x1ec; // int32_t
		constexpr auto m_TargetingManagers = 0x1f0; // TArray<ObjectProperty>
	}

	namespace n_UMaterialExpressionScalarParameter { // : UMaterialExpressionParameter
		constexpr auto DefaultValue = 0xd0; // float
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceTarget { // : UTgInventoryObject_Listen_AffectedByDevice
		constexpr auto m_bIsCardActive = 0xc4; // uint32_t : 1
		constexpr auto m_HitActors = 0xc8; // TArray<ObjectProperty>
	}

	namespace n_UMobileMenuListItem { // : UMobileMenuElement
		constexpr auto Width = 0x74; // float
		constexpr auto Height = 0x78; // float
	}

	namespace n_UUIScene_UIGameMenu { // : UUIScene
		constexpr auto m_Buttons = 0x1cc; // TArray<ObjectProperty>
		constexpr auto m_ButtonCTAs = 0x1dc; // TArray<ObjectProperty>
		constexpr auto m_eOptions = 0x1ec; // TArray<int32_t>
		constexpr auto m_grButtons = 0x1fc; // ObjectProperty
	}

	namespace n_AVolumePathNode { // : APathNode
		constexpr auto StartingRadius = 0x378; // float
		constexpr auto StartingHeight = 0x37c; // float
	}

	namespace n_UInterpTrackInstMove { // : UInterpTrackInst
		constexpr auto ResetLocation = 0x60; // FVector
		constexpr auto ResetRotation = 0x6c; // FRotator
		constexpr auto InitialTM = 0x80; // FMatrix
		constexpr auto InitialQuat = 0xc0; // FQuat
	}

	namespace n_UTextureCube { // : UTexture
		constexpr auto SizeX = 0x100; // int32_t
		constexpr auto SizeY = 0x104; // int32_t
		constexpr auto Format = 0x108; // EPixelFormat
		constexpr auto NumMips = 0x10c; // int32_t
		constexpr auto bIsCubemapValid = 0x110; // uint32_t : 1
		constexpr auto FacePosX = 0x114; // ObjectProperty
		constexpr auto FaceNegX = 0x11c; // ObjectProperty
		constexpr auto FacePosY = 0x124; // ObjectProperty
		constexpr auto FaceNegY = 0x12c; // ObjectProperty
		constexpr auto FacePosZ = 0x134; // ObjectProperty
		constexpr auto FaceNegZ = 0x13c; // ObjectProperty
	}

	namespace n_ATgPropActor { // : AActor
		constexpr auto c_Mesh = 0x280; // ComponentProperty
		constexpr auto m_fTickPostDeactivate = 0x288; // float
		constexpr auto m_bDeactivateOnPhysNone = 0x28c; // uint32_t : 1
		constexpr auto m_bIsActive = 0x28c; // uint32_t : 1
		constexpr auto m_bForceHidden = 0x28c; // uint32_t : 1
		constexpr auto m_ePhysicsOnActive = 0x290; // EPhysics
	}

	namespace n_UTgDeviceForm_Salvo { // : UTgDeviceForm
		constexpr auto m_SalvoBlendList1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_SalvoBlendList3P = 0x29c; // TArray<ObjectProperty>
		constexpr auto m_bSalvoLightShouldBlink = 0x2ac; // uint32_t : 1
		constexpr auto m_bSalvoLightIsOn = 0x2ac; // uint32_t : 1
		constexpr auto m_fLastLightChangeTime = 0x2b0; // float
		constexpr auto m_fMinLightChangeTime = 0x2b4; // float
	}

	namespace n_ANavigationPoint { // : AActor
		constexpr auto bEndPoint = 0x280; // uint32_t : 1
		constexpr auto bTransientEndPoint = 0x280; // uint32_t : 1
		constexpr auto bHideEditorPaths = 0x280; // uint32_t : 1
		constexpr auto bCanReach = 0x280; // uint32_t : 1
		constexpr auto bBlocked = 0x280; // uint32_t : 1
		constexpr auto bOneWayPath = 0x280; // uint32_t : 1
		constexpr auto bNeverUseStrafing = 0x280; // uint32_t : 1
		constexpr auto bAlwaysUseStrafing = 0x280; // uint32_t : 1
		constexpr auto bForceNoStrafing = 0x280; // uint32_t : 1
		constexpr auto bAutoBuilt = 0x280; // uint32_t : 1
		constexpr auto bSpecialMove = 0x280; // uint32_t : 1
		constexpr auto bNoAutoConnect = 0x280; // uint32_t : 1
		constexpr auto bNotBased = 0x280; // uint32_t : 1
		constexpr auto bPathsChanged = 0x280; // uint32_t : 1
		constexpr auto bDestinationOnly = 0x280; // uint32_t : 1
		constexpr auto bSourceOnly = 0x280; // uint32_t : 1
		constexpr auto bSpecialForced = 0x280; // uint32_t : 1
		constexpr auto bMustBeReachable = 0x280; // uint32_t : 1
		constexpr auto bBlockable = 0x280; // uint32_t : 1
		constexpr auto bFlyingPreferred = 0x280; // uint32_t : 1
		constexpr auto bMayCausePain = 0x280; // uint32_t : 1
		constexpr auto bAlreadyVisited = 0x280; // uint32_t : 1
		constexpr auto bVehicleDestination = 0x280; // uint32_t : 1
		constexpr auto bMakeSourceOnly = 0x280; // uint32_t : 1
		constexpr auto bMustTouchToReach = 0x280; // uint32_t : 1
		constexpr auto bCanWalkOnToReach = 0x280; // uint32_t : 1
		constexpr auto bBuildLongPaths = 0x280; // uint32_t : 1
		constexpr auto bBlockedForVehicles = 0x280; // uint32_t : 1
		constexpr auto bPreferredVehiclePath = 0x280; // uint32_t : 1
		constexpr auto bHasCrossLevelPaths = 0x280; // uint32_t : 1
		constexpr auto bShouldSaveForCheckpoint = 0x280; // uint32_t : 1
		constexpr auto NavOctreeObject = 0x284; // FNavigationOctreeObject
		constexpr auto PathList = 0x2c0; // TArray<ObjectProperty>
		constexpr auto Volumes = 0x2d0; // TArray<FActorReference>
		constexpr auto visitedWeight = 0x2e0; // int32_t
		constexpr auto bestPathWeight = 0x2e4; // int32_t
		constexpr auto nextNavigationPoint = 0x2e8; // ObjectProperty
		constexpr auto nextOrdered = 0x2f0; // ObjectProperty
		constexpr auto prevOrdered = 0x2f8; // ObjectProperty
		constexpr auto previousPath = 0x300; // ObjectProperty
		constexpr auto Cost = 0x308; // int32_t
		constexpr auto ExtraCost = 0x30c; // int32_t
		constexpr auto TransientCost = 0x310; // int32_t
		constexpr auto FearCost = 0x314; // int32_t
		constexpr auto CostArray = 0x318; // TArray<FDebugNavCost>
		constexpr auto InventoryCache = 0x328; // ObjectProperty
		constexpr auto InventoryDist = 0x330; // float
		constexpr auto LastDetourWeight = 0x334; // float
		constexpr auto CylinderComponent = 0x338; // ComponentProperty
		constexpr auto MaxPathSize = 0x340; // FCylinder
		constexpr auto NavGuid = 0x348; // FGuid
		constexpr auto GoodSprite = 0x358; // ComponentProperty
		constexpr auto BadSprite = 0x360; // ComponentProperty
		constexpr auto NetworkID = 0x368; // int32_t
		constexpr auto AnchoredPawn = 0x36c; // ObjectProperty
		constexpr auto LastAnchoredPawnTime = 0x374; // float
	}

	namespace n_UMaterialExpressionRotateAboutAxis { // : UMaterialExpression
		constexpr auto NormalizedRotationAxisAndAngle = 0xb0; // FExpressionInput
		constexpr auto PositionOnAxis = 0xe4; // FExpressionInput
		constexpr auto Position = 0x118; // FExpressionInput
	}

	namespace n_UUIComponent_EndOfMatchLobbyRewards { // : UUIComponent_Display
		constexpr auto m_mcCurrencies = 0x124; // ObjectProperty
		constexpr auto m_mcMaxGold = 0x12c; // ObjectProperty
		constexpr auto m_pGoldCount = 0x134; // ObjectProperty
		constexpr auto m_pEventCurrencyCount = 0x13c; // ObjectProperty
		constexpr auto m_pRewardPanels = 0x144; // ObjectProperty
		constexpr auto m_pAccoladeList = 0x14c; // ObjectProperty
		constexpr auto m_pToggleDetailsAction = 0x154; // ObjectProperty
		constexpr auto m_grRewards = 0x15c; // ObjectProperty
	}

	namespace n_UUIComponent_LobbySlotItem { // : UUIComponent_Display
		constexpr auto m_Item = 0x124; // ObjectProperty
		constexpr auto m_pPrices = 0x12c; // ObjectProperty
		constexpr auto m_pOriginalPrices = 0x134; // ObjectProperty
		constexpr auto m_pBuyButton = 0x13c; // ObjectProperty
		constexpr auto m_pHighlight = 0x144; // ObjectProperty
	}

	namespace n_UUIGameInfoSummary { // : UUIResourceDataProvider
		constexpr auto ClassName = 0x94; // FString
		constexpr auto GameAcronym = 0xa4; // FString
		constexpr auto MapPrefix = 0xb4; // FString
		constexpr auto bIsTeamGame = 0xc4; // uint32_t : 1
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
		constexpr auto GameSettingsClassName = 0xc8; // FString
		constexpr auto GameName = 0xd8; // FString
		constexpr auto Description = 0xe8; // FString
	}

	namespace n_UTgAIBehaviorCondition_SelectedTargetHealthPercent { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto bIgnoreTaskforce = 0x9c; // uint32_t : 1
		constexpr auto TargetSelector = 0xa0; // ETargetSelector
		constexpr auto TargetType = 0xa1; // ECombatTargetType
		constexpr auto TargetId = 0xa4; // int32_t
		constexpr auto HealthPct = 0xa8; // float
	}

	namespace n_ATgTeleporter { // : ATeleporter
		constexpr auto m_nMapObjectId = 0x3a4; // int32_t
		constexpr auto m_nMapId = 0x3a8; // int32_t
		constexpr auto m_nPreload = 0x3ac; // uint32_t : 1
		constexpr auto m_bSetTaskForce = 0x3ac; // uint32_t : 1
		constexpr auto m_bBalanceTaskForce = 0x3ac; // uint32_t : 1
		constexpr auto m_bIgnoreNonMembers = 0x3ac; // uint32_t : 1
		constexpr auto m_bUsePlayerStart = 0x3ac; // uint32_t : 1
		constexpr auto m_bRequestMission = 0x3ac; // uint32_t : 1
		constexpr auto m_nStartGroup = 0x3b0; // char
		constexpr auto m_nTaskForce = 0x3b1; // char
	}

	namespace n_UTgAIUtilityFilter_LoSToTarget { // : UTgAIUtilityFilter
		constexpr auto bInverse = 0xc0; // uint32_t : 1
	}

	namespace n_UUIScene_UIHalloweenEvent { // : UUIScene
		constexpr auto m_pTabs = 0x1cc; // ObjectProperty
		constexpr auto m_pBack = 0x1d4; // ObjectProperty
		constexpr auto m_pHome = 0x1dc; // ObjectProperty
		constexpr auto m_pStore = 0x1e4; // ObjectProperty
		constexpr auto m_pVault = 0x1ec; // ObjectProperty
		constexpr auto m_pOverview = 0x1f4; // ObjectProperty
		constexpr auto m_pRotator = 0x1fc; // ObjectProperty
	}

	namespace n_UTgAIUtilityFilter_AssaultRangeType { // : UTgAIUtilityFilter
		constexpr auto RangeType = 0xc0; // ERangeType
	}

	namespace n_ATgWeaponMeshActor_Orb { // : ATgWeaponMeshActor
		constexpr auto m_fFireGlowFadeTime = 0x450; // float
		constexpr auto m_fRemainingGlowFadeTime = 0x454; // float
	}

	namespace n_UUIComponent_OptionEntryBase { // : UUIComponent_Interactable
		constexpr auto m_mcLabel = 0x140; // ObjectProperty
		constexpr auto m_pGroup = 0x148; // ObjectProperty
	}

	namespace n_UTgGamePhase_RandomlySpawnCreditCaches { // : UTgGamePhase
		constexpr auto m_fSpawnPeriod = 0xb8; // float
		constexpr auto m_fSpawnTimer = 0xbc; // float
	}

	namespace n_ATgDevice_ChargeFernando { // : ATgDevice_Charge
		constexpr auto m_fCooldownReduction = 0xa7c; // float
	}

	namespace n_ATgDevice_LexInhand { // : ATgDevice
		constexpr auto m_CachedLexPawn = 0xa08; // ObjectProperty
		constexpr auto m_CachedInPursuitDevice = 0xa10; // ObjectProperty
		constexpr auto m_CachedVengeanceDevice = 0xa18; // ObjectProperty
		constexpr auto m_bShouldAutoFire = 0xa20; // uint32_t : 1
		constexpr auto r_bDeathHastensEquiped = 0xa20; // uint32_t : 1
		constexpr auto m_fQueueFireTime = 0xa24; // float
		constexpr auto m_fQueueFireTimeThreshold = 0xa28; // float
	}

	namespace n_UIpNetDriverSteamworks { // : UTcpNetDriver
		constexpr auto bSteamSocketsOnly = 0x228; // uint32_t : 1
	}

	namespace n_UTgAIUtilityFilter_StayInTargetFOV { // : UTgAIUtilityFilter
		constexpr auto bInverse = 0xc0; // uint32_t : 1
	}

	namespace n_UUIDataChatManager { // : UUIDataObject
		constexpr auto m_bSentReplyHelp = 0x74; // uint32_t : 1
		constexpr auto m_bLoadedEOMLobby = 0x74; // uint32_t : 1
		constexpr auto m_AllChatData = 0x78; // TArray<FChannelChatData>
		constexpr auto m_ReplyTargets = 0x88; // TArray<FString>
		constexpr auto m_NameToPlayerIdMap = 0x98; // TMap<None, None>
	}

	namespace n_UUIScene_UINotificationCenter { // : UUIScene
		constexpr auto m_eState = 0x1cc; // char
		constexpr auto m_pTabs = 0x1d0; // ObjectProperty
		constexpr auto m_pBack = 0x1d8; // ObjectProperty
		constexpr auto m_pBlocker = 0x1e0; // ObjectProperty
		constexpr auto m_pNotifications = 0x1e8; // ObjectProperty
		constexpr auto m_pCoupons = 0x1f0; // ObjectProperty
		constexpr auto m_grInput = 0x1f8; // ObjectProperty
	}

	namespace n_UUIData_EventChallenge { // : UUIData
		constexpr auto m_sDescription = 0x64; // FString
		constexpr auto m_dwGoalId = 0x74; // Fdword
		constexpr auto m_pParentHub = 0x78; // ObjectProperty
	}

	namespace n_UMaterialInterface { // : USurface
		constexpr auto ParentRefFence = 0x60; // FRenderCommandFence_Mirror
		constexpr auto LightmassSettings = 0x64; // FLightmassMaterialInterfaceSettings
		constexpr auto bHasQualitySwitch = 0x80; // uint32_t : 1
		constexpr auto bRunTrimmingTool = 0x80; // uint32_t : 1
		constexpr auto bUseCachedCircleVerts = 0x80; // uint32_t : 1
		constexpr auto bScanRedChannel = 0x80; // uint32_t : 1
		constexpr auto bScanGreenChannel = 0x80; // uint32_t : 1
		constexpr auto bScanBlueChannel = 0x80; // uint32_t : 1
		constexpr auto bScanAlphaChannel = 0x80; // uint32_t : 1
		constexpr auto bClearData = 0x80; // uint32_t : 1
		constexpr auto bAutoFlattenMobile = 0x80; // uint32_t : 1
		constexpr auto bAutoFlattenMobileNormalTexture = 0x80; // uint32_t : 1
		constexpr auto bMobileAllowFog = 0x80; // uint32_t : 1
		constexpr auto bGenerateSubUV = 0x80; // uint32_t : 1
		constexpr auto bUseMobileSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobileVertexSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobilePixelSpecular = 0x80; // uint32_t : 1
		constexpr auto bUseMobileBumpOffset = 0x80; // uint32_t : 1
		constexpr auto bLockColorBlending = 0x80; // uint32_t : 1
		constexpr auto bUseMobileUniformColorMultiply = 0x80; // uint32_t : 1
		constexpr auto bUseMobileVertexColorMultiply = 0x80; // uint32_t : 1
		constexpr auto bUseMobileDetailNormal = 0x80; // uint32_t : 1
		constexpr auto bBaseTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bEmissiveTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bNormalTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bMaskTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bDetailTextureTransformed = 0x80; // uint32_t : 1
		constexpr auto bUseMobileWaveVertexMovement = 0x80; // uint32_t : 1
		constexpr auto bMobileEnableBounceLight = 0x80; // uint32_t : 1
		constexpr auto bUseMobileLandscapeMonochromeLayerBlending = 0x80; // uint32_t : 1
		constexpr auto TrimmedVertices = 0x84; // TArray<FVector2D>
		constexpr auto FlattenBackgroundColor = 0x94; // FColor
		constexpr auto MobileBaseTexture = 0x98; // ObjectProperty
		constexpr auto FlattenedTexture = 0xa0; // ObjectProperty
		constexpr auto MobileBaseTextureTexCoordsSource = 0xa8; // EMobileTexCoordsSource
		constexpr auto MobileAmbientOcclusionSource = 0xa9; // EMobileAmbientOcclusionSource
		constexpr auto MobileSpecularMask = 0xaa; // EMobileSpecularMask
		constexpr auto MobileEmissiveColorSource = 0xab; // EMobileEmissiveColorSource
		constexpr auto MobileEmissiveMaskSource = 0xac; // EMobileValueSource
		constexpr auto MobileEnvironmentMaskSource = 0xad; // EMobileValueSource
		constexpr auto MobileEnvironmentBlendMode = 0xae; // EMobileEnvironmentBlendMode
		constexpr auto MobileRimLightingMaskSource = 0xaf; // EMobileValueSource
		constexpr auto MobileMaskTextureTexCoordsSource = 0xb0; // EMobileTexCoordsSource
		constexpr auto MobileAlphaValueSource = 0xb1; // EMobileAlphaValueSource
		constexpr auto MobileDetailTextureTexCoordsSource = 0xb2; // EMobileTexCoordsSource
		constexpr auto MobileTextureBlendFactorSource = 0xb3; // EMobileTextureBlendFactorSource
		constexpr auto MobileColorMultiplySource = 0xb4; // EMobileColorMultiplySource
		constexpr auto MobileNormalTexture = 0xb8; // ObjectProperty
		constexpr auto SubUVFrameRate = 0xc0; // float
		constexpr auto SubUVFrameCountAlongAxes = 0xc4; // int32_t
		constexpr auto SubUVFrameSize = 0xc8; // float
		constexpr auto MobileSpecularColor = 0xcc; // FLinearColor
		constexpr auto MobileSpecularPower = 0xdc; // float
		constexpr auto MobileEmissiveTexture = 0xe0; // ObjectProperty
		constexpr auto MobileEmissiveColor = 0xe8; // FLinearColor
		constexpr auto MobileEnvironmentTexture = 0xf8; // ObjectProperty
		constexpr auto MobileEnvironmentAmount = 0x100; // float
		constexpr auto MobileEnvironmentColor = 0x104; // FLinearColor
		constexpr auto MobileEnvironmentFresnelAmount = 0x114; // float
		constexpr auto MobileEnvironmentFresnelExponent = 0x118; // float
		constexpr auto MobileRimLightingStrength = 0x11c; // float
		constexpr auto MobileRimLightingExponent = 0x120; // float
		constexpr auto MobileRimLightingColor = 0x124; // FLinearColor
		constexpr auto MobileBumpOffsetReferencePlane = 0x134; // float
		constexpr auto MobileBumpOffsetHeightRatio = 0x138; // float
		constexpr auto MobileMaskTexture = 0x13c; // ObjectProperty
		constexpr auto MobileOpacityMultiplier = 0x144; // float
		constexpr auto MobileDetailTexture = 0x148; // ObjectProperty
		constexpr auto MobileDetailTexture2 = 0x150; // ObjectProperty
		constexpr auto MobileDetailTexture3 = 0x158; // ObjectProperty
		constexpr auto DefaultUniformColor = 0x160; // FLinearColor
		constexpr auto MobileDefaultUniformColor = 0x170; // FLinearColor
		constexpr auto TransformCenterX = 0x180; // float
		constexpr auto MobileTransformCenterX = 0x184; // float
		constexpr auto TransformCenterY = 0x188; // float
		constexpr auto MobileTransformCenterY = 0x18c; // float
		constexpr auto PannerSpeedX = 0x190; // float
		constexpr auto MobilePannerSpeedX = 0x194; // float
		constexpr auto PannerSpeedY = 0x198; // float
		constexpr auto MobilePannerSpeedY = 0x19c; // float
		constexpr auto RotateSpeed = 0x1a0; // float
		constexpr auto MobileRotateSpeed = 0x1a4; // float
		constexpr auto FixedScaleX = 0x1a8; // float
		constexpr auto MobileFixedScaleX = 0x1ac; // float
		constexpr auto FixedScaleY = 0x1b0; // float
		constexpr auto MobileFixedScaleY = 0x1b4; // float
		constexpr auto SineScaleX = 0x1b8; // float
		constexpr auto MobileSineScaleX = 0x1bc; // float
		constexpr auto SineScaleY = 0x1c0; // float
		constexpr auto MobileSineScaleY = 0x1c4; // float
		constexpr auto SineScaleFrequencyMultipler = 0x1c8; // float
		constexpr auto MobileSineScaleFrequencyMultipler = 0x1cc; // float
		constexpr auto FixedOffsetX = 0x1d0; // float
		constexpr auto MobileFixedOffsetX = 0x1d4; // float
		constexpr auto FixedOffsetY = 0x1d8; // float
		constexpr auto MobileFixedOffsetY = 0x1dc; // float
		constexpr auto MobileTangentVertexFrequencyMultiplier = 0x1e0; // float
		constexpr auto MobileVerticalFrequencyMultiplier = 0x1e4; // float
		constexpr auto MobileMaxVertexMovementAmplitude = 0x1e8; // float
		constexpr auto MobileSwayFrequencyMultiplier = 0x1ec; // float
		constexpr auto MobileSwayMaxAngle = 0x1f0; // float
		constexpr auto MobileDirectionalLightDirection = 0x1f4; // FVector
		constexpr auto MobileDirectionalLightBrightness = 0x200; // float
		constexpr auto MobileDirectionalLightColor = 0x204; // FColor
		constexpr auto MobileBounceLightDirection = 0x208; // FVector
		constexpr auto MobileBounceLightBrightness = 0x214; // float
		constexpr auto MobileBounceLightColor = 0x218; // FColor
		constexpr auto MobileSkyLightBrightness = 0x21c; // float
		constexpr auto MobileSkyLightColor = 0x220; // FColor
		constexpr auto MobileLandscapeLayerNames = 0x224; // FName [0x4]
		constexpr auto MobileLandscapeMonochomeLayerColors = 0x244; // FColor [0x4]
	}

	namespace n_UClientBeaconAddressResolver { // : UObject
		constexpr auto BeaconPort = 0x60; // int32_t
		constexpr auto BeaconName = 0x64; // FName
	}

	namespace n_UInterpTrackVisibility { // : UInterpTrack
		constexpr auto VisibilityTrack = 0xa0; // TArray<FVisibilityTrackKey>
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_ATeamInfo { // : AReplicationInfo
		constexpr auto TeamName = 0x280; // FString
		constexpr auto Size = 0x290; // int32_t
		constexpr auto Score = 0x294; // float
		constexpr auto TeamIndex = 0x298; // int32_t
		constexpr auto TeamColor = 0x29c; // FColor
	}

	namespace n_ATgDevice_HeatTransfer { // : ATgDevice_ShieldMod
		constexpr auto m_nAccumulatedDamage = 0xa08; // int32_t
		constexpr auto m_nActivationDamage = 0xa0c; // int32_t
	}

	namespace n_UTgAIUtility { // : UTgAIBehaviorNode
		constexpr auto UtilityType = 0x94; // EUtilityType
		constexpr auto IgnoreBehaviorState = 0x98; // TArray<EBotBehaviorState>
		constexpr auto RejctBehaviorState = 0xa8; // TArray<EBotBehaviorState>
		constexpr auto ParentIndex = 0xb8; // int32_t
	}

	namespace n_ATgDevice_DredgeQ { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UInterpTrackColorProp { // : UInterpTrackVectorBase
		constexpr auto PropertyName = 0xb8; // FName
	}

	namespace n_UTgAIUtilityFilter_DistanceFromTarget { // : UTgAIUtilityFilter
		constexpr auto DistanceCutoff = 0xc0; // float
		constexpr auto bInverse = 0xc4; // uint32_t : 1
	}

	namespace n_UUIScene_UIChallengeSystem { // : UUIScene
		constexpr auto m_pChallengeSystemDisplay = 0x1cc; // ObjectProperty
		constexpr auto m_GamepadPurchaseInput = 0x1d4; // ObjectProperty
		constexpr auto m_SwitchToRewards = 0x1dc; // ObjectProperty
		constexpr auto m_SwitchToHubs = 0x1e4; // ObjectProperty
		constexpr auto m_fTickTimer = 0x1ec; // float
		constexpr auto m_fPlayerUpdateTimer = 0x1f0; // float
		constexpr auto m_bPlayerIsUpdated = 0x1f4; // uint32_t : 1
		constexpr auto m_fPlayerUpdateFrequency = 0x1f8; // float
	}

	namespace n_UUIComponent_GoalReward { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcItemName = 0x12c; // ObjectProperty
		constexpr auto m_mcGoal = 0x134; // ObjectProperty
		constexpr auto m_mcOwned = 0x13c; // ObjectProperty
		constexpr auto m_mcLock = 0x144; // ObjectProperty
		constexpr auto m_mcIcon = 0x14c; // ObjectProperty
		constexpr auto m_Progress = 0x154; // ObjectProperty
	}

	namespace n_UFaceFXAnimSet { // : UObject
		constexpr auto InternalFaceFXAnimSet = 0x60; // FPointer
		constexpr auto RawFaceFXAnimSetBytes = 0x68; // TArray<char>
		constexpr auto RawFaceFXMiniSessionBytes = 0x78; // TArray<char>
		constexpr auto NumLoadErrors = 0x88; // int32_t
	}

	namespace n_ATgDevice_Leap { // : ATgDevice
		constexpr auto m_bLeapInLookDirection = 0xa08; // uint32_t : 1
		constexpr auto m_bDidJustLeap = 0xa08; // uint32_t : 1
		constexpr auto m_bJumpTowardsAcceleration = 0xa08; // uint32_t : 1
		constexpr auto m_bFireOnLeap = 0xa08; // uint32_t : 1
		constexpr auto m_bAddRandomLateralRotation = 0xa08; // uint32_t : 1
		constexpr auto m_nRotationUU = 0xa0c; // int32_t
	}

	namespace n_UTgInventoryObject_Listen_Combo_Saati { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_MarkedTargets = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_fMarkedTimestamps = 0xdc; // TArray<float>
	}

	namespace n_UUIHudNotify { // : UTgGfxScene
		constexpr auto m_fDisplayTimer = 0x1ec; // float
		constexpr auto m_fKillTime = 0x1f0; // float
		constexpr auto m_fKillTimer = 0x1f4; // float
		constexpr auto m_fAlertTime = 0x1f8; // float
		constexpr auto m_fAlertTimer = 0x1fc; // float
		constexpr auto m_fAccoladeTime = 0x200; // float
		constexpr auto m_fAccoladeTimer = 0x204; // float
		constexpr auto m_sCKBuffMsgKey = 0x208; // FString
		constexpr auto m_NewData = 0x218; // FNotifyData
		constexpr auto m_mcNotify = 0x25c; // ObjectProperty
		constexpr auto m_mcNotifyTF = 0x264; // ObjectProperty
		constexpr auto m_mcTeamTF = 0x26c; // ObjectProperty
		constexpr auto m_bRejectMessages = 0x274; // uint32_t : 1
		constexpr auto m_bShowAccolades = 0x274; // uint32_t : 1
		constexpr auto m_scCaptured = 0x278; // ObjectProperty
		constexpr auto m_scGateDestroyed = 0x280; // ObjectProperty
		constexpr auto m_scSiegeDestroyed = 0x288; // ObjectProperty
		constexpr auto m_scGettingCaptured = 0x290; // ObjectProperty
		constexpr auto m_Kills = 0x298; // TArray<FNotifyData>
		constexpr auto m_Alerts = 0x2a8; // TArray<FNotifyData>
		constexpr auto m_Accolades = 0x2b8; // TArray<FNotifyData>
	}

	namespace n_UPBRuleNodeLODQuad { // : UPBRuleNodeBase
		constexpr auto MassiveLODDistanceScale = 0x70; // float
	}

	namespace n_ATgDeploy_SpinningShield { // : ATgDeploy_Shield
		constexpr auto r_fRotationOffset = 0x470; // float
	}

	namespace n_UUIData_Match { // : UUIDataObject
		constexpr auto dwMatchId = 0x74; // Fdword
		constexpr auto m_PlayersMap = 0x78; // TMap<None, None>
		constexpr auto m_BotsMap = 0xc0; // TMap<None, None>
		constexpr auto MatchMembers = 0x108; // TArray<ObjectProperty>
		constexpr auto m_AllowedClasses = 0x118; // FSet_Mirror
		constexpr auto m_LobbyChampionStates = 0x160; // TArray<ObjectProperty>
		constexpr auto m_dwCurrentChooserId = 0x170; // Fdword
		constexpr auto m_dwPreviousTimeToLaunch = 0x174; // Fdword
		constexpr auto m_eCurrentLobbyState = 0x178; // UIDataMatchLobbyState
	}

	namespace n_UTgGameDC_MapEntity { // : UTgDataChunk
		constexpr auto m_nPawnId = 0x158; // int32_t
	}

	namespace n_UUIHudScore { // : UTgGfxScene
		constexpr auto m_fPayloadProgressWidth = 0x1ec; // float
		constexpr auto m_fPayloadProgressBuffer = 0x1f0; // float
		constexpr auto m_nTime = 0x1f4; // int32_t
		constexpr auto m_nScoreA = 0x1f8; // int32_t
		constexpr auto m_nScoreB = 0x1fc; // int32_t
		constexpr auto m_nTicketsFriend = 0x200; // int32_t
		constexpr auto m_nTicketsEnemy = 0x204; // int32_t
		constexpr auto m_nOvertime = 0x208; // int32_t
		constexpr auto m_nPushTime = 0x20c; // int32_t
		constexpr auto m_nSetupTime = 0x210; // int32_t
		constexpr auto m_nCaptureA = 0x214; // int32_t
		constexpr auto m_nCaptureB = 0x218; // int32_t
		constexpr auto m_nCaptureTeam = 0x21c; // int32_t
		constexpr auto m_nCaptureCount = 0x220; // int32_t
		constexpr auto m_nOvertimeState = 0x224; // int32_t
		constexpr auto m_nTimeRemaining = 0x228; // int32_t
		constexpr auto m_bPushing = 0x22c; // uint32_t : 1
		constexpr auto m_bOvertime = 0x22c; // uint32_t : 1
		constexpr auto m_bStarting = 0x22c; // uint32_t : 1
		constexpr auto m_bCapturing = 0x22c; // uint32_t : 1
		constexpr auto m_bCaptureOvertime = 0x22c; // uint32_t : 1
		constexpr auto m_bUseSubtitlePrompt = 0x22c; // uint32_t : 1
		constexpr auto m_bShowingAbyssalEcho = 0x22c; // uint32_t : 1
		constexpr auto m_fOvertime = 0x230; // float
		constexpr auto m_fPushTimer = 0x234; // float
		constexpr auto m_fSetupTimer = 0x238; // float
		constexpr auto m_fOvertimeDuration = 0x23c; // float
		constexpr auto m_movieClips = 0x240; // TArray<ObjectProperty>
		constexpr auto m_mcSiege = 0x250; // ObjectProperty
		constexpr auto m_mcSiegeTime = 0x258; // ObjectProperty
		constexpr auto m_mcSiegeMaxA = 0x260; // ObjectProperty
		constexpr auto m_mcSiegeMaxB = 0x268; // ObjectProperty
		constexpr auto m_mcSiegeScoreA = 0x270; // ObjectProperty
		constexpr auto m_mcSiegeScoreB = 0x278; // ObjectProperty
		constexpr auto m_mcTicketsFriend = 0x280; // ObjectProperty
		constexpr auto m_mcTicketsEnemy = 0x288; // ObjectProperty
		constexpr auto m_mcSiegeScoreFrame = 0x290; // ObjectProperty
		constexpr auto m_mcSiegePush = 0x298; // ObjectProperty
		constexpr auto m_mcSiegePushBar = 0x2a0; // ObjectProperty
		constexpr auto m_mcSiegePushTip = 0x2a8; // ObjectProperty
		constexpr auto m_mcSiegePushTime = 0x2b0; // ObjectProperty
		constexpr auto m_mcSiegePushOvertime = 0x2b8; // ObjectProperty
		constexpr auto m_mcSiegePushOvertimeBar = 0x2c0; // ObjectProperty
		constexpr auto m_mcSiegeCapture = 0x2c8; // ObjectProperty
		constexpr auto m_mcSiegeCaptureBarA = 0x2d0; // ObjectProperty
		constexpr auto m_mcSiegeCaptureBarB = 0x2d8; // ObjectProperty
		constexpr auto m_mcSiegeCaptureIcon = 0x2e0; // ObjectProperty
		constexpr auto m_mcSiegeCaptureCount = 0x2e8; // ObjectProperty
		constexpr auto m_mcSiegeCaptureScoreA = 0x2f0; // ObjectProperty
		constexpr auto m_mcSiegeCaptureScoreB = 0x2f8; // ObjectProperty
		constexpr auto m_mcSiegeCaptureOvertime = 0x300; // ObjectProperty
		constexpr auto m_mcSiegeCaptureOvertimeBar = 0x308; // ObjectProperty
		constexpr auto m_SiegePayloadStatus = 0x310; // FPayloadStatus
		constexpr auto m_mcSiegePushContested = 0x36c; // ObjectProperty
		constexpr auto m_mcSiegePushContestedTF = 0x374; // ObjectProperty
		constexpr auto m_mcPayload = 0x37c; // ObjectProperty
		constexpr auto m_mcPayloadTime = 0x384; // ObjectProperty
		constexpr auto m_mcPayloadTitle = 0x38c; // ObjectProperty
		constexpr auto m_mcPayloadScoreA = 0x394; // ObjectProperty
		constexpr auto m_mcPayloadScoreB = 0x39c; // ObjectProperty
		constexpr auto m_mcPayloadScoreFrame = 0x3a4; // ObjectProperty
		constexpr auto m_mcPayloadPush = 0x3ac; // ObjectProperty
		constexpr auto m_mcPayloadPushBar = 0x3b4; // ObjectProperty
		constexpr auto m_mcPayloadPushTip = 0x3bc; // ObjectProperty
		constexpr auto m_mcPayloadPushTime = 0x3c4; // ObjectProperty
		constexpr auto m_mcPayloadPushMarker = 0x3cc; // ObjectProperty
		constexpr auto m_mcPayloadPushOvertime = 0x3d4; // ObjectProperty
		constexpr auto m_mcPayloadPushOvertimeBar = 0x3dc; // ObjectProperty
		constexpr auto m_PayloadPayloadStatus = 0x3e4; // FPayloadStatus
		constexpr auto m_mcPayloadPushContested = 0x440; // ObjectProperty
		constexpr auto m_mcPayloadPushContestedTF = 0x448; // ObjectProperty
		constexpr auto m_mcActivation = 0x450; // ObjectProperty
		constexpr auto m_mcActivationTF = 0x458; // ObjectProperty
		constexpr auto m_mcActivationTitle = 0x460; // ObjectProperty
		constexpr auto m_szCurrentPersistentTitle = 0x468; // FString
		constexpr auto m_szCurrentPersistentSubtitle = 0x478; // FString
		constexpr auto m_mcPersistentTitle = 0x488; // ObjectProperty
		constexpr auto m_mcPersistentSubtitle = 0x490; // ObjectProperty
		constexpr auto m_mcPersistentSubtitlePrompt = 0x498; // ObjectProperty
		constexpr auto m_mcTutorialPrompt = 0x4a0; // ObjectProperty
		constexpr auto m_mcTutorialPromptBack = 0x4a8; // ObjectProperty
		constexpr auto m_mcZoneName = 0x4b0; // ObjectProperty
		constexpr auto m_mcZoneNameTF = 0x4b8; // ObjectProperty
		constexpr auto m_mcFlagball = 0x4c0; // ObjectProperty
		constexpr auto m_pFlagballProgressBlue = 0x4c8; // ObjectProperty
		constexpr auto m_pFlagballProgressRed = 0x4d0; // ObjectProperty
		constexpr auto m_pFlagballProgressContested = 0x4d8; // ObjectProperty
		constexpr auto m_nPersistentTextID = 0x4e0; // int32_t
		constexpr auto m_eCurrentHUDType = 0x4e4; // EHUDType
	}

	namespace n_USeqVar_Group { // : USeqVar_Object
		constexpr auto GroupName = 0xc4; // FName
		constexpr auto bCachedList = 0xcc; // uint32_t : 1
		constexpr auto Actors = 0xd0; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_SocialDetail { // : UUIComponent_Display
		constexpr auto m_pSocialData = 0x124; // ObjectProperty
		constexpr auto m_pButtonList = 0x12c; // ObjectProperty
	}

	namespace n_UTgAchievement_HitUniqueWithDeviceInvocation { // : UTgAchievement
		constexpr auto m_bReachedTargetCount = 0x94; // uint32_t : 1
		constexpr auto m_HitTargets = 0x98; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_MatchLobbyHeader { // : UUIComponent_Display
		constexpr auto m_mcHeaderTime = 0x124; // ObjectProperty
		constexpr auto m_mcHeaderTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcBonusTime = 0x134; // ObjectProperty
		constexpr auto m_mcBonusTimer1 = 0x13c; // ObjectProperty
		constexpr auto m_mcBonusTimer2 = 0x144; // ObjectProperty
		constexpr auto m_TeamTips = 0x14c; // ObjectProperty
		constexpr auto m_HeaderBlueTeamComp = 0x154; // ObjectProperty
		constexpr auto m_HeaderRedTeamComp = 0x15c; // ObjectProperty
		constexpr auto m_eCurrentHeaderText = 0x164; // UIMatchLobbyHeaderText
	}

	namespace n_UUIComponent_HealFeed { // : UUIComponent_Display
		constexpr auto m_InactiveEntries = 0x124; // TArray<ObjectProperty>
		constexpr auto m_HealSources = 0x134; // FHealSource [0x5]
		constexpr auto m_pViewTarget = 0x238; // ObjectProperty
		constexpr auto m_bIsVisible = 0x240; // uint32_t : 1
		constexpr auto m_fSourceHideDelay = 0x244; // float
		constexpr auto m_fUpdateDisplayTimer = 0x248; // float
		constexpr auto m_fUpdateDisplayRate = 0x24c; // float
		constexpr auto m_HealAmountMap = 0x250; // TMap<None, None>
	}

	namespace n_UTgAkAudioManagement { // : UObject
		constexpr auto m_MeterCallbackSlots = 0x60; // FAkMeterCallbackState [0x10]
		constexpr auto dwAllBusses = 0x160; // TArray<Fdword>
		constexpr auto m_bInitialized = 0x170; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByPaladinsCharacter_Darklord { // : UTgAnimBlendByPaladinsCharacter
		constexpr auto m_CachedDarklordPawn = 0x544; // ObjectProperty
		constexpr auto m_bTriggerUltKilledTargetRetrieve = 0x54c; // uint32_t : 1
		constexpr auto m_fCounterAnimDelay = 0x550; // float
		constexpr auto m_fCounterAnimTimeStamp = 0x554; // float
		constexpr auto m_nCounterAnimIndex = 0x558; // int32_t
	}

	namespace n_ALevelStreamingVolume { // : AVolume
		constexpr auto StreamingLevels = 0x2bc; // TArray<ObjectProperty>
		constexpr auto bEditorPreVisOnly = 0x2cc; // uint32_t : 1
		constexpr auto bDisabled = 0x2cc; // uint32_t : 1
		constexpr auto bTestDistanceToVolume = 0x2cc; // uint32_t : 1
		constexpr auto StreamingUsage = 0x2d0; // EStreamingVolumeUsage
		constexpr auto Usage = 0x2d1; // EStreamingVolumeUsage
		constexpr auto TestVolumeDistance = 0x2d4; // float
	}

	namespace n_ATgDevice_ReanimateSupporting { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UTgGameplayCurvesSet { // : UObject
		constexpr auto CurveSetType = 0x60; // ECurveSetTypes
	}

	namespace n_UTgAnimBlendByFireMode { // : UTgAnimNodeBlendList
		constexpr auto m_nDefaultFireMode = 0x168; // int32_t
		constexpr auto m_EquipPoint = 0x16c; // TG_EQUIP_POINT
	}

	namespace n_UUIComponent_SaleGemPack { // : UUIComponent_GemPack
		constexpr auto m_mcSaleStamp = 0x14c; // ObjectProperty
		constexpr auto m_mcSaleStampText = 0x154; // ObjectProperty
		constexpr auto m_mcSaleStampOffText = 0x15c; // ObjectProperty
		constexpr auto m_pFullPrice = 0x164; // ObjectProperty
	}

	namespace n_ATgGame_PointCapture { // : ATgGame_Battle
		constexpr auto s_TicketCheckInterval = 0x76c; // float
		constexpr auto s_nCaptureHostilePointXP = 0x770; // int32_t
		constexpr auto s_nCaptureHostilePointGold = 0x774; // int32_t
		constexpr auto s_nReclaimPointXP = 0x778; // int32_t
		constexpr auto s_nReclaimPointGold = 0x77c; // int32_t
		constexpr auto s_nCurrentPhase = 0x780; // int32_t
		constexpr auto s_nPhase2Threshold = 0x784; // int32_t
		constexpr auto s_nPhase3Threshold = 0x788; // int32_t
		constexpr auto m_nSpawnWaveTime = 0x78c; // int32_t
		constexpr auto m_nSpawnWaveDominatingTime = 0x790; // int32_t
		constexpr auto m_nMaxDominatingPoints = 0x794; // int32_t
		constexpr auto s_nAboutToLoseThreshold = 0x798; // int32_t
	}

	namespace n_ATgDevice_BuckWild { // : ATgDevice_Stim
		constexpr auto m_CachedInhandDevice = 0xa08; // ObjectProperty
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget_Jungle { // : UTgAIBehaviorAction
		constexpr auto bMustBeWeakest = 0x94; // uint32_t : 1
		constexpr auto TargetType = 0x98; // EJungleTargetType
	}

	namespace n_ULevel { // : ULevelBase
		constexpr auto LightmapTotalSize = 0x1f8; // float
		constexpr auto ShadowmapTotalSize = 0x1fc; // float
	}

	namespace n_UGameplayEventsHandler { // : UObject
		constexpr auto EventIDFilter = 0x60; // TArray<int32_t>
		constexpr auto GroupFilter = 0x70; // TArray<FGameStatGroup>
		constexpr auto Reader = 0x80; // ObjectProperty
	}

	namespace n_ATgDeploy_Reversal { // : ATgDeploy_Shield
		constexpr auto m_nLargeMeshID = 0x470; // int32_t
		constexpr auto m_SmallMesh = 0x474; // ComponentProperty
		constexpr auto m_LargeMesh = 0x47c; // ComponentProperty
		constexpr auto r_fVengeanceDamage = 0x484; // float
		constexpr auto r_fAccumulatedDamage = 0x488; // float
		constexpr auto r_fMinimumDamage = 0x48c; // float
		constexpr auto m_CachedPawnOwner = 0x490; // ObjectProperty
		constexpr auto m_ReversalForm = 0x498; // ObjectProperty
	}

	namespace n_UDistributionFloatUniform { // : UDistributionFloat
		constexpr auto Min = 0x7c; // float
		constexpr auto Max = 0x80; // float
	}

	namespace n_UUICharacterSummary { // : UUIResourceDataProvider
		constexpr auto ClassPathName = 0x94; // FString
		constexpr auto CharacterName = 0xa4; // FString
		constexpr auto CharacterBio = 0xb4; // FString
		constexpr auto bIsDisabled = 0xc4; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_Combo_Pip { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_Projectiles = 0xcc; // TArray<ObjectProperty>
		constexpr auto m_SpawnLocations = 0xdc; // TArray<FVector>
		constexpr auto m_MarkedTargetsFlask = 0xec; // TArray<ObjectProperty>
		constexpr auto m_fMarkedTimesFlask = 0xfc; // TArray<float>
	}

	namespace n_UUIData_Loadout { // : UUIData
		constexpr auto VfTable_IUIData_LoadoutInterface = 0x64; // FPointer
		constexpr auto m_dwLoadoutId = 0x6c; // Fdword
		constexpr auto m_sNewName = 0x70; // FString
		constexpr auto m_bPendingNameChange = 0x80; // uint32_t : 1
		constexpr auto m_bItemsDirty = 0x80; // uint32_t : 1
		constexpr auto m_nCopyOfTemplate = 0x84; // int32_t
		constexpr auto m_LoadoutItems = 0x88; // TArray<ObjectProperty>
	}

	namespace n_UTgAISquad { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto s_bOpen = 0x68; // uint32_t : 1
		constexpr auto s_bShouldSpread = 0x68; // uint32_t : 1
		constexpr auto s_MemberList = 0x6c; // TArray<ObjectProperty>
		constexpr auto s_Factory = 0x7c; // ObjectProperty
		constexpr auto s_CurrentTarget = 0x84; // ObjectProperty
		constexpr auto s_TargetList = 0x8c; // TArray<ObjectProperty>
		constexpr auto s_LastKiller = 0x9c; // ObjectProperty
		constexpr auto s_fNextSpreadTime = 0xa4; // float
	}

	namespace n_UParticleModuleSize_Seeded { // : UParticleModuleSize
		constexpr auto RandomSeedInfo = 0x8c; // FParticleRandomSeedInfo
	}

	namespace n_UUIData_EventChallengeSystem { // : UUIData
		constexpr auto m_Regions = 0x64; // TArray<ObjectProperty>
		constexpr auto m_RegionConfig = 0x74; // TArray<FChallengeRegionConfig>
	}

	namespace n_UApexDestructibleDamageParameters { // : UObject
		constexpr auto DamageMap = 0x60; // TArray<FDamagePair>
	}

	namespace n_UUIData_ChestExclusive { // : UUIData
		constexpr auto m_nItemsOwned = 0x64; // int32_t
		constexpr auto m_nItemsTotal = 0x68; // int32_t
		constexpr auto m_pChestExclusives = 0x6c; // ObjectProperty
		constexpr auto m_pChestData = 0x74; // ObjectProperty
	}

	namespace n_UTgSeqAct_AIMoveToActor { // : USequenceAction
		constexpr auto Destination = 0x108; // ObjectProperty
	}

	namespace n_ATgRepInfo_Factory { // : AReplicationInfo
		constexpr auto s_FactoryState = 0x280; // ReplicatedFactoryState
		constexpr auto r_FactoryState = 0x281; // ReplicatedFactoryState [0x3]
		constexpr auto r_bVisibleOnMap = 0x284; // char [0x3]
		constexpr auto r_bRespawnVisible = 0x287; // char [0x3]
		constexpr auto r_MinimapType = 0x28a; // MinimapFactoryType
		constexpr auto r_FactoryOwner = 0x28c; // ObjectProperty
		constexpr auto r_TaskforceInfo = 0x294; // ObjectProperty
		constexpr auto r_nFactoryId = 0x29c; // int32_t
		constexpr auto r_LastSpawnedRepInfo = 0x2a0; // ObjectProperty
		constexpr auto r_fRespawnDelay = 0x2a8; // float
		constexpr auto r_fRespawnTimer = 0x2ac; // float
	}

	namespace n_AMobileTouchInputVolume { // : AVolume
		constexpr auto bEnabled = 0x2bc; // uint32_t : 1
	}

	namespace n_ATgGame_Paladins_Survival { // : ATgGame_Paladins_Siege
		constexpr auto m_nWinningTaskforceThisRound = 0xa64; // int32_t
		constexpr auto m_fRoundStartTime = 0xa68; // float
	}

	namespace n_AGamePlayerController { // : APlayerController
		constexpr auto bWarnCrowdMembers = 0x76c; // uint32_t : 1
		constexpr auto bDebugCrowdAwareness = 0x76c; // uint32_t : 1
		constexpr auto bIsWarmupPaused = 0x76c; // uint32_t : 1
		constexpr auto bEnableMouseCursor = 0x76c; // uint32_t : 1
		constexpr auto AgentAwareRadius = 0x770; // float
		constexpr auto CurrentSoundMode = 0x774; // FName
	}

	namespace n_URB_ConstraintInstance { // : UObject
		constexpr auto Owner = 0x60; // ObjectProperty
		constexpr auto OwnerComponent = 0x68; // ComponentProperty
		constexpr auto ConstraintIndex = 0x70; // int32_t
		constexpr auto SceneIndex = 0x74; // int32_t
		constexpr auto bInHardware = 0x78; // uint32_t : 1
		constexpr auto bLinearXPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearXVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearYVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bLinearZVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bSwingVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistPositionDrive = 0x78; // uint32_t : 1
		constexpr auto bTwistVelocityDrive = 0x78; // uint32_t : 1
		constexpr auto bAngularSlerpDrive = 0x78; // uint32_t : 1
		constexpr auto bTerminated = 0x78; // uint32_t : 1
		constexpr auto ConstraintData = 0x7c; // FPointer
		constexpr auto LinearPositionTarget = 0x84; // FVector
		constexpr auto LinearVelocityTarget = 0x90; // FVector
		constexpr auto LinearDriveSpring = 0x9c; // float
		constexpr auto LinearDriveDamping = 0xa0; // float
		constexpr auto LinearDriveForceLimit = 0xa4; // float
		constexpr auto AngularPositionTarget = 0xb0; // FQuat
		constexpr auto AngularVelocityTarget = 0xc0; // FVector
		constexpr auto AngularDriveSpring = 0xcc; // float
		constexpr auto AngularDriveDamping = 0xd0; // float
		constexpr auto AngularDriveForceLimit = 0xd4; // float
		constexpr auto DummyKinActor = 0xd8; // FPointer
	}

	namespace n_UMeshBeacon { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MeshBeaconPort = 0x68; // int32_t
		constexpr auto Socket = 0x6c; // FPointer
		constexpr auto bIsInTick = 0x74; // uint32_t : 1
		constexpr auto bWantsDeferredDestroy = 0x74; // uint32_t : 1
		constexpr auto bShouldTick = 0x74; // uint32_t : 1
		constexpr auto HeartbeatTimeout = 0x78; // float
		constexpr auto ElapsedHeartbeatTime = 0x7c; // float
		constexpr auto BeaconName = 0x80; // FName
		constexpr auto SocketSendBufferSize = 0x88; // int32_t
		constexpr auto SocketReceiveBufferSize = 0x8c; // int32_t
		constexpr auto MaxBandwidthTestBufferSize = 0x90; // int32_t
		constexpr auto MinBandwidthTestBufferSize = 0x94; // int32_t
		constexpr auto MaxBandwidthTestSendTime = 0x98; // float
		constexpr auto MaxBandwidthTestReceiveTime = 0x9c; // float
		constexpr auto MaxBandwidthHistoryEntries = 0xa0; // int32_t
	}

	namespace n_UTgAIBehaviorAction_SelectLaneCombatTarget { // : UTgAIBehaviorAction
		constexpr auto bMustBeEnemy = 0x94; // uint32_t : 1
		constexpr auto bMustBeSameLane = 0x94; // uint32_t : 1
		constexpr auto bMustHaveLineOfSight = 0x94; // uint32_t : 1
		constexpr auto bMustHaveDamagedGod = 0x94; // uint32_t : 1
		constexpr auto bMustNotBeImmune = 0x94; // uint32_t : 1
		constexpr auto bMustBeInForwardCone = 0x94; // uint32_t : 1
		constexpr auto bEffectGroupCategoryCheckInstigator = 0x94; // uint32_t : 1
		constexpr auto bMustBeHittable = 0x94; // uint32_t : 1
		constexpr auto bMustNotBeNearShield = 0x94; // uint32_t : 1
		constexpr auto TargetSelector = 0x98; // ETargetSelector
		constexpr auto TargetType = 0x99; // ECombatTargetType
		constexpr auto IgnoreTargetType = 0x9a; // ECombatTargetType
		constexpr auto EffectCategoryId = 0x9c; // int32_t
		constexpr auto DistanceThreshold = 0xa0; // float
		constexpr auto ForwardConeAngle = 0xa4; // float
	}

	namespace n_UTgAIUtilityFilter { // : UTgAIUtility
		constexpr auto bSoftFilter = 0xbc; // uint32_t : 1
	}

	namespace n_UTgAnimBlendByRecoilTime { // : UAnimNodeBlend
		constexpr auto m_TgDeviceForm = 0x124; // ObjectProperty
		constexpr auto m_TgPawn = 0x12c; // ObjectProperty
		constexpr auto m_PctBlend = 0x134; // float
		constexpr auto m_fBlendTime = 0x138; // float
		constexpr auto m_fMaxRecoilTime = 0x13c; // float
	}

	namespace n_ATgEmitterCrashlanding { // : ATgEmitterSpawnable
		constexpr auto m_PrimaryMesh = 0x294; // ComponentProperty
		constexpr auto m_SecondaryMesh = 0x29c; // ComponentProperty
		constexpr auto ParticleDurationAfterImpact = 0x2a4; // float
		constexpr auto m_LensFlare = 0x2a8; // ComponentProperty
		constexpr auto m_AudioComponent = 0x2b0; // ComponentProperty
	}

	namespace n_ATgWeatherVolume { // : AVolume
		constexpr auto m_Template = 0x2bc; // ObjectProperty
	}

	namespace n_ATgSplineActor_Payload { // : ATgSplineActor
		constexpr auto m_bReached = 0x2f0; // uint32_t : 1
		constexpr auto m_fSecondsToAdd = 0x2f4; // float
	}

	namespace n_UTgDeviceForm_Vine { // : UTgDeviceForm
		constexpr auto m_bBeamActive = 0x28c; // uint32_t : 1
		constexpr auto m_bVineInterrupted = 0x28c; // uint32_t : 1
		constexpr auto m_BeamTarget = 0x290; // ObjectProperty
		constexpr auto m_vBeamTargetLocation = 0x298; // FVector
		constexpr auto m_VineBlendList1P = 0x2a4; // TArray<ObjectProperty>
		constexpr auto m_VineBlendList3P = 0x2b4; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_RiderAlt { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_ListenConsumeMarks = 0xa08; // FPointer
		constexpr auto m_CachedListenConsumeMarks = 0xa10; // TArray<TScriptInterface<Class>>
	}

	namespace n_USeqEvent_MobileRawInput { // : USequenceEvent
		constexpr auto TouchIndex = 0x128; // int32_t
		constexpr auto TouchpadIndex = 0x12c; // int32_t
		constexpr auto TouchLocationX = 0x130; // float
		constexpr auto TouchLocationY = 0x134; // float
		constexpr auto TimeStamp = 0x138; // float
	}

	namespace n_APawn { // : AActor
		constexpr auto VfTable_IInterface_Speaker = 0x280; // FPointer
		constexpr auto MaxStepHeight = 0x288; // float
		constexpr auto MaxJumpHeight = 0x28c; // float
		constexpr auto WalkableFloorZ = 0x290; // float
		constexpr auto LedgeCheckThreshold = 0x294; // float
		constexpr auto PartialLedgeMoveDir = 0x298; // FVector
		constexpr auto Controller = 0x2a4; // ObjectProperty
		constexpr auto NextPawn = 0x2ac; // ObjectProperty
		constexpr auto NetRelevancyTime = 0x2b4; // float
		constexpr auto LastRealViewer = 0x2b8; // ObjectProperty
		constexpr auto LastViewer = 0x2c0; // ObjectProperty
		constexpr auto bScriptTickSpecial = 0x2c8; // uint32_t : 1
		constexpr auto bUpAndOut = 0x2c8; // uint32_t : 1
		constexpr auto bIsWalking = 0x2c8; // uint32_t : 1
		constexpr auto bWantsToCrouch = 0x2c8; // uint32_t : 1
		constexpr auto bIsCrouched = 0x2c8; // uint32_t : 1
		constexpr auto bTryToUncrouch = 0x2c8; // uint32_t : 1
		constexpr auto bCanCrouch = 0x2c8; // uint32_t : 1
		constexpr auto bCrawler = 0x2c8; // uint32_t : 1
		constexpr auto bReducedSpeed = 0x2c8; // uint32_t : 1
		constexpr auto bJumpCapable = 0x2c8; // uint32_t : 1
		constexpr auto bCanJump = 0x2c8; // uint32_t : 1
		constexpr auto bCanWalk = 0x2c8; // uint32_t : 1
		constexpr auto bCanSwim = 0x2c8; // uint32_t : 1
		constexpr auto bCanFly = 0x2c8; // uint32_t : 1
		constexpr auto bCanClimbLadders = 0x2c8; // uint32_t : 1
		constexpr auto bCanStrafe = 0x2c8; // uint32_t : 1
		constexpr auto bAvoidLedges = 0x2c8; // uint32_t : 1
		constexpr auto bStopAtLedges = 0x2c8; // uint32_t : 1
		constexpr auto bAllowLedgeOverhang = 0x2c8; // uint32_t : 1
		constexpr auto bPartiallyOverLedge = 0x2c8; // uint32_t : 1
		constexpr auto bSimulateGravity = 0x2c8; // uint32_t : 1
		constexpr auto bIgnoreForces = 0x2c8; // uint32_t : 1
		constexpr auto bCanWalkOffLedges = 0x2c8; // uint32_t : 1
		constexpr auto bCanBeBaseForPawns = 0x2c8; // uint32_t : 1
		constexpr auto bSimGravityDisabled = 0x2c8; // uint32_t : 1
		constexpr auto bDirectHitWall = 0x2c8; // uint32_t : 1
		constexpr auto bPushesRigidBodies = 0x2c8; // uint32_t : 1
		constexpr auto bForceFloorCheck = 0x2c8; // uint32_t : 1
		constexpr auto bForceKeepAnchor = 0x2c8; // uint32_t : 1
		constexpr auto bCanMantle = 0x2c8; // uint32_t : 1
		constexpr auto bCanClimbUp = 0x2c8; // uint32_t : 1
		constexpr auto bCanClimbCeilings = 0x2c8; // uint32_t : 1
		constexpr auto bCanSwatTurn = 0x2cc; // uint32_t : 1
		constexpr auto bCanLeap = 0x2cc; // uint32_t : 1
		constexpr auto bCanCoverSlip = 0x2cc; // uint32_t : 1
		constexpr auto bDisplayPathErrors = 0x2cc; // uint32_t : 1
		constexpr auto bCanPickupInventory = 0x2cc; // uint32_t : 1
		constexpr auto bAmbientCreature = 0x2cc; // uint32_t : 1
		constexpr auto bLOSHearing = 0x2cc; // uint32_t : 1
		constexpr auto bMuffledHearing = 0x2cc; // uint32_t : 1
		constexpr auto bDontPossess = 0x2cc; // uint32_t : 1
		constexpr auto bRollToDesired = 0x2cc; // uint32_t : 1
		constexpr auto bStationary = 0x2cc; // uint32_t : 1
		constexpr auto bCachedRelevant = 0x2cc; // uint32_t : 1
		constexpr auto bNoWeaponFiring = 0x2cc; // uint32_t : 1
		constexpr auto bModifyReachSpecCost = 0x2cc; // uint32_t : 1
		constexpr auto bModifyNavPointDest = 0x2cc; // uint32_t : 1
		constexpr auto bPathfindsAsVehicle = 0x2cc; // uint32_t : 1
		constexpr auto bPrevBypassSimulatedClientPhysics = 0x2cc; // uint32_t : 1
		constexpr auto bRunPhysicsWithNoController = 0x2cc; // uint32_t : 1
		constexpr auto bForceMaxAccel = 0x2cc; // uint32_t : 1
		constexpr auto bLimitFallAccel = 0x2cc; // uint32_t : 1
		constexpr auto bReplicateHealthToAll = 0x2cc; // uint32_t : 1
		constexpr auto bForceRMVelocity = 0x2cc; // uint32_t : 1
		constexpr auto bForceRegularVelocity = 0x2cc; // uint32_t : 1
		constexpr auto bPlayedDeath = 0x2cc; // uint32_t : 1
		constexpr auto bDesiredRotationSet = 0x2cc; // uint32_t : 1
		constexpr auto bLockDesiredRotation = 0x2cc; // uint32_t : 1
		constexpr auto bUnlockWhenReached = 0x2cc; // uint32_t : 1
		constexpr auto m_bPhysVolumesOnlyAffectDownwardVelocities = 0x2cc; // uint32_t : 1
		constexpr auto m_bIsOnNonBaseableSurface = 0x2cc; // uint32_t : 1
		constexpr auto bNeedsBaseTickedFirst = 0x2cc; // uint32_t : 1
		constexpr auto bUsedByMatinee = 0x2cc; // uint32_t : 1
		constexpr auto bRootMotionFromInterpCurve = 0x2cc; // uint32_t : 1
		constexpr auto bDebugShowCameraLocation = 0x2d0; // uint32_t : 1
		constexpr auto bFastAttachedMove = 0x2d0; // uint32_t : 1
		constexpr auto WalkingPhysics = 0x2d4; // EPhysics
		constexpr auto PathSearchType = 0x2d5; // EPathSearchType
		constexpr auto RemoteViewPitch = 0x2d6; // char
		constexpr auto FlashCount = 0x2d7; // char
		constexpr auto FiringMode = 0x2d8; // char
		constexpr auto c_LastReceivedPhysics = 0x2d9; // EPhysics
		constexpr auto WalkingPhysicsMoveFlags = 0x2dc; // int32_t
		constexpr auto UncrouchTime = 0x2e0; // float
		constexpr auto CrouchHeight = 0x2e4; // float
		constexpr auto CrouchRadius = 0x2e8; // float
		constexpr auto FullHeight = 0x2ec; // int32_t
		constexpr auto NonPreferredVehiclePathMultiplier = 0x2f0; // float
		constexpr auto PathConstraintList = 0x2f4; // ObjectProperty
		constexpr auto PathGoalList = 0x2fc; // ObjectProperty
		constexpr auto DesiredSpeed = 0x304; // float
		constexpr auto MaxDesiredSpeed = 0x308; // float
		constexpr auto HearingThreshold = 0x30c; // float
		constexpr auto Alertness = 0x310; // float
		constexpr auto SightRadius = 0x314; // float
		constexpr auto PeripheralVision = 0x318; // float
		constexpr auto AvgPhysicsTime = 0x31c; // float
		constexpr auto Mass = 0x320; // float
		constexpr auto Buoyancy = 0x324; // float
		constexpr auto MeleeRange = 0x328; // float
		constexpr auto Anchor = 0x32c; // ObjectProperty
		constexpr auto AnchorItem = 0x334; // int32_t
		constexpr auto LastAnchor = 0x338; // ObjectProperty
		constexpr auto FindAnchorFailedTime = 0x340; // float
		constexpr auto LastValidAnchorTime = 0x344; // float
		constexpr auto DestinationOffset = 0x348; // float
		constexpr auto NextPathRadius = 0x34c; // float
		constexpr auto SerpentineDir = 0x350; // FVector
		constexpr auto SerpentineDist = 0x35c; // float
		constexpr auto SerpentineTime = 0x360; // float
		constexpr auto SpawnTime = 0x364; // float
		constexpr auto MaxPitchLimit = 0x368; // int32_t
		constexpr auto GroundSpeed = 0x36c; // float
		constexpr auto WaterSpeed = 0x370; // float
		constexpr auto AirSpeed = 0x374; // float
		constexpr auto LadderSpeed = 0x378; // float
		constexpr auto AccelRate = 0x37c; // float
		constexpr auto JumpZ = 0x380; // float
		constexpr auto OutofWaterZ = 0x384; // float
		constexpr auto MaxOutOfWaterStepHeight = 0x388; // float
		constexpr auto AirControl = 0x38c; // float
		constexpr auto WalkingPct = 0x390; // float
		constexpr auto MovementSpeedModifier = 0x394; // float
		constexpr auto CrouchedPct = 0x398; // float
		constexpr auto MaxFallSpeed = 0x39c; // float
		constexpr auto AIMaxFallSpeedFactor = 0x3a0; // float
		constexpr auto BaseEyeHeight = 0x3a4; // float
		constexpr auto EyeHeight = 0x3a8; // float
		constexpr auto Floor = 0x3ac; // FVector
		constexpr auto SplashTime = 0x3b8; // float
		constexpr auto HeadVolume = 0x3bc; // ObjectProperty
		constexpr auto Health = 0x3c4; // int32_t
		constexpr auto HealthMax = 0x3c8; // int32_t
		constexpr auto BreathTime = 0x3cc; // float
		constexpr auto UnderWaterTime = 0x3d0; // float
		constexpr auto LastPainTime = 0x3d4; // float
		constexpr auto KismetDeathDelayTime = 0x3d8; // float
		constexpr auto RMVelocity = 0x3dc; // FVector
		constexpr auto noise1spot = 0x3e8; // FVector
		constexpr auto noise1time = 0x3f4; // float
		constexpr auto noise1other = 0x3f8; // ObjectProperty
		constexpr auto noise1loudness = 0x400; // float
		constexpr auto noise2spot = 0x404; // FVector
		constexpr auto noise2time = 0x410; // float
		constexpr auto noise2other = 0x414; // ObjectProperty
		constexpr auto noise2loudness = 0x41c; // float
		constexpr auto SoundDampening = 0x420; // float
		constexpr auto DamageScaling = 0x424; // float
		constexpr auto MenuName = 0x428; // FString
		constexpr auto ControllerClass = 0x438; // AAIController*
		constexpr auto PlayerReplicationInfo = 0x440; // ObjectProperty
		constexpr auto OnLadder = 0x448; // ObjectProperty
		constexpr auto LandMovementState = 0x450; // FName
		constexpr auto WaterMovementState = 0x458; // FName
		constexpr auto LastStartSpot = 0x460; // ObjectProperty
		constexpr auto LastStartTime = 0x468; // float
		constexpr auto TakeHitLocation = 0x46c; // FVector
		constexpr auto HitDamageType = 0x478; // UDamageType*
		constexpr auto TearOffMomentum = 0x480; // FVector
		constexpr auto Mesh = 0x48c; // ComponentProperty
		constexpr auto CylinderComponent = 0x494; // ComponentProperty
		constexpr auto RBPushRadius = 0x49c; // float
		constexpr auto RBPushStrength = 0x4a0; // float
		constexpr auto DrivenVehicle = 0x4a4; // ObjectProperty
		constexpr auto AlwaysRelevantDistanceSquared = 0x4ac; // float
		constexpr auto VehicleCheckRadius = 0x4b0; // float
		constexpr auto LastHitBy = 0x4b4; // ObjectProperty
		constexpr auto ViewPitchMin = 0x4bc; // float
		constexpr auto ViewPitchMax = 0x4c0; // float
		constexpr auto AllowedYawError = 0x4c4; // int32_t
		constexpr auto DesiredRotation = 0x4c8; // FRotator
		constexpr auto InventoryManagerClass = 0x4d4; // AInventoryManager*
		constexpr auto InvManager = 0x4dc; // ObjectProperty
		constexpr auto Weapon = 0x4e4; // ObjectProperty
		constexpr auto FlashLocation = 0x4ec; // FVector
		constexpr auto LastFiringFlashLocation = 0x4f8; // FVector
		constexpr auto ShotCount = 0x504; // int32_t
		constexpr auto PreRagdollCollisionComponent = 0x508; // ComponentProperty
		constexpr auto PhysicsPushBody = 0x510; // ObjectProperty
		constexpr auto FailedLandingCount = 0x518; // int32_t
		constexpr auto SlotNodes = 0x51c; // TArray<ObjectProperty>
		constexpr auto InterpGroupList = 0x52c; // TArray<ObjectProperty>
		constexpr auto FacialAudioComp = 0x53c; // ComponentProperty
		constexpr auto MIC_PawnMat = 0x544; // ObjectProperty
		constexpr auto MIC_PawnHair = 0x54c; // ObjectProperty
		constexpr auto ScalarParameterInterpArray = 0x554; // TArray<FScalarParameterInterpStruct>
		constexpr auto RootMotionInterpCurve = 0x564; // FRootMotionCurve
		constexpr auto RootMotionInterpRate = 0x584; // float
		constexpr auto RootMotionInterpCurrentTime = 0x588; // float
		constexpr auto RootMotionInterpCurveLastValue = 0x58c; // FVector
		constexpr auto m_TerrainWalkableFloorZ = 0x598; // float
		constexpr auto c_vLastReceivedVelocity = 0x59c; // FVector
	}

	namespace n_UFluidInfluenceComponent { // : UPrimitiveComponent
		constexpr auto bActive = 0x24c; // uint32_t : 1
		constexpr auto RaindropFillEntireFluid = 0x24c; // uint32_t : 1
		constexpr auto bIsToggleTriggered = 0x24c; // uint32_t : 1
		constexpr auto FluidActor = 0x250; // ObjectProperty
		constexpr auto InfluenceType = 0x258; // EInfluenceType
		constexpr auto MaxDistance = 0x25c; // float
		constexpr auto WaveStrength = 0x260; // float
		constexpr auto WaveFrequency = 0x264; // float
		constexpr auto WavePhase = 0x268; // float
		constexpr auto WaveRadius = 0x26c; // float
		constexpr auto RaindropAreaRadius = 0x270; // float
		constexpr auto RaindropRadius = 0x274; // float
		constexpr auto RaindropStrength = 0x278; // float
		constexpr auto RaindropRate = 0x27c; // float
		constexpr auto FlowSpeed = 0x280; // float
		constexpr auto FlowNumRipples = 0x284; // int32_t
		constexpr auto FlowSideMotionRadius = 0x288; // float
		constexpr auto FlowWaveRadius = 0x28c; // float
		constexpr auto FlowStrength = 0x290; // float
		constexpr auto FlowFrequency = 0x294; // float
		constexpr auto SphereOuterRadius = 0x298; // float
		constexpr auto SphereInnerRadius = 0x29c; // float
		constexpr auto SphereStrength = 0x2a0; // float
		constexpr auto CurrentAngle = 0x2a4; // float
		constexpr auto CurrentTimer = 0x2a8; // float
		constexpr auto CurrentFluidActor = 0x2ac; // ObjectProperty
	}

	namespace n_ATgDevice_ImaniLMB1 { // : ATgDevice
		constexpr auto m_CachedImani = 0xa08; // ObjectProperty
		constexpr auto m_vProjectileSpawnOffset2 = 0xa10; // FVector
		constexpr auto m_bFireLeftHand = 0xa1c; // uint32_t : 1
		constexpr auto m_bClearCasting = 0xa1c; // uint32_t : 1
		constexpr auto c_fLastFireTimestamp = 0xa20; // float
		constexpr auto c_fTimeToRelaxHands = 0xa24; // float
		constexpr auto m_fClearcastManaConversionLockoutTime = 0xa28; // float
	}

	namespace n_ATgMinionGoal { // : ANavigationPoint
		constexpr auto m_nLaneNum = 0x378; // int32_t
		constexpr auto m_nTaskForce = 0x37c; // int32_t
		constexpr auto m_EndPoint = 0x380; // ObjectProperty
		constexpr auto m_bUseForFinalDestination = 0x388; // uint32_t : 1
	}

	namespace n_UTgSeqAct_TgCameraShake { // : USequenceAction
		constexpr auto m_CameraShake = 0x108; // ObjectProperty
		constexpr auto m_LocationActor = 0x110; // ObjectProperty
	}

	namespace n_UUINotificationCenterJsonManager { // : UPComUIManagerBase
		constexpr auto m_WebPanelUrls = 0x84; // TArray<FTabInfo>
		constexpr auto m_pMovie = 0x94; // ObjectProperty
	}

	namespace n_UTgAchievement_ShieldForDuration { // : UTgAchievement
		constexpr auto m_fStartFireTime = 0x94; // float
	}

	namespace n_ATgSiegePushActor { // : AActor
		constexpr auto s_CollisionProxy = 0x280; // ObjectProperty
		constexpr auto m_fCollisionProxyRadius = 0x288; // float
		constexpr auto m_fCollisionProxyHeight = 0x28c; // float
		constexpr auto m_SkelMesh = 0x290; // ComponentProperty
		constexpr auto m_RadiusMesh = 0x298; // ComponentProperty
		constexpr auto m_nTF1Count = 0x2a0; // int32_t
		constexpr auto m_nTF2Count = 0x2a4; // int32_t
		constexpr auto m_nDefenderTaskForce = 0x2a8; // int32_t
		constexpr auto m_CurrentPushState = 0x2ac; // EPushState
		constexpr auto m_fPendingReverseTime = 0x2b0; // float
	}

	namespace n_UTgLevelStreamingWorldDetail { // : ULevelStreaming
		constexpr auto MinimumWorldDetailLevel = 0x100; // int32_t
		constexpr auto MaximumWorldDetailLevel = 0x104; // int32_t
		constexpr auto CachedDetailCheck = 0x108; // char
		constexpr auto LastUpdateTime = 0x10c; // int32_t
	}

	namespace n_UTgAchievement_FromTheGrave { // : UTgAchievement
		constexpr auto KillerPawnId = 0x94; // int32_t
	}

	namespace n_UUIScene_UISimulMedia { // : UUIScene
		constexpr auto m_bDailyGoalReached = 0x1cc; // uint32_t : 1
		constexpr auto m_bWatchingAd = 0x1cc; // uint32_t : 1
		constexpr auto m_nSimulMediaRewardLTI = 0x1d0; // int32_t
		constexpr auto m_nClosePopupHandle = 0x1d4; // int32_t
		constexpr auto m_nCloseVideoHandle = 0x1d8; // int32_t
		constexpr auto m_fPrevMusicVolume = 0x1dc; // float
		constexpr auto m_fSpeculativeAdWatch = 0x1e0; // float
		constexpr auto m_fSpeculativeAdWatchDuration = 0x1e4; // float
		constexpr auto m_nSpeculativeAdWatchCount = 0x1e8; // int32_t
		constexpr auto m_fSimulmediaRewardPresentation = 0x1ec; // float
		constexpr auto m_fSimulmediaRewardPresentationDuration = 0x1f0; // float
		constexpr auto m_fVideoOpenDelay = 0x1f4; // float
		constexpr auto m_fVideoOpenDelayDuration = 0x1f8; // float
		constexpr auto m_grButtons = 0x1fc; // ObjectProperty
		constexpr auto m_dwLastRewardLTI = 0x204; // Fdword
		constexpr auto m_mcPopupInfo = 0x208; // ObjectProperty
		constexpr auto m_mcComeBackDefault = 0x210; // ObjectProperty
		constexpr auto m_WatchInfo = 0x218; // ObjectProperty
		constexpr auto m_WatchAgainInfo = 0x220; // ObjectProperty
		constexpr auto m_ComeBackLaterInfo = 0x228; // ObjectProperty
		constexpr auto m_WatchButton = 0x230; // ObjectProperty
		constexpr auto m_CloseButton = 0x238; // ObjectProperty
		constexpr auto m_CloseButton1 = 0x240; // ObjectProperty
		constexpr auto m_mcVideoContainer = 0x248; // ObjectProperty
		constexpr auto m_CloseVideoButton = 0x250; // ObjectProperty
		constexpr auto m_PComVideoPlayer = 0x258; // ObjectProperty
	}

	namespace n_UTgAchievement_EmoteAfterKillWithChampion { // : UTgAchievement
		constexpr auto m_fKillTime = 0x94; // float
	}

	namespace n_URB_BodySetup { // : UKMeshProps
		constexpr auto SleepFamily = 0xb8; // ESleepFamily
		constexpr auto BoneName = 0xbc; // FName
		constexpr auto bFixed = 0xc4; // uint32_t : 1
		constexpr auto bNoCollision = 0xc4; // uint32_t : 1
		constexpr auto bBlockZeroExtent = 0xc4; // uint32_t : 1
		constexpr auto bBlockNonZeroExtent = 0xc4; // uint32_t : 1
		constexpr auto bNoBodyShotChecks = 0xc4; // uint32_t : 1
		constexpr auto bEnableContinuousCollisionDetection = 0xc4; // uint32_t : 1
		constexpr auto bAlwaysFullAnimWeight = 0xc4; // uint32_t : 1
		constexpr auto bConsiderForBounds = 0xc4; // uint32_t : 1
		constexpr auto PhysMaterial = 0xc8; // ObjectProperty
		constexpr auto MassScale = 0xd0; // float
		constexpr auto CollisionGeom = 0xd4; // TArray<FPointer>
		constexpr auto CollisionGeomScale3D = 0xe4; // TArray<FVector>
		constexpr auto PreCachedPhysScale = 0xf4; // TArray<FVector>
		constexpr auto PreCachedPhysData = 0x104; // TArray<FKCachedConvexData>
		constexpr auto PreCachedPhysDataVersion = 0x114; // int32_t
	}

	namespace n_UParticleModuleMeshRotationRate { // : UParticleModuleRotationRateBase
		constexpr auto StartRotationRate = 0x68; // FRawDistributionVector
	}

	namespace n_ATgDevice_HyperBeam { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_USeqAct_Delay { // : USeqAct_Latent
		constexpr auto bDelayActive = 0x120; // uint32_t : 1
		constexpr auto bStartWillRestart = 0x120; // uint32_t : 1
		constexpr auto DefaultDuration = 0x124; // float
		constexpr auto Duration = 0x128; // float
		constexpr auto LastUpdateTime = 0x12c; // float
		constexpr auto RemainingTime = 0x130; // float
	}

	namespace n_UUIScene_UIHudRei { // : UUIScene
		constexpr auto m_bViewTargetRei = 0x1cc; // uint32_t : 1
		constexpr auto m_bHudVisible = 0x1cc; // uint32_t : 1
		constexpr auto m_pEnvelopBar = 0x1d0; // ObjectProperty
		constexpr auto m_CachedRei = 0x1d8; // ObjectProperty
		constexpr auto m_CachedEnvelopDevice = 0x1e0; // ObjectProperty
	}

	namespace n_ALandscape { // : ALandscapeProxy
		constexpr auto LayerNames = 0x3bc; // TArray<FName>
		constexpr auto LayerInfos = 0x3cc; // TArray<FLandscapeLayerInfo>
	}

	namespace n_UUIComponent_EndOfMatchLobbyQuests { // : UUIComponent_Display
		constexpr auto m_mcQuestCount = 0x124; // ObjectProperty
		constexpr auto m_pQuestPanels = 0x12c; // ObjectProperty
		constexpr auto m_grQuests = 0x134; // ObjectProperty
	}

	namespace n_USeqCond_SwitchObject { // : USeqCond_SwitchBase
		constexpr auto SupportedValues = 0xec; // TArray<FSwitchObjectCase>
	}

	namespace n_ATgFortressVolume { // : AVolume
		constexpr auto TaskforceIndex = 0x2bc; // int32_t
	}

	namespace n_UTgSeqAct_RequestMission { // : USequenceAction
		constexpr auto m_nMapGameId = 0x108; // int32_t
	}

	namespace n_UTgDeviceFire_DrogozInhand_Salvo { // : UTgDeviceFire_DrogozInhand
		constexpr auto m_CachedDrogozInhand = 0x268; // ObjectProperty
	}

	namespace n_UTgAchievement_KillWithCombo { // : UTgAchievement
		constexpr auto m_Entries = 0x94; // TArray<FKillWithComboEntry>
	}

	namespace n_UUIData_Queue { // : UUIData
		constexpr auto dwQueues = 0x64; // TArray<Fdword>
		constexpr auto nForcedBotId = 0x74; // int32_t
		constexpr auto eCTA = 0x78; // EUIDQCallToAction
		constexpr auto bSelected = 0x7c; // uint32_t : 1
	}

	namespace n_UUIComponent_BattlePassBanner { // : UUIComponent
		constexpr auto m_nDisplayLevel = 0x118; // int32_t
		constexpr auto m_dwXPDisplayed = 0x11c; // Fdword
		constexpr auto m_mcLevel = 0x120; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x128; // ObjectProperty
		constexpr auto m_mcXP = 0x130; // ObjectProperty
		constexpr auto m_mcNextLevel = 0x138; // ObjectProperty
		constexpr auto m_pProgressA = 0x140; // ObjectProperty
		constexpr auto m_pProgressB = 0x148; // ObjectProperty
	}

	namespace n_UUIComponent_HomeGoToItem { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcDescription = 0x134; // ObjectProperty
		constexpr auto m_GoToItemButton = 0x13c; // ObjectProperty
		constexpr auto m_pGamepadKey = 0x144; // ObjectProperty
		constexpr auto m_pCurrentItem = 0x14c; // ObjectProperty
		constexpr auto m_pCurrentLootTableItem = 0x154; // ObjectProperty
		constexpr auto m_nLocationId = 0x15c; // int32_t
	}

	namespace n_UClipPadEntry { // : UObject
		constexpr auto Title = 0x60; // FString
		constexpr auto Text = 0x70; // FString
	}

	namespace n_UTgInventoryObject_Listen_AffectedByDeviceLifesteal { // : UTgInventoryObject_Listen_AffectedByDevice
		constexpr auto m_CachedFiremode = 0xc4; // ObjectProperty
	}

	namespace n_USkelControlSpline { // : USkelControlBase
		constexpr auto SplineLength = 0xd0; // int32_t
		constexpr auto SplineBoneAxis = 0xd4; // EAxis
		constexpr auto BoneRotMode = 0xd5; // ESplineControlRotMode
		constexpr auto bInvertSplineBoneAxis = 0xd8; // uint32_t : 1
		constexpr auto EndSplineTension = 0xdc; // float
		constexpr auto StartSplineTension = 0xe0; // float
	}

	namespace n_UUIComponent_WinterEventStore { // : UUIComponent_Display
		constexpr auto m_bOwnsReceipt = 0x124; // uint32_t : 1
		constexpr auto m_mcRecieptWarning = 0x128; // ObjectProperty
		constexpr auto m_mcRecieptWarningTF0 = 0x130; // ObjectProperty
		constexpr auto m_mcRecieptWarningTF1 = 0x138; // ObjectProperty
		constexpr auto m_mcRecieptWarningIcon = 0x140; // ObjectProperty
		constexpr auto m_mcCurrencyTF = 0x148; // ObjectProperty
		constexpr auto m_mcButtonBG = 0x150; // ObjectProperty
		constexpr auto m_pEventCurrency = 0x158; // ObjectProperty
		constexpr auto m_pItemPreview = 0x160; // ObjectProperty
		constexpr auto m_pUnlockButton = 0x168; // ObjectProperty
		constexpr auto m_pStoreItems = 0x170; // ObjectProperty
		constexpr auto m_pQuests = 0x178; // ObjectProperty
		constexpr auto m_grStore = 0x180; // ObjectProperty
		constexpr auto m_pUnlockAction = 0x188; // ObjectProperty
		constexpr auto m_vBaseCameraOffset = 0x190; // FVector
		constexpr auto m_vDeathStampCameraOffset = 0x19c; // FVector
	}

	namespace n_UUIHudCredits { // : UTgGfxScene
		constexpr auto m_nDepth = 0x1ec; // int32_t
		constexpr auto m_sComboName = 0x1f0; // FString
		constexpr auto m_sRewardName = 0x200; // FString
		constexpr auto m_bDisableCreditDisplay = 0x210; // uint32_t : 1
		constexpr auto m_scXP = 0x214; // ObjectProperty
		constexpr auto m_scKill = 0x21c; // ObjectProperty
		constexpr auto m_mcRewards = 0x224; // TArray<FUIRewardInfo>
		constexpr auto m_RewardPool = 0x234; // TArray<FUIRewardInfo>
		constexpr auto m_ComboPool = 0x244; // TArray<FUIRewardInfo>
		constexpr auto m_fClient3pRewardOffset = 0x254; // float
	}

	namespace n_UTgAchievement_DeviceHealing { // : UTgAchievement
		constexpr auto m_nHealingDealt = 0x94; // int32_t
	}

	namespace n_UParticleModuleSpawnPerUnit { // : UParticleModuleSpawnBase
		constexpr auto UnitScalar = 0x6c; // float
		constexpr auto SpawnPerUnit = 0x70; // FRawDistributionFloat
		constexpr auto bIgnoreSpawnRateWhenMoving = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongX = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongY = 0x94; // uint32_t : 1
		constexpr auto bIgnoreMovementAlongZ = 0x94; // uint32_t : 1
		constexpr auto MovementTolerance = 0x98; // float
		constexpr auto MaxFrameDistance = 0x9c; // float
		constexpr auto MinFrameDistance = 0xa0; // float
	}

	namespace n_ATgDevice_ActivateOnChildGeneric1 { // : ATgDevice
		constexpr auto m_LinkedDev = 0xa08; // ObjectProperty
	}

	namespace n_USpeedTreeComponent { // : UPrimitiveComponent
		constexpr auto SpeedTree = 0x24c; // ObjectProperty
		constexpr auto bUseLeafCards = 0x254; // uint32_t : 1
		constexpr auto bUseLeafMeshes = 0x254; // uint32_t : 1
		constexpr auto bUseBranches = 0x254; // uint32_t : 1
		constexpr auto bUseFronds = 0x254; // uint32_t : 1
		constexpr auto bUseBillboards = 0x254; // uint32_t : 1
		constexpr auto Lod3DStart = 0x258; // float
		constexpr auto Lod3DEnd = 0x25c; // float
		constexpr auto LodBillboardStart = 0x260; // float
		constexpr auto LodBillboardEnd = 0x264; // float
		constexpr auto LodLevelOverride = 0x268; // float
		constexpr auto Branch1Material = 0x26c; // ObjectProperty
		constexpr auto Branch2Material = 0x274; // ObjectProperty
		constexpr auto FrondMaterial = 0x27c; // ObjectProperty
		constexpr auto LeafCardMaterial = 0x284; // ObjectProperty
		constexpr auto LeafMeshMaterial = 0x28c; // ObjectProperty
		constexpr auto BillboardMaterial = 0x294; // ObjectProperty
		constexpr auto Branch1MaterialNoScreenDoor = 0x29c; // ObjectProperty
		constexpr auto Branch2MaterialNoScreenDoor = 0x2a4; // ObjectProperty
		constexpr auto FrondMaterialNoScreenDoor = 0x2ac; // ObjectProperty
		constexpr auto LeafCardMaterialNoScreenDoor = 0x2b4; // ObjectProperty
		constexpr auto LeafMeshMaterialNoScreenDoor = 0x2bc; // ObjectProperty
		constexpr auto BillboardMaterialNoScreenDoor = 0x2c4; // ObjectProperty
		constexpr auto StaticLights = 0x2cc; // TArray<FSpeedTreeStaticLight>
		constexpr auto BranchLightMap = 0x2dc; // FLightMapRef
		constexpr auto FrondLightMap = 0x2e4; // FLightMapRef
		constexpr auto LeafMeshLightMap = 0x2ec; // FLightMapRef
		constexpr auto LeafCardLightMap = 0x2f4; // FLightMapRef
		constexpr auto BillboardLightMap = 0x2fc; // FLightMapRef
		constexpr auto RotationOnlyMatrix = 0x310; // FMatrix
		constexpr auto LightmassSettings = 0x350; // FLightmassPrimitiveSettings
	}

	namespace n_UTgDeviceForm_NinjaInhand { // : UTgDeviceForm_SpinnerWhileFiring
		constexpr auto c_nmSocketLeft = 0x2b8; // FName
		constexpr auto c_nmSocketRight = 0x2c0; // FName
		constexpr auto c_fHeatBuildup = 0x2c8; // float
		constexpr auto c_fPerShotHeatBuildup = 0x2cc; // float
	}

	namespace n_ATgDevice_ImpalerArrow { // : ATgDevice
		constexpr auto m_CachedLongbow = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceForm_RaumCharge { // : UTgDeviceForm
		constexpr auto m_fTimeToThrowWeapon = 0x28c; // float
		constexpr auto m_CachedWMA = 0x290; // ObjectProperty
	}

	namespace n_ATgProj_TigronChakram { // : ATgProj_FreeGrenade
		constexpr auto m_fScaleMultiplier = 0x580; // float
		constexpr auto m_fBounceBacktrackDistance = 0x584; // float
		constexpr auto m_fBounceBacktrackDuration = 0x588; // float
		constexpr auto m_LastBounce = 0x58c; // FHistoricPosition
	}

	namespace n_ATgDevice_Scramble { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
		constexpr auto m_CachedHustleDevice = 0xa10; // ObjectProperty
		constexpr auto m_fSprintEndTimestamp = 0xa18; // float
	}

	namespace n_UUIDataLeaguePlayer { // : UUIData
		constexpr auto pPlayer = 0x64; // ObjectProperty
		constexpr auto pLeague = 0x6c; // ObjectProperty
		constexpr auto pTier = 0x74; // ObjectProperty
		constexpr auto pHighestTier = 0x7c; // ObjectProperty
		constexpr auto nPointsEarned = 0x84; // int32_t
		constexpr auto nPointsTrend = 0x88; // int32_t
		constexpr auto dwRank = 0x8c; // Fdword
		constexpr auto dwRankPrev = 0x90; // Fdword
		constexpr auto dwWins = 0x94; // Fdword
		constexpr auto dwLosses = 0x98; // Fdword
		constexpr auto dwDodges = 0x9c; // Fdword
		constexpr auto dwMatchesPlayedInTier = 0xa0; // Fdword
		constexpr auto dwRegion = 0xa4; // Fdword
		constexpr auto dwRecommendedTierId = 0xa8; // Fdword
		constexpr auto dwTitleId = 0xac; // Fdword
		constexpr auto dtLastPlayed = 0xb0; // FDateTimeWrapper
	}

	namespace n_UAnimNotify_Footstep { // : UAnimNotify
		constexpr auto FootDown = 0x68; // int32_t
		constexpr auto m_PreviewSound = 0x6c; // ObjectProperty
		constexpr auto m_FootstepType = 0x74; // EFootstepTypes
	}

	namespace n_ATgDevice_SaatiDecoyExplosion { // : ATgDevice
		constexpr auto m_CachedSaatiDecoy = 0xa08; // ObjectProperty
		constexpr auto m_fCheckDecoyExplosionTime = 0xa10; // float
		constexpr auto m_fCheckExplosionTracker = 0xa14; // float
	}

	namespace n_ATgDevice_Rewind { // : ATgDevice
		constexpr auto m_CachedIllusionDevice = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_DoubleCharge { // : ATgDevice_Charge
		constexpr auto m_nTotalNumShots = 0xa7c; // int32_t
		constexpr auto m_nShotsFired = 0xa80; // int32_t
	}

	namespace n_UTgDeviceForm_HexaFireGuns { // : UTgDeviceForm
		constexpr auto m_SpinnerSkelControl1P = 0x28c; // ObjectProperty
		constexpr auto m_SpinnerSkelControl3P = 0x294; // ObjectProperty
		constexpr auto m_nNextGunFired = 0x29c; // int32_t
		constexpr auto c_nmSocket1 = 0x2a0; // FName
		constexpr auto c_nmSocket2 = 0x2a8; // FName
		constexpr auto c_nmSocket3 = 0x2b0; // FName
		constexpr auto c_nmSocket4 = 0x2b8; // FName
		constexpr auto m_LowerRightBarrel1P = 0x2c0; // ObjectProperty
		constexpr auto m_UpperRightBarrel1P = 0x2c8; // ObjectProperty
		constexpr auto m_LowerLeftBarrel1P = 0x2d0; // ObjectProperty
		constexpr auto m_UpperLeftBarrel1P = 0x2d8; // ObjectProperty
		constexpr auto m_LowerRightBarrel3P = 0x2e0; // ObjectProperty
		constexpr auto m_UpperRightBarrel3P = 0x2e8; // ObjectProperty
		constexpr auto m_LowerLeftBarrel3P = 0x2f0; // ObjectProperty
		constexpr auto m_UpperLeftBarrel3P = 0x2f8; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_ChurchillInhand { // : ATgWeaponMeshActor_ADS
		constexpr auto VfTable_ITgObserver_ViewTargetChanged = 0x454; // FPointer
		constexpr auto m_CachedChurchill = 0x45c; // ObjectProperty
		constexpr auto m_fShieldLagStrength = 0x464; // float
		constexpr auto m_fShieldMinPitch = 0x468; // float
		constexpr auto m_fShieldMinPitchMaxTranslate = 0x46c; // float
		constexpr auto m_cDefaultColorizeRed1p = 0x470; // FLinearColor
		constexpr auto m_cDefaultColorizeRed3p = 0x480; // FLinearColor
		constexpr auto m_nColorizeRedChnageSource = 0x490; // int32_t
		constexpr auto DetectedColorWeapon = 0x494; // FLinearColor
	}

	namespace n_UMobileMenuImage { // : UMobileMenuObject
		constexpr auto Image = 0xdc; // ObjectProperty
		constexpr auto ImageDrawStyle = 0xe4; // MenuImageDrawStyle
		constexpr auto ImageUVs = 0xe8; // FUVCoords
		constexpr auto ImageColor = 0xfc; // FLinearColor
	}

	namespace n_UApexComponentBase { // : UMeshComponent
		constexpr auto ComponentBaseResources = 0x294; // FPointer
		constexpr auto ReleaseResourcesFence = 0x29c; // FRenderCommandFence_Mirror
		constexpr auto Asset = 0x2a0; // ObjectProperty
		constexpr auto WireframeColor = 0x2a8; // FColor
		constexpr auto bAssetChanged = 0x2ac; // uint32_t : 1
	}

	namespace n_UUIComponent_EventChallenge { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcText = 0x12c; // ObjectProperty
		constexpr auto m_pProgress = 0x134; // ObjectProperty
		constexpr auto m_mcProgressText = 0x13c; // ObjectProperty
	}

	namespace n_ATgAkActor { // : AActor
		constexpr auto m_bCanCheckOcclusion = 0x280; // uint32_t : 1
	}

	namespace n_ATgNavigationPoint { // : ANavigationPoint
		constexpr auto m_nMapObjectId = 0x378; // int32_t
	}

	namespace n_UMultiCueSplineAudioComponent { // : USplineAudioComponent
		constexpr auto SoundSlots = 0x2e4; // TArray<FMultiCueSplineSoundSlot>
		constexpr auto CurrentSlotIndex = 0x2f4; // int32_t
	}

	namespace n_USeqEvent_Used { // : USequenceEvent
		constexpr auto bAimToInteract = 0x128; // uint32_t : 1
		constexpr auto InteractDistance = 0x12c; // float
		constexpr auto InteractText = 0x130; // FString
		constexpr auto InteractIcon = 0x140; // ObjectProperty
		constexpr auto ClassProximityTypes = 0x148; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x158; // TArray<AActor*>
	}

	namespace n_UCameraModifier_CameraShake { // : UCameraModifier
		constexpr auto ActiveShakes = 0x80; // TArray<FCameraShakeInstance>
		constexpr auto SplitScreenShakeScale = 0x90; // float
	}

	namespace n_UHavokNavigationHandle { // : UNavigationHandle
		constexpr auto PathPoints = 0x1b0; // TArray<FCachedPathItem>
		constexpr auto PathingNavMeshType = 0x1c0; // EHavokNavigationMeshType
		constexpr auto CurrEdgeType = 0x1c1; // EHavokEdgeType
		constexpr auto NextEdgeType = 0x1c2; // EHavokEdgeType
		constexpr auto LastClearPathTime = 0x1c4; // float
		constexpr auto ClearPathTime = 0x1c8; // float
		constexpr auto UseCustomCostMod = 0x1cc; // uint32_t : 1
		constexpr auto m_CostModifier = 0x1d0; // FPointer
	}

	namespace n_UTgDeviceFire_SaatiCoinTalent { // : UTgDeviceFire_SaatiCoin
		constexpr auto m_fBonusShieldDamagePerc = 0x268; // float
	}

	namespace n_ATgMeshAssembly { // : AActor
		constexpr auto m_nMeshAsmId = 0x280; // int32_t
		constexpr auto m_nTeam = 0x284; // int32_t
		constexpr auto m_Mesh = 0x288; // ComponentProperty
		constexpr auto m_LightEnvironment = 0x290; // ComponentProperty
	}

	namespace n_UTgSkelCon_FootPlacement { // : USkelControlFootPlacement
		constexpr auto bShouldUseWorldDown = 0x158; // uint32_t : 1
	}

	namespace n_UUIComponent_EndOfMatchLobbyTrials { // : UUIComponent_Display
		constexpr auto m_pEventChallengeList = 0x124; // ObjectProperty
		constexpr auto m_pInactiveTrials = 0x12c; // TArray<ObjectProperty>
		constexpr auto m_pGoToTrials = 0x13c; // ObjectProperty
		constexpr auto m_pGoToTrialText = 0x144; // ObjectProperty
		constexpr auto m_pGoToTrialsAction = 0x14c; // ObjectProperty
	}

	namespace n_UUIComponent_ToastEntry { // : UUIComponent_Display
		constexpr auto m_mcText = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcDesc = 0x134; // ObjectProperty
		constexpr auto m_mcQuantity = 0x13c; // ObjectProperty
		constexpr auto m_mcChallengeIcon = 0x144; // ObjectProperty
		constexpr auto m_mcTalentIcon = 0x14c; // ObjectProperty
		constexpr auto m_mcItemIcon = 0x154; // ObjectProperty
		constexpr auto m_mcRewardLabel = 0x15c; // ObjectProperty
		constexpr auto m_mcCurrency0 = 0x164; // ObjectProperty
		constexpr auto m_mcCurrency1 = 0x16c; // ObjectProperty
		constexpr auto m_mcCurrencyAmount0 = 0x174; // ObjectProperty
		constexpr auto m_mcCurrencyAmount1 = 0x17c; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x184; // ObjectProperty
		constexpr auto m_mcRewardIcon = 0x18c; // ObjectProperty
		constexpr auto m_mcChestIconLarge = 0x194; // ObjectProperty
		constexpr auto m_pCloseButton = 0x19c; // ObjectProperty
		constexpr auto m_fOriginalXPos = 0x1a4; // float
		constexpr auto m_fWidth = 0x1a8; // float
		constexpr auto m_bInitialized = 0x1ac; // uint32_t : 1
		constexpr auto m_bAnimating = 0x1ac; // uint32_t : 1
		constexpr auto m_eAnimSequence = 0x1b0; // ToastSequence
		constexpr auto m_fAnimationTime = 0x1b4; // float
	}

	namespace n_UUIComponent_EventQuestChain { // : UUIComponent_Display
		constexpr auto m_mcQuestName = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcProgressTF = 0x134; // ObjectProperty
		constexpr auto m_mcRewardTF = 0x13c; // ObjectProperty
		constexpr auto m_mcCurrencyIcon = 0x144; // ObjectProperty
		constexpr auto m_mcCurrencyTF = 0x14c; // ObjectProperty
		constexpr auto m_mcChestIcon = 0x154; // ObjectProperty
		constexpr auto m_pAvatarIcon = 0x15c; // ObjectProperty
		constexpr auto m_pFrameButton = 0x164; // ObjectProperty
		constexpr auto m_pRadialProgressBar = 0x16c; // ObjectProperty
	}

	namespace n_UTgDropShadowDecalComponent { // : UStaticMeshComponent
		constexpr auto LastCachedZ = 0x310; // float
		constexpr auto LastOwnerPos = 0x314; // FVector
	}

	namespace n_ATgDevice_KingBomb { // : ATgDevice_Charge
		constexpr auto m_fEndFireZoomDurationOverride = 0xa7c; // float
	}

	namespace n_UParticleModuleUberLTISIVCLILIRSSBLIRR { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartVelocity = 0xc0; // FRawDistributionVector
		constexpr auto StartVelocityRadial = 0xe4; // FRawDistributionFloat
		constexpr auto ColorOverLife = 0x108; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x12c; // FRawDistributionFloat
		constexpr auto StartLocation = 0x150; // FRawDistributionVector
		constexpr auto StartRotation = 0x174; // FRawDistributionFloat
		constexpr auto SizeLifeMultiplier = 0x198; // FRawDistributionVector
		constexpr auto SizeMultiplyX = 0x1bc; // uint32_t : 1
		constexpr auto SizeMultiplyY = 0x1bc; // uint32_t : 1
		constexpr auto SizeMultiplyZ = 0x1bc; // uint32_t : 1
		constexpr auto StartRotationRate = 0x1c0; // FRawDistributionFloat
	}

	namespace n_UInterpTrackAnimControl { // : UInterpTrackFloatBase
		constexpr auto AnimSets = 0xb8; // TArray<ObjectProperty>
		constexpr auto SlotName = 0xc8; // FName
		constexpr auto AnimSeqs = 0xd0; // TArray<FAnimControlTrackKey>
		constexpr auto bEnableRootMotion = 0xe0; // uint32_t : 1
		constexpr auto bSkipAnimNotifiers = 0xe0; // uint32_t : 1
	}

	namespace n_USeqAct_FinishSequence { // : USequenceAction
		constexpr auto OutputLabel = 0x108; // FString
	}

	namespace n_USeqEvent_Touch { // : USequenceEvent
		constexpr auto ClassProximityTypes = 0x128; // TArray<AActor*>
		constexpr auto IgnoredClassProximityTypes = 0x138; // TArray<AActor*>
		constexpr auto bForceOverlapping = 0x148; // uint32_t : 1
		constexpr auto bUseInstigator = 0x148; // uint32_t : 1
		constexpr auto bAllowDeadPawns = 0x148; // uint32_t : 1
		constexpr auto TouchedList = 0x14c; // TArray<ObjectProperty>
	}

	namespace n_UTgAnimNotify_ApplyRigidBodyPhysics { // : UAnimNotify
		constexpr auto ShouldAttachToBone = 0x68; // uint32_t : 1
		constexpr auto BoneName = 0x6c; // FName
		constexpr auto ImpulseLocation = 0x74; // FVector
		constexpr auto ImpulseRadius = 0x80; // float
		constexpr auto ImpulseStrength = 0x84; // float
	}

	namespace n_ATgDevice_WeaponSwap { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UTgAIBehaviorAction_LookAtCombatTarget { // : UTgAIBehaviorAction
		constexpr auto bAllowAimNose = 0x94; // uint32_t : 1
		constexpr auto bHeadShot = 0x94; // uint32_t : 1
	}

	namespace n_UTgGamePhase_CooldownReduction { // : UTgGamePhase
		constexpr auto m_fCooldownReduction = 0xb8; // float
	}

	namespace n_UTgDeviceForm_ShadowDash { // : UTgDeviceForm
		constexpr auto nDashFXIndex = 0x28c; // int32_t
	}

	namespace n_UTgAnimNodeAimOffset_Base { // : UAnimNodeAimOffset
		constexpr auto m_bBakeAllProfileOffsetsFromAnimations = 0x16c; // uint32_t : 1
		constexpr auto m_bPopulateAnimNamesWithPrefixes = 0x16c; // uint32_t : 1
	}

	namespace n_ARoute { // : AInfo
		constexpr auto VfTable_IEditorLinkSelectionInterface = 0x280; // FPointer
		constexpr auto RouteType = 0x288; // ERouteType
		constexpr auto RouteList = 0x28c; // TArray<FActorReference>
		constexpr auto FudgeFactor = 0x29c; // float
		constexpr auto RouteIndexOffset = 0x2a0; // int32_t
	}

	namespace n_UTgAnimNodeChannelFire_CorrupterUlt { // : UTgAnimNodeBlendList
		constexpr auto CurrentState = 0x168; // CorrupterUltAnimState
	}

	namespace n_UShadowMapTexture2D { // : UTexture2D
		constexpr auto ShadowmapFlags = 0x208; // int32_t
	}

	namespace n_UUIComponent_HudScoreHH { // : UUIComponent_Display
		constexpr auto m_pHudClimb = 0x124; // ObjectProperty
		constexpr auto m_pHudTDM = 0x12c; // ObjectProperty
	}

	namespace n_UActorFactoryFracturedStaticMesh { // : UActorFactory
		constexpr auto FracturedStaticMesh = 0x9c; // ObjectProperty
		constexpr auto DrawScale3D = 0xa4; // FVector
	}

	namespace n_UParticleModuleTypeDataRibbon { // : UParticleModuleTypeDataBase
		constexpr auto MaxTessellationBetweenParticles = 0x68; // int32_t
		constexpr auto SheetsPerTrail = 0x6c; // int32_t
		constexpr auto MaxTrailCount = 0x70; // int32_t
		constexpr auto MaxParticleInTrailCount = 0x74; // int32_t
		constexpr auto bDeadTrailsOnDeactivate = 0x78; // uint32_t : 1
		constexpr auto bDeadTrailsOnSourceLoss = 0x78; // uint32_t : 1
		constexpr auto bClipSourceSegement = 0x78; // uint32_t : 1
		constexpr auto bEnablePreviousTangentRecalculation = 0x78; // uint32_t : 1
		constexpr auto bTangentRecalculationEveryFrame = 0x78; // uint32_t : 1
		constexpr auto bSpawnInitialParticle = 0x78; // uint32_t : 1
		constexpr auto bRenderGeometry = 0x78; // uint32_t : 1
		constexpr auto bRenderSpawnPoints = 0x78; // uint32_t : 1
		constexpr auto bRenderTangents = 0x78; // uint32_t : 1
		constexpr auto bRenderTessellation = 0x78; // uint32_t : 1
		constexpr auto bEnableTangentDiffInterpScale = 0x78; // uint32_t : 1
		constexpr auto RenderAxis = 0x7c; // ETrailsRenderAxisOption
		constexpr auto TangentSpawningScalar = 0x80; // float
		constexpr auto TilingDistance = 0x84; // float
		constexpr auto DistanceTessellationStepSize = 0x88; // float
		constexpr auto TangentTessellationScalar = 0x8c; // float
	}

	namespace n_ATgPostProcessVolume { // : APostProcessVolume
		constexpr auto m_Material = 0x44c; // ObjectProperty
		constexpr auto m_SceneDPG = 0x454; // ESceneDepthPriorityGroup
		constexpr auto m_MaterialMIC = 0x458; // ObjectProperty
		constexpr auto m_FadeInTime = 0x460; // float
		constexpr auto m_FadeOutTime = 0x464; // float
		constexpr auto m_FadeScalarParameterName = 0x468; // FName
	}

	namespace n_UTgAchievement_HardCarry { // : UTgAchievement
		constexpr auto nKills = 0x94; // int32_t
	}

	namespace n_ATgDevice_ImaniUlt { // : ATgDevice_Pet
		constexpr auto m_CachedImani = 0xa08; // ObjectProperty
	}

	namespace n_UTgDeviceForm_Scout { // : UTgDeviceForm
		constexpr auto m_SKCBirdScale = 0x28c; // ObjectProperty
	}

	namespace n_AEmitter { // : AActor
		constexpr auto ParticleSystemComponent = 0x280; // ComponentProperty
		constexpr auto LightEnvironment = 0x288; // ComponentProperty
		constexpr auto bDestroyOnSystemFinish = 0x290; // uint32_t : 1
		constexpr auto bPostUpdateTickGroup = 0x290; // uint32_t : 1
		constexpr auto bCurrentlyActive = 0x290; // uint32_t : 1
	}

	namespace n_UParticleModuleParameterDynamic_Seeded { // : UParticleModuleParameterDynamic
		constexpr auto RandomSeedInfo = 0x80; // FParticleRandomSeedInfo
	}

	namespace n_UUIComponent_LeaderboardPlayer { // : UUIComponent_Display
		constexpr auto m_mcName = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcPosition = 0x134; // ObjectProperty
		constexpr auto m_mcWins = 0x13c; // ObjectProperty
		constexpr auto m_mcLosses = 0x144; // ObjectProperty
		constexpr auto m_mcScore = 0x14c; // ObjectProperty
		constexpr auto m_mcRegion = 0x154; // ObjectProperty
		constexpr auto m_mcChampion = 0x15c; // ObjectProperty
		constexpr auto m_mcChampionIcon = 0x164; // ObjectProperty
		constexpr auto m_mcChampionFrame = 0x16c; // ObjectProperty
		constexpr auto m_FrameButton = 0x174; // ObjectProperty
	}

	namespace n_UUIComponent_ProgressBarHorizontal { // : UUIComponent_Display
		constexpr auto m_bHideFillWhenEmpty = 0x124; // uint32_t : 1
		constexpr auto m_bHideTipWhenEmpty = 0x124; // uint32_t : 1
		constexpr auto m_mcBackground = 0x128; // ObjectProperty
		constexpr auto m_mcFill = 0x130; // ObjectProperty
		constexpr auto m_mcTip = 0x138; // ObjectProperty
		constexpr auto m_fAnimTime = 0x140; // float
		constexpr auto m_fAnimDelay = 0x144; // float
		constexpr auto m_fCurrentPercent = 0x148; // float
		constexpr auto m_fTargetPercent = 0x14c; // float
		constexpr auto m_fDeltaPercent = 0x150; // float
	}

	namespace n_UUIInteractable_DailyDeal_JsonCarousel { // : UUIInteractable_JsonPanel
		constexpr auto VfTable_IUIInteractableInterface_JsonCarousel = 0x22c; // FPointer
		constexpr auto m_nIndex = 0x234; // int32_t
		constexpr auto m_nmGamepadLeftKey = 0x238; // FName
		constexpr auto m_nmGamepadRightKey = 0x240; // FName
		constexpr auto m_bOnImage2 = 0x248; // uint32_t : 1
		constexpr auto m_bDisableNavigation = 0x248; // uint32_t : 1
		constexpr auto m_bPauseAutoRotation = 0x248; // uint32_t : 1
		constexpr auto m_bDisableAutoRotation = 0x248; // uint32_t : 1
		constexpr auto m_fNavDotCenter = 0x24c; // float
		constexpr auto m_fAutoRotationTime = 0x250; // float
		constexpr auto m_fAutoRotationDelay = 0x254; // float
		constexpr auto m_CarouselJsonFeatureData = 0x258; // TArray<FJsonFeatureData>
		constexpr auto m_pDailyDealPanel = 0x268; // ObjectProperty
		constexpr auto m_mcJsonRoot = 0x270; // ObjectProperty
		constexpr auto m_mcImage2 = 0x278; // ObjectProperty
		constexpr auto m_mcNavControlsRoot = 0x280; // ObjectProperty
		constexpr auto m_mcLeftButtonPrompt = 0x288; // ObjectProperty
		constexpr auto m_mcRightButtonPrompt = 0x290; // ObjectProperty
		constexpr auto m_pLeftArrow = 0x298; // ObjectProperty
		constexpr auto m_pRightArrow = 0x2a0; // ObjectProperty
		constexpr auto m_pNavDots = 0x2a8; // TArray<ObjectProperty>
		constexpr auto m_pButton = 0x2b8; // ObjectProperty
	}

	namespace n_UHeadTrackingComponent { // : UActorComponent
		constexpr auto TrackControllerName = 0x88; // TArray<FName>
		constexpr auto LookAtActorRadius = 0x98; // float
		constexpr auto bDisableBeyondLimit = 0x9c; // uint32_t : 1
		constexpr auto MaxLookAtTime = 0xa0; // float
		constexpr auto MinLookAtTime = 0xa4; // float
		constexpr auto MaxInterestTime = 0xa8; // float
		constexpr auto ActorClassesToLookAt = 0xac; // TArray<AActor*>
		constexpr auto TargetBoneNames = 0xbc; // TArray<FName>
		constexpr auto CurrentActorMap = 0xcc; // TMap<None, None>
		constexpr auto SkeletalMeshComp = 0x114; // ComponentProperty
		constexpr auto TrackControls = 0x11c; // TArray<ObjectProperty>
		constexpr auto RootMeshLocation = 0x12c; // FVector
		constexpr auto RootMeshRotation = 0x138; // FRotator
	}

	namespace n_UAnimationCompressionAlgorithm { // : UObject
		constexpr auto Description = 0x60; // FString
		constexpr auto bNeedsSkeleton = 0x70; // uint32_t : 1
		constexpr auto TranslationCompressionFormat = 0x74; // AnimationCompressionFormat
		constexpr auto RotationCompressionFormat = 0x75; // AnimationCompressionFormat
	}

	namespace n_UUIDataLeagueTier { // : UUIData
		constexpr auto pLeague = 0x64; // ObjectProperty
		constexpr auto dwTierId = 0x6c; // Fdword
	}

	namespace n_UParticleModuleVelocity_Seeded { // : UParticleModuleVelocity
		constexpr auto RandomSeedInfo = 0xb4; // FParticleRandomSeedInfo
	}

	namespace n_ATcpLink { // : AInternetLink
		constexpr auto LinkState = 0x2a4; // ELinkState
		constexpr auto RemoteAddr = 0x2a8; // FIpAddr
		constexpr auto AcceptClass = 0x2bc; // ATcpLink*
		constexpr auto SendFIFO = 0x2c4; // TArray<char>
		constexpr auto RecvBuf = 0x2d4; // FString
	}

	namespace n_UTgSeqEvent_InputReceived { // : USequenceEvent
		constexpr auto bAllowInputDisabling = 0x128; // uint32_t : 1
	}

	namespace n_UTgMenuContentData { // : UObject
		constexpr auto m_MeshData = 0x60; // TArray<FMeshData>
	}

	namespace n_UTgAnimBlendByChurchillDrone { // : UTgAnimNodeBlendList
		constexpr auto m_bLeftDrone = 0x168; // uint32_t : 1
	}

	namespace n_AExponentialHeightFog { // : AInfo
		constexpr auto Component = 0x280; // ComponentProperty
		constexpr auto bEnabled = 0x288; // uint32_t : 1
	}

	namespace n_UTgAnimNodeStance { // : UAnimNodeBlendList
		constexpr auto m_Stance = 0x144; // int32_t
	}

	namespace n_UActorFactoryArchetype { // : UActorFactory
		constexpr auto ArchetypeActor = 0x9c; // ObjectProperty
	}

	namespace n_UTgAnimTurnInPlace { // : UAnimNodeBlend
		constexpr auto bInitialized = 0x124; // uint32_t : 1
		constexpr auto bRootRotInitialized = 0x124; // uint32_t : 1
		constexpr auto m_bDisableRotation = 0x124; // uint32_t : 1
		constexpr auto bDelayBlendOutToPlayAnim = 0x124; // uint32_t : 1
		constexpr auto bPlayingTurnTransition = 0x124; // uint32_t : 1
		constexpr auto m_bCanChooseNewTransition = 0x124; // uint32_t : 1
		constexpr auto m_bOverrideInterpolationTime = 0x124; // uint32_t : 1
		constexpr auto m_bMirrorOffsetWhenPawnMirrored = 0x124; // uint32_t : 1
		constexpr auto m_bAlwaysUpdateYawOffset = 0x124; // uint32_t : 1
		constexpr auto m_bIgnoreTransitionAnimations = 0x124; // uint32_t : 1
		constexpr auto m_bOnlyUpdateRotationWhenMoving = 0x124; // uint32_t : 1
		constexpr auto m_bTurnTowardsVelocity = 0x124; // uint32_t : 1
		constexpr auto m_bUsePawnRotationAtZeroVelocity = 0x124; // uint32_t : 1
		constexpr auto m_bUse180ShortestRoute = 0x124; // uint32_t : 1
		constexpr auto m_bConstrictIdleYawOffset = 0x124; // uint32_t : 1
		constexpr auto m_bDisableAllTurning = 0x124; // uint32_t : 1
		constexpr auto m_bJustBecameRelevant = 0x124; // uint32_t : 1
		constexpr auto LastPawnYaw = 0x128; // int32_t
		constexpr auto LastPawnPitch = 0x12c; // int32_t
		constexpr auto PawnRotationRate = 0x130; // float
		constexpr auto LastRootBoneYaw = 0x134; // int32_t
		constexpr auto YawOffset = 0x138; // int32_t
		constexpr auto PitchOffset = 0x13c; // int32_t
		constexpr auto RelativeOffset = 0x140; // float
		constexpr auto m_TgPawn = 0x144; // ObjectProperty
		constexpr auto OffsetNodes2 = 0x14c; // TArray<ObjectProperty>
		constexpr auto RotTransitions = 0x15c; // TArray<FRotTransitionInfo>
		constexpr auto TransitionBlendTime = 0x16c; // float
		constexpr auto CurrentTransitionIndex = 0x170; // int32_t
		constexpr auto TransitionThresholdAngle = 0x174; // float
		constexpr auto m_ForcedTransitionAngle = 0x178; // ForcedTransitionAngle
		constexpr auto m_fChooseNewTransitionPercent = 0x17c; // float
		constexpr auto m_fInterpolationTime = 0x180; // float
		constexpr auto m_RemainingInterpolationTime = 0x184; // float
		constexpr auto PlayerNodes = 0x188; // TArray<ObjectProperty>
		constexpr auto m_fIgnoredTransitionTime = 0x198; // float
		constexpr auto m_fTurnInterpTime = 0x19c; // float
		constexpr auto m_InterpRotation = 0x1a0; // FRotator
	}

	namespace n_UTgAudioComponent { // : UAudioComponent
		constexpr auto m_bCanBeHeardDuringStealth = 0x2cc; // uint32_t : 1
		constexpr auto m_fStealthFadeInTime = 0x2d0; // float
		constexpr auto m_fStealthFadeOutTime = 0x2d4; // float
		constexpr auto m_fStealthVolumeMultiplier = 0x2d8; // float
	}

	namespace n_UTgInventoryObject_Listen_Combo_Viktor { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_MarkedTargets = 0xcc; // TArray<FTimedMarkedTarget>
	}

	namespace n_ATgDevice_Protection { // : ATgDevice
		constexpr auto m_Gauntlet = 0xa08; // ObjectProperty
	}

	namespace n_ATgDevice_RaumStomp { // : ATgDevice
		constexpr auto m_CachedRaum = 0xa08; // ObjectProperty
		constexpr auto m_fProjectileSpreadAngle = 0xa10; // float
		constexpr auto m_rInitialStompDirection = 0xa14; // FRotator
		constexpr auto m_fMaxDirectionShiftDegrees = 0xa20; // float
		constexpr auto m_fStompProjectileHeightOffset = 0xa24; // float
		constexpr auto m_HitActors = 0xa28; // TArray<ObjectProperty>
	}

	namespace n_UPartyBeaconClient { // : UPartyBeacon
		constexpr auto HostPendingRequest = 0x98; // FOnlineGameSearchResult
		constexpr auto PendingRequest = 0xa8; // FPartyReservation
		constexpr auto ClientBeaconState = 0xc4; // EPartyBeaconClientState
		constexpr auto ClientBeaconRequestType = 0xc5; // EPartyBeaconClientRequest
		constexpr auto ReservationRequestTimeout = 0xc8; // float
		constexpr auto ReservationRequestElapsedTime = 0xcc; // float
		constexpr auto ResolverClassName = 0xd0; // FString
		constexpr auto ResolverClass = 0xe0; // UClientBeaconAddressResolver*
		constexpr auto Resolver = 0xe8; // ObjectProperty
		constexpr auto __OnReservationRequestComplete__Delegate = 0xf0; // DelegateProperty
		constexpr auto __OnReservationCountUpdated__Delegate = 0x100; // DelegateProperty
		constexpr auto __OnTravelRequestReceived__Delegate = 0x110; // DelegateProperty
		constexpr auto __OnHostIsReady__Delegate = 0x120; // DelegateProperty
		constexpr auto __OnHostHasCancelled__Delegate = 0x130; // DelegateProperty
	}

	namespace n_UTgInvListener_ActiveWhileWeaponSwap { // : UTgInvListener
		constexpr auto m_CachedOwlPawn = 0xc4; // ObjectProperty
		constexpr auto m_bActivateWhileInhandActive = 0xcc; // uint32_t : 1
		constexpr auto m_bIsActive = 0xcc; // uint32_t : 1
	}

	namespace n_UUIComponent_Targeter_BracketTargeter { // : UUIComponent_Targeter
		constexpr auto m_mcTargeterLeft = 0x184; // ObjectProperty
		constexpr auto m_mcTargeterRight = 0x18c; // ObjectProperty
		constexpr auto m_fSideTargeterAspectRatio = 0x194; // float
		constexpr auto m_fMaxBracketWidth = 0x198; // float
	}

	namespace n_USkelControl_TwistBone { // : USkelControlBase
		constexpr auto SourceBoneName = 0xd0; // FName
		constexpr auto TwistAngleScale = 0xd8; // float
	}

	namespace n_UForceFieldShapeSphere { // : UForceFieldShape
		constexpr auto Shape = 0x60; // ComponentProperty
	}

	namespace n_ATgPathfinder { // : AActor
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_fMaxSpeed = 0x288; // float
		constexpr auto m_vWaypoints = 0x28c; // TArray<FVector>
		constexpr auto m_fPathCheckRadius = 0x29c; // float
		constexpr auto m_NavigationHandle = 0x2a0; // ObjectProperty
		constexpr auto m_Spline = 0x2a8; // ObjectProperty
		constexpr auto m_CurrentSpline = 0x2b0; // ObjectProperty
		constexpr auto m_fCurrentSplineDist = 0x2b8; // float
		constexpr auto m_NavMeshPathParams = 0x2bc; // FNavMeshPathParams
		constexpr auto m_ActiveWalkers = 0x2f4; // TArray<ObjectProperty>
		constexpr auto m_WalkerLifeSpan = 0x304; // float
		constexpr auto __OnFinishedPathing__Delegate = 0x308; // DelegateProperty
	}

	namespace n_UPComInputLightingEffect { // : UObject
		constexpr auto bAllowLogitechSdk = 0x60; // uint32_t : 1
		constexpr auto bLogitechSdkInitialized = 0x60; // uint32_t : 1
		constexpr auto bLatchedSystemSettingsSdkAllowed = 0x60; // uint32_t : 1
		constexpr auto Presets = 0x64; // TArray<FPComInputLightingPreset>
		constexpr auto PresetsMap = 0x74; // FMap_Mirror
		constexpr auto ActivePresets = 0xbc; // TArray<FPComActiveInputLightingPreset>
		constexpr auto BlendFromColor = 0xcc; // FLinearColor
		constexpr auto BlendPercent = 0xdc; // float
	}

	namespace n_UUIData_RentSprayPopup { // : UUIData
		constexpr auto m_lsSprayName = 0x64; // FString
		constexpr auto m_lsChestName = 0x74; // FString
		constexpr auto m_nChestIconFrame = 0x84; // int32_t
		constexpr auto m_nChestQuantity = 0x88; // int32_t
		constexpr auto m_nSprayIconFrame = 0x8c; // int32_t
		constexpr auto m_nSprayRarityFrame = 0x90; // int32_t
		constexpr auto m_dwVendorId = 0x94; // Fdword
		constexpr auto m_dwLootId = 0x98; // Fdword
		constexpr auto m_pSprayData = 0x9c; // ObjectProperty
	}

	namespace n_UPComPictureInPictureScene { // : UObject
		constexpr auto SkyBrightness = 0x60; // float
		constexpr auto SkyColor = 0x64; // FColor
		constexpr auto LightBrightness = 0x68; // float
		constexpr auto bAlwaysAllowAudioPlayback = 0x6c; // uint32_t : 1
		constexpr auto bForceAllUsedMipsResident = 0x6c; // uint32_t : 1
		constexpr auto Scene = 0x70; // FPointer
		constexpr auto Components = 0x78; // TArray<ComponentProperty>
		constexpr auto DirectionalLight = 0x88; // ComponentProperty
		constexpr auto DirectionalBounceLight = 0x90; // ComponentProperty
		constexpr auto SkyLight = 0x98; // ComponentProperty
		constexpr auto LineBatcher = 0xa0; // ComponentProperty
	}

	namespace n_UUIComponent_Passive { // : UUIComponent_Display
		constexpr auto m_mcTitle = 0x124; // ObjectProperty
		constexpr auto m_mcSubtitle = 0x12c; // ObjectProperty
		constexpr auto m_mcFrame = 0x134; // ObjectProperty
		constexpr auto m_mcIcon = 0x13c; // ObjectProperty
		constexpr auto m_mcIconTexture = 0x144; // ObjectProperty
		constexpr auto m_mcIconBackground = 0x14c; // ObjectProperty
	}

	namespace n_UUIComponent_Button_LoadoutAvatar { // : UUIComponent_Display
		constexpr auto m_Avatar = 0x124; // ObjectProperty
		constexpr auto m_mcRarity = 0x12c; // ObjectProperty
		constexpr auto m_mcName = 0x134; // ObjectProperty
	}

	namespace n_UMaterialExpressionStaticComponentMaskParameter { // : UMaterialExpressionParameter
		constexpr auto Input = 0xd0; // FExpressionInput
		constexpr auto DefaultR = 0x104; // uint32_t : 1
		constexpr auto DefaultG = 0x104; // uint32_t : 1
		constexpr auto DefaultB = 0x104; // uint32_t : 1
		constexpr auto DefaultA = 0x104; // uint32_t : 1
		constexpr auto InstanceOverride = 0x108; // FPointer
	}

	namespace n_UMaterialExpressionTextureObject { // : UMaterialExpression
		constexpr auto Texture = 0xb0; // ObjectProperty
	}

	namespace n_UMobileMenuObject { // : UObject
		constexpr auto bHasBeenInitialized = 0x60; // uint32_t : 1
		constexpr auto bRelativeLeft = 0x60; // uint32_t : 1
		constexpr auto bRelativeTop = 0x60; // uint32_t : 1
		constexpr auto bRelativeWidth = 0x60; // uint32_t : 1
		constexpr auto bRelativeHeight = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleLeft = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleTop = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleWidth = 0x60; // uint32_t : 1
		constexpr auto bApplyGlobalScaleHeight = 0x60; // uint32_t : 1
		constexpr auto bHeightRelativeToWidth = 0x60; // uint32_t : 1
		constexpr auto bXOffsetIsActual = 0x60; // uint32_t : 1
		constexpr auto bYOffsetIsActual = 0x60; // uint32_t : 1
		constexpr auto bIsActive = 0x60; // uint32_t : 1
		constexpr auto bIsHidden = 0x60; // uint32_t : 1
		constexpr auto bIsTouched = 0x60; // uint32_t : 1
		constexpr auto bIsHighlighted = 0x60; // uint32_t : 1
		constexpr auto bTellSceneBeforeRendering = 0x60; // uint32_t : 1
		constexpr auto Left = 0x64; // float
		constexpr auto Top = 0x68; // float
		constexpr auto Width = 0x6c; // float
		constexpr auto Height = 0x70; // float
		constexpr auto InitialLeft = 0x74; // float
		constexpr auto InitialTop = 0x78; // float
		constexpr auto InitialWidth = 0x7c; // float
		constexpr auto InitialHeight = 0x80; // float
		constexpr auto AuthoredGlobalScale = 0x84; // float
		constexpr auto TopLeeway = 0x88; // float
		constexpr auto BottomLeeway = 0x8c; // float
		constexpr auto LeftLeeway = 0x90; // float
		constexpr auto RightLeeway = 0x94; // float
		constexpr auto XOffset = 0x98; // float
		constexpr auto YOffset = 0x9c; // float
		constexpr auto Tag = 0xa0; // FString
		constexpr auto InputOwner = 0xb0; // ObjectProperty
		constexpr auto Opacity = 0xb8; // float
		constexpr auto OwnerScene = 0xbc; // ObjectProperty
		constexpr auto RelativeToTag = 0xc4; // FString
		constexpr auto RelativeTo = 0xd4; // ObjectProperty
	}

	namespace n_USceneCapture2DComponent { // : USceneCaptureComponent
		constexpr auto TextureTarget = 0xd0; // ObjectProperty
		constexpr auto FieldOfView = 0xd8; // float
		constexpr auto NearPlane = 0xdc; // float
		constexpr auto FarPlane = 0xe0; // float
		constexpr auto bUpdateMatrices = 0xe4; // uint32_t : 1
		constexpr auto ViewMatrix = 0xf0; // FMatrix
		constexpr auto ProjMatrix = 0x130; // FMatrix
		constexpr auto ViewMatrix_RT = 0x170; // FMatrix
		constexpr auto ProjMatrix_RT = 0x1b0; // FMatrix
	}

	namespace n_UInterpTrackToggle { // : UInterpTrack
		constexpr auto ToggleTrack = 0xa0; // TArray<FToggleTrackKey>
		constexpr auto bActivateSystemEachUpdate = 0xb0; // uint32_t : 1
		constexpr auto bActivateWithJustAttachedFlag = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenForwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenBackwards = 0xb0; // uint32_t : 1
		constexpr auto bFireEventsWhenJumpingForwards = 0xb0; // uint32_t : 1
	}

	namespace n_USeqVar_String { // : USequenceVariable
		constexpr auto StrValue = 0xa0; // FString
	}

	namespace n_ATgClientHUD { // : ATgHUD
		constexpr auto m_eState = 0x5a8; // char
		constexpr auto m_ePromptType = 0x5a9; // char
		constexpr auto m_eCaptureState = 0x5aa; // char
		constexpr auto m_fPromptTime = 0x5ac; // float
		constexpr auto m_fPromptTimer = 0x5b0; // float
		constexpr auto m_pMovie = 0x5b4; // ObjectProperty
		constexpr auto m_SceneStack = 0x5bc; // TArray<ObjectProperty>
		constexpr auto m_PopupStack = 0x5cc; // TArray<ObjectProperty>
		constexpr auto m_ScenePreloads = 0x5dc; // TArray<FSceneInfo>
		constexpr auto m_sNeededScenes = 0x5ec; // TArray<FString>
		constexpr auto m_bShowCursor = 0x5fc; // uint32_t : 1
		constexpr auto m_bCaptureKeys = 0x5fc; // uint32_t : 1
		constexpr auto m_bHidden = 0x5fc; // uint32_t : 1
		constexpr auto m_bGamepadForced = 0x5fc; // uint32_t : 1
		constexpr auto m_nNumLeftClick = 0x600; // int32_t
		constexpr auto m_PictureInPicture = 0x604; // ObjectProperty
		constexpr auto m_MoviePlayers = 0x60c; // TArray<ObjectProperty>
		constexpr auto m_DevMenu = 0x61c; // ObjectProperty
		constexpr auto m_GAPeach = 0x624; // ObjectProperty
		constexpr auto m_MessageRedirects = 0x62c; // TArray<FMessageRedirect>
		constexpr auto m_MessageRedirectMap = 0x63c; // TMap<None, None>
	}

	namespace n_UUIComponent_HeaderTabs { // : UUIComponent_List
		constexpr auto m_pBumpers = 0x260; // ObjectProperty [0x2]
		constexpr auto m_NavLeft = 0x270; // ObjectProperty
		constexpr auto m_NavRight = 0x278; // ObjectProperty
		constexpr auto m_fButtonSpace = 0x280; // float
		constexpr auto m_fBumperSpaceLeft = 0x284; // float
		constexpr auto m_fBumperSpaceRight = 0x288; // float
		constexpr auto m_bIsChestHeader = 0x28c; // uint32_t : 1
	}

	namespace n_ATgDeploy_ManaRift { // : ATgDeployable
		constexpr auto m_CachedPawnOwner = 0x46c; // ObjectProperty
	}

	namespace n_ATgDevice_EbbAndFlow { // : ATgDevice
		constexpr auto m_ShellSpinDevice = 0xa08; // ObjectProperty
	}

	namespace n_UTgData_EOM { // : UTgDataObject
		constexpr auto m_nGameId = 0xc0; // int32_t
		constexpr auto m_nQueueId = 0xc4; // int32_t
		constexpr auto m_nClassId = 0xc8; // int32_t
		constexpr auto m_nGameTime = 0xcc; // int32_t
		constexpr auto m_nLocalTF = 0xd0; // int32_t
		constexpr auto m_nWinningTF = 0xd4; // int32_t
		constexpr auto m_bVictory = 0xd8; // uint32_t : 1
		constexpr auto m_bIsSpectator = 0xd8; // uint32_t : 1
		constexpr auto m_nMapGameId = 0xdc; // int32_t
		constexpr auto m_nXPEarned = 0xe0; // int32_t
		constexpr auto m_nMasteryEarned = 0xe4; // int32_t
		constexpr auto m_nGoldEarned = 0xe8; // int32_t
		constexpr auto m_nVIPEarned = 0xec; // int32_t
		constexpr auto m_nVIPMemberEarned = 0xf0; // int32_t
		constexpr auto m_nBattlePassBase = 0xf4; // int32_t
		constexpr auto m_nBattlePassEarned = 0xf8; // int32_t
		constexpr auto m_fBattlePassMultiplier = 0xfc; // int32_t
		constexpr auto m_nEventCurrencyEarned = 0x100; // int32_t
		constexpr auto m_nEventCurrencyEarnedLootId = 0x104; // int32_t
		constexpr auto m_fXPMultiplier = 0x108; // float
		constexpr auto m_fMasteryMultiplier = 0x10c; // float
		constexpr auto m_fGoldMultiplier = 0x110; // float
		constexpr auto m_fVIPMultiplier = 0x114; // float
		constexpr auto m_nXPAccountBoost = 0x118; // int32_t
		constexpr auto m_nMasteryAccountBoost = 0x11c; // int32_t
		constexpr auto m_nGoldAccountBoost = 0x120; // int32_t
		constexpr auto m_nXPPartyBoost = 0x124; // int32_t
		constexpr auto m_nMasteryPartyBoost = 0x128; // int32_t
		constexpr auto m_nGoldPartyBoost = 0x12c; // int32_t
		constexpr auto m_nVIPPartyBoost = 0x130; // int32_t
		constexpr auto m_nXPTeamBoost = 0x134; // int32_t
		constexpr auto m_nMasteryTeamBoost = 0x138; // int32_t
		constexpr auto m_nGoldTeamBoost = 0x13c; // int32_t
		constexpr auto m_nVIPTeamBoost = 0x140; // int32_t
		constexpr auto m_nXPSkinBoost = 0x144; // int32_t
		constexpr auto m_nMasterySkinBoost = 0x148; // int32_t
		constexpr auto m_nGoldSkinBoost = 0x14c; // int32_t
		constexpr auto m_nVIPSkinBoost = 0x150; // int32_t
		constexpr auto m_nNumSkinBoosters = 0x154; // int32_t
		constexpr auto m_nXPVIPTierBoost = 0x158; // int32_t
		constexpr auto m_nMasteryVIPTierBoost = 0x15c; // int32_t
		constexpr auto m_nGoldVIPTierBoost = 0x160; // int32_t
		constexpr auto m_nVIPVIPTierBoost = 0x164; // int32_t
		constexpr auto m_nXPBonus = 0x168; // int32_t
		constexpr auto m_nGoldBonus = 0x16c; // int32_t
		constexpr auto m_nGoldAccolades = 0x170; // int32_t
		constexpr auto m_nXPPaying = 0x174; // int32_t
		constexpr auto m_dwGoldKills = 0x178; // Fdword
		constexpr auto m_Players = 0x17c; // TArray<ObjectProperty>
		constexpr auto m_MVPs = 0x18c; // TArray<FUIMVPDATA>
		constexpr auto m_Accolades = 0x19c; // TArray<FAccoladeData>
		constexpr auto m_vCurrencyEntries = 0x1ac; // TArray<FCurrencyEntry>
		constexpr auto m_NullCurrency = 0x1bc; // FCurrencyEntry
	}

	namespace n_UTgDeviceForm_RestoreSoul { // : UTgDeviceForm
		constexpr auto m_CachedOracle = 0x28c; // ObjectProperty
	}

	namespace n_ATgPlayerCountVolume { // : AVolume
		constexpr auto PlayerCountTarget = 0x2bc; // int32_t
		constexpr auto TaskForceNumber = 0x2c0; // int32_t
		constexpr auto MessageId = 0x2c4; // int32_t
		constexpr auto Players = 0x2c8; // TArray<ObjectProperty>
		constexpr auto Enabled = 0x2d8; // uint32_t : 1
	}

	namespace n_ATgDevice_AzaanUltSlam { // : ATgDevice
		constexpr auto m_AzaanUltDevice = 0xa08; // ObjectProperty
		constexpr auto m_fTraceDownDistance = 0xa10; // float
		constexpr auto m_fLerpDelayTimer = 0xa14; // float
		constexpr auto m_fPostLerp3P = 0xa18; // float
		constexpr auto m_fPostAttackLockout = 0xa1c; // float
		constexpr auto m_fHammerTravelTimeSafety = 0xa20; // float
		constexpr auto m_fLerpTime = 0xa24; // float
		constexpr auto m_fEndpointZForgiveness = 0xa28; // float
		constexpr auto m_pAzaan = 0xa2c; // ObjectProperty
		constexpr auto m_vCachedEndpoint = 0xa34; // FVector
	}

	namespace n_UUIData_EventChallengeHub { // : UUIData
		constexpr auto m_sName = 0x64; // FString
		constexpr auto m_sLore = 0x74; // FString
		constexpr auto m_nActivityId = 0x84; // int32_t
		constexpr auto m_nHubIconIndex = 0x88; // int32_t
		constexpr auto m_nSortOrderIndex = 0x8c; // int32_t
		constexpr auto m_pLTI = 0x90; // ObjectProperty
		constexpr auto m_Challenges = 0x98; // TArray<ObjectProperty>
		constexpr auto m_nCompleteLootID = 0xa8; // int32_t
	}

	namespace n_UUIData_PartyKick { // : UUIData
		constexpr auto m_nRequiredPartySize = 0x64; // int32_t
		constexpr auto m_pPostPartyKickResponse = 0x68; // ObjectProperty
	}

	namespace n_UTgSettingsManager { // : UTgObject
		constexpr auto VfTable_ITgCallbackInterface = 0x60; // FPointer
		constexpr auto m_bValidatedLoadedSettings = 0x68; // uint32_t : 1
		constexpr auto m_nSelectedChampion = 0x6c; // int32_t
		constexpr auto m_Sets = 0x70; // TMap<None, None>
		constexpr auto m_Settings = 0xb8; // TArray<ObjectProperty>
		constexpr auto m_Commands = 0xc8; // TArray<FTgKeyCommand>
		constexpr auto m_AccountSavedSettings = 0xd8; // TArray<FTgSettingPropMapping>
		constexpr auto m_CallbackContainer = 0xe8; // ObjectProperty
	}

	namespace n_UTgDeviceForm_DemonInhand { // : UTgDeviceForm
		constexpr auto m_bFiredFromLeft = 0x28c; // uint32_t : 1
		constexpr auto c_nmSocketLeft = 0x290; // FName
		constexpr auto c_nmSocketRight = 0x298; // FName
	}

	namespace n_UTgAIBehaviorAction_SelectLaneMoveTarget_Minotaur { // : UTgAIBehaviorAction
		constexpr auto bMustBeEnemy = 0x94; // uint32_t : 1
	}

	namespace n_UTgInventoryObject_Listen_SomethingToProve { // : UTgInvListener
		constexpr auto m_bAvailable = 0xc4; // uint32_t : 1
		constexpr auto m_CachedRestoreStaminaDevice = 0xc8; // ObjectProperty
	}

	namespace n_UDOFEffect { // : UPostProcessEffect
		constexpr auto FalloffExponent = 0x88; // float
		constexpr auto BlurKernelSize = 0x8c; // float
		constexpr auto MaxNearBlurAmount = 0x90; // float
		constexpr auto MinBlurAmount = 0x94; // float
		constexpr auto MaxFarBlurAmount = 0x98; // float
		constexpr auto FocusType = 0x9c; // EFocusType
		constexpr auto FocusInnerRadius = 0xa0; // float
		constexpr auto FocusDistance = 0xa4; // float
		constexpr auto FocusPosition = 0xa8; // FVector
	}

	namespace n_ATgPawn_Oracle { // : ATgPawn_Character
		constexpr auto r_RestoreSoulTarget = 0x3164; // ObjectProperty
		constexpr auto r_RestoreSoulHitOffset = 0x316c; // FVector
		constexpr auto r_RestoreSoulSecondaryTargets = 0x3178; // ObjectProperty [0x4]
		constexpr auto c_RestoreSoulSecondaryBeams = 0x3198; // ObjectProperty [0x4]
		constexpr auto r_bRestoreSoulActive = 0x31b8; // uint32_t : 1
		constexpr auto r_bHasAgonyTalent = 0x31b8; // uint32_t : 1
		constexpr auto r_SoulStackTargetPawnId = 0x31bc; // int32_t [0xa]
		constexpr auto r_SoulStackTargetCount = 0x31e4; // int32_t [0xa]
		constexpr auto c_CachedSoulStackTargetCount = 0x320c; // int32_t [0xa]
		constexpr auto c_InterpRestoreSoulHitOffset = 0x3234; // FVector
		constexpr auto c_fRestoreSoulHitOffsetInterpSpeed = 0x3240; // float
		constexpr auto m_fFrictionMultiplier = 0x3244; // float
		constexpr auto m_nStackAddedVictimFxId = 0x3248; // int32_t
		constexpr auto m_nStackAddedSourceFxId = 0x324c; // int32_t
		constexpr auto m_nMaxStacksVictimFxId = 0x3250; // int32_t
		constexpr auto m_nMaxStacksSourceFxId = 0x3254; // int32_t
		constexpr auto r_nSoulCollectorEffectGroupId = 0x3258; // int32_t
		constexpr auto r_nSoulCollectorStacksApplied = 0x325c; // int32_t
	}

	namespace n_ATgPawn_Ruckus { // : ATgPawn_Character
		constexpr auto m_fDamageAccumulator = 0x3164; // float
		constexpr auto r_bHexaFireFiring = 0x3168; // uint32_t : 1
		constexpr auto m_bInstancedGemArmMaterials = 0x3168; // uint32_t : 1
		constexpr auto m_bInstancedGemBodyMaterials = 0x3168; // uint32_t : 1
		constexpr auto m_bRegisteredAudioCallbacks = 0x3168; // uint32_t : 1
		constexpr auto m_bHasBoltGemFX = 0x3168; // uint32_t : 1
		constexpr auto r_fBarrelSpinRate = 0x316c; // float
		constexpr auto r_fBarrelSpinFactor = 0x3170; // float
		constexpr auto m_CachedRuckusInhand = 0x3174; // ObjectProperty
		constexpr auto m_CachedHexaFireGuns = 0x317c; // ObjectProperty
		constexpr auto m_CachedEmitter = 0x3184; // ObjectProperty
		constexpr auto m_CachedRepulsorField = 0x318c; // ObjectProperty
		constexpr auto m_ReplacementArmMICs = 0x3194; // TArray<ObjectProperty>
		constexpr auto m_ReplacementBodyMICs = 0x31a4; // TArray<ObjectProperty>
		constexpr auto m_nInstancedGemArmMaterialsHandle = 0x31b4; // int32_t
		constexpr auto m_nInstancedGemBodyMaterialsHandle = 0x31b8; // int32_t
		constexpr auto m_dwGemFXBusID = 0x31bc; // Fdword
		constexpr auto m_fVGSMatBlue = 0x31c0; // float
		constexpr auto m_IdleFX = 0x31c4; // ObjectProperty
	}

	namespace n_UTgDeviceFire_SuckSlash { // : UTgDeviceFire_EncroachmentFireCone
		constexpr auto m_fMaxPullin = 0x278; // float
	}

	namespace n_UTgDeviceForm_HexaFire { // : UTgDeviceForm
		constexpr auto m_LeftRocket1p = 0x28c; // ObjectProperty
		constexpr auto m_LeftRocket3p = 0x294; // ObjectProperty
		constexpr auto m_RightRocket1p = 0x29c; // ObjectProperty
		constexpr auto m_RightRocket3p = 0x2a4; // ObjectProperty
		constexpr auto m_bFiringRightRocket = 0x2ac; // uint32_t : 1
	}

	namespace n_UPComMusicThemePlayer { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto MusicThemePath = 0x68; // FString
		constexpr auto MusicTheme = 0x78; // ObjectProperty
		constexpr auto MusicComp = 0x80; // ComponentProperty
		constexpr auto MusicSyncActor = 0x88; // ObjectProperty
		constexpr auto LastMusicEvent = 0x90; // FName
		constexpr auto CurrentMusicTrack = 0x98; // FMusicTrackStruct
		constexpr auto CurrentMusicTrackStartTime = 0xc4; // float
		constexpr auto CurrentMusicTrackDuration = 0xc8; // float
	}

	namespace n_ATgPawn_Lex { // : ATgPawn_Character
		constexpr auto m_VengeanceDevice = 0x3164; // ObjectProperty
		constexpr auto m_CombatSlideDevice = 0x316c; // ObjectProperty
		constexpr auto m_InPursuitDevice = 0x3174; // ObjectProperty
		constexpr auto m_WeaponMeshActorLexInhand = 0x317c; // ObjectProperty
		constexpr auto m_Target = 0x3184; // ObjectProperty
		constexpr auto m_MaxSlideCameraAngle = 0x318c; // float
		constexpr auto m_PrevCameraYaw = 0x3190; // int32_t
		constexpr auto c_bUltFiring = 0x3194; // uint32_t : 1
		constexpr auto c_bPursuitFiring = 0x3194; // uint32_t : 1
		constexpr auto m_bFireLeftWeapon = 0x3194; // uint32_t : 1
		constexpr auto r_Targets = 0x3198; // ObjectProperty [0x5]
		constexpr auto r_TargetStates = 0x31c0; // ETheLawTargetState [0x5]
		constexpr auto r_nInhandAmmoRemaining = 0x31c8; // int32_t
	}

	namespace n_UUIComponent_BattlePassPurchaseAll { // : UUIComponent_Display
		constexpr auto m_pPurchaseAllButton = 0x124; // ObjectProperty
		constexpr auto m_mcInterstitialLocationTarget = 0x12c; // ObjectProperty
		constexpr auto m_InputPurchaseAll = 0x134; // ObjectProperty
		constexpr auto m_fOriginalButtonX = 0x13c; // float
		constexpr auto m_fOriginalButtonY = 0x140; // float
		constexpr auto m_bGamepadAcknowledged = 0x144; // uint32_t : 1
		constexpr auto m_bUseEncorePositions = 0x144; // uint32_t : 1
	}

	namespace n_UPrimitiveComponentFactory { // : UObject
		constexpr auto CollideActors = 0x60; // uint32_t : 1
		constexpr auto BlockActors = 0x60; // uint32_t : 1
		constexpr auto BlockZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockNonZeroExtent = 0x60; // uint32_t : 1
		constexpr auto BlockRigidBody = 0x60; // uint32_t : 1
		constexpr auto HiddenGame = 0x60; // uint32_t : 1
		constexpr auto HiddenEditor = 0x60; // uint32_t : 1
		constexpr auto CastShadow = 0x60; // uint32_t : 1
	}

	namespace n_ATgProj_BombKingStickyBomb { // : ATgProj_FreeGrenade
		constexpr auto m_bExplodedOnShield = 0x580; // uint32_t : 1
		constexpr auto m_bExplodedOnDeployGeomtry = 0x580; // uint32_t : 1
		constexpr auto c_bReadyToHide = 0x580; // uint32_t : 1
		constexpr auto m_CachedHitTarget = 0x584; // ObjectProperty
		constexpr auto m_vCachedHitLocation = 0x58c; // FVector
		constexpr auto m_vCachedHitNormal = 0x598; // FVector
	}

	namespace n_UUIData_VGSEntry { // : UUIData
		constexpr auto m_nId = 0x64; // int32_t
		constexpr auto m_nParentId = 0x68; // int32_t
		constexpr auto m_nScopeVal = 0x6c; // int32_t
		constexpr auto m_nPlatformId = 0x70; // int32_t
		constexpr auto m_nDepth = 0x74; // int32_t
		constexpr auto m_sLabel = 0x78; // FString
		constexpr auto m_sOutput = 0x88; // FString
		constexpr auto m_sKeybind = 0x98; // FString
		constexpr auto m_Children = 0xa8; // TArray<ObjectProperty>
	}

	namespace n_ATgPawn_Gauntlet { // : ATgPawn_Character
		constexpr auto r_SilenceTarget = 0x3164; // ObjectProperty
		constexpr auto r_SilenceHitOffset = 0x316c; // FVector
		constexpr auto c_InterpSilenceHitOffset = 0x3178; // FVector
		constexpr auto c_fSilenceHitOffsetInterpSpeed = 0x3184; // float
		constexpr auto r_RechargeTarget = 0x3188; // ObjectProperty
		constexpr auto r_RechargeHitOffset = 0x3190; // FVector
		constexpr auto c_InterpRechargeHitOffset = 0x319c; // FVector
		constexpr auto c_SilenceTarget = 0x31a8; // ObjectProperty
		constexpr auto c_ProtectionTarget = 0x31b0; // ObjectProperty
		constexpr auto m_PrePolymorphRechargeShield = 0x31b8; // int32_t
	}

	namespace n_USeqAct_MITV_Activate { // : USequenceAction
		constexpr auto DurationOfMITV = 0x108; // float
	}

	namespace n_ATgDroppedItem { // : AActor
		constexpr auto m_fLifeSpan = 0x280; // float
		constexpr auto m_bFadeOut = 0x284; // uint32_t : 1
		constexpr auto m_nmPickUpState = 0x288; // FName
		constexpr auto r_nItemId = 0x290; // int32_t
		constexpr auto c_Mesh = 0x294; // ComponentProperty
		constexpr auto s_EffectGroupList = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_ATgDevice_AstroQ { // : ATgDevice
		constexpr auto m_bApplyCooldown = 0xa08; // uint32_t : 1
	}

	namespace n_ATgProj_ShadowStickyBombHoming { // : ATgProj_ShadowStickyBomb
		constexpr auto m_fRetargetTime = 0x5c8; // float
		constexpr auto m_fRetargetingTimer = 0x5cc; // float
	}

	namespace n_UTgSeqAct_FadeOut { // : USequenceAction
		constexpr auto m_fDuration = 0x108; // float
	}

	namespace n_ATgAudioOcclusionActor { // : AActor
		constexpr auto VfTable_IInterface_NavigationHandle = 0x280; // FPointer
		constexpr auto m_NavigationHandleClass = 0x288; // UNavigationHandle*
		constexpr auto m_NavigationHandle = 0x290; // ObjectProperty
		constexpr auto NavMeshPath_SearchExtent_Modifier = 0x298; // FVector
		constexpr auto m_fCurrentMaxPathLength = 0x2a4; // float
	}

	namespace n_UTgDeviceForm_CombatSlide { // : UTgDeviceForm
		constexpr auto m_fTransitionTime = 0x28c; // float
	}

	namespace n_UTgAIBehaviorAction_Juke { // : UTgAIBehaviorAction
		constexpr auto JukeDist = 0x94; // float
		constexpr auto JukeProbability = 0x98; // float
	}

	namespace n_UUIComponent_CorvusMarkTeam { // : UUIComponent_Display
		constexpr auto m_mcAnim = 0x124; // ObjectProperty
		constexpr auto m_mcGlow = 0x12c; // ObjectProperty
		constexpr auto m_bEnabled = 0x134; // uint32_t : 1
	}

	namespace n_ATgPawn_Juggernaut { // : ATgPawn_LanePusher
		constexpr auto m_bNextLaserLeft = 0x305c; // uint32_t : 1
		constexpr auto m_bInGenericFirePosture = 0x305c; // uint32_t : 1
	}

	namespace n_UDrawSphereComponent { // : UPrimitiveComponent
		constexpr auto SphereColor = 0x24c; // FColor
		constexpr auto SphereMaterial = 0x250; // ObjectProperty
		constexpr auto SphereRadius = 0x258; // float
		constexpr auto SphereSides = 0x25c; // int32_t
		constexpr auto bDrawWireSphere = 0x260; // uint32_t : 1
		constexpr auto bDrawLitSphere = 0x260; // uint32_t : 1
		constexpr auto bDrawOnlyIfSelected = 0x260; // uint32_t : 1
	}

	namespace n_ULensFlareComponent { // : UPrimitiveComponent
		constexpr auto Template = 0x24c; // ObjectProperty
		constexpr auto PreviewInnerCone = 0x254; // ComponentProperty
		constexpr auto PreviewOuterCone = 0x25c; // ComponentProperty
		constexpr auto PreviewRadius = 0x264; // ComponentProperty
		constexpr auto bAutoActivate = 0x26c; // uint32_t : 1
		constexpr auto bIsActive = 0x26c; // uint32_t : 1
		constexpr auto bHasTranslucency = 0x26c; // uint32_t : 1
		constexpr auto bHasUnlitTranslucency = 0x26c; // uint32_t : 1
		constexpr auto bHasUnlitDistortion = 0x26c; // uint32_t : 1
		constexpr auto bUsesSceneColor = 0x26c; // uint32_t : 1
		constexpr auto bHasSeparateTranslucency = 0x26c; // uint32_t : 1
		constexpr auto bUseTrueConeCalculation = 0x26c; // uint32_t : 1
		constexpr auto bVisibleForMobile = 0x26c; // uint32_t : 1
		constexpr auto OuterCone = 0x270; // float
		constexpr auto InnerCone = 0x274; // float
		constexpr auto ConeFudgeFactor = 0x278; // float
		constexpr auto Radius = 0x27c; // float
		constexpr auto MinStrength = 0x280; // float
		constexpr auto SourceColor = 0x284; // FLinearColor
		constexpr auto Materials = 0x294; // TArray<FLensFlareElementMaterials>
		constexpr auto ReleaseResourcesFence = 0x2a4; // FPointer
		constexpr auto NextTraceTime = 0x2ac; // float
	}

	namespace n_ACameraActor { // : AActor
		constexpr auto bConstrainAspectRatio = 0x280; // uint32_t : 1
		constexpr auto bCamOverridePostProcess = 0x280; // uint32_t : 1
		constexpr auto AspectRatio = 0x284; // float
		constexpr auto FOVAngle = 0x288; // float
		constexpr auto CamOverridePostProcessAlpha = 0x28c; // float
		constexpr auto CamOverridePostProcess = 0x290; // FPostProcessSettings
		constexpr auto DrawFrustum = 0x410; // ComponentProperty
		constexpr auto MeshComp = 0x418; // ComponentProperty
	}

	namespace n_UUIDataAcquisition { // : UUIData
		constexpr auto dwLocalAcquisitionId = 0x64; // Fdword
		constexpr auto eQuestOrigin = 0x68; // QuestOrigin
	}

	namespace n_USoundNodeLooping { // : USoundNode
		constexpr auto bLoopIndefinitely = 0x74; // uint32_t : 1
		constexpr auto LoopCountMin = 0x78; // float
		constexpr auto LoopCountMax = 0x7c; // float
		constexpr auto LoopCount = 0x80; // FRawDistributionFloat
	}

	namespace n_UTgDeviceForm_FragGrenade { // : UTgDeviceForm
		constexpr auto m_FragGrenadeBlendList1P = 0x28c; // TArray<ObjectProperty>
		constexpr auto m_FragGrenadeBlendList3P = 0x29c; // TArray<ObjectProperty>
	}

	namespace n_UUIComponent_EventBundlePanelWithRewards { // : UUIComponent_EventBundlePanel
		constexpr auto m_mcRewards = 0x144; // ObjectProperty
		constexpr auto m_mcRewardsCurrencyTitle = 0x14c; // ObjectProperty
		constexpr auto m_mcRewardsDescription = 0x154; // ObjectProperty
		constexpr auto m_mcRewardsHidePadding = 0x15c; // ObjectProperty
		constexpr auto m_pRewardItems = 0x164; // ObjectProperty
		constexpr auto m_dwCurrentEventCurrencyType = 0x16c; // Fdword
		constexpr auto m_dwCurrentEventRewardsXPTable = 0x170; // Fdword
		constexpr auto m_dwCurrentEventRewardsVendor = 0x174; // Fdword
	}

	namespace n_UUIData_SocialAction { // : UUIData
		constexpr auto m_sTitle = 0x64; // TArray<FString>
		constexpr auto m_sData = 0x74; // TArray<FString>
		constexpr auto m_eAction = 0x84; // SAACT_ACTION
		constexpr auto m_eSourceList = 0x85; // SAL_LIST
		constexpr auto m_pSelectorFunc = 0x88; // FPointer
		constexpr auto m_bCloseOnAction = 0x90; // uint32_t : 1
		constexpr auto m_bAllowSelectAll = 0x90; // uint32_t : 1
	}

	namespace n_UUIComponent_PurchasableQuestChain { // : UUIComponent_Display
		constexpr auto m_pBundleButton = 0x124; // ObjectProperty
		constexpr auto m_pFrameButton = 0x12c; // ObjectProperty
		constexpr auto m_pQuestEntry = 0x134; // ObjectProperty
	}

	namespace n_UAnimNotify_PawnMaterialParam { // : UAnimNotify_Scripted
		constexpr auto ScalarParameterInterpArray = 0x68; // TArray<FScalarParameterInterpStruct>
	}

	namespace n_UTerrainLayerSetup { // : UObject
		constexpr auto Materials = 0x60; // TArray<FTerrainFilteredMaterial>
	}

	namespace n_UTgBeamHelper { // : UTgObject
		constexpr auto m_nSpecialFxId = 0x60; // int32_t
		constexpr auto m_pSpecialFx = 0x64; // ObjectProperty
		constexpr auto m_pPSCList = 0x6c; // TArray<ComponentProperty>
		constexpr auto m_bVisibilityEnabled = 0x7c; // uint32_t : 1
		constexpr auto m_bCurrentlyVisible = 0x7c; // uint32_t : 1
		constexpr auto m_bRequiresTarget = 0x7c; // uint32_t : 1
		constexpr auto m_bTangentsEnabled = 0x7c; // uint32_t : 1
		constexpr auto m_vInitialTangent = 0x80; // FVector
		constexpr auto m_pOwner = 0x8c; // ObjectProperty
		constexpr auto m_pTarget = 0x94; // ObjectProperty
		constexpr auto m_pAttachMesh = 0x9c; // ComponentProperty
		constexpr auto m_nmAttachMeshSocket = 0xa4; // FName
	}

	namespace n_UParticleModuleColor { // : UParticleModuleColorBase
		constexpr auto StartColor = 0x68; // FRawDistributionVector
		constexpr auto StartAlpha = 0x8c; // FRawDistributionFloat
		constexpr auto bClampAlpha = 0xb0; // uint32_t : 1
	}

	namespace n_ATgEmitter_CameraEffect_DamageBase { // : ATgEmitter_CameraEffect
		constexpr auto ScreenLocation = 0x2c0; // EDamageEffectScreenLocation
	}

	namespace n_AGameCrowdInteractionPoint { // : AActor
		constexpr auto bIsEnabled = 0x280; // uint32_t : 1
		constexpr auto CylinderComponent = 0x284; // ComponentProperty
	}

	namespace n_AImageReflectionShadowPlane { // : AActor
		constexpr auto bEnabled = 0x280; // uint32_t : 1
		constexpr auto ReflectionShadowComponent = 0x284; // ComponentProperty
	}

	namespace n_UTgSilhouetteComponentPaladins { // : UTgSilhouetteComponent
		constexpr auto m_ColorSettings = 0x29c; // FSilhouetteColorSettings
		constexpr auto m_FadeSettings = 0x2c0; // FSilhouetteFadeSettings
		constexpr auto m_PulseSettings = 0x2d4; // FSilhouettePulseSettings
	}

	namespace n_ATgPawn_DruidGuardian { // : ATgPawn_Character
		constexpr auto m_CachedDruid = 0x3164; // ObjectProperty
		constexpr auto m_CachedRush = 0x316c; // ObjectProperty
		constexpr auto r_pRedeployPlaceholder = 0x3174; // ObjectProperty
		constexpr auto m_fGuardianIntroLockoutTime = 0x317c; // float
		constexpr auto m_fRotationRateDegPerSec = 0x3180; // float
		constexpr auto m_fRedeployTweenDuration = 0x3184; // float
		constexpr auto m_fRedeployTweenRampUpDuration = 0x3188; // float
		constexpr auto m_fRedeployTweenSpeedFeetPerSecStart = 0x318c; // float
		constexpr auto m_fRedeployTweenSpeedFeetPerSecEnd = 0x3190; // float
		constexpr auto m_fRedeployFailsafeTime = 0x3194; // float
		constexpr auto m_fStunRushTweenRampUpDuration = 0x3198; // float
		constexpr auto m_fStunRushTweenSpeedFeetPerSecStart = 0x319c; // float
		constexpr auto m_fStunRushTweenSpeedFeetPerSecEnd = 0x31a0; // float
		constexpr auto m_fPostRedeployLockout = 0x31a4; // float
		constexpr auto m_fRedeployVerticalOffset = 0x31a8; // float
		constexpr auto r_fStunRushCooldownTime = 0x31ac; // float
		constexpr auto r_bStunRushInCooldown = 0x31b0; // uint32_t : 1
		constexpr auto r_bInWispForm = 0x31b0; // uint32_t : 1
		constexpr auto r_bStunRushRedeploy = 0x31b0; // uint32_t : 1
		constexpr auto r_bAnimatingRushHit = 0x31b0; // uint32_t : 1
		constexpr auto c_bPsychicGrowlOnWindupOnly = 0x31b0; // uint32_t : 1
		constexpr auto r_nStunRushInCooldownNonce = 0x31b4; // int32_t
		constexpr auto m_fPostRedeployOutputDuration = 0x31b8; // float
		constexpr auto m_nPostRedeployOutputSlot = 0x31bc; // int32_t
		constexpr auto c_fWispTransitionTime = 0x31c0; // float
		constexpr auto c_fWispTransitionTimeTotal = 0x31c4; // float
		constexpr auto m_fStunRushPsychicGrowlLockoutTime = 0x31c8; // float
		constexpr auto m_fMaxSeekingTurnDegPerSec = 0x31cc; // float
		constexpr auto m_fSeekingSpeedFeetPerSec = 0x31d0; // float
		constexpr auto m_fRushHitSpeedFactor = 0x31d4; // float
		constexpr auto r_pRushTarget = 0x31d8; // ObjectProperty
		constexpr auto m_nHealFeedDefaultIconId = 0x31e0; // int32_t
		constexpr auto c_fPsychicGrowlCooldownTime = 0x31e4; // float
		constexpr auto r_fPsychicGrowlRangeSqr = 0x31e8; // float
	}

	namespace n_ATgDevice_AtlasRMB { // : ATgDevice
		constexpr auto m_CachedAtlas = 0xa08; // ObjectProperty
		constexpr auto m_bCCReducesRate = 0xa10; // uint32_t : 1
		constexpr auto s_RewindQueue = 0xa14; // TArray<FQueuedRewind>
	}

	namespace n_UTgAIBehaviorAction_MoveToLanePusherFront { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_UPComMusicTheme { // : UObject
		constexpr auto DefaultTrack = 0x60; // FMusicTrackStruct
		constexpr auto MusicEvents = 0x8c; // TArray<FMusicEvent>
	}

	namespace n_UTgInventoryObject_Listen_FireInsteadOfDeath { // : UTgInvListener
		constexpr auto m_fImmuneTimer = 0xc4; // float
		constexpr auto m_bPendingActivation = 0xc8; // uint32_t : 1
	}

	namespace n_UTgAIInfluenceMap { // : UObject
		constexpr auto VfTable_FTickableObject = 0x60; // FPointer
		constexpr auto Influences = 0x68; // TArray<int32_t>
		constexpr auto FalloffTable = 0x78; // FPointer
		constexpr auto InfluenceGrid = 0x80; // ObjectProperty
		constexpr auto TickFrequency = 0x88; // float
		constexpr auto InvTickFrequency = 0x8c; // float
		constexpr auto Decay = 0x90; // float
		constexpr auto Momentum = 0x94; // float
	}

	namespace n_UUIInteractable_Item { // : UUIComponent_Interactable
		constexpr auto m_mcPrice = 0x140; // ObjectProperty
		constexpr auto m_mcGlow = 0x148; // ObjectProperty
		constexpr auto m_mcRarityGlow = 0x150; // ObjectProperty
		constexpr auto m_mcEquipped = 0x158; // ObjectProperty
		constexpr auto m_pCTA = 0x160; // ObjectProperty
		constexpr auto m_mcSprayUnlocked = 0x168; // ObjectProperty
		constexpr auto m_mcUpgradeText = 0x170; // ObjectProperty
		constexpr auto m_mcStarburstA = 0x178; // ObjectProperty
		constexpr auto m_mcStarburstB = 0x180; // ObjectProperty
		constexpr auto m_mcGlowA = 0x188; // ObjectProperty
		constexpr auto m_mcGlowB = 0x190; // ObjectProperty
		constexpr auto m_mcGlowC = 0x198; // ObjectProperty
		constexpr auto m_mcGlowD = 0x1a0; // ObjectProperty
		constexpr auto m_mcGlowE = 0x1a8; // ObjectProperty
		constexpr auto m_bEquipped = 0x1b0; // uint32_t : 1
		constexpr auto m_bShowChampion = 0x1b0; // uint32_t : 1
		constexpr auto m_nUpgradeTickHandle = 0x1b4; // int32_t
		constexpr auto m_fUpgradeAnimDuration = 0x1b8; // float
		constexpr auto m_fUpgradeTimer = 0x1bc; // float
		constexpr auto m_akCardUpgrade = 0x1c0; // ObjectProperty
		constexpr auto m_akCardLevelUp = 0x1c8; // ObjectProperty
	}

	namespace n_UTgInventoryObject_Listen_Combo_Barik { // : UTgInventoryObject_Listen_Combo
		constexpr auto m_ComboInfoList = 0xcc; // TArray<FComboInfo>
		constexpr auto m_UIMarkInfoList = 0xdc; // TArray<FUIMarkInfo>
		constexpr auto m_BurningMarks = 0xec; // TArray<FBurningMarkInfo>
	}

	namespace n_UMaterialExpressionFrac { // : UMaterialExpression
		constexpr auto Input = 0xb0; // FExpressionInput
	}

	namespace n_UTgInvListener_ConsecutiveInhandHits { // : UTgInvListener
		constexpr auto s_stacks = 0xc4; // TArray<FCIHStack>
		constexpr auto s_pLastTargetHit = 0xd4; // ObjectProperty
	}

	namespace n_ATgRepInfo_Player { // : APlayerReplicationInfo
		constexpr auto r_nPlayerId = 0x480; // int32_t
		constexpr auto r_nPawnId = 0x484; // int32_t
		constexpr auto r_nControlledPawnId = 0x488; // int32_t
		constexpr auto r_nPlayerGameID = 0x48c; // int32_t
		constexpr auto m_nUIDisplayIndex = 0x490; // int32_t
		constexpr auto c_fLastUpdateTime = 0x494; // float
		constexpr auto r_fCreditCacheDuration = 0x498; // float
		constexpr auto r_nCreditCacheDurationTick = 0x49c; // int32_t
		constexpr auto r_nSupportWins = 0x4a0; // int32_t
		constexpr auto r_nDamageWins = 0x4a4; // int32_t
		constexpr auto r_nFlankWins = 0x4a8; // int32_t
		constexpr auto r_nFrontlineWins = 0x4ac; // int32_t
		constexpr auto r_nEquippedTitleId = 0x4b0; // int32_t
		constexpr auto r_nHealthCurrent = 0x4b4; // int32_t
		constexpr auto r_nHealthMaximum = 0x4b8; // int32_t
		constexpr auto r_nMaxArmor = 0x4bc; // int32_t
		constexpr auto r_nPowerCurrent = 0x4c0; // int32_t
		constexpr auto r_nPowerMaximum = 0x4c4; // int32_t
		constexpr auto r_nPacingType = 0x4c8; // int32_t
		constexpr auto r_nShieldCurrent = 0x4cc; // int32_t
		constexpr auto r_nShieldMaximum = 0x4d0; // int32_t
		constexpr auto r_MasterPrep = 0x4d4; // ObjectProperty
		constexpr auto r_TaskForce = 0x4dc; // ObjectProperty
		constexpr auto r_SpawnPoint = 0x4e4; // ObjectProperty
		constexpr auto r_fReviveSecs = 0x4ec; // float
		constexpr auto r_fReviveSecsTotal = 0x4f0; // float
		constexpr auto r_bMapHasLoaded = 0x4f4; // uint32_t : 1
		constexpr auto r_bHasBeenSeenByEnemyTeam = 0x4f4; // uint32_t : 1
		constexpr auto r_bHasFlag = 0x4f4; // uint32_t : 1
		constexpr auto r_bSilhouettesBlocked = 0x4f4; // uint32_t : 1
		constexpr auto r_bExtendedSilhouetteRange = 0x4f4; // uint32_t : 1
		constexpr auto r_bSpeakingEmote = 0x4f4; // uint32_t : 1
		constexpr auto r_bPlayingAnnouncer = 0x4f4; // uint32_t : 1
		constexpr auto c_bSpeaking = 0x4f4; // uint32_t : 1
		constexpr auto r_bNeedsHealing = 0x4f4; // uint32_t : 1
		constexpr auto r_bDropped = 0x4f4; // uint32_t : 1
		constexpr auto r_bForceNotBot = 0x4f4; // uint32_t : 1
		constexpr auto r_bDisconnected = 0x4f4; // uint32_t : 1
		constexpr auto c_bIsDying = 0x4f4; // uint32_t : 1
		constexpr auto r_IsRevealed = 0x4f4; // uint32_t : 1
		constexpr auto r_bIsStealthed = 0x4f4; // uint32_t : 1
		constexpr auto r_bIsVolumeStealthed = 0x4f4; // uint32_t : 1
		constexpr auto r_bUltimateIsReady = 0x4f4; // uint32_t : 1
		constexpr auto r_bCanUpgradeLegendary = 0x4f4; // uint32_t : 1
		constexpr auto s_bAutoSelectCards = 0x4f4; // uint32_t : 1
		constexpr auto c_bTrackedProjectileIdsJustChanged = 0x4f4; // uint32_t : 1
		constexpr auto r_nSurrenderVote = 0x4f8; // char
		constexpr auto r_bVisibleOnMap = 0x4f9; // char [0x3]
		constexpr auto r_nVisibilityMask = 0x4fc; // char
		constexpr auto r_nFlashUpdateAmmo = 0x4fd; // char
		constexpr auto r_eDeployableOverlayIcon = 0x4fe; // DeployableOverlayIcon
		constexpr auto r_eDeployableOverlayState = 0x4ff; // DeployableOverlayState
		constexpr auto c_eDeployableOverlayIconOverride = 0x500; // DeployableOverlayIcon
		constexpr auto c_eDeployableOverlayStateOverride = 0x501; // DeployableOverlayState
		constexpr auto r_eCurrentGameModeInstruction = 0x502; // GAME_MODE_INSTRUCTION
		constexpr auto m_PRIArray = 0x504; // TArray<ObjectProperty>
		constexpr auto m_DRIArray = 0x514; // TArray<ObjectProperty>
		constexpr auto c_PriorMasterPrep = 0x524; // ObjectProperty
		constexpr auto c_PriorTaskForce = 0x52c; // ObjectProperty
		constexpr auto c_fLastHealth = 0x534; // int32_t
		constexpr auto c_fLastDamageTime = 0x538; // float
		constexpr auto r_fVisionRange = 0x53c; // float
		constexpr auto s_CarriedFlag = 0x540; // ObjectProperty
		constexpr auto r_ClanTag = 0x548; // FString
		constexpr auto c_PlayerNameWithTag = 0x558; // FString
		constexpr auto c_fBarragePercent = 0x568; // float
		constexpr auto m_fSyncAnnouncerFailsafe = 0x56c; // float
		constexpr auto r_SimProjOverrides = 0x570; // FSimulatedProjectileOverrides [0x8]
		constexpr auto r_Scores = 0x630; // int32_t [0x17]
		constexpr auto r_PlayerDevices = 0x68c; // FDeviceTeamInfo [0x31]
		constexpr auto r_PlayerDeviceAmmo = 0xe34; // int32_t [0x31]
		constexpr auto r_MarkedTargets = 0xef8; // FMarkedTargetInfo [0x5]
		constexpr auto c_fLastSpeakingTime = 0xf20; // float
		constexpr auto s_fNeedHealingDuration = 0xf24; // float
		constexpr auto r_nCredits = 0xf28; // int32_t
		constexpr auto r_nEarnedCredits = 0xf2c; // int32_t
		constexpr auto r_nXp = 0xf30; // int32_t
		constexpr auto r_nLevel = 0xf34; // int32_t
		constexpr auto r_nPlayerScore = 0xf38; // int32_t
		constexpr auto r_nCardHealth = 0xf3c; // int32_t
		constexpr auto r_nCardDamage = 0xf40; // int32_t
		constexpr auto r_nPowerLevel = 0xf44; // int32_t
		constexpr auto r_nPowerLevelCount = 0xf48; // int32_t
		constexpr auto r_nProfileId = 0xf4c; // int32_t
		constexpr auto r_nSkinId = 0xf50; // int32_t
		constexpr auto r_nmVoicePkg = 0xf54; // FName
		constexpr auto r_eVoicePref = 0xf5c; // Fdword
		constexpr auto r_nKillstreak = 0xf60; // int32_t
		constexpr auto r_nWeaponSkinId = 0xf64; // int32_t
		constexpr auto r_nMountSkinId = 0xf68; // int32_t
		constexpr auto r_nAssistScore = 0xf6c; // int32_t
		constexpr auto r_PawnOwner = 0xf70; // ObjectProperty
		constexpr auto r_nLaneId = 0xf78; // int32_t
		constexpr auto s_KillOrDeathStreakModifier = 0xf7c; // int32_t
		constexpr auto r_PingInfo = 0xf80; // FsPingInfo [0x4]
		constexpr auto c_DeathLocation = 0xff0; // FVector
		constexpr auto c_HudInfo = 0xffc; // FTG_HUD_INFO
		constexpr auto r_fUltReadyInSecs = 0x1000; // float
		constexpr auto r_nUltimateCharge = 0x1004; // int32_t
		constexpr auto r_nRequiredUltimateCharge = 0x1008; // int32_t
		constexpr auto r_nPassiveMode = 0x100c; // int32_t
		constexpr auto r_nPerkCountKit = 0x1010; // int32_t
		constexpr auto r_nPerkCountArmor = 0x1014; // int32_t
		constexpr auto r_nPerkCountWeapon = 0x1018; // int32_t
		constexpr auto r_nPerkCountGeneral = 0x101c; // int32_t
		constexpr auto r_nCardsToDraw = 0x1020; // int32_t
		constexpr auto r_nDrawnCards = 0x1024; // int32_t [0x5]
		constexpr auto r_nDrawnPlayer = 0x1038; // int32_t [0x5]
		constexpr auto s_fScoreTakenPool = 0x104c; // float
		constexpr auto s_fScoreDamagePool = 0x1050; // float
		constexpr auto s_fScoreCapturePool = 0x1054; // float
		constexpr auto s_fScoreHealingPool = 0x1058; // float
		constexpr auto s_fScoreMitigatedPool = 0x105c; // float
		constexpr auto s_fScoreTakenThreshold = 0x1060; // float
		constexpr auto s_fScoreDamageThreshold = 0x1064; // float
		constexpr auto s_fScoreCaptureThreshold = 0x1068; // float
		constexpr auto s_fScoreHealingThreshold = 0x106c; // float
		constexpr auto s_fScoreMitigatedThreshold = 0x1070; // float
		constexpr auto s_CardDeckTier1 = 0x1074; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier2 = 0x1084; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier3 = 0x1094; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier4 = 0x10a4; // TArray<FDeckCardData>
		constexpr auto s_CardDeckTier5 = 0x10b4; // TArray<FDeckCardData>
		constexpr auto r_GeneralAbilityInfo = 0x10c4; // FTgAbilityInfo
		constexpr auto r_ArmorAbilityInfo = 0x1108; // FTgAbilityInfo
		constexpr auto s_LastKillerPRI = 0x114c; // ObjectProperty
		constexpr auto s_PlayOfTheGameEventList = 0x1154; // TArray<FPlayOfTheGameEventData>
		constexpr auto s_PlayOfTheGameEventCounters = 0x1164; // TArray<FPlayOfTheGameEventCounter>
		constexpr auto r_nDeployableOverlayDisplayMask = 0x1174; // int32_t
		constexpr auto r_fDeployableOverlayEnemyViewDist = 0x1178; // float
		constexpr auto c_nDeployableOverlayDisplayMaskOverride = 0x117c; // int32_t
		constexpr auto c_fDeployableOverlayEnemyViewDistOverride = 0x1180; // float
		constexpr auto r_TrackedProjectileIds = 0x1184; // int32_t [0xf]
		constexpr auto r_TrackedProjectilesInitData = 0x11c0; // FTrackedProjectileInitData [0xf]
		constexpr auto r_TrackedProjectilesUpdateData = 0x1490; // FTrackedProjectileUpdateData [0xf]
		constexpr auto r_vWaypoint = 0x1634; // FVector
		constexpr auto s_nVGSGoodLuckHaveFun = 0x1640; // int32_t
	}

	namespace n_UUIData_MatchBoosterActivated { // : UUIData
		constexpr auto dwSourcePlayerId = 0x64; // Fdword
		constexpr auto dwTaskForce = 0x68; // Fdword
		constexpr auto eItemBoosterSubtype = 0x6c; // Fdword
		constexpr auto fMultiplier = 0x70; // float
		constexpr auto pBoosterItem = 0x74; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_NumGodsInLanePusherRadius { // : UTgAIBehaviorCondition_DistanceBase
		constexpr auto bGodsMustBeEnemy = 0x9c; // uint32_t : 1
		constexpr auto GodThreshold = 0xa0; // int32_t
	}

	namespace n_UUIData_HeaderTab { // : UUIData
		constexpr auto m_sTitle = 0x64; // FString
		constexpr auto m_nCTACount = 0x74; // int32_t
		constexpr auto m_nFrame = 0x78; // int32_t
	}

	namespace n_UTgSkelCon_OscillateRotation { // : USkelControlSingleBone
		constexpr auto OscillationAmplitude = 0x100; // float
		constexpr auto OscillationFrequency = 0x104; // float
		constexpr auto OscillationAxis = 0x108; // FVector
		constexpr auto OscillationAxisSpace = 0x114; // EBoneControlSpace
		constexpr auto OscillationAxisSpaceBoneName = 0x118; // FName
		constexpr auto Theta = 0x120; // float
	}

	namespace n_ATgDevice_RespawnBeacon { // : ATgDevice
		constexpr auto s_BeaconExit = 0xa08; // ObjectProperty
		constexpr auto r_bHasBeacon = 0xa10; // uint32_t : 1
	}

	namespace n_UTgAISquad_MonsterBehaviorTree { // : UTgAISquad
		constexpr auto BehaviorTreeAsName = 0xa8; // FName
		constexpr auto Controller = 0xb0; // ObjectProperty
	}

	namespace n_UUIComponent_ChallengeToastEntry { // : UUIComponent_Display
		constexpr auto m_mcLock = 0x124; // ObjectProperty
		constexpr auto m_mcTitle = 0x12c; // ObjectProperty
		constexpr auto m_mcProgressText = 0x134; // ObjectProperty
		constexpr auto m_mcCompleted = 0x13c; // ObjectProperty
		constexpr auto m_pProgress = 0x144; // ObjectProperty
		constexpr auto m_fOriginalXPos = 0x14c; // float
		constexpr auto m_fWidth = 0x150; // float
		constexpr auto m_bInitialized = 0x154; // uint32_t : 1
		constexpr auto m_bAnimating = 0x154; // uint32_t : 1
		constexpr auto m_eAnimSequence = 0x158; // ToastSequence
		constexpr auto m_fAnimationTime = 0x15c; // float
	}

	namespace n_UTgSkelControlSingleBone_DisplayGroup { // : UTgSkelControlSingleBone
		constexpr auto DisplayGroupInfos = 0x124; // TArray<FDisplayGroupInfo>
	}

	namespace n_ATgPawn_Koga { // : ATgPawn_Character
		constexpr auto m_bUseSecondWeapon = 0x3164; // uint32_t : 1
		constexpr auto c_bUseSecondDeathAnim = 0x3164; // uint32_t : 1
		constexpr auto c_bWallClimbExpected = 0x3164; // uint32_t : 1
		constexpr auto m_nAltInhandSlot = 0x3168; // int32_t
		constexpr auto m_nAltAltfireSlot = 0x316c; // int32_t
		constexpr auto m_fStamina = 0x3170; // float
		constexpr auto m_fMaxStamina = 0x3174; // float
		constexpr auto m_fStaminaRegenLockout = 0x3178; // float
		constexpr auto m_fSwapLockoutTime = 0x317c; // float
		constexpr auto m_fStaminaRegenLockoutTime = 0x3180; // float
		constexpr auto r_fRemoteStamina = 0x3184; // float
		constexpr auto c_fOldRemoteStamina = 0x3188; // float
		constexpr auto m_CachedNinjaF = 0x318c; // ObjectProperty
		constexpr auto m_CachedNinjaSwap = 0x3194; // ObjectProperty
		constexpr auto m_CachedWallClimb = 0x319c; // ObjectProperty
		constexpr auto m_CachedDragonFangLeg = 0x31a4; // ObjectProperty
		constexpr auto m_sSkillIconOverride = 0x31ac; // FString
	}

	namespace n_UUILobbyChat { // : UTgGfxScene
		constexpr auto m_nDepth = 0x1ec; // int32_t
		constexpr auto m_nPosition = 0x1f0; // int32_t
		constexpr auto m_nOpenIdentity = 0x1f4; // int32_t
		constexpr auto m_sLocalTabName = 0x1f8; // FString
		constexpr auto m_mcArrow = 0x208; // ObjectProperty [0x2]
		constexpr auto m_mcArrowNotify = 0x218; // ObjectProperty [0x2]
		constexpr auto m_mcBlocker = 0x228; // ObjectProperty
		constexpr auto m_mcTabs = 0x230; // TArray<ObjectProperty>
		constexpr auto m_AkNewTabSound = 0x240; // ObjectProperty
		constexpr auto m_ChannelCloseTimeOverrides = 0x248; // TArray<FChannelCloseTimeOverride>
	}

	namespace n_UTgAIBehaviorAction_FollowCombatTarget { // : UTgAIBehaviorAction_MoveToTarget
		constexpr auto DeviceSlot = 0x9c; // TG_EQUIP_POINT
	}

	namespace n_ATgPawn_SiegeEngine_CaptureAndPayload { // : ATgPawn_SiegeEngine_Payload
		constexpr auto r_fMinimumPayloadTravelTime = 0x30c4; // float
		constexpr auto r_fTravelSpeedScaleBeforeBase = 0x30c8; // float
		constexpr auto r_eSpeedScaledTravelPoint = 0x30cc; // ELanePusherActionPoint
		constexpr auto r_bIsPassedSpeedScaledTravelPoint = 0x30d0; // uint32_t : 1
	}

	namespace n_ATeleporter { // : ANavigationPoint
		constexpr auto URL = 0x378; // FString
		constexpr auto ProductRequired = 0x388; // FName
		constexpr auto bChangesVelocity = 0x390; // uint32_t : 1
		constexpr auto bChangesYaw = 0x390; // uint32_t : 1
		constexpr auto bReversesX = 0x390; // uint32_t : 1
		constexpr auto bReversesY = 0x390; // uint32_t : 1
		constexpr auto bReversesZ = 0x390; // uint32_t : 1
		constexpr auto bEnabled = 0x390; // uint32_t : 1
		constexpr auto bCanTeleportVehicles = 0x390; // uint32_t : 1
		constexpr auto TargetVelocity = 0x394; // FVector
		constexpr auto LastFired = 0x3a0; // float
	}

	namespace n_USVehicleSimTank { // : USVehicleSimCar
		constexpr auto LeftTrackVel = 0xf8; // float
		constexpr auto RightTrackVel = 0xfc; // float
		constexpr auto LeftTrackTorque = 0x100; // float
		constexpr auto RightTrackTorque = 0x104; // float
		constexpr auto MaxEngineTorque = 0x108; // float
		constexpr auto EngineDamping = 0x10c; // float
		constexpr auto InsideTrackTorqueFactor = 0x110; // float
		constexpr auto SteeringLatStiffnessFactor = 0x114; // float
		constexpr auto TurnInPlaceThrottle = 0x118; // float
		constexpr auto TurnMaxGripReduction = 0x11c; // float
		constexpr auto TurnGripScaleRate = 0x120; // float
		constexpr auto bTurnInPlaceOnSteer = 0x124; // uint32_t : 1
	}

	namespace n_UActorFactoryPhysicsAsset { // : UActorFactory
		constexpr auto PhysicsAsset = 0x9c; // ObjectProperty
		constexpr auto SkeletalMesh = 0xa4; // ObjectProperty
		constexpr auto bStartAwake = 0xac; // uint32_t : 1
		constexpr auto bDamageAppliesImpulse = 0xac; // uint32_t : 1
		constexpr auto bNotifyRigidBodyCollision = 0xac; // uint32_t : 1
		constexpr auto bUseCompartment = 0xac; // uint32_t : 1
		constexpr auto bCastDynamicShadow = 0xac; // uint32_t : 1
		constexpr auto InitialVelocity = 0xb0; // FVector
		constexpr auto DrawScale3D = 0xbc; // FVector
	}

	namespace n_UUIComponent_HnHEventStore { // : UUIComponent_Display
		constexpr auto m_bOwnsBlessing = 0x124; // uint32_t : 1
		constexpr auto m_mcItemName = 0x128; // ObjectProperty
		constexpr auto m_mcItemDesc = 0x130; // ObjectProperty
		constexpr auto m_mcItemRarity = 0x138; // ObjectProperty
		constexpr auto m_mcItemAvatarContainer = 0x140; // ObjectProperty
		constexpr auto m_mcBlessingWarning = 0x148; // ObjectProperty
		constexpr auto m_pPurchaseCurrency = 0x150; // ObjectProperty
		constexpr auto m_pPurchaseGamepadKey = 0x158; // ObjectProperty
		constexpr auto m_pPurchaseButton = 0x160; // ObjectProperty
		constexpr auto m_pItemAvatar = 0x168; // ObjectProperty
		constexpr auto m_pItemIcon = 0x170; // ObjectProperty
		constexpr auto m_pPreviewMusicButton = 0x178; // ObjectProperty
		constexpr auto m_pStoreItems = 0x180; // ObjectProperty
		constexpr auto m_pPurchaseButtonAction = 0x188; // ObjectProperty
		constexpr auto m_pPreviewMusicButtonAction = 0x190; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_HasConsumable { // : UTgAIBehaviorCondition
		constexpr auto ConsumableType = 0x98; // EConsumableType
	}

	namespace n_UUIComponent_MatchLobbyChampion { // : UUIComponent_Display
		constexpr auto m_pButton = 0x124; // ObjectProperty
		constexpr auto m_mcIcon = 0x12c; // ObjectProperty
		constexpr auto m_mcFrame = 0x134; // ObjectProperty
		constexpr auto m_mcRented = 0x13c; // ObjectProperty
		constexpr auto m_mcRotation = 0x144; // ObjectProperty
		constexpr auto m_mcRecommended = 0x14c; // ObjectProperty
		constexpr auto m_mcClassIcon = 0x154; // ObjectProperty
		constexpr auto m_eCurrentDisplayState = 0x15c; // UICMLCState
		constexpr auto m_nRowNum = 0x160; // int32_t
		constexpr auto m_nChampionOwnershipCBHandle = 0x164; // int32_t
	}

	namespace n_ATgDevice_ItFollows { // : ATgDevice
		constexpr auto VfTable_ITgDeviceInterface_MoveSpeedMultiplier = 0xa08; // FPointer
	}

	namespace n_UTextureFlipBook { // : UTexture2D
		constexpr auto VfTable_FTickableObject = 0x208; // FPointer
		constexpr auto TimeIntoMovie = 0x210; // float
		constexpr auto TimeSinceLastFrame = 0x214; // float
		constexpr auto HorizontalScale = 0x218; // float
		constexpr auto VerticalScale = 0x21c; // float
		constexpr auto bPaused = 0x220; // uint32_t : 1
		constexpr auto bStopped = 0x220; // uint32_t : 1
		constexpr auto bLooping = 0x220; // uint32_t : 1
		constexpr auto bAutoPlay = 0x220; // uint32_t : 1
		constexpr auto HorizontalImages = 0x224; // int32_t
		constexpr auto VerticalImages = 0x228; // int32_t
		constexpr auto FBMethod = 0x22c; // TextureFlipBookMethod
		constexpr auto FrameRate = 0x230; // float
		constexpr auto FrameTime = 0x234; // float
		constexpr auto CurrentRow = 0x238; // int32_t
		constexpr auto CurrentColumn = 0x23c; // int32_t
		constexpr auto RenderOffsetU = 0x240; // float
		constexpr auto RenderOffsetV = 0x244; // float
		constexpr auto ReleaseResourcesFence = 0x248; // FPointer
	}

	namespace n_UBlurEffect { // : UPostProcessEffect
		constexpr auto BlurKernelSize = 0x88; // int32_t
	}

	namespace n_ATgProj_FrostBomb { // : ATgProj_FreeGrenade
		constexpr auto m_fDistanceTravelled = 0x580; // float
	}

	namespace n_UParticleModuleUberRainImpacts { // : UParticleModuleUberBase
		constexpr auto Lifetime = 0x78; // FRawDistributionFloat
		constexpr auto StartSize = 0x9c; // FRawDistributionVector
		constexpr auto StartRotation = 0xc0; // FRawDistributionVector
		constexpr auto bInheritParent = 0xe4; // uint32_t : 1
		constexpr auto MultiplyX = 0xe4; // uint32_t : 1
		constexpr auto MultiplyY = 0xe4; // uint32_t : 1
		constexpr auto MultiplyZ = 0xe4; // uint32_t : 1
		constexpr auto bIsUsingCylinder = 0xe4; // uint32_t : 1
		constexpr auto bPositive_X = 0xe4; // uint32_t : 1
		constexpr auto bPositive_Y = 0xe4; // uint32_t : 1
		constexpr auto bPositive_Z = 0xe4; // uint32_t : 1
		constexpr auto bNegative_X = 0xe4; // uint32_t : 1
		constexpr auto bNegative_Y = 0xe4; // uint32_t : 1
		constexpr auto bNegative_Z = 0xe4; // uint32_t : 1
		constexpr auto bSurfaceOnly = 0xe4; // uint32_t : 1
		constexpr auto bVelocity = 0xe4; // uint32_t : 1
		constexpr auto bRadialVelocity = 0xe4; // uint32_t : 1
		constexpr auto LifeMultiplier = 0xe8; // FRawDistributionVector
		constexpr auto PC_VelocityScale = 0x10c; // FRawDistributionFloat
		constexpr auto PC_StartLocation = 0x130; // FRawDistributionVector
		constexpr auto PC_StartRadius = 0x154; // FRawDistributionFloat
		constexpr auto PC_StartHeight = 0x178; // FRawDistributionFloat
		constexpr auto PC_HeightAxis = 0x19c; // CylinderHeightAxis
		constexpr auto ColorOverLife = 0x1a0; // FRawDistributionVector
		constexpr auto AlphaOverLife = 0x1c4; // FRawDistributionFloat
	}

	namespace n_UTgAnimMetaData_MICScalarParameter { // : UTgAnimMetaData_Keyframed
		constexpr auto MICParameterName = 0x80; // FName
		constexpr auto MaterialIndex = 0x88; // int32_t
	}

	namespace n_UTgSeqAct_GetMaterialInst { // : USequenceAction
		constexpr auto MatInst = 0x108; // ObjectProperty
		constexpr auto MatInstName = 0x110; // FString
		constexpr auto MaterialIndex = 0x120; // int32_t
	}

	namespace n_AReverbVolume { // : AVolume
		constexpr auto Priority = 0x2bc; // float
		constexpr auto bEnabled = 0x2c0; // uint32_t : 1
		constexpr auto m_bUseAudioAltitude = 0x2c0; // uint32_t : 1
		constexpr auto Settings = 0x2c4; // FReverbSettings
		constexpr auto AmbientZoneSettings = 0x2d4; // FInteriorSettings
		constexpr auto NextLowerPriorityVolume = 0x304; // ObjectProperty
		constexpr auto AuxBusName = 0x30c; // FName
		constexpr auto SendLevel = 0x314; // float
		constexpr auto m_fAudioAltitudeCeiling = 0x318; // float
		constexpr auto m_fAudioAltitudeFloor = 0x31c; // float
	}

	namespace n_ATgDevice_CorrupterUlt { // : ATgDevice
		constexpr auto hasFired = 0xa08; // uint32_t : 1
		constexpr auto m_Corrupter = 0xa0c; // ObjectProperty
		constexpr auto r_Target = 0xa14; // ObjectProperty
		constexpr auto m_fNextTargetUpdateIn = 0xa1c; // float
		constexpr auto m_fUpdateTargetPeriod = 0xa20; // float
		constexpr auto m_fDeliverDamageDelay = 0xa24; // float
	}

	namespace n_ADebugCameraController { // : AGamePlayerController
		constexpr auto PrimaryKey = 0x77c; // FName
		constexpr auto SecondaryKey = 0x784; // FName
		constexpr auto UnselectKey = 0x78c; // FName
		constexpr auto bShowSelectedInfo = 0x794; // uint32_t : 1
		constexpr auto bDrawDebugText = 0x794; // uint32_t : 1
		constexpr auto bIsFrozenRendering = 0x794; // uint32_t : 1
		constexpr auto HUDClass = 0x798; // AHUD*
		constexpr auto OriginalControllerRef = 0x7a0; // ObjectProperty
		constexpr auto OriginalPlayer = 0x7a8; // ObjectProperty
		constexpr auto DrawFrustum = 0x7b0; // ComponentProperty
		constexpr auto SelectedActor = 0x7b8; // ObjectProperty
		constexpr auto SelectedComponent = 0x7c0; // ComponentProperty
	}

	namespace n_ATgPawn_Churchill { // : ATgPawn_Character
		constexpr auto r_LeftDrone = 0x3164; // ObjectProperty
		constexpr auto r_RightDrone = 0x316c; // ObjectProperty
		constexpr auto s_bFireLeftDroneNext = 0x3174; // uint32_t : 1
		constexpr auto s_bStopDroneFiring = 0x3174; // uint32_t : 1
		constexpr auto s_bLeftDroneInFireTimeout = 0x3174; // uint32_t : 1
		constexpr auto s_bRightDroneInFireTimeout = 0x3174; // uint32_t : 1
		constexpr auto m_ChurchillDroneAnims1p = 0x3178; // TArray<ObjectProperty>
		constexpr auto r_fVisualRecoilMultiplier = 0x3188; // float
		constexpr auto c_vForced3pAdditionalOffsetADS = 0x318c; // FVector
		constexpr auto m_fUnderheadADSDistanceClampAngle = 0x3198; // float
		constexpr auto m_fUnderheadADSDistanceClampPushIn = 0x319c; // float
		constexpr auto m_fUnderheadADSDistanceClampOvershoot = 0x31a0; // float
		constexpr auto m_fOverheadADSDistanceClampAngle = 0x31a4; // float
		constexpr auto m_fOverheadADSDistanceClampPushIn = 0x31a8; // float
		constexpr auto m_fOverheadADSDistanceClampOvershoot = 0x31ac; // float
		constexpr auto m_EquippedBoobyTrap = 0x31b0; // ObjectProperty
	}

	namespace n_UUISceneClient { // : UUIRoot
		constexpr auto VfTable_FExec = 0x70; // FPointer
		constexpr auto RenderViewport = 0x78; // FPointer
		constexpr auto MousePosition = 0x80; // FIntPoint
		constexpr auto DataStoreManager = 0x88; // ObjectProperty
		constexpr auto CanvasToScreen = 0x90; // FMatrix
		constexpr auto InvCanvasToScreen = 0xd0; // FMatrix
		constexpr auto UIScenePostProcess = 0x110; // ObjectProperty
		constexpr auto bEnablePostProcess = 0x118; // uint32_t : 1
	}

	namespace n_UUIResourceDataProvider { // : UUIPropertyDataProvider
		constexpr auto bSkipDuringEnumeration = 0x90; // uint32_t : 1
	}

	namespace n_UTgAIBehaviorCondition_PhysicsState { // : UTgAIBehaviorCondition
		constexpr auto PhysicsState = 0x98; // EPhysics
	}

	namespace n_AWaterVolume { // : APhysicsVolume
		constexpr auto EntrySound = 0x314; // ObjectProperty
		constexpr auto EntryActor = 0x31c; // AActor*
		constexpr auto ExitSound = 0x324; // ObjectProperty
		constexpr auto ExitActor = 0x32c; // AActor*
	}

	namespace n_UTgAnimNodeBlendByVerticalAim { // : UAnimNodeBlendBase
		constexpr auto m_Aim = 0x114; // float
		constexpr auto m_Range = 0x118; // FVector2D
		constexpr auto m_AngleOffset = 0x120; // float
		constexpr auto m_PreviousAim = 0x124; // float
		constexpr auto bInitialized = 0x128; // uint32_t : 1
		constexpr auto m_bLoopChildrenOnRelevant = 0x128; // uint32_t : 1
		constexpr auto m_bPlayChildrenOnRelevant = 0x128; // uint32_t : 1
		constexpr auto m_AnimName_Up = 0x12c; // FName
		constexpr auto m_AnimName_Center = 0x134; // FName
		constexpr auto m_AnimName_Down = 0x13c; // FName
		constexpr auto m_SeqNode1 = 0x144; // ObjectProperty
		constexpr auto m_SeqNode2 = 0x14c; // ObjectProperty
	}

	namespace n_UTgGamePhase_ApplyGlobalEffect { // : UTgGamePhase
		constexpr auto m_nFireModeID = 0xb8; // int32_t
		constexpr auto m_FireMode = 0xbc; // ObjectProperty
	}

	namespace n_ATgDevice_PoppyBomb { // : ATgDevice
		constexpr auto r_bHasActiveProjectile = 0xa08; // uint32_t : 1
	}

	namespace n_UDistributionVectorUniformCurve { // : UDistributionVector
		constexpr auto ConstantCurve = 0x7c; // FInterpCurveTwoVectors
		constexpr auto bLockAxes1 = 0x90; // uint32_t : 1
		constexpr auto bLockAxes2 = 0x90; // uint32_t : 1
		constexpr auto bUseExtremes = 0x90; // uint32_t : 1
		constexpr auto LockedAxes = 0x94; // EDistributionVectorLockFlags [0x2]
		constexpr auto MirrorFlags = 0x96; // EDistributionVectorMirrorFlags [0x3]
	}

	namespace n_UCheatManager { // : UObject
		constexpr auto ViewingFrom = 0x60; // FString
		constexpr auto OwnCamera = 0x70; // FString
	}

	namespace n_UTgAnimNodeFidget { // : UAnimNodeBlendList
		constexpr auto m_SelectedIdleTimeBeforeFidgeting = 0x144; // float
		constexpr auto m_CurrentIdleTime = 0x148; // float
		constexpr auto BlendToFidgetDuration = 0x14c; // float
		constexpr auto BlendFromFidgetDuration = 0x150; // float
		constexpr auto FidgetType = 0x154; // EFidgetType
		constexpr auto MinimumIdleTimeBeforeFidgeting = 0x158; // float
		constexpr auto MaximumIdleTimeBeforeFidgeting = 0x15c; // float
		constexpr auto AllowIdleAnimToComplete = 0x160; // uint32_t : 1
		constexpr auto ChanceToFidgetWhenIdleCompletes = 0x164; // float
	}

	namespace n_AEmitterCameraLensEffectBase { // : AEmitter
		constexpr auto PS_CameraEffect = 0x294; // ObjectProperty
		constexpr auto PS_CameraEffectNonExtremeContent = 0x29c; // ObjectProperty
		constexpr auto BaseFOV = 0x2a4; // float
		constexpr auto DistFromCamera = 0x2a8; // float
		constexpr auto bAllowMultipleInstances = 0x2ac; // uint32_t : 1
		constexpr auto EmittersToTreatAsSame = 0x2b0; // TArray<AEmitterCameraLensEffectBase*>
		constexpr auto BaseCamera = 0x2c0; // ObjectProperty
	}

	namespace n_USeqAct_RangeSwitch { // : USequenceAction
		constexpr auto Ranges = 0x108; // TArray<FSwitchRange>
	}

	namespace n_USkelControl_CCD_IK { // : USkelControlBase
		constexpr auto EffectorLocation = 0xd0; // FVector
		constexpr auto EffectorLocationSpace = 0xdc; // EBoneControlSpace
		constexpr auto EffectorSpaceBoneName = 0xe0; // FName
		constexpr auto EffectorTranslationFromBone = 0xe8; // FVector
		constexpr auto NumBones = 0xf4; // int32_t
		constexpr auto MaxPerBoneIterations = 0xf8; // int32_t
		constexpr auto IterationsCount = 0xfc; // int32_t
		constexpr auto Precision = 0x100; // float
		constexpr auto bStartFromTail = 0x104; // uint32_t : 1
		constexpr auto bNoTurnOptimization = 0x104; // uint32_t : 1
		constexpr auto AngleConstraint = 0x108; // TArray<float>
		constexpr auto MaxAngleSteps = 0x118; // float
	}

	namespace n_USeqAct_ModifyObjectList { // : USeqAct_SetSequenceVariable
		constexpr auto ListEntriesCount = 0x108; // int32_t
	}

	namespace n_UTgDeviceForm_AzaanUltSlam { // : UTgDeviceForm
		constexpr auto m_AzaanNodes1p = 0x28c; // TArray<ObjectProperty>
	}

	namespace n_UInterpTrackInstNotify { // : UInterpTrackInst
		constexpr auto LastUpdatePosition = 0x60; // float
	}

	namespace n_UMcpManagedValueManager { // : UMcpManagedValueManagerBase
		constexpr auto CreateSaveSlotUrl = 0xc8; // FString
		constexpr auto ReadSaveSlotUrl = 0xd8; // FString
		constexpr auto UpdateValueUrl = 0xe8; // FString
		constexpr auto DeleteValueUrl = 0xf8; // FString
		constexpr auto SaveSlots = 0x108; // TArray<FManagedValueSaveSlot>
		constexpr auto CreateSaveSlotRequests = 0x118; // TArray<FSaveSlotRequestState>
		constexpr auto ReadSaveSlotRequests = 0x128; // TArray<FSaveSlotRequestState>
		constexpr auto UpdateValueRequests = 0x138; // TArray<FValueRequestState>
		constexpr auto DeleteValueRequests = 0x148; // TArray<FValueRequestState>
	}

	namespace n_ATgSkeletalMeshActor_LobbyBase { // : ATgSkeletalMeshActor_Loader
		constexpr auto m_bPlayTransitionOutro = 0x4b0; // uint32_t : 1
		constexpr auto m_TransitionActorClassName = 0x4b4; // FString
		constexpr auto m_nCharacterMastery = 0x4c4; // int32_t
		constexpr auto m_nmAnimationTag = 0x4c8; // FName
		constexpr auto m_TransitionActor = 0x4d0; // ObjectProperty
	}

	namespace n_USeqAct_ToggleHidden { // : USeqAct_Toggle
		constexpr auto bToggleBasedActors = 0x108; // uint32_t : 1
		constexpr auto IgnoreBasedClasses = 0x10c; // TArray<AActor*>
	}

	namespace n_UUIDataStore_InputAlias { // : UUIDataStore_StringBase
		constexpr auto InputAliases = 0x98; // TArray<FUIDataStoreInputAlias>
		constexpr auto InputAliasLookupMap = 0xa8; // TMap<None, None>
	}

	namespace n_UUIScene_UIStoreFilterPopup { // : UUIScene
		constexpr auto m_pFilter = 0x1cc; // ObjectProperty
		constexpr auto m_pSortOrderDropdown = 0x1d4; // ObjectProperty
		constexpr auto m_pItemNotOwnedToggle = 0x1dc; // ObjectProperty
		constexpr auto m_pItemAvailableToggle = 0x1e4; // ObjectProperty
		constexpr auto m_pRarityToggles = 0x1ec; // TArray<ObjectProperty>
		constexpr auto m_pConfirmButton = 0x1fc; // ObjectProperty
		constexpr auto m_pBackButton = 0x204; // ObjectProperty
		constexpr auto m_grFilter = 0x20c; // ObjectProperty
	}

	namespace n_UParticleModuleWorldAttractor { // : UParticleModuleWorldForcesBase
		constexpr auto bParticleLifeRelative = 0x68; // uint32_t : 1
		constexpr auto AttractorInfluence = 0x6c; // FRawDistributionFloat
	}

	namespace n_UTgAnimNodeEmoteSequence { // : UAnimNodeSequenceBlendBase
		constexpr auto m_fBlendSpeed = 0x1bc; // float
		constexpr auto m_nmAnimName = 0x1c0; // FName
		constexpr auto m_CachedEmoteAnims = 0x1c8; // TArray<FEmoteAnimInfo>
		constexpr auto m_nActiveAnim = 0x1d8; // int32_t
		constexpr auto m_bNewAnim = 0x1dc; // uint32_t : 1
	}

	namespace n_UAnimObject { // : UObject
		constexpr auto SkelComponent = 0x60; // ComponentProperty
	}

	namespace n_USoundMode { // : UObject
		constexpr auto bApplyEQ = 0x60; // uint32_t : 1
		constexpr auto EQSettings = 0x64; // FAudioEQEffect
		constexpr auto SoundClassEffects = 0x88; // TArray<FSoundClassAdjuster>
		constexpr auto InitialDelay = 0x98; // float
		constexpr auto FadeInTime = 0x9c; // float
		constexpr auto Duration = 0xa0; // float
		constexpr auto FadeOutTime = 0xa4; // float
	}

	namespace n_ATgDevice_NetherStep { // : ATgDevice_DoubleCharge
		constexpr auto m_fLowGravTime = 0xa84; // float
		constexpr auto m_fLowGravMult = 0xa88; // float
	}

	namespace n_ATgDevice_Vengeance_Lex { // : ATgDevice
		constexpr auto r_MarkedPlayer = 0xa08; // ObjectProperty
		constexpr auto s_PreviouslyMarkedPlayer = 0xa10; // ObjectProperty
		constexpr auto s_bRevealApplied = 0xa18; // uint32_t : 1
		constexpr auto s_DiscoveryDevice = 0xa1c; // ObjectProperty
		constexpr auto m_fMarkPlayerRefreshRate = 0xa24; // float
		constexpr auto m_fCheckPlayerRefreshRate = 0xa28; // float
	}

	namespace n_ATgDevice_Recharge { // : ATgDevice
		constexpr auto m_CachedGauntletPawn = 0xa08; // ObjectProperty
		constexpr auto m_bCanTargetShields = 0xa10; // uint32_t : 1
	}

	namespace n_UTgSeqAct_JoinTeam { // : USequenceAction
		constexpr auto TeamLeader = 0x108; // ObjectProperty
	}

	namespace n_UTgAIBehaviorCondition_IsLookingAtCapturePoint { // : UTgAIBehaviorCondition
		constexpr auto VisibilityAngle = 0x98; // float
	}

	namespace n_UTgSeqAct_LogTutorialAction { // : USequenceAction
		constexpr auto PlayerAction = 0x108; // int32_t
		constexpr auto EventData = 0x10c; // int32_t
	}

	namespace n_UTgSeqAct_SelectBestSpawnPoint { // : USequenceAction
		constexpr auto Points = 0x108; // TArray<ObjectProperty>
		constexpr auto PlayerReceived = 0x118; // ObjectProperty
	}

	namespace n_UOnlineSubsystemPC { // : UOnlineSubsystemCommonImpl
		constexpr auto LoggedInPlayerNum = 0x288; // int32_t
		constexpr auto LoggedInPlayerName = 0x28c; // FString
		constexpr auto LoggedInPlayerId = 0x29c; // FUniqueNetId
		constexpr auto AsyncTasks = 0x2a4; // TArray<FPointer>
		constexpr auto ProfileDataDirectory = 0x2b4; // FString
		constexpr auto ProfileDataExtension = 0x2c4; // FString
		constexpr auto ReadProfileSettingsDelegates = 0x2d4; // TArray<DelegateProperty>
		constexpr auto WriteProfileSettingsDelegates = 0x2e4; // TArray<DelegateProperty>
		constexpr auto CachedProfile = 0x2f4; // ObjectProperty
		constexpr auto ReadFriendsDelegates = 0x2fc; // TArray<DelegateProperty>
		constexpr auto FriendsChangeDelegates = 0x30c; // TArray<DelegateProperty>
		constexpr auto MutingChangeDelegates = 0x31c; // TArray<DelegateProperty>
		constexpr auto TokenAndSignatureRetrievedDelegates = 0x32c; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersDelegates = 0x33c; // TArray<DelegateProperty>
		constexpr auto PrivilegeCheckedForUsersByUniqueNetIdsDelegates = 0x34c; // TArray<DelegateProperty>
		constexpr auto FilterTextDelegates = 0x35c; // TArray<DelegateProperty>
		constexpr auto PCVoiceInt = 0x36c; // ObjectProperty
		constexpr auto __OnLoginChange__Delegate = 0x374; // DelegateProperty
		constexpr auto __OnLoginCancelled__Delegate = 0x384; // DelegateProperty
		constexpr auto __OnCurrentUserChanged__Delegate = 0x394; // DelegateProperty
		constexpr auto __OnTokenAndSignatureRetrieved__Delegate = 0x3a4; // DelegateProperty
		constexpr auto __OnMutingChange__Delegate = 0x3b4; // DelegateProperty
		constexpr auto __OnReadTitleFileComplete__Delegate = 0x3c4; // DelegateProperty
		constexpr auto __OnFriendsChange__Delegate = 0x3d4; // DelegateProperty
		constexpr auto __OnLoginFailed__Delegate = 0x3e4; // DelegateProperty
		constexpr auto __OnSystemUserControllerPairingChanged__Delegate = 0x3f4; // DelegateProperty
		constexpr auto __OnLogoutCompleted__Delegate = 0x404; // DelegateProperty
		constexpr auto __OnPrivilegeLevelChecked__Delegate = 0x414; // DelegateProperty
		constexpr auto __OnReadProfileSettingsComplete__Delegate = 0x424; // DelegateProperty
		constexpr auto __OnWriteProfileSettingsComplete__Delegate = 0x434; // DelegateProperty
		constexpr auto __OnLoginStatusChange__Delegate = 0x444; // DelegateProperty
		constexpr auto __OnReadFriendsComplete__Delegate = 0x454; // DelegateProperty
		constexpr auto __OnReadOnlineStatsComplete__Delegate = 0x464; // DelegateProperty
		constexpr auto __OnFlushOnlineStatsComplete__Delegate = 0x474; // DelegateProperty
		constexpr auto __OnRegisterHostStatGuidComplete__Delegate = 0x484; // DelegateProperty
		constexpr auto __OnLinkStatusChange__Delegate = 0x494; // DelegateProperty
		constexpr auto __OnExternalUIChange__Delegate = 0x4a4; // DelegateProperty
		constexpr auto __OnControllerChange__Delegate = 0x4b4; // DelegateProperty
		constexpr auto __OnConnectionStatusChange__Delegate = 0x4c4; // DelegateProperty
		constexpr auto __OnStorageDeviceChange__Delegate = 0x4d4; // DelegateProperty
		constexpr auto __OnKeyboardInputComplete__Delegate = 0x4e4; // DelegateProperty
		constexpr auto __OnWritePlayerStorageComplete__Delegate = 0x4f4; // DelegateProperty
		constexpr auto __OnReadPlayerStorageForNetIdComplete__Delegate = 0x504; // DelegateProperty
		constexpr auto __OnReadPlayerStorageComplete__Delegate = 0x514; // DelegateProperty
		constexpr auto __OnAddFriendByNameComplete__Delegate = 0x524; // DelegateProperty
		constexpr auto __OnFriendInviteReceived__Delegate = 0x534; // DelegateProperty
		constexpr auto __OnReceivedGameInvite__Delegate = 0x544; // DelegateProperty
		constexpr auto __OnJoinFriendGameComplete__Delegate = 0x554; // DelegateProperty
		constexpr auto __OnFriendMessageReceived__Delegate = 0x564; // DelegateProperty
		constexpr auto __OnUnlockAchievementComplete__Delegate = 0x574; // DelegateProperty
		constexpr auto __OnReadAchievementsComplete__Delegate = 0x584; // DelegateProperty
		constexpr auto __OnStatisticChanged__Delegate = 0x594; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsers__Delegate = 0x5a4; // DelegateProperty
		constexpr auto __OnPrivilegeCheckedForUsersByUniqueNetIds__Delegate = 0x5b4; // DelegateProperty
		constexpr auto __OnFilterText__Delegate = 0x5c4; // DelegateProperty
		constexpr auto __OnAccountPickerComplete__Delegate = 0x5d4; // DelegateProperty
		constexpr auto __OnUserAccountInfoRetrieved__Delegate = 0x5e4; // DelegateProperty
	}

	namespace n_UAnimationCompressionAlgorithm_RemoveLinearKeys { // : UAnimationCompressionAlgorithm
		constexpr auto MaxPosDiff = 0x78; // float
		constexpr auto MaxAngleDiff = 0x7c; // float
		constexpr auto MaxEffectorDiff = 0x80; // float
		constexpr auto MinEffectorDiff = 0x84; // float
		constexpr auto EffectorDiffSocket = 0x88; // float
		constexpr auto ParentKeyScale = 0x8c; // float
		constexpr auto bRetarget = 0x90; // uint32_t : 1
		constexpr auto bActuallyFilterLinearKeys = 0x90; // uint32_t : 1
	}

	namespace n_UPComJsonHandler { // : UObject
		constexpr auto m_pImageDownloader = 0x60; // ObjectProperty
		constexpr auto m_pCallbackObject = 0x68; // FPointer
		constexpr auto m_strUrl = 0x70; // FString
		constexpr auto m_strDownloadDir = 0x80; // FString
		constexpr auto m_strLocalDir = 0x90; // FString
		constexpr auto m_strJson = 0xa0; // FString
		constexpr auto m_strName = 0xb0; // FString
		constexpr auto m_pHttp = 0xc0; // FPointer
	}

	namespace n_UUIScene_UIMatchInvite { // : UUIScene
		constexpr auto m_MatchInvite = 0x1cc; // ObjectProperty
	}

	namespace n_ATgWeaponMeshActor_RuckusInhand { // : ATgWeaponMeshActor
		constexpr auto m_SecondaryMuzzleFlashLight = 0x450; // ComponentProperty
	}

}